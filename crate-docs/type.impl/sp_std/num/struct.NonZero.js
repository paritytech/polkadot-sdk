(function() {var type_impls = {
"sp_std":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NonZero%3Cu8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#impl-NonZero%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_unchecked\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.28.0\">const: 1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a></span><h4 class=\"code-header\">pub const unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.new_unchecked\" class=\"fn\">new_unchecked</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a non-zero without checking whether the value is non-zero.\nThis results in undefined behaviour if the value is zero.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>The value must not be zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.47.0\">const: 1.47.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.new\" class=\"fn\">new</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a non-zero if the given value is not zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.from_mut_unchecked\" class=\"fn\">from_mut_unchecked</a>(n: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>) -&gt; &amp;mut <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_from_mut</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts a primitive mutable reference to a non-zero mutable reference\nwithout checking whether the referenced value is non-zero.\nThis results in undefined behavior if <code>*n</code> is zero.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p>The referenced value must not be currently zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.from_mut\" class=\"fn\">from_mut</a>(n: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_from_mut</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts a primitive mutable reference to a non-zero mutable reference\nif the referenced integer is not zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.34.0\">const: 1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.get\" class=\"fn\">get</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Returns the value as a primitive type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.BITS\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0\">1.67.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.BITS\" class=\"constant\">BITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a> = 8u32</h4></section></summary><div class=\"docblock\"><p>The size of this non-zero integer type in bits.</p>\n<p>This value is equal to <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html#associatedconstant.BITS\" title=\"associated constant u8::BITS\"><code>u8::BITS</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(NonZeroU8::BITS, u8::BITS);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0, const since 1.53.0\">1.53.0 (const: 1.53.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.leading_zeros\" class=\"fn\">leading_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of leading zeros in the binary representation of <code>self</code>.</p>\n<p>On many architectures, this function can perform better than <code>leading_zeros()</code> on the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = std::num::NonZeroU8::new(u8::MAX).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(n.leading_zeros(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0, const since 1.53.0\">1.53.0 (const: 1.53.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.trailing_zeros\" class=\"fn\">trailing_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of trailing zeros in the binary representation\nof <code>self</code>.</p>\n<p>On many architectures, this function can perform better than <code>trailing_zeros()</code> on the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = std::num::NonZeroU8::new(<span class=\"number\">0b0101000</span>).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(n.trailing_zeros(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_ones\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/120287\" title=\"Tracking issue for non_zero_count_ones\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.count_ones\" class=\"fn\">count_ones</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>non_zero_count_ones</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns the number of ones in the binary representation of <code>self</code>.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(non_zero_count_ones)]\n\n</span><span class=\"kw\">let </span>one = num::NonZeroU32::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>three = num::NonZeroU32::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>a = NonZeroU8::new(<span class=\"number\">0b100_0000</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>b = NonZeroU8::new(<span class=\"number\">0b100_0011</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(a.count_ones(), one);\n<span class=\"macro\">assert_eq!</span>(b.count_ones(), three);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MIN\" class=\"constant\">MIN</a>: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; = _</h4></section></summary><div class=\"docblock\"><p>The smallest value that can be represented by this non-zero\ninteger type, 1.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroU8::MIN.get(), <span class=\"number\">1u8</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; = _</h4></section></summary><div class=\"docblock\"><p>The largest value that can be represented by this non-zero\ninteger type,\nequal to <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html#associatedconstant.MAX\" title=\"associated constant u8::MAX\"><code>u8::MAX</code></a>.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroU8::MAX.get(), u8::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_add\" class=\"fn\">checked_add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Adds an unsigned integer to a non-zero value.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>one = NonZeroU8::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroU8::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU8::new(u8::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(two), one.checked_add(<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, max.checked_add(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Adds an unsigned integer to a non-zero value.\nReturn <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroU8::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>one = NonZeroU8::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroU8::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU8::new(u8::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(two, one.saturating_add(<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(max, max.saturating_add(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_add\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.unchecked_add\" class=\"fn\">unchecked_add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Adds an unsigned integer to a non-zero value,\nassuming overflow cannot occur.\nOverflow is unchecked, and it is undefined behaviour to overflow\n<em>even if the result would wrap to a non-zero value</em>.\nThe behaviour is undefined as soon as\n<code>self + rhs &gt; u8::MAX</code>.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(nonzero_ops)]\n\n</span><span class=\"kw\">let </span>one = NonZeroU8::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroU8::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(two, <span class=\"kw\">unsafe </span>{ one.unchecked_add(<span class=\"number\">1</span>) });</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_next_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_next_power_of_two\" class=\"fn\">checked_next_power_of_two</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the smallest power of two greater than or equal to n.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>\nif the next power of two is greater than the type’s maximum value.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroU8::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>three = NonZeroU8::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU8::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU8::new(u8::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(two), two.checked_next_power_of_two() );\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(four), three.checked_next_power_of_two() );\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, max.checked_next_power_of_two() );</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ilog2\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.ilog2\" class=\"fn\">ilog2</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the base 2 logarithm of the number, rounded down.</p>\n<p>This is the same operation as\n<a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html#method.ilog2\" title=\"method u8::ilog2\"><code>u8::ilog2</code></a>,\nexcept that it has no failure cases to worry about\nsince this value can never be zero.</p>\n<h5 id=\"examples-10\"><a class=\"doc-anchor\" href=\"#examples-10\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroU8::new(<span class=\"number\">7</span>).unwrap().ilog2(), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroU8::new(<span class=\"number\">8</span>).unwrap().ilog2(), <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroU8::new(<span class=\"number\">9</span>).unwrap().ilog2(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ilog10\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.ilog10\" class=\"fn\">ilog10</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the base 10 logarithm of the number, rounded down.</p>\n<p>This is the same operation as\n<a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html#method.ilog10\" title=\"method u8::ilog10\"><code>u8::ilog10</code></a>,\nexcept that it has no failure cases to worry about\nsince this value can never be zero.</p>\n<h5 id=\"examples-11\"><a class=\"doc-anchor\" href=\"#examples-11\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroU8::new(<span class=\"number\">99</span>).unwrap().ilog10(), <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroU8::new(<span class=\"number\">100</span>).unwrap().ilog10(), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroU8::new(<span class=\"number\">101</span>).unwrap().ilog10(), <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.midpoint\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/110840\" title=\"Tracking issue for const_num_midpoint\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.midpoint\" class=\"fn\">midpoint</a>(self, rhs: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>num_midpoint</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates the middle point of <code>self</code> and <code>rhs</code>.</p>\n<p><code>midpoint(a, b)</code> is <code>(a + b) &gt;&gt; 1</code> as if it were performed in a\nsufficiently-large signed integral type. This implies that the result is\nalways rounded towards negative infinity and that no overflow will ever occur.</p>\n<h5 id=\"examples-12\"><a class=\"doc-anchor\" href=\"#examples-12\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(num_midpoint)]\n\n</span><span class=\"kw\">let </span>one = NonZeroU8::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroU8::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU8::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(one.midpoint(four), two);\n<span class=\"macro\">assert_eq!</span>(four.midpoint(one), two);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.59.0, const since 1.59.0\">1.59.0 (const: 1.59.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.is_power_of_two\" class=\"fn\">is_power_of_two</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if and only if <code>self == (1 &lt;&lt; k)</code> for some <code>k</code>.</p>\n<p>On many architectures, this function can perform better than <code>is_power_of_two()</code>\non the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-13\"><a class=\"doc-anchor\" href=\"#examples-13\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>eight = std::num::NonZeroU8::new(<span class=\"number\">8</span>).unwrap();\n<span class=\"macro\">assert!</span>(eight.is_power_of_two());\n<span class=\"kw\">let </span>ten = std::num::NonZeroU8::new(<span class=\"number\">10</span>).unwrap();\n<span class=\"macro\">assert!</span>(!ten.is_power_of_two());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-14\"><a class=\"doc-anchor\" href=\"#examples-14\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroU8::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU8::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU8::new(u8::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(four), two.checked_mul(two));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, max.checked_mul(two));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_mul\" class=\"fn\">saturating_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together.\nReturn <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroU8::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-15\"><a class=\"doc-anchor\" href=\"#examples-15\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroU8::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU8::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU8::new(u8::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(four, two.saturating_mul(two));\n<span class=\"macro\">assert_eq!</span>(max, four.saturating_mul(max));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_mul\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.unchecked_mul\" class=\"fn\">unchecked_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together,\nassuming overflow cannot occur.\nOverflow is unchecked, and it is undefined behaviour to overflow\n<em>even if the result would wrap to a non-zero value</em>.\nThe behaviour is undefined as soon as\n<code>self * rhs &gt; u8::MAX</code>.</p>\n<h5 id=\"examples-16\"><a class=\"doc-anchor\" href=\"#examples-16\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(nonzero_ops)]\n\n</span><span class=\"kw\">let </span>two = NonZeroU8::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU8::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(four, <span class=\"kw\">unsafe </span>{ two.unchecked_mul(two) });</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_pow\" class=\"fn\">checked_pow</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Raises non-zero value to an integer power.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-17\"><a class=\"doc-anchor\" href=\"#examples-17\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>three = NonZeroU8::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>twenty_seven = NonZeroU8::new(<span class=\"number\">27</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>half_max = NonZeroU8::new(u8::MAX / <span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(twenty_seven), three.checked_pow(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, half_max.checked_pow(<span class=\"number\">3</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_pow\" class=\"fn\">saturating_pow</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Raise non-zero value to an integer power.\nReturn <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroU8::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-18\"><a class=\"doc-anchor\" href=\"#examples-18\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>three = NonZeroU8::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>twenty_seven = NonZeroU8::new(<span class=\"number\">27</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU8::new(u8::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(twenty_seven, three.saturating_pow(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(max, max.saturating_pow(<span class=\"number\">3</span>));</code></pre></div>\n</div></details></div></details>",0,"sp_std::num::NonZeroU8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NonZero%3Cu16%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#impl-NonZero%3Cu16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_unchecked\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.28.0\">const: 1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a></span><h4 class=\"code-header\">pub const unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.new_unchecked\" class=\"fn\">new_unchecked</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a non-zero without checking whether the value is non-zero.\nThis results in undefined behaviour if the value is zero.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>The value must not be zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.47.0\">const: 1.47.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.new\" class=\"fn\">new</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a non-zero if the given value is not zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.from_mut_unchecked\" class=\"fn\">from_mut_unchecked</a>(n: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>) -&gt; &amp;mut <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_from_mut</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts a primitive mutable reference to a non-zero mutable reference\nwithout checking whether the referenced value is non-zero.\nThis results in undefined behavior if <code>*n</code> is zero.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p>The referenced value must not be currently zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.from_mut\" class=\"fn\">from_mut</a>(n: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_from_mut</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts a primitive mutable reference to a non-zero mutable reference\nif the referenced integer is not zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.34.0\">const: 1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.get\" class=\"fn\">get</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a></h4></section></summary><div class=\"docblock\"><p>Returns the value as a primitive type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.BITS\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0\">1.67.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.BITS\" class=\"constant\">BITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a> = 16u32</h4></section></summary><div class=\"docblock\"><p>The size of this non-zero integer type in bits.</p>\n<p>This value is equal to <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html#associatedconstant.BITS\" title=\"associated constant u16::BITS\"><code>u16::BITS</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(NonZeroU16::BITS, u16::BITS);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0, const since 1.53.0\">1.53.0 (const: 1.53.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.leading_zeros\" class=\"fn\">leading_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of leading zeros in the binary representation of <code>self</code>.</p>\n<p>On many architectures, this function can perform better than <code>leading_zeros()</code> on the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = std::num::NonZeroU16::new(u16::MAX).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(n.leading_zeros(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0, const since 1.53.0\">1.53.0 (const: 1.53.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.trailing_zeros\" class=\"fn\">trailing_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of trailing zeros in the binary representation\nof <code>self</code>.</p>\n<p>On many architectures, this function can perform better than <code>trailing_zeros()</code> on the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = std::num::NonZeroU16::new(<span class=\"number\">0b0101000</span>).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(n.trailing_zeros(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_ones\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/120287\" title=\"Tracking issue for non_zero_count_ones\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.count_ones\" class=\"fn\">count_ones</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>non_zero_count_ones</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns the number of ones in the binary representation of <code>self</code>.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(non_zero_count_ones)]\n\n</span><span class=\"kw\">let </span>one = num::NonZeroU32::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>three = num::NonZeroU32::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>a = NonZeroU16::new(<span class=\"number\">0b100_0000</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>b = NonZeroU16::new(<span class=\"number\">0b100_0011</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(a.count_ones(), one);\n<span class=\"macro\">assert_eq!</span>(b.count_ones(), three);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MIN\" class=\"constant\">MIN</a>: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt; = _</h4></section></summary><div class=\"docblock\"><p>The smallest value that can be represented by this non-zero\ninteger type, 1.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroU16::MIN.get(), <span class=\"number\">1u16</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt; = _</h4></section></summary><div class=\"docblock\"><p>The largest value that can be represented by this non-zero\ninteger type,\nequal to <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html#associatedconstant.MAX\" title=\"associated constant u16::MAX\"><code>u16::MAX</code></a>.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroU16::MAX.get(), u16::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_add\" class=\"fn\">checked_add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Adds an unsigned integer to a non-zero value.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>one = NonZeroU16::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroU16::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU16::new(u16::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(two), one.checked_add(<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, max.checked_add(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Adds an unsigned integer to a non-zero value.\nReturn <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroU16::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>one = NonZeroU16::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroU16::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU16::new(u16::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(two, one.saturating_add(<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(max, max.saturating_add(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_add\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.unchecked_add\" class=\"fn\">unchecked_add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Adds an unsigned integer to a non-zero value,\nassuming overflow cannot occur.\nOverflow is unchecked, and it is undefined behaviour to overflow\n<em>even if the result would wrap to a non-zero value</em>.\nThe behaviour is undefined as soon as\n<code>self + rhs &gt; u16::MAX</code>.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(nonzero_ops)]\n\n</span><span class=\"kw\">let </span>one = NonZeroU16::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroU16::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(two, <span class=\"kw\">unsafe </span>{ one.unchecked_add(<span class=\"number\">1</span>) });</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_next_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_next_power_of_two\" class=\"fn\">checked_next_power_of_two</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the smallest power of two greater than or equal to n.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>\nif the next power of two is greater than the type’s maximum value.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroU16::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>three = NonZeroU16::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU16::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU16::new(u16::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(two), two.checked_next_power_of_two() );\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(four), three.checked_next_power_of_two() );\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, max.checked_next_power_of_two() );</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ilog2\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.ilog2\" class=\"fn\">ilog2</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the base 2 logarithm of the number, rounded down.</p>\n<p>This is the same operation as\n<a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html#method.ilog2\" title=\"method u16::ilog2\"><code>u16::ilog2</code></a>,\nexcept that it has no failure cases to worry about\nsince this value can never be zero.</p>\n<h5 id=\"examples-10\"><a class=\"doc-anchor\" href=\"#examples-10\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroU16::new(<span class=\"number\">7</span>).unwrap().ilog2(), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroU16::new(<span class=\"number\">8</span>).unwrap().ilog2(), <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroU16::new(<span class=\"number\">9</span>).unwrap().ilog2(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ilog10\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.ilog10\" class=\"fn\">ilog10</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the base 10 logarithm of the number, rounded down.</p>\n<p>This is the same operation as\n<a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html#method.ilog10\" title=\"method u16::ilog10\"><code>u16::ilog10</code></a>,\nexcept that it has no failure cases to worry about\nsince this value can never be zero.</p>\n<h5 id=\"examples-11\"><a class=\"doc-anchor\" href=\"#examples-11\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroU16::new(<span class=\"number\">99</span>).unwrap().ilog10(), <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroU16::new(<span class=\"number\">100</span>).unwrap().ilog10(), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroU16::new(<span class=\"number\">101</span>).unwrap().ilog10(), <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.midpoint\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/110840\" title=\"Tracking issue for const_num_midpoint\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.midpoint\" class=\"fn\">midpoint</a>(self, rhs: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>num_midpoint</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates the middle point of <code>self</code> and <code>rhs</code>.</p>\n<p><code>midpoint(a, b)</code> is <code>(a + b) &gt;&gt; 1</code> as if it were performed in a\nsufficiently-large signed integral type. This implies that the result is\nalways rounded towards negative infinity and that no overflow will ever occur.</p>\n<h5 id=\"examples-12\"><a class=\"doc-anchor\" href=\"#examples-12\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(num_midpoint)]\n\n</span><span class=\"kw\">let </span>one = NonZeroU16::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroU16::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU16::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(one.midpoint(four), two);\n<span class=\"macro\">assert_eq!</span>(four.midpoint(one), two);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.59.0, const since 1.59.0\">1.59.0 (const: 1.59.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.is_power_of_two\" class=\"fn\">is_power_of_two</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if and only if <code>self == (1 &lt;&lt; k)</code> for some <code>k</code>.</p>\n<p>On many architectures, this function can perform better than <code>is_power_of_two()</code>\non the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-13\"><a class=\"doc-anchor\" href=\"#examples-13\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>eight = std::num::NonZeroU16::new(<span class=\"number\">8</span>).unwrap();\n<span class=\"macro\">assert!</span>(eight.is_power_of_two());\n<span class=\"kw\">let </span>ten = std::num::NonZeroU16::new(<span class=\"number\">10</span>).unwrap();\n<span class=\"macro\">assert!</span>(!ten.is_power_of_two());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-14\"><a class=\"doc-anchor\" href=\"#examples-14\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroU16::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU16::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU16::new(u16::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(four), two.checked_mul(two));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, max.checked_mul(two));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_mul\" class=\"fn\">saturating_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together.\nReturn <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroU16::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-15\"><a class=\"doc-anchor\" href=\"#examples-15\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroU16::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU16::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU16::new(u16::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(four, two.saturating_mul(two));\n<span class=\"macro\">assert_eq!</span>(max, four.saturating_mul(max));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_mul\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.unchecked_mul\" class=\"fn\">unchecked_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together,\nassuming overflow cannot occur.\nOverflow is unchecked, and it is undefined behaviour to overflow\n<em>even if the result would wrap to a non-zero value</em>.\nThe behaviour is undefined as soon as\n<code>self * rhs &gt; u16::MAX</code>.</p>\n<h5 id=\"examples-16\"><a class=\"doc-anchor\" href=\"#examples-16\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(nonzero_ops)]\n\n</span><span class=\"kw\">let </span>two = NonZeroU16::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU16::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(four, <span class=\"kw\">unsafe </span>{ two.unchecked_mul(two) });</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_pow\" class=\"fn\">checked_pow</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Raises non-zero value to an integer power.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-17\"><a class=\"doc-anchor\" href=\"#examples-17\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>three = NonZeroU16::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>twenty_seven = NonZeroU16::new(<span class=\"number\">27</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>half_max = NonZeroU16::new(u16::MAX / <span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(twenty_seven), three.checked_pow(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, half_max.checked_pow(<span class=\"number\">3</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_pow\" class=\"fn\">saturating_pow</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Raise non-zero value to an integer power.\nReturn <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroU16::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-18\"><a class=\"doc-anchor\" href=\"#examples-18\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>three = NonZeroU16::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>twenty_seven = NonZeroU16::new(<span class=\"number\">27</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU16::new(u16::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(twenty_seven, three.saturating_pow(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(max, max.saturating_pow(<span class=\"number\">3</span>));</code></pre></div>\n</div></details></div></details>",0,"sp_std::num::NonZeroU16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NonZero%3Cu32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#impl-NonZero%3Cu32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_unchecked\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.28.0\">const: 1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a></span><h4 class=\"code-header\">pub const unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.new_unchecked\" class=\"fn\">new_unchecked</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a non-zero without checking whether the value is non-zero.\nThis results in undefined behaviour if the value is zero.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>The value must not be zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.47.0\">const: 1.47.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.new\" class=\"fn\">new</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a non-zero if the given value is not zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.from_mut_unchecked\" class=\"fn\">from_mut_unchecked</a>(n: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>) -&gt; &amp;mut <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_from_mut</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts a primitive mutable reference to a non-zero mutable reference\nwithout checking whether the referenced value is non-zero.\nThis results in undefined behavior if <code>*n</code> is zero.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p>The referenced value must not be currently zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.from_mut\" class=\"fn\">from_mut</a>(n: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_from_mut</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts a primitive mutable reference to a non-zero mutable reference\nif the referenced integer is not zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.34.0\">const: 1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.get\" class=\"fn\">get</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the value as a primitive type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.BITS\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0\">1.67.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.BITS\" class=\"constant\">BITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a> = 32u32</h4></section></summary><div class=\"docblock\"><p>The size of this non-zero integer type in bits.</p>\n<p>This value is equal to <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html#associatedconstant.BITS\" title=\"associated constant u32::BITS\"><code>u32::BITS</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(NonZeroU32::BITS, u32::BITS);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0, const since 1.53.0\">1.53.0 (const: 1.53.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.leading_zeros\" class=\"fn\">leading_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of leading zeros in the binary representation of <code>self</code>.</p>\n<p>On many architectures, this function can perform better than <code>leading_zeros()</code> on the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = std::num::NonZeroU32::new(u32::MAX).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(n.leading_zeros(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0, const since 1.53.0\">1.53.0 (const: 1.53.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.trailing_zeros\" class=\"fn\">trailing_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of trailing zeros in the binary representation\nof <code>self</code>.</p>\n<p>On many architectures, this function can perform better than <code>trailing_zeros()</code> on the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = std::num::NonZeroU32::new(<span class=\"number\">0b0101000</span>).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(n.trailing_zeros(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_ones\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/120287\" title=\"Tracking issue for non_zero_count_ones\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.count_ones\" class=\"fn\">count_ones</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>non_zero_count_ones</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns the number of ones in the binary representation of <code>self</code>.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(non_zero_count_ones)]\n\n</span><span class=\"kw\">let </span>one = num::NonZeroU32::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>three = num::NonZeroU32::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>a = NonZeroU32::new(<span class=\"number\">0b100_0000</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>b = NonZeroU32::new(<span class=\"number\">0b100_0011</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(a.count_ones(), one);\n<span class=\"macro\">assert_eq!</span>(b.count_ones(), three);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MIN\" class=\"constant\">MIN</a>: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt; = _</h4></section></summary><div class=\"docblock\"><p>The smallest value that can be represented by this non-zero\ninteger type, 1.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroU32::MIN.get(), <span class=\"number\">1u32</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt; = _</h4></section></summary><div class=\"docblock\"><p>The largest value that can be represented by this non-zero\ninteger type,\nequal to <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html#associatedconstant.MAX\" title=\"associated constant u32::MAX\"><code>u32::MAX</code></a>.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroU32::MAX.get(), u32::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_add\" class=\"fn\">checked_add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Adds an unsigned integer to a non-zero value.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>one = NonZeroU32::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroU32::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU32::new(u32::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(two), one.checked_add(<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, max.checked_add(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Adds an unsigned integer to a non-zero value.\nReturn <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroU32::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>one = NonZeroU32::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroU32::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU32::new(u32::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(two, one.saturating_add(<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(max, max.saturating_add(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_add\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.unchecked_add\" class=\"fn\">unchecked_add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Adds an unsigned integer to a non-zero value,\nassuming overflow cannot occur.\nOverflow is unchecked, and it is undefined behaviour to overflow\n<em>even if the result would wrap to a non-zero value</em>.\nThe behaviour is undefined as soon as\n<code>self + rhs &gt; u32::MAX</code>.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(nonzero_ops)]\n\n</span><span class=\"kw\">let </span>one = NonZeroU32::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroU32::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(two, <span class=\"kw\">unsafe </span>{ one.unchecked_add(<span class=\"number\">1</span>) });</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_next_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_next_power_of_two\" class=\"fn\">checked_next_power_of_two</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the smallest power of two greater than or equal to n.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>\nif the next power of two is greater than the type’s maximum value.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroU32::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>three = NonZeroU32::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU32::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU32::new(u32::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(two), two.checked_next_power_of_two() );\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(four), three.checked_next_power_of_two() );\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, max.checked_next_power_of_two() );</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ilog2\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.ilog2\" class=\"fn\">ilog2</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the base 2 logarithm of the number, rounded down.</p>\n<p>This is the same operation as\n<a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html#method.ilog2\" title=\"method u32::ilog2\"><code>u32::ilog2</code></a>,\nexcept that it has no failure cases to worry about\nsince this value can never be zero.</p>\n<h5 id=\"examples-10\"><a class=\"doc-anchor\" href=\"#examples-10\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroU32::new(<span class=\"number\">7</span>).unwrap().ilog2(), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroU32::new(<span class=\"number\">8</span>).unwrap().ilog2(), <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroU32::new(<span class=\"number\">9</span>).unwrap().ilog2(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ilog10\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.ilog10\" class=\"fn\">ilog10</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the base 10 logarithm of the number, rounded down.</p>\n<p>This is the same operation as\n<a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html#method.ilog10\" title=\"method u32::ilog10\"><code>u32::ilog10</code></a>,\nexcept that it has no failure cases to worry about\nsince this value can never be zero.</p>\n<h5 id=\"examples-11\"><a class=\"doc-anchor\" href=\"#examples-11\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroU32::new(<span class=\"number\">99</span>).unwrap().ilog10(), <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroU32::new(<span class=\"number\">100</span>).unwrap().ilog10(), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroU32::new(<span class=\"number\">101</span>).unwrap().ilog10(), <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.midpoint\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/110840\" title=\"Tracking issue for const_num_midpoint\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.midpoint\" class=\"fn\">midpoint</a>(self, rhs: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>num_midpoint</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates the middle point of <code>self</code> and <code>rhs</code>.</p>\n<p><code>midpoint(a, b)</code> is <code>(a + b) &gt;&gt; 1</code> as if it were performed in a\nsufficiently-large signed integral type. This implies that the result is\nalways rounded towards negative infinity and that no overflow will ever occur.</p>\n<h5 id=\"examples-12\"><a class=\"doc-anchor\" href=\"#examples-12\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(num_midpoint)]\n\n</span><span class=\"kw\">let </span>one = NonZeroU32::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroU32::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU32::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(one.midpoint(four), two);\n<span class=\"macro\">assert_eq!</span>(four.midpoint(one), two);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.59.0, const since 1.59.0\">1.59.0 (const: 1.59.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.is_power_of_two\" class=\"fn\">is_power_of_two</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if and only if <code>self == (1 &lt;&lt; k)</code> for some <code>k</code>.</p>\n<p>On many architectures, this function can perform better than <code>is_power_of_two()</code>\non the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-13\"><a class=\"doc-anchor\" href=\"#examples-13\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>eight = std::num::NonZeroU32::new(<span class=\"number\">8</span>).unwrap();\n<span class=\"macro\">assert!</span>(eight.is_power_of_two());\n<span class=\"kw\">let </span>ten = std::num::NonZeroU32::new(<span class=\"number\">10</span>).unwrap();\n<span class=\"macro\">assert!</span>(!ten.is_power_of_two());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-14\"><a class=\"doc-anchor\" href=\"#examples-14\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroU32::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU32::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU32::new(u32::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(four), two.checked_mul(two));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, max.checked_mul(two));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_mul\" class=\"fn\">saturating_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together.\nReturn <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroU32::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-15\"><a class=\"doc-anchor\" href=\"#examples-15\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroU32::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU32::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU32::new(u32::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(four, two.saturating_mul(two));\n<span class=\"macro\">assert_eq!</span>(max, four.saturating_mul(max));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_mul\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.unchecked_mul\" class=\"fn\">unchecked_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together,\nassuming overflow cannot occur.\nOverflow is unchecked, and it is undefined behaviour to overflow\n<em>even if the result would wrap to a non-zero value</em>.\nThe behaviour is undefined as soon as\n<code>self * rhs &gt; u32::MAX</code>.</p>\n<h5 id=\"examples-16\"><a class=\"doc-anchor\" href=\"#examples-16\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(nonzero_ops)]\n\n</span><span class=\"kw\">let </span>two = NonZeroU32::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU32::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(four, <span class=\"kw\">unsafe </span>{ two.unchecked_mul(two) });</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_pow\" class=\"fn\">checked_pow</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Raises non-zero value to an integer power.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-17\"><a class=\"doc-anchor\" href=\"#examples-17\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>three = NonZeroU32::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>twenty_seven = NonZeroU32::new(<span class=\"number\">27</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>half_max = NonZeroU32::new(u32::MAX / <span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(twenty_seven), three.checked_pow(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, half_max.checked_pow(<span class=\"number\">3</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_pow\" class=\"fn\">saturating_pow</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Raise non-zero value to an integer power.\nReturn <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroU32::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-18\"><a class=\"doc-anchor\" href=\"#examples-18\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>three = NonZeroU32::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>twenty_seven = NonZeroU32::new(<span class=\"number\">27</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU32::new(u32::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(twenty_seven, three.saturating_pow(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(max, max.saturating_pow(<span class=\"number\">3</span>));</code></pre></div>\n</div></details></div></details>",0,"sp_std::num::NonZeroU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#impl-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_unchecked\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.28.0\">const: 1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a></span><h4 class=\"code-header\">pub const unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.new_unchecked\" class=\"fn\">new_unchecked</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a non-zero without checking whether the value is non-zero.\nThis results in undefined behaviour if the value is zero.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>The value must not be zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.47.0\">const: 1.47.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.new\" class=\"fn\">new</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a non-zero if the given value is not zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.from_mut_unchecked\" class=\"fn\">from_mut_unchecked</a>(n: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>) -&gt; &amp;mut <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_from_mut</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts a primitive mutable reference to a non-zero mutable reference\nwithout checking whether the referenced value is non-zero.\nThis results in undefined behavior if <code>*n</code> is zero.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p>The referenced value must not be currently zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.from_mut\" class=\"fn\">from_mut</a>(n: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_from_mut</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts a primitive mutable reference to a non-zero mutable reference\nif the referenced integer is not zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.34.0\">const: 1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.get\" class=\"fn\">get</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a></h4></section></summary><div class=\"docblock\"><p>Returns the value as a primitive type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.BITS\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0\">1.67.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.BITS\" class=\"constant\">BITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a> = 64u32</h4></section></summary><div class=\"docblock\"><p>The size of this non-zero integer type in bits.</p>\n<p>This value is equal to <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html#associatedconstant.BITS\" title=\"associated constant u64::BITS\"><code>u64::BITS</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(NonZeroU64::BITS, u64::BITS);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0, const since 1.53.0\">1.53.0 (const: 1.53.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.leading_zeros\" class=\"fn\">leading_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of leading zeros in the binary representation of <code>self</code>.</p>\n<p>On many architectures, this function can perform better than <code>leading_zeros()</code> on the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = std::num::NonZeroU64::new(u64::MAX).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(n.leading_zeros(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0, const since 1.53.0\">1.53.0 (const: 1.53.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.trailing_zeros\" class=\"fn\">trailing_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of trailing zeros in the binary representation\nof <code>self</code>.</p>\n<p>On many architectures, this function can perform better than <code>trailing_zeros()</code> on the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = std::num::NonZeroU64::new(<span class=\"number\">0b0101000</span>).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(n.trailing_zeros(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_ones\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/120287\" title=\"Tracking issue for non_zero_count_ones\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.count_ones\" class=\"fn\">count_ones</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>non_zero_count_ones</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns the number of ones in the binary representation of <code>self</code>.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(non_zero_count_ones)]\n\n</span><span class=\"kw\">let </span>one = num::NonZeroU32::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>three = num::NonZeroU32::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>a = NonZeroU64::new(<span class=\"number\">0b100_0000</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>b = NonZeroU64::new(<span class=\"number\">0b100_0011</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(a.count_ones(), one);\n<span class=\"macro\">assert_eq!</span>(b.count_ones(), three);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MIN\" class=\"constant\">MIN</a>: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt; = _</h4></section></summary><div class=\"docblock\"><p>The smallest value that can be represented by this non-zero\ninteger type, 1.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroU64::MIN.get(), <span class=\"number\">1u64</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt; = _</h4></section></summary><div class=\"docblock\"><p>The largest value that can be represented by this non-zero\ninteger type,\nequal to <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html#associatedconstant.MAX\" title=\"associated constant u64::MAX\"><code>u64::MAX</code></a>.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroU64::MAX.get(), u64::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_add\" class=\"fn\">checked_add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Adds an unsigned integer to a non-zero value.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>one = NonZeroU64::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroU64::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU64::new(u64::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(two), one.checked_add(<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, max.checked_add(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Adds an unsigned integer to a non-zero value.\nReturn <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroU64::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>one = NonZeroU64::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroU64::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU64::new(u64::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(two, one.saturating_add(<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(max, max.saturating_add(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_add\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.unchecked_add\" class=\"fn\">unchecked_add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Adds an unsigned integer to a non-zero value,\nassuming overflow cannot occur.\nOverflow is unchecked, and it is undefined behaviour to overflow\n<em>even if the result would wrap to a non-zero value</em>.\nThe behaviour is undefined as soon as\n<code>self + rhs &gt; u64::MAX</code>.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(nonzero_ops)]\n\n</span><span class=\"kw\">let </span>one = NonZeroU64::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroU64::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(two, <span class=\"kw\">unsafe </span>{ one.unchecked_add(<span class=\"number\">1</span>) });</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_next_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_next_power_of_two\" class=\"fn\">checked_next_power_of_two</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the smallest power of two greater than or equal to n.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>\nif the next power of two is greater than the type’s maximum value.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroU64::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>three = NonZeroU64::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU64::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU64::new(u64::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(two), two.checked_next_power_of_two() );\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(four), three.checked_next_power_of_two() );\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, max.checked_next_power_of_two() );</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ilog2\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.ilog2\" class=\"fn\">ilog2</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the base 2 logarithm of the number, rounded down.</p>\n<p>This is the same operation as\n<a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html#method.ilog2\" title=\"method u64::ilog2\"><code>u64::ilog2</code></a>,\nexcept that it has no failure cases to worry about\nsince this value can never be zero.</p>\n<h5 id=\"examples-10\"><a class=\"doc-anchor\" href=\"#examples-10\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroU64::new(<span class=\"number\">7</span>).unwrap().ilog2(), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroU64::new(<span class=\"number\">8</span>).unwrap().ilog2(), <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroU64::new(<span class=\"number\">9</span>).unwrap().ilog2(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ilog10\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.ilog10\" class=\"fn\">ilog10</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the base 10 logarithm of the number, rounded down.</p>\n<p>This is the same operation as\n<a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html#method.ilog10\" title=\"method u64::ilog10\"><code>u64::ilog10</code></a>,\nexcept that it has no failure cases to worry about\nsince this value can never be zero.</p>\n<h5 id=\"examples-11\"><a class=\"doc-anchor\" href=\"#examples-11\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroU64::new(<span class=\"number\">99</span>).unwrap().ilog10(), <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroU64::new(<span class=\"number\">100</span>).unwrap().ilog10(), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroU64::new(<span class=\"number\">101</span>).unwrap().ilog10(), <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.midpoint\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/110840\" title=\"Tracking issue for const_num_midpoint\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.midpoint\" class=\"fn\">midpoint</a>(self, rhs: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>num_midpoint</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates the middle point of <code>self</code> and <code>rhs</code>.</p>\n<p><code>midpoint(a, b)</code> is <code>(a + b) &gt;&gt; 1</code> as if it were performed in a\nsufficiently-large signed integral type. This implies that the result is\nalways rounded towards negative infinity and that no overflow will ever occur.</p>\n<h5 id=\"examples-12\"><a class=\"doc-anchor\" href=\"#examples-12\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(num_midpoint)]\n\n</span><span class=\"kw\">let </span>one = NonZeroU64::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroU64::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU64::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(one.midpoint(four), two);\n<span class=\"macro\">assert_eq!</span>(four.midpoint(one), two);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.59.0, const since 1.59.0\">1.59.0 (const: 1.59.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.is_power_of_two\" class=\"fn\">is_power_of_two</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if and only if <code>self == (1 &lt;&lt; k)</code> for some <code>k</code>.</p>\n<p>On many architectures, this function can perform better than <code>is_power_of_two()</code>\non the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-13\"><a class=\"doc-anchor\" href=\"#examples-13\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>eight = std::num::NonZeroU64::new(<span class=\"number\">8</span>).unwrap();\n<span class=\"macro\">assert!</span>(eight.is_power_of_two());\n<span class=\"kw\">let </span>ten = std::num::NonZeroU64::new(<span class=\"number\">10</span>).unwrap();\n<span class=\"macro\">assert!</span>(!ten.is_power_of_two());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-14\"><a class=\"doc-anchor\" href=\"#examples-14\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroU64::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU64::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU64::new(u64::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(four), two.checked_mul(two));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, max.checked_mul(two));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_mul\" class=\"fn\">saturating_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together.\nReturn <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroU64::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-15\"><a class=\"doc-anchor\" href=\"#examples-15\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroU64::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU64::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU64::new(u64::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(four, two.saturating_mul(two));\n<span class=\"macro\">assert_eq!</span>(max, four.saturating_mul(max));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_mul\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.unchecked_mul\" class=\"fn\">unchecked_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together,\nassuming overflow cannot occur.\nOverflow is unchecked, and it is undefined behaviour to overflow\n<em>even if the result would wrap to a non-zero value</em>.\nThe behaviour is undefined as soon as\n<code>self * rhs &gt; u64::MAX</code>.</p>\n<h5 id=\"examples-16\"><a class=\"doc-anchor\" href=\"#examples-16\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(nonzero_ops)]\n\n</span><span class=\"kw\">let </span>two = NonZeroU64::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU64::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(four, <span class=\"kw\">unsafe </span>{ two.unchecked_mul(two) });</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_pow\" class=\"fn\">checked_pow</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Raises non-zero value to an integer power.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-17\"><a class=\"doc-anchor\" href=\"#examples-17\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>three = NonZeroU64::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>twenty_seven = NonZeroU64::new(<span class=\"number\">27</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>half_max = NonZeroU64::new(u64::MAX / <span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(twenty_seven), three.checked_pow(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, half_max.checked_pow(<span class=\"number\">3</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_pow\" class=\"fn\">saturating_pow</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Raise non-zero value to an integer power.\nReturn <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroU64::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-18\"><a class=\"doc-anchor\" href=\"#examples-18\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>three = NonZeroU64::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>twenty_seven = NonZeroU64::new(<span class=\"number\">27</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU64::new(u64::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(twenty_seven, three.saturating_pow(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(max, max.saturating_pow(<span class=\"number\">3</span>));</code></pre></div>\n</div></details></div></details>",0,"sp_std::num::NonZeroU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NonZero%3Cu128%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#impl-NonZero%3Cu128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_unchecked\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.28.0\">const: 1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a></span><h4 class=\"code-header\">pub const unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.new_unchecked\" class=\"fn\">new_unchecked</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a non-zero without checking whether the value is non-zero.\nThis results in undefined behaviour if the value is zero.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>The value must not be zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.47.0\">const: 1.47.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.new\" class=\"fn\">new</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a non-zero if the given value is not zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.from_mut_unchecked\" class=\"fn\">from_mut_unchecked</a>(n: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>) -&gt; &amp;mut <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_from_mut</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts a primitive mutable reference to a non-zero mutable reference\nwithout checking whether the referenced value is non-zero.\nThis results in undefined behavior if <code>*n</code> is zero.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p>The referenced value must not be currently zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.from_mut\" class=\"fn\">from_mut</a>(n: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_from_mut</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts a primitive mutable reference to a non-zero mutable reference\nif the referenced integer is not zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.34.0\">const: 1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.get\" class=\"fn\">get</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a></h4></section></summary><div class=\"docblock\"><p>Returns the value as a primitive type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.BITS\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0\">1.67.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.BITS\" class=\"constant\">BITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a> = 128u32</h4></section></summary><div class=\"docblock\"><p>The size of this non-zero integer type in bits.</p>\n<p>This value is equal to <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html#associatedconstant.BITS\" title=\"associated constant u128::BITS\"><code>u128::BITS</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(NonZeroU128::BITS, u128::BITS);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0, const since 1.53.0\">1.53.0 (const: 1.53.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.leading_zeros\" class=\"fn\">leading_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of leading zeros in the binary representation of <code>self</code>.</p>\n<p>On many architectures, this function can perform better than <code>leading_zeros()</code> on the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = std::num::NonZeroU128::new(u128::MAX).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(n.leading_zeros(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0, const since 1.53.0\">1.53.0 (const: 1.53.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.trailing_zeros\" class=\"fn\">trailing_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of trailing zeros in the binary representation\nof <code>self</code>.</p>\n<p>On many architectures, this function can perform better than <code>trailing_zeros()</code> on the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = std::num::NonZeroU128::new(<span class=\"number\">0b0101000</span>).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(n.trailing_zeros(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_ones\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/120287\" title=\"Tracking issue for non_zero_count_ones\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.count_ones\" class=\"fn\">count_ones</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>non_zero_count_ones</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns the number of ones in the binary representation of <code>self</code>.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(non_zero_count_ones)]\n\n</span><span class=\"kw\">let </span>one = num::NonZeroU32::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>three = num::NonZeroU32::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>a = NonZeroU128::new(<span class=\"number\">0b100_0000</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>b = NonZeroU128::new(<span class=\"number\">0b100_0011</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(a.count_ones(), one);\n<span class=\"macro\">assert_eq!</span>(b.count_ones(), three);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MIN\" class=\"constant\">MIN</a>: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt; = _</h4></section></summary><div class=\"docblock\"><p>The smallest value that can be represented by this non-zero\ninteger type, 1.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroU128::MIN.get(), <span class=\"number\">1u128</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt; = _</h4></section></summary><div class=\"docblock\"><p>The largest value that can be represented by this non-zero\ninteger type,\nequal to <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html#associatedconstant.MAX\" title=\"associated constant u128::MAX\"><code>u128::MAX</code></a>.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroU128::MAX.get(), u128::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_add\" class=\"fn\">checked_add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Adds an unsigned integer to a non-zero value.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>one = NonZeroU128::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroU128::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU128::new(u128::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(two), one.checked_add(<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, max.checked_add(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Adds an unsigned integer to a non-zero value.\nReturn <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroU128::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>one = NonZeroU128::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroU128::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU128::new(u128::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(two, one.saturating_add(<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(max, max.saturating_add(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_add\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.unchecked_add\" class=\"fn\">unchecked_add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Adds an unsigned integer to a non-zero value,\nassuming overflow cannot occur.\nOverflow is unchecked, and it is undefined behaviour to overflow\n<em>even if the result would wrap to a non-zero value</em>.\nThe behaviour is undefined as soon as\n<code>self + rhs &gt; u128::MAX</code>.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(nonzero_ops)]\n\n</span><span class=\"kw\">let </span>one = NonZeroU128::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroU128::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(two, <span class=\"kw\">unsafe </span>{ one.unchecked_add(<span class=\"number\">1</span>) });</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_next_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_next_power_of_two\" class=\"fn\">checked_next_power_of_two</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the smallest power of two greater than or equal to n.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>\nif the next power of two is greater than the type’s maximum value.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroU128::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>three = NonZeroU128::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU128::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU128::new(u128::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(two), two.checked_next_power_of_two() );\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(four), three.checked_next_power_of_two() );\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, max.checked_next_power_of_two() );</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ilog2\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.ilog2\" class=\"fn\">ilog2</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the base 2 logarithm of the number, rounded down.</p>\n<p>This is the same operation as\n<a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html#method.ilog2\" title=\"method u128::ilog2\"><code>u128::ilog2</code></a>,\nexcept that it has no failure cases to worry about\nsince this value can never be zero.</p>\n<h5 id=\"examples-10\"><a class=\"doc-anchor\" href=\"#examples-10\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroU128::new(<span class=\"number\">7</span>).unwrap().ilog2(), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroU128::new(<span class=\"number\">8</span>).unwrap().ilog2(), <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroU128::new(<span class=\"number\">9</span>).unwrap().ilog2(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ilog10\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.ilog10\" class=\"fn\">ilog10</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the base 10 logarithm of the number, rounded down.</p>\n<p>This is the same operation as\n<a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html#method.ilog10\" title=\"method u128::ilog10\"><code>u128::ilog10</code></a>,\nexcept that it has no failure cases to worry about\nsince this value can never be zero.</p>\n<h5 id=\"examples-11\"><a class=\"doc-anchor\" href=\"#examples-11\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroU128::new(<span class=\"number\">99</span>).unwrap().ilog10(), <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroU128::new(<span class=\"number\">100</span>).unwrap().ilog10(), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroU128::new(<span class=\"number\">101</span>).unwrap().ilog10(), <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.midpoint\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/110840\" title=\"Tracking issue for const_num_midpoint\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.midpoint\" class=\"fn\">midpoint</a>(self, rhs: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>num_midpoint</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates the middle point of <code>self</code> and <code>rhs</code>.</p>\n<p><code>midpoint(a, b)</code> is <code>(a + b) &gt;&gt; 1</code> as if it were performed in a\nsufficiently-large signed integral type. This implies that the result is\nalways rounded towards negative infinity and that no overflow will ever occur.</p>\n<h5 id=\"examples-12\"><a class=\"doc-anchor\" href=\"#examples-12\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(num_midpoint)]\n\n</span><span class=\"kw\">let </span>one = NonZeroU128::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroU128::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU128::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(one.midpoint(four), two);\n<span class=\"macro\">assert_eq!</span>(four.midpoint(one), two);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.59.0, const since 1.59.0\">1.59.0 (const: 1.59.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.is_power_of_two\" class=\"fn\">is_power_of_two</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if and only if <code>self == (1 &lt;&lt; k)</code> for some <code>k</code>.</p>\n<p>On many architectures, this function can perform better than <code>is_power_of_two()</code>\non the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-13\"><a class=\"doc-anchor\" href=\"#examples-13\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>eight = std::num::NonZeroU128::new(<span class=\"number\">8</span>).unwrap();\n<span class=\"macro\">assert!</span>(eight.is_power_of_two());\n<span class=\"kw\">let </span>ten = std::num::NonZeroU128::new(<span class=\"number\">10</span>).unwrap();\n<span class=\"macro\">assert!</span>(!ten.is_power_of_two());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-14\"><a class=\"doc-anchor\" href=\"#examples-14\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroU128::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU128::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU128::new(u128::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(four), two.checked_mul(two));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, max.checked_mul(two));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_mul\" class=\"fn\">saturating_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together.\nReturn <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroU128::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-15\"><a class=\"doc-anchor\" href=\"#examples-15\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroU128::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU128::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU128::new(u128::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(four, two.saturating_mul(two));\n<span class=\"macro\">assert_eq!</span>(max, four.saturating_mul(max));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_mul\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.unchecked_mul\" class=\"fn\">unchecked_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together,\nassuming overflow cannot occur.\nOverflow is unchecked, and it is undefined behaviour to overflow\n<em>even if the result would wrap to a non-zero value</em>.\nThe behaviour is undefined as soon as\n<code>self * rhs &gt; u128::MAX</code>.</p>\n<h5 id=\"examples-16\"><a class=\"doc-anchor\" href=\"#examples-16\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(nonzero_ops)]\n\n</span><span class=\"kw\">let </span>two = NonZeroU128::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroU128::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(four, <span class=\"kw\">unsafe </span>{ two.unchecked_mul(two) });</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_pow\" class=\"fn\">checked_pow</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Raises non-zero value to an integer power.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-17\"><a class=\"doc-anchor\" href=\"#examples-17\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>three = NonZeroU128::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>twenty_seven = NonZeroU128::new(<span class=\"number\">27</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>half_max = NonZeroU128::new(u128::MAX / <span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(twenty_seven), three.checked_pow(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, half_max.checked_pow(<span class=\"number\">3</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_pow\" class=\"fn\">saturating_pow</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Raise non-zero value to an integer power.\nReturn <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroU128::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-18\"><a class=\"doc-anchor\" href=\"#examples-18\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>three = NonZeroU128::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>twenty_seven = NonZeroU128::new(<span class=\"number\">27</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroU128::new(u128::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(twenty_seven, three.saturating_pow(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(max, max.saturating_pow(<span class=\"number\">3</span>));</code></pre></div>\n</div></details></div></details>",0,"sp_std::num::NonZeroU128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NonZero%3Cusize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#impl-NonZero%3Cusize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_unchecked\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.28.0\">const: 1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a></span><h4 class=\"code-header\">pub const unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.new_unchecked\" class=\"fn\">new_unchecked</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a non-zero without checking whether the value is non-zero.\nThis results in undefined behaviour if the value is zero.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>The value must not be zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.47.0\">const: 1.47.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.new\" class=\"fn\">new</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a non-zero if the given value is not zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.from_mut_unchecked\" class=\"fn\">from_mut_unchecked</a>(n: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>) -&gt; &amp;mut <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_from_mut</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts a primitive mutable reference to a non-zero mutable reference\nwithout checking whether the referenced value is non-zero.\nThis results in undefined behavior if <code>*n</code> is zero.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p>The referenced value must not be currently zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.from_mut\" class=\"fn\">from_mut</a>(n: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_from_mut</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts a primitive mutable reference to a non-zero mutable reference\nif the referenced integer is not zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.34.0\">const: 1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.get\" class=\"fn\">get</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the value as a primitive type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.BITS\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0\">1.67.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.BITS\" class=\"constant\">BITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a> = 64u32</h4></section></summary><div class=\"docblock\"><p>The size of this non-zero integer type in bits.</p>\n<p>This value is equal to <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html#associatedconstant.BITS\" title=\"associated constant usize::BITS\"><code>usize::BITS</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(NonZeroUsize::BITS, usize::BITS);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0, const since 1.53.0\">1.53.0 (const: 1.53.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.leading_zeros\" class=\"fn\">leading_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of leading zeros in the binary representation of <code>self</code>.</p>\n<p>On many architectures, this function can perform better than <code>leading_zeros()</code> on the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = std::num::NonZeroUsize::new(usize::MAX).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(n.leading_zeros(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0, const since 1.53.0\">1.53.0 (const: 1.53.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.trailing_zeros\" class=\"fn\">trailing_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of trailing zeros in the binary representation\nof <code>self</code>.</p>\n<p>On many architectures, this function can perform better than <code>trailing_zeros()</code> on the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = std::num::NonZeroUsize::new(<span class=\"number\">0b0101000</span>).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(n.trailing_zeros(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_ones\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/120287\" title=\"Tracking issue for non_zero_count_ones\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.count_ones\" class=\"fn\">count_ones</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>non_zero_count_ones</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns the number of ones in the binary representation of <code>self</code>.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(non_zero_count_ones)]\n\n</span><span class=\"kw\">let </span>one = num::NonZeroU32::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>three = num::NonZeroU32::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>a = NonZeroUsize::new(<span class=\"number\">0b100_0000</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>b = NonZeroUsize::new(<span class=\"number\">0b100_0011</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(a.count_ones(), one);\n<span class=\"macro\">assert_eq!</span>(b.count_ones(), three);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MIN\" class=\"constant\">MIN</a>: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; = _</h4></section></summary><div class=\"docblock\"><p>The smallest value that can be represented by this non-zero\ninteger type, 1.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroUsize::MIN.get(), <span class=\"number\">1usize</span>);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; = _</h4></section></summary><div class=\"docblock\"><p>The largest value that can be represented by this non-zero\ninteger type,\nequal to <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html#associatedconstant.MAX\" title=\"associated constant usize::MAX\"><code>usize::MAX</code></a>.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroUsize::MAX.get(), usize::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_add\" class=\"fn\">checked_add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Adds an unsigned integer to a non-zero value.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>one = NonZeroUsize::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroUsize::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroUsize::new(usize::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(two), one.checked_add(<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, max.checked_add(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_add\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_add\" class=\"fn\">saturating_add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Adds an unsigned integer to a non-zero value.\nReturn <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroUsize::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>one = NonZeroUsize::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroUsize::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroUsize::new(usize::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(two, one.saturating_add(<span class=\"number\">1</span>));\n<span class=\"macro\">assert_eq!</span>(max, max.saturating_add(<span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_add\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.unchecked_add\" class=\"fn\">unchecked_add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Adds an unsigned integer to a non-zero value,\nassuming overflow cannot occur.\nOverflow is unchecked, and it is undefined behaviour to overflow\n<em>even if the result would wrap to a non-zero value</em>.\nThe behaviour is undefined as soon as\n<code>self + rhs &gt; usize::MAX</code>.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(nonzero_ops)]\n\n</span><span class=\"kw\">let </span>one = NonZeroUsize::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroUsize::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(two, <span class=\"kw\">unsafe </span>{ one.unchecked_add(<span class=\"number\">1</span>) });</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_next_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_next_power_of_two\" class=\"fn\">checked_next_power_of_two</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the smallest power of two greater than or equal to n.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>\nif the next power of two is greater than the type’s maximum value.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroUsize::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>three = NonZeroUsize::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroUsize::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroUsize::new(usize::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(two), two.checked_next_power_of_two() );\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(four), three.checked_next_power_of_two() );\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, max.checked_next_power_of_two() );</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ilog2\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.ilog2\" class=\"fn\">ilog2</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the base 2 logarithm of the number, rounded down.</p>\n<p>This is the same operation as\n<a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html#method.ilog2\" title=\"method usize::ilog2\"><code>usize::ilog2</code></a>,\nexcept that it has no failure cases to worry about\nsince this value can never be zero.</p>\n<h5 id=\"examples-10\"><a class=\"doc-anchor\" href=\"#examples-10\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroUsize::new(<span class=\"number\">7</span>).unwrap().ilog2(), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroUsize::new(<span class=\"number\">8</span>).unwrap().ilog2(), <span class=\"number\">3</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroUsize::new(<span class=\"number\">9</span>).unwrap().ilog2(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ilog10\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0, const since 1.67.0\">1.67.0 (const: 1.67.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.ilog10\" class=\"fn\">ilog10</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the base 10 logarithm of the number, rounded down.</p>\n<p>This is the same operation as\n<a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html#method.ilog10\" title=\"method usize::ilog10\"><code>usize::ilog10</code></a>,\nexcept that it has no failure cases to worry about\nsince this value can never be zero.</p>\n<h5 id=\"examples-11\"><a class=\"doc-anchor\" href=\"#examples-11\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroUsize::new(<span class=\"number\">99</span>).unwrap().ilog10(), <span class=\"number\">1</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroUsize::new(<span class=\"number\">100</span>).unwrap().ilog10(), <span class=\"number\">2</span>);\n<span class=\"macro\">assert_eq!</span>(NonZeroUsize::new(<span class=\"number\">101</span>).unwrap().ilog10(), <span class=\"number\">2</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.midpoint\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/110840\" title=\"Tracking issue for const_num_midpoint\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.midpoint\" class=\"fn\">midpoint</a>(self, rhs: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>num_midpoint</code>)</span></div></span></summary><div class=\"docblock\"><p>Calculates the middle point of <code>self</code> and <code>rhs</code>.</p>\n<p><code>midpoint(a, b)</code> is <code>(a + b) &gt;&gt; 1</code> as if it were performed in a\nsufficiently-large signed integral type. This implies that the result is\nalways rounded towards negative infinity and that no overflow will ever occur.</p>\n<h5 id=\"examples-12\"><a class=\"doc-anchor\" href=\"#examples-12\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(num_midpoint)]\n\n</span><span class=\"kw\">let </span>one = NonZeroUsize::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>two = NonZeroUsize::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroUsize::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(one.midpoint(four), two);\n<span class=\"macro\">assert_eq!</span>(four.midpoint(one), two);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_power_of_two\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.59.0, const since 1.59.0\">1.59.0 (const: 1.59.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.is_power_of_two\" class=\"fn\">is_power_of_two</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if and only if <code>self == (1 &lt;&lt; k)</code> for some <code>k</code>.</p>\n<p>On many architectures, this function can perform better than <code>is_power_of_two()</code>\non the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-13\"><a class=\"doc-anchor\" href=\"#examples-13\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>eight = std::num::NonZeroUsize::new(<span class=\"number\">8</span>).unwrap();\n<span class=\"macro\">assert!</span>(eight.is_power_of_two());\n<span class=\"kw\">let </span>ten = std::num::NonZeroUsize::new(<span class=\"number\">10</span>).unwrap();\n<span class=\"macro\">assert!</span>(!ten.is_power_of_two());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-14\"><a class=\"doc-anchor\" href=\"#examples-14\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroUsize::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroUsize::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroUsize::new(usize::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(four), two.checked_mul(two));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, max.checked_mul(two));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_mul\" class=\"fn\">saturating_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together.\nReturn <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroUsize::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-15\"><a class=\"doc-anchor\" href=\"#examples-15\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroUsize::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroUsize::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroUsize::new(usize::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(four, two.saturating_mul(two));\n<span class=\"macro\">assert_eq!</span>(max, four.saturating_mul(max));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_mul\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.unchecked_mul\" class=\"fn\">unchecked_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together,\nassuming overflow cannot occur.\nOverflow is unchecked, and it is undefined behaviour to overflow\n<em>even if the result would wrap to a non-zero value</em>.\nThe behaviour is undefined as soon as\n<code>self * rhs &gt; usize::MAX</code>.</p>\n<h5 id=\"examples-16\"><a class=\"doc-anchor\" href=\"#examples-16\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(nonzero_ops)]\n\n</span><span class=\"kw\">let </span>two = NonZeroUsize::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroUsize::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(four, <span class=\"kw\">unsafe </span>{ two.unchecked_mul(two) });</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_pow\" class=\"fn\">checked_pow</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Raises non-zero value to an integer power.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-17\"><a class=\"doc-anchor\" href=\"#examples-17\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>three = NonZeroUsize::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>twenty_seven = NonZeroUsize::new(<span class=\"number\">27</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>half_max = NonZeroUsize::new(usize::MAX / <span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(twenty_seven), three.checked_pow(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, half_max.checked_pow(<span class=\"number\">3</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_pow\" class=\"fn\">saturating_pow</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Raise non-zero value to an integer power.\nReturn <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroUsize::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-18\"><a class=\"doc-anchor\" href=\"#examples-18\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>three = NonZeroUsize::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>twenty_seven = NonZeroUsize::new(<span class=\"number\">27</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroUsize::new(usize::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(twenty_seven, three.saturating_pow(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(max, max.saturating_pow(<span class=\"number\">3</span>));</code></pre></div>\n</div></details></div></details>",0,"sp_std::num::NonZeroUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NonZero%3Ci8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#impl-NonZero%3Ci8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_unchecked\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.34.0\">const: 1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a></span><h4 class=\"code-header\">pub const unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.new_unchecked\" class=\"fn\">new_unchecked</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a non-zero without checking whether the value is non-zero.\nThis results in undefined behaviour if the value is zero.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>The value must not be zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.47.0\">const: 1.47.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.new\" class=\"fn\">new</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a non-zero if the given value is not zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.from_mut_unchecked\" class=\"fn\">from_mut_unchecked</a>(n: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>) -&gt; &amp;mut <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_from_mut</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts a primitive mutable reference to a non-zero mutable reference\nwithout checking whether the referenced value is non-zero.\nThis results in undefined behavior if <code>*n</code> is zero.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p>The referenced value must not be currently zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.from_mut\" class=\"fn\">from_mut</a>(n: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_from_mut</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts a primitive mutable reference to a non-zero mutable reference\nif the referenced integer is not zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.34.0\">const: 1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.get\" class=\"fn\">get</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a></h4></section></summary><div class=\"docblock\"><p>Returns the value as a primitive type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.BITS\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0\">1.67.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.BITS\" class=\"constant\">BITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a> = 8u32</h4></section></summary><div class=\"docblock\"><p>The size of this non-zero integer type in bits.</p>\n<p>This value is equal to <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html#associatedconstant.BITS\" title=\"associated constant i8::BITS\"><code>i8::BITS</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(NonZeroI8::BITS, i8::BITS);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0, const since 1.53.0\">1.53.0 (const: 1.53.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.leading_zeros\" class=\"fn\">leading_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of leading zeros in the binary representation of <code>self</code>.</p>\n<p>On many architectures, this function can perform better than <code>leading_zeros()</code> on the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = std::num::NonZeroI8::new(-<span class=\"number\">1i8</span>).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(n.leading_zeros(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0, const since 1.53.0\">1.53.0 (const: 1.53.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.trailing_zeros\" class=\"fn\">trailing_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of trailing zeros in the binary representation\nof <code>self</code>.</p>\n<p>On many architectures, this function can perform better than <code>trailing_zeros()</code> on the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = std::num::NonZeroI8::new(<span class=\"number\">0b0101000</span>).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(n.trailing_zeros(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_ones\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/120287\" title=\"Tracking issue for non_zero_count_ones\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.count_ones\" class=\"fn\">count_ones</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>non_zero_count_ones</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns the number of ones in the binary representation of <code>self</code>.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(non_zero_count_ones)]\n\n</span><span class=\"kw\">let </span>one = num::NonZeroU32::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>three = num::NonZeroU32::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>a = NonZeroI8::new(<span class=\"number\">0b100_0000</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>b = NonZeroI8::new(<span class=\"number\">0b100_0011</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(a.count_ones(), one);\n<span class=\"macro\">assert_eq!</span>(b.count_ones(), three);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MIN\" class=\"constant\">MIN</a>: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt; = _</h4></section></summary><div class=\"docblock\"><p>The smallest value that can be represented by this non-zero\ninteger type,\nequal to <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html#associatedconstant.MIN\" title=\"associated constant i8::MIN\"><code>i8::MIN</code></a>.</p>\n<p>Note: While most integer types are defined for every whole\nnumber between <code>MIN</code> and <code>MAX</code>, signed non-zero integers are\na special case. They have a “gap” at 0.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroI8::MIN.get(), i8::MIN);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt; = _</h4></section></summary><div class=\"docblock\"><p>The largest value that can be represented by this non-zero\ninteger type,\nequal to <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html#associatedconstant.MAX\" title=\"associated constant i8::MAX\"><code>i8::MAX</code></a>.</p>\n<p>Note: While most integer types are defined for every whole\nnumber between <code>MIN</code> and <code>MAX</code>, signed non-zero integers are\na special case. They have a “gap” at 0.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroI8::MAX.get(), i8::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.abs\" class=\"fn\">abs</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Computes the absolute value of self.\nSee <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html#method.abs\" title=\"method i8::abs\"><code>i8::abs</code></a>\nfor documentation on overflow behaviour.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos = NonZeroI8::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg = NonZeroI8::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos, pos.abs());\n<span class=\"macro\">assert_eq!</span>(pos, neg.abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_abs\" class=\"fn\">checked_abs</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked absolute value.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if\n<code>self == NonZeroI8::MIN</code>.\nThe result cannot be zero.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos = NonZeroI8::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg = NonZeroI8::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI8::new(i8::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(pos), neg.checked_abs());\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, min.checked_abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.overflowing_abs\" class=\"fn\">overflowing_abs</a>(self) -&gt; (<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Computes the absolute value of self,\nwith overflow information, see\n<a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html#method.overflowing_abs\" title=\"method i8::overflowing_abs\"><code>i8::overflowing_abs</code></a>.</p>\n<h5 id=\"example-2\"><a class=\"doc-anchor\" href=\"#example-2\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos = NonZeroI8::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg = NonZeroI8::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI8::new(i8::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>((pos, <span class=\"bool-val\">false</span>), pos.overflowing_abs());\n<span class=\"macro\">assert_eq!</span>((pos, <span class=\"bool-val\">false</span>), neg.overflowing_abs());\n<span class=\"macro\">assert_eq!</span>((min, <span class=\"bool-val\">true</span>), min.overflowing_abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_abs\" class=\"fn\">saturating_abs</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating absolute value, see\n<a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html#method.saturating_abs\" title=\"method i8::saturating_abs\"><code>i8::saturating_abs</code></a>.</p>\n<h5 id=\"example-3\"><a class=\"doc-anchor\" href=\"#example-3\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos = NonZeroI8::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg = NonZeroI8::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI8::new(i8::MIN)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min_plus = NonZeroI8::new(i8::MIN + <span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroI8::new(i8::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos, pos.saturating_abs());\n<span class=\"macro\">assert_eq!</span>(pos, neg.saturating_abs());\n<span class=\"macro\">assert_eq!</span>(max, min.saturating_abs());\n<span class=\"macro\">assert_eq!</span>(max, min_plus.saturating_abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.wrapping_abs\" class=\"fn\">wrapping_abs</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping absolute value, see\n<a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html#method.wrapping_abs\" title=\"method i8::wrapping_abs\"><code>i8::wrapping_abs</code></a>.</p>\n<h5 id=\"example-4\"><a class=\"doc-anchor\" href=\"#example-4\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos = NonZeroI8::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg = NonZeroI8::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI8::new(i8::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos, pos.wrapping_abs());\n<span class=\"macro\">assert_eq!</span>(pos, neg.wrapping_abs());\n<span class=\"macro\">assert_eq!</span>(min, min.wrapping_abs());\n<span class=\"macro\">assert_eq!</span>(max, (-max).wrapping_abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unsigned_abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.unsigned_abs\" class=\"fn\">unsigned_abs</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Computes the absolute value of self\nwithout any wrapping or panicking.</p>\n<h5 id=\"example-5\"><a class=\"doc-anchor\" href=\"#example-5\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"kw\">let </span>u_pos = NonZeroU8::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>i_pos = NonZeroI8::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>i_neg = NonZeroI8::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>i_min = NonZeroI8::new(i8::MIN)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>u_max = NonZeroU8::new(u8::MAX / <span class=\"number\">2 </span>+ <span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(u_pos, i_pos.unsigned_abs());\n<span class=\"macro\">assert_eq!</span>(u_pos, i_neg.unsigned_abs());\n<span class=\"macro\">assert_eq!</span>(u_max, i_min.unsigned_abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_positive\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.is_positive\" class=\"fn\">is_positive</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if <code>self</code> is positive and <code>false</code> if the\nnumber is negative.</p>\n<h5 id=\"example-6\"><a class=\"doc-anchor\" href=\"#example-6\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI8::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI8::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert!</span>(pos_five.is_positive());\n<span class=\"macro\">assert!</span>(!neg_five.is_positive());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_negative\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.is_negative\" class=\"fn\">is_negative</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if <code>self</code> is negative and <code>false</code> if the\nnumber is positive.</p>\n<h5 id=\"example-7\"><a class=\"doc-anchor\" href=\"#example-7\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI8::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI8::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert!</span>(neg_five.is_negative());\n<span class=\"macro\">assert!</span>(!pos_five.is_negative());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_neg\" class=\"fn\">checked_neg</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked negation. Computes <code>-self</code>,\nreturning <code>None</code> if <code>self == NonZeroI8::MIN</code>.</p>\n<h5 id=\"example-8\"><a class=\"doc-anchor\" href=\"#example-8\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI8::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI8::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI8::new(i8::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos_five.checked_neg(), <span class=\"prelude-val\">Some</span>(neg_five));\n<span class=\"macro\">assert_eq!</span>(min.checked_neg(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.overflowing_neg\" class=\"fn\">overflowing_neg</a>(self) -&gt; (<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Negates self, overflowing if this is equal to the minimum value.</p>\n<p>See <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html#method.overflowing_neg\" title=\"method i8::overflowing_neg\"><code>i8::overflowing_neg</code></a>\nfor documentation on overflow behaviour.</p>\n<h5 id=\"example-9\"><a class=\"doc-anchor\" href=\"#example-9\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI8::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI8::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI8::new(i8::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos_five.overflowing_neg(), (neg_five, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(min.overflowing_neg(), (min, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_neg\" class=\"fn\">saturating_neg</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating negation. Computes <code>-self</code>,\nreturning <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroI8::MAX</code></a>\nif <code>self == NonZeroI8::MIN</code>\ninstead of overflowing.</p>\n<h5 id=\"example-10\"><a class=\"doc-anchor\" href=\"#example-10\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI8::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI8::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI8::new(i8::MIN)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min_plus_one = NonZeroI8::new(i8::MIN + <span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroI8::new(i8::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos_five.saturating_neg(), neg_five);\n<span class=\"macro\">assert_eq!</span>(min.saturating_neg(), max);\n<span class=\"macro\">assert_eq!</span>(max.saturating_neg(), min_plus_one);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.wrapping_neg\" class=\"fn\">wrapping_neg</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) negation. Computes <code>-self</code>, wrapping around at the boundary\nof the type.</p>\n<p>See <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html#method.wrapping_neg\" title=\"method i8::wrapping_neg\"><code>i8::wrapping_neg</code></a>\nfor documentation on overflow behaviour.</p>\n<h5 id=\"example-11\"><a class=\"doc-anchor\" href=\"#example-11\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI8::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI8::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI8::new(i8::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos_five.wrapping_neg(), neg_five);\n<span class=\"macro\">assert_eq!</span>(min.wrapping_neg(), min);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroI8::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroI8::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroI8::new(i8::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(four), two.checked_mul(two));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, max.checked_mul(two));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_mul\" class=\"fn\">saturating_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together.\nReturn <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroI8::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroI8::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroI8::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroI8::new(i8::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(four, two.saturating_mul(two));\n<span class=\"macro\">assert_eq!</span>(max, four.saturating_mul(max));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_mul\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.unchecked_mul\" class=\"fn\">unchecked_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together,\nassuming overflow cannot occur.\nOverflow is unchecked, and it is undefined behaviour to overflow\n<em>even if the result would wrap to a non-zero value</em>.\nThe behaviour is undefined as soon as\n<code>self * rhs &gt; i8::MAX</code>, or <code>self * rhs &lt; i8::MIN</code>.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(nonzero_ops)]\n\n</span><span class=\"kw\">let </span>two = NonZeroI8::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroI8::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(four, <span class=\"kw\">unsafe </span>{ two.unchecked_mul(two) });</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_pow\" class=\"fn\">checked_pow</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Raises non-zero value to an integer power.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>three = NonZeroI8::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>twenty_seven = NonZeroI8::new(<span class=\"number\">27</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>half_max = NonZeroI8::new(i8::MAX / <span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(twenty_seven), three.checked_pow(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, half_max.checked_pow(<span class=\"number\">3</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_pow\" class=\"fn\">saturating_pow</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Raise non-zero value to an integer power.\nReturn <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MIN\" title=\"associated constant sp_std::num::NonZero::MIN\"><code>NonZeroI8::MIN</code></a> or <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroI8::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-10\"><a class=\"doc-anchor\" href=\"#examples-10\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>three = NonZeroI8::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>twenty_seven = NonZeroI8::new(<span class=\"number\">27</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroI8::new(i8::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(twenty_seven, three.saturating_pow(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(max, max.saturating_pow(<span class=\"number\">3</span>));</code></pre></div>\n</div></details></div></details>",0,"sp_std::num::NonZeroI8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NonZero%3Ci16%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#impl-NonZero%3Ci16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_unchecked\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.34.0\">const: 1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a></span><h4 class=\"code-header\">pub const unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.new_unchecked\" class=\"fn\">new_unchecked</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a non-zero without checking whether the value is non-zero.\nThis results in undefined behaviour if the value is zero.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>The value must not be zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.47.0\">const: 1.47.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.new\" class=\"fn\">new</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a non-zero if the given value is not zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.from_mut_unchecked\" class=\"fn\">from_mut_unchecked</a>(n: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>) -&gt; &amp;mut <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_from_mut</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts a primitive mutable reference to a non-zero mutable reference\nwithout checking whether the referenced value is non-zero.\nThis results in undefined behavior if <code>*n</code> is zero.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p>The referenced value must not be currently zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.from_mut\" class=\"fn\">from_mut</a>(n: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_from_mut</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts a primitive mutable reference to a non-zero mutable reference\nif the referenced integer is not zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.34.0\">const: 1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.get\" class=\"fn\">get</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a></h4></section></summary><div class=\"docblock\"><p>Returns the value as a primitive type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.BITS\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0\">1.67.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.BITS\" class=\"constant\">BITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a> = 16u32</h4></section></summary><div class=\"docblock\"><p>The size of this non-zero integer type in bits.</p>\n<p>This value is equal to <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html#associatedconstant.BITS\" title=\"associated constant i16::BITS\"><code>i16::BITS</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(NonZeroI16::BITS, i16::BITS);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0, const since 1.53.0\">1.53.0 (const: 1.53.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.leading_zeros\" class=\"fn\">leading_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of leading zeros in the binary representation of <code>self</code>.</p>\n<p>On many architectures, this function can perform better than <code>leading_zeros()</code> on the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = std::num::NonZeroI16::new(-<span class=\"number\">1i16</span>).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(n.leading_zeros(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0, const since 1.53.0\">1.53.0 (const: 1.53.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.trailing_zeros\" class=\"fn\">trailing_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of trailing zeros in the binary representation\nof <code>self</code>.</p>\n<p>On many architectures, this function can perform better than <code>trailing_zeros()</code> on the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = std::num::NonZeroI16::new(<span class=\"number\">0b0101000</span>).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(n.trailing_zeros(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_ones\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/120287\" title=\"Tracking issue for non_zero_count_ones\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.count_ones\" class=\"fn\">count_ones</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>non_zero_count_ones</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns the number of ones in the binary representation of <code>self</code>.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(non_zero_count_ones)]\n\n</span><span class=\"kw\">let </span>one = num::NonZeroU32::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>three = num::NonZeroU32::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>a = NonZeroI16::new(<span class=\"number\">0b100_0000</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>b = NonZeroI16::new(<span class=\"number\">0b100_0011</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(a.count_ones(), one);\n<span class=\"macro\">assert_eq!</span>(b.count_ones(), three);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MIN\" class=\"constant\">MIN</a>: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt; = _</h4></section></summary><div class=\"docblock\"><p>The smallest value that can be represented by this non-zero\ninteger type,\nequal to <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html#associatedconstant.MIN\" title=\"associated constant i16::MIN\"><code>i16::MIN</code></a>.</p>\n<p>Note: While most integer types are defined for every whole\nnumber between <code>MIN</code> and <code>MAX</code>, signed non-zero integers are\na special case. They have a “gap” at 0.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroI16::MIN.get(), i16::MIN);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt; = _</h4></section></summary><div class=\"docblock\"><p>The largest value that can be represented by this non-zero\ninteger type,\nequal to <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html#associatedconstant.MAX\" title=\"associated constant i16::MAX\"><code>i16::MAX</code></a>.</p>\n<p>Note: While most integer types are defined for every whole\nnumber between <code>MIN</code> and <code>MAX</code>, signed non-zero integers are\na special case. They have a “gap” at 0.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroI16::MAX.get(), i16::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.abs\" class=\"fn\">abs</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Computes the absolute value of self.\nSee <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html#method.abs\" title=\"method i16::abs\"><code>i16::abs</code></a>\nfor documentation on overflow behaviour.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos = NonZeroI16::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg = NonZeroI16::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos, pos.abs());\n<span class=\"macro\">assert_eq!</span>(pos, neg.abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_abs\" class=\"fn\">checked_abs</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked absolute value.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if\n<code>self == NonZeroI16::MIN</code>.\nThe result cannot be zero.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos = NonZeroI16::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg = NonZeroI16::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI16::new(i16::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(pos), neg.checked_abs());\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, min.checked_abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.overflowing_abs\" class=\"fn\">overflowing_abs</a>(self) -&gt; (<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Computes the absolute value of self,\nwith overflow information, see\n<a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html#method.overflowing_abs\" title=\"method i16::overflowing_abs\"><code>i16::overflowing_abs</code></a>.</p>\n<h5 id=\"example-2\"><a class=\"doc-anchor\" href=\"#example-2\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos = NonZeroI16::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg = NonZeroI16::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI16::new(i16::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>((pos, <span class=\"bool-val\">false</span>), pos.overflowing_abs());\n<span class=\"macro\">assert_eq!</span>((pos, <span class=\"bool-val\">false</span>), neg.overflowing_abs());\n<span class=\"macro\">assert_eq!</span>((min, <span class=\"bool-val\">true</span>), min.overflowing_abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_abs\" class=\"fn\">saturating_abs</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating absolute value, see\n<a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html#method.saturating_abs\" title=\"method i16::saturating_abs\"><code>i16::saturating_abs</code></a>.</p>\n<h5 id=\"example-3\"><a class=\"doc-anchor\" href=\"#example-3\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos = NonZeroI16::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg = NonZeroI16::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI16::new(i16::MIN)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min_plus = NonZeroI16::new(i16::MIN + <span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroI16::new(i16::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos, pos.saturating_abs());\n<span class=\"macro\">assert_eq!</span>(pos, neg.saturating_abs());\n<span class=\"macro\">assert_eq!</span>(max, min.saturating_abs());\n<span class=\"macro\">assert_eq!</span>(max, min_plus.saturating_abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.wrapping_abs\" class=\"fn\">wrapping_abs</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping absolute value, see\n<a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html#method.wrapping_abs\" title=\"method i16::wrapping_abs\"><code>i16::wrapping_abs</code></a>.</p>\n<h5 id=\"example-4\"><a class=\"doc-anchor\" href=\"#example-4\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos = NonZeroI16::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg = NonZeroI16::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI16::new(i16::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos, pos.wrapping_abs());\n<span class=\"macro\">assert_eq!</span>(pos, neg.wrapping_abs());\n<span class=\"macro\">assert_eq!</span>(min, min.wrapping_abs());\n<span class=\"macro\">assert_eq!</span>(max, (-max).wrapping_abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unsigned_abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.unsigned_abs\" class=\"fn\">unsigned_abs</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Computes the absolute value of self\nwithout any wrapping or panicking.</p>\n<h5 id=\"example-5\"><a class=\"doc-anchor\" href=\"#example-5\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"kw\">let </span>u_pos = NonZeroU16::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>i_pos = NonZeroI16::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>i_neg = NonZeroI16::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>i_min = NonZeroI16::new(i16::MIN)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>u_max = NonZeroU16::new(u16::MAX / <span class=\"number\">2 </span>+ <span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(u_pos, i_pos.unsigned_abs());\n<span class=\"macro\">assert_eq!</span>(u_pos, i_neg.unsigned_abs());\n<span class=\"macro\">assert_eq!</span>(u_max, i_min.unsigned_abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_positive\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.is_positive\" class=\"fn\">is_positive</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if <code>self</code> is positive and <code>false</code> if the\nnumber is negative.</p>\n<h5 id=\"example-6\"><a class=\"doc-anchor\" href=\"#example-6\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI16::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI16::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert!</span>(pos_five.is_positive());\n<span class=\"macro\">assert!</span>(!neg_five.is_positive());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_negative\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.is_negative\" class=\"fn\">is_negative</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if <code>self</code> is negative and <code>false</code> if the\nnumber is positive.</p>\n<h5 id=\"example-7\"><a class=\"doc-anchor\" href=\"#example-7\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI16::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI16::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert!</span>(neg_five.is_negative());\n<span class=\"macro\">assert!</span>(!pos_five.is_negative());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_neg\" class=\"fn\">checked_neg</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked negation. Computes <code>-self</code>,\nreturning <code>None</code> if <code>self == NonZeroI16::MIN</code>.</p>\n<h5 id=\"example-8\"><a class=\"doc-anchor\" href=\"#example-8\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI16::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI16::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI16::new(i16::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos_five.checked_neg(), <span class=\"prelude-val\">Some</span>(neg_five));\n<span class=\"macro\">assert_eq!</span>(min.checked_neg(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.overflowing_neg\" class=\"fn\">overflowing_neg</a>(self) -&gt; (<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Negates self, overflowing if this is equal to the minimum value.</p>\n<p>See <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html#method.overflowing_neg\" title=\"method i16::overflowing_neg\"><code>i16::overflowing_neg</code></a>\nfor documentation on overflow behaviour.</p>\n<h5 id=\"example-9\"><a class=\"doc-anchor\" href=\"#example-9\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI16::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI16::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI16::new(i16::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos_five.overflowing_neg(), (neg_five, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(min.overflowing_neg(), (min, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_neg\" class=\"fn\">saturating_neg</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating negation. Computes <code>-self</code>,\nreturning <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroI16::MAX</code></a>\nif <code>self == NonZeroI16::MIN</code>\ninstead of overflowing.</p>\n<h5 id=\"example-10\"><a class=\"doc-anchor\" href=\"#example-10\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI16::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI16::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI16::new(i16::MIN)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min_plus_one = NonZeroI16::new(i16::MIN + <span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroI16::new(i16::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos_five.saturating_neg(), neg_five);\n<span class=\"macro\">assert_eq!</span>(min.saturating_neg(), max);\n<span class=\"macro\">assert_eq!</span>(max.saturating_neg(), min_plus_one);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.wrapping_neg\" class=\"fn\">wrapping_neg</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) negation. Computes <code>-self</code>, wrapping around at the boundary\nof the type.</p>\n<p>See <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html#method.wrapping_neg\" title=\"method i16::wrapping_neg\"><code>i16::wrapping_neg</code></a>\nfor documentation on overflow behaviour.</p>\n<h5 id=\"example-11\"><a class=\"doc-anchor\" href=\"#example-11\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI16::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI16::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI16::new(i16::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos_five.wrapping_neg(), neg_five);\n<span class=\"macro\">assert_eq!</span>(min.wrapping_neg(), min);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroI16::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroI16::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroI16::new(i16::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(four), two.checked_mul(two));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, max.checked_mul(two));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_mul\" class=\"fn\">saturating_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together.\nReturn <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroI16::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroI16::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroI16::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroI16::new(i16::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(four, two.saturating_mul(two));\n<span class=\"macro\">assert_eq!</span>(max, four.saturating_mul(max));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_mul\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.unchecked_mul\" class=\"fn\">unchecked_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together,\nassuming overflow cannot occur.\nOverflow is unchecked, and it is undefined behaviour to overflow\n<em>even if the result would wrap to a non-zero value</em>.\nThe behaviour is undefined as soon as\n<code>self * rhs &gt; i16::MAX</code>, or <code>self * rhs &lt; i16::MIN</code>.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(nonzero_ops)]\n\n</span><span class=\"kw\">let </span>two = NonZeroI16::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroI16::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(four, <span class=\"kw\">unsafe </span>{ two.unchecked_mul(two) });</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_pow\" class=\"fn\">checked_pow</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Raises non-zero value to an integer power.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>three = NonZeroI16::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>twenty_seven = NonZeroI16::new(<span class=\"number\">27</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>half_max = NonZeroI16::new(i16::MAX / <span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(twenty_seven), three.checked_pow(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, half_max.checked_pow(<span class=\"number\">3</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_pow\" class=\"fn\">saturating_pow</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Raise non-zero value to an integer power.\nReturn <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MIN\" title=\"associated constant sp_std::num::NonZero::MIN\"><code>NonZeroI16::MIN</code></a> or <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroI16::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-10\"><a class=\"doc-anchor\" href=\"#examples-10\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>three = NonZeroI16::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>twenty_seven = NonZeroI16::new(<span class=\"number\">27</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroI16::new(i16::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(twenty_seven, three.saturating_pow(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(max, max.saturating_pow(<span class=\"number\">3</span>));</code></pre></div>\n</div></details></div></details>",0,"sp_std::num::NonZeroI16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NonZero%3Ci32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#impl-NonZero%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_unchecked\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.34.0\">const: 1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a></span><h4 class=\"code-header\">pub const unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.new_unchecked\" class=\"fn\">new_unchecked</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a non-zero without checking whether the value is non-zero.\nThis results in undefined behaviour if the value is zero.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>The value must not be zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.47.0\">const: 1.47.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.new\" class=\"fn\">new</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a non-zero if the given value is not zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.from_mut_unchecked\" class=\"fn\">from_mut_unchecked</a>(n: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>) -&gt; &amp;mut <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_from_mut</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts a primitive mutable reference to a non-zero mutable reference\nwithout checking whether the referenced value is non-zero.\nThis results in undefined behavior if <code>*n</code> is zero.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p>The referenced value must not be currently zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.from_mut\" class=\"fn\">from_mut</a>(n: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_from_mut</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts a primitive mutable reference to a non-zero mutable reference\nif the referenced integer is not zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.34.0\">const: 1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.get\" class=\"fn\">get</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a></h4></section></summary><div class=\"docblock\"><p>Returns the value as a primitive type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.BITS\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0\">1.67.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.BITS\" class=\"constant\">BITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a> = 32u32</h4></section></summary><div class=\"docblock\"><p>The size of this non-zero integer type in bits.</p>\n<p>This value is equal to <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html#associatedconstant.BITS\" title=\"associated constant i32::BITS\"><code>i32::BITS</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(NonZeroI32::BITS, i32::BITS);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0, const since 1.53.0\">1.53.0 (const: 1.53.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.leading_zeros\" class=\"fn\">leading_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of leading zeros in the binary representation of <code>self</code>.</p>\n<p>On many architectures, this function can perform better than <code>leading_zeros()</code> on the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = std::num::NonZeroI32::new(-<span class=\"number\">1i32</span>).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(n.leading_zeros(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0, const since 1.53.0\">1.53.0 (const: 1.53.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.trailing_zeros\" class=\"fn\">trailing_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of trailing zeros in the binary representation\nof <code>self</code>.</p>\n<p>On many architectures, this function can perform better than <code>trailing_zeros()</code> on the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = std::num::NonZeroI32::new(<span class=\"number\">0b0101000</span>).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(n.trailing_zeros(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_ones\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/120287\" title=\"Tracking issue for non_zero_count_ones\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.count_ones\" class=\"fn\">count_ones</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>non_zero_count_ones</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns the number of ones in the binary representation of <code>self</code>.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(non_zero_count_ones)]\n\n</span><span class=\"kw\">let </span>one = num::NonZeroU32::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>three = num::NonZeroU32::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>a = NonZeroI32::new(<span class=\"number\">0b100_0000</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>b = NonZeroI32::new(<span class=\"number\">0b100_0011</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(a.count_ones(), one);\n<span class=\"macro\">assert_eq!</span>(b.count_ones(), three);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MIN\" class=\"constant\">MIN</a>: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt; = _</h4></section></summary><div class=\"docblock\"><p>The smallest value that can be represented by this non-zero\ninteger type,\nequal to <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html#associatedconstant.MIN\" title=\"associated constant i32::MIN\"><code>i32::MIN</code></a>.</p>\n<p>Note: While most integer types are defined for every whole\nnumber between <code>MIN</code> and <code>MAX</code>, signed non-zero integers are\na special case. They have a “gap” at 0.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroI32::MIN.get(), i32::MIN);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt; = _</h4></section></summary><div class=\"docblock\"><p>The largest value that can be represented by this non-zero\ninteger type,\nequal to <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html#associatedconstant.MAX\" title=\"associated constant i32::MAX\"><code>i32::MAX</code></a>.</p>\n<p>Note: While most integer types are defined for every whole\nnumber between <code>MIN</code> and <code>MAX</code>, signed non-zero integers are\na special case. They have a “gap” at 0.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroI32::MAX.get(), i32::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.abs\" class=\"fn\">abs</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Computes the absolute value of self.\nSee <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html#method.abs\" title=\"method i32::abs\"><code>i32::abs</code></a>\nfor documentation on overflow behaviour.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos = NonZeroI32::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg = NonZeroI32::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos, pos.abs());\n<span class=\"macro\">assert_eq!</span>(pos, neg.abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_abs\" class=\"fn\">checked_abs</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked absolute value.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if\n<code>self == NonZeroI32::MIN</code>.\nThe result cannot be zero.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos = NonZeroI32::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg = NonZeroI32::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI32::new(i32::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(pos), neg.checked_abs());\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, min.checked_abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.overflowing_abs\" class=\"fn\">overflowing_abs</a>(self) -&gt; (<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Computes the absolute value of self,\nwith overflow information, see\n<a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html#method.overflowing_abs\" title=\"method i32::overflowing_abs\"><code>i32::overflowing_abs</code></a>.</p>\n<h5 id=\"example-2\"><a class=\"doc-anchor\" href=\"#example-2\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos = NonZeroI32::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg = NonZeroI32::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI32::new(i32::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>((pos, <span class=\"bool-val\">false</span>), pos.overflowing_abs());\n<span class=\"macro\">assert_eq!</span>((pos, <span class=\"bool-val\">false</span>), neg.overflowing_abs());\n<span class=\"macro\">assert_eq!</span>((min, <span class=\"bool-val\">true</span>), min.overflowing_abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_abs\" class=\"fn\">saturating_abs</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating absolute value, see\n<a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html#method.saturating_abs\" title=\"method i32::saturating_abs\"><code>i32::saturating_abs</code></a>.</p>\n<h5 id=\"example-3\"><a class=\"doc-anchor\" href=\"#example-3\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos = NonZeroI32::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg = NonZeroI32::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI32::new(i32::MIN)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min_plus = NonZeroI32::new(i32::MIN + <span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroI32::new(i32::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos, pos.saturating_abs());\n<span class=\"macro\">assert_eq!</span>(pos, neg.saturating_abs());\n<span class=\"macro\">assert_eq!</span>(max, min.saturating_abs());\n<span class=\"macro\">assert_eq!</span>(max, min_plus.saturating_abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.wrapping_abs\" class=\"fn\">wrapping_abs</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping absolute value, see\n<a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html#method.wrapping_abs\" title=\"method i32::wrapping_abs\"><code>i32::wrapping_abs</code></a>.</p>\n<h5 id=\"example-4\"><a class=\"doc-anchor\" href=\"#example-4\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos = NonZeroI32::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg = NonZeroI32::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI32::new(i32::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos, pos.wrapping_abs());\n<span class=\"macro\">assert_eq!</span>(pos, neg.wrapping_abs());\n<span class=\"macro\">assert_eq!</span>(min, min.wrapping_abs());\n<span class=\"macro\">assert_eq!</span>(max, (-max).wrapping_abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unsigned_abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.unsigned_abs\" class=\"fn\">unsigned_abs</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Computes the absolute value of self\nwithout any wrapping or panicking.</p>\n<h5 id=\"example-5\"><a class=\"doc-anchor\" href=\"#example-5\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"kw\">let </span>u_pos = NonZeroU32::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>i_pos = NonZeroI32::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>i_neg = NonZeroI32::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>i_min = NonZeroI32::new(i32::MIN)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>u_max = NonZeroU32::new(u32::MAX / <span class=\"number\">2 </span>+ <span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(u_pos, i_pos.unsigned_abs());\n<span class=\"macro\">assert_eq!</span>(u_pos, i_neg.unsigned_abs());\n<span class=\"macro\">assert_eq!</span>(u_max, i_min.unsigned_abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_positive\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.is_positive\" class=\"fn\">is_positive</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if <code>self</code> is positive and <code>false</code> if the\nnumber is negative.</p>\n<h5 id=\"example-6\"><a class=\"doc-anchor\" href=\"#example-6\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI32::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI32::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert!</span>(pos_five.is_positive());\n<span class=\"macro\">assert!</span>(!neg_five.is_positive());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_negative\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.is_negative\" class=\"fn\">is_negative</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if <code>self</code> is negative and <code>false</code> if the\nnumber is positive.</p>\n<h5 id=\"example-7\"><a class=\"doc-anchor\" href=\"#example-7\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI32::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI32::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert!</span>(neg_five.is_negative());\n<span class=\"macro\">assert!</span>(!pos_five.is_negative());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_neg\" class=\"fn\">checked_neg</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked negation. Computes <code>-self</code>,\nreturning <code>None</code> if <code>self == NonZeroI32::MIN</code>.</p>\n<h5 id=\"example-8\"><a class=\"doc-anchor\" href=\"#example-8\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI32::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI32::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI32::new(i32::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos_five.checked_neg(), <span class=\"prelude-val\">Some</span>(neg_five));\n<span class=\"macro\">assert_eq!</span>(min.checked_neg(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.overflowing_neg\" class=\"fn\">overflowing_neg</a>(self) -&gt; (<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Negates self, overflowing if this is equal to the minimum value.</p>\n<p>See <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html#method.overflowing_neg\" title=\"method i32::overflowing_neg\"><code>i32::overflowing_neg</code></a>\nfor documentation on overflow behaviour.</p>\n<h5 id=\"example-9\"><a class=\"doc-anchor\" href=\"#example-9\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI32::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI32::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI32::new(i32::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos_five.overflowing_neg(), (neg_five, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(min.overflowing_neg(), (min, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_neg\" class=\"fn\">saturating_neg</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating negation. Computes <code>-self</code>,\nreturning <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroI32::MAX</code></a>\nif <code>self == NonZeroI32::MIN</code>\ninstead of overflowing.</p>\n<h5 id=\"example-10\"><a class=\"doc-anchor\" href=\"#example-10\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI32::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI32::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI32::new(i32::MIN)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min_plus_one = NonZeroI32::new(i32::MIN + <span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroI32::new(i32::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos_five.saturating_neg(), neg_five);\n<span class=\"macro\">assert_eq!</span>(min.saturating_neg(), max);\n<span class=\"macro\">assert_eq!</span>(max.saturating_neg(), min_plus_one);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.wrapping_neg\" class=\"fn\">wrapping_neg</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) negation. Computes <code>-self</code>, wrapping around at the boundary\nof the type.</p>\n<p>See <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html#method.wrapping_neg\" title=\"method i32::wrapping_neg\"><code>i32::wrapping_neg</code></a>\nfor documentation on overflow behaviour.</p>\n<h5 id=\"example-11\"><a class=\"doc-anchor\" href=\"#example-11\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI32::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI32::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI32::new(i32::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos_five.wrapping_neg(), neg_five);\n<span class=\"macro\">assert_eq!</span>(min.wrapping_neg(), min);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroI32::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroI32::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroI32::new(i32::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(four), two.checked_mul(two));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, max.checked_mul(two));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_mul\" class=\"fn\">saturating_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together.\nReturn <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroI32::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroI32::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroI32::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroI32::new(i32::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(four, two.saturating_mul(two));\n<span class=\"macro\">assert_eq!</span>(max, four.saturating_mul(max));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_mul\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.unchecked_mul\" class=\"fn\">unchecked_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together,\nassuming overflow cannot occur.\nOverflow is unchecked, and it is undefined behaviour to overflow\n<em>even if the result would wrap to a non-zero value</em>.\nThe behaviour is undefined as soon as\n<code>self * rhs &gt; i32::MAX</code>, or <code>self * rhs &lt; i32::MIN</code>.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(nonzero_ops)]\n\n</span><span class=\"kw\">let </span>two = NonZeroI32::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroI32::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(four, <span class=\"kw\">unsafe </span>{ two.unchecked_mul(two) });</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_pow\" class=\"fn\">checked_pow</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Raises non-zero value to an integer power.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>three = NonZeroI32::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>twenty_seven = NonZeroI32::new(<span class=\"number\">27</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>half_max = NonZeroI32::new(i32::MAX / <span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(twenty_seven), three.checked_pow(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, half_max.checked_pow(<span class=\"number\">3</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_pow\" class=\"fn\">saturating_pow</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Raise non-zero value to an integer power.\nReturn <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MIN\" title=\"associated constant sp_std::num::NonZero::MIN\"><code>NonZeroI32::MIN</code></a> or <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroI32::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-10\"><a class=\"doc-anchor\" href=\"#examples-10\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>three = NonZeroI32::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>twenty_seven = NonZeroI32::new(<span class=\"number\">27</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroI32::new(i32::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(twenty_seven, three.saturating_pow(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(max, max.saturating_pow(<span class=\"number\">3</span>));</code></pre></div>\n</div></details></div></details>",0,"sp_std::num::NonZeroI32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NonZero%3Ci64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#impl-NonZero%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_unchecked\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.34.0\">const: 1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a></span><h4 class=\"code-header\">pub const unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.new_unchecked\" class=\"fn\">new_unchecked</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a non-zero without checking whether the value is non-zero.\nThis results in undefined behaviour if the value is zero.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>The value must not be zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.47.0\">const: 1.47.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.new\" class=\"fn\">new</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a non-zero if the given value is not zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.from_mut_unchecked\" class=\"fn\">from_mut_unchecked</a>(n: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>) -&gt; &amp;mut <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_from_mut</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts a primitive mutable reference to a non-zero mutable reference\nwithout checking whether the referenced value is non-zero.\nThis results in undefined behavior if <code>*n</code> is zero.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p>The referenced value must not be currently zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.from_mut\" class=\"fn\">from_mut</a>(n: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_from_mut</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts a primitive mutable reference to a non-zero mutable reference\nif the referenced integer is not zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.34.0\">const: 1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.get\" class=\"fn\">get</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a></h4></section></summary><div class=\"docblock\"><p>Returns the value as a primitive type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.BITS\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0\">1.67.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.BITS\" class=\"constant\">BITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a> = 64u32</h4></section></summary><div class=\"docblock\"><p>The size of this non-zero integer type in bits.</p>\n<p>This value is equal to <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html#associatedconstant.BITS\" title=\"associated constant i64::BITS\"><code>i64::BITS</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(NonZeroI64::BITS, i64::BITS);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0, const since 1.53.0\">1.53.0 (const: 1.53.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.leading_zeros\" class=\"fn\">leading_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of leading zeros in the binary representation of <code>self</code>.</p>\n<p>On many architectures, this function can perform better than <code>leading_zeros()</code> on the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = std::num::NonZeroI64::new(-<span class=\"number\">1i64</span>).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(n.leading_zeros(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0, const since 1.53.0\">1.53.0 (const: 1.53.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.trailing_zeros\" class=\"fn\">trailing_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of trailing zeros in the binary representation\nof <code>self</code>.</p>\n<p>On many architectures, this function can perform better than <code>trailing_zeros()</code> on the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = std::num::NonZeroI64::new(<span class=\"number\">0b0101000</span>).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(n.trailing_zeros(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_ones\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/120287\" title=\"Tracking issue for non_zero_count_ones\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.count_ones\" class=\"fn\">count_ones</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>non_zero_count_ones</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns the number of ones in the binary representation of <code>self</code>.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(non_zero_count_ones)]\n\n</span><span class=\"kw\">let </span>one = num::NonZeroU32::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>three = num::NonZeroU32::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>a = NonZeroI64::new(<span class=\"number\">0b100_0000</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>b = NonZeroI64::new(<span class=\"number\">0b100_0011</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(a.count_ones(), one);\n<span class=\"macro\">assert_eq!</span>(b.count_ones(), three);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MIN\" class=\"constant\">MIN</a>: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt; = _</h4></section></summary><div class=\"docblock\"><p>The smallest value that can be represented by this non-zero\ninteger type,\nequal to <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html#associatedconstant.MIN\" title=\"associated constant i64::MIN\"><code>i64::MIN</code></a>.</p>\n<p>Note: While most integer types are defined for every whole\nnumber between <code>MIN</code> and <code>MAX</code>, signed non-zero integers are\na special case. They have a “gap” at 0.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroI64::MIN.get(), i64::MIN);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt; = _</h4></section></summary><div class=\"docblock\"><p>The largest value that can be represented by this non-zero\ninteger type,\nequal to <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html#associatedconstant.MAX\" title=\"associated constant i64::MAX\"><code>i64::MAX</code></a>.</p>\n<p>Note: While most integer types are defined for every whole\nnumber between <code>MIN</code> and <code>MAX</code>, signed non-zero integers are\na special case. They have a “gap” at 0.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroI64::MAX.get(), i64::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.abs\" class=\"fn\">abs</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Computes the absolute value of self.\nSee <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html#method.abs\" title=\"method i64::abs\"><code>i64::abs</code></a>\nfor documentation on overflow behaviour.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos = NonZeroI64::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg = NonZeroI64::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos, pos.abs());\n<span class=\"macro\">assert_eq!</span>(pos, neg.abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_abs\" class=\"fn\">checked_abs</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked absolute value.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if\n<code>self == NonZeroI64::MIN</code>.\nThe result cannot be zero.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos = NonZeroI64::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg = NonZeroI64::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI64::new(i64::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(pos), neg.checked_abs());\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, min.checked_abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.overflowing_abs\" class=\"fn\">overflowing_abs</a>(self) -&gt; (<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Computes the absolute value of self,\nwith overflow information, see\n<a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html#method.overflowing_abs\" title=\"method i64::overflowing_abs\"><code>i64::overflowing_abs</code></a>.</p>\n<h5 id=\"example-2\"><a class=\"doc-anchor\" href=\"#example-2\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos = NonZeroI64::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg = NonZeroI64::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI64::new(i64::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>((pos, <span class=\"bool-val\">false</span>), pos.overflowing_abs());\n<span class=\"macro\">assert_eq!</span>((pos, <span class=\"bool-val\">false</span>), neg.overflowing_abs());\n<span class=\"macro\">assert_eq!</span>((min, <span class=\"bool-val\">true</span>), min.overflowing_abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_abs\" class=\"fn\">saturating_abs</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating absolute value, see\n<a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html#method.saturating_abs\" title=\"method i64::saturating_abs\"><code>i64::saturating_abs</code></a>.</p>\n<h5 id=\"example-3\"><a class=\"doc-anchor\" href=\"#example-3\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos = NonZeroI64::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg = NonZeroI64::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI64::new(i64::MIN)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min_plus = NonZeroI64::new(i64::MIN + <span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroI64::new(i64::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos, pos.saturating_abs());\n<span class=\"macro\">assert_eq!</span>(pos, neg.saturating_abs());\n<span class=\"macro\">assert_eq!</span>(max, min.saturating_abs());\n<span class=\"macro\">assert_eq!</span>(max, min_plus.saturating_abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.wrapping_abs\" class=\"fn\">wrapping_abs</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping absolute value, see\n<a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html#method.wrapping_abs\" title=\"method i64::wrapping_abs\"><code>i64::wrapping_abs</code></a>.</p>\n<h5 id=\"example-4\"><a class=\"doc-anchor\" href=\"#example-4\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos = NonZeroI64::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg = NonZeroI64::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI64::new(i64::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos, pos.wrapping_abs());\n<span class=\"macro\">assert_eq!</span>(pos, neg.wrapping_abs());\n<span class=\"macro\">assert_eq!</span>(min, min.wrapping_abs());\n<span class=\"macro\">assert_eq!</span>(max, (-max).wrapping_abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unsigned_abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.unsigned_abs\" class=\"fn\">unsigned_abs</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Computes the absolute value of self\nwithout any wrapping or panicking.</p>\n<h5 id=\"example-5\"><a class=\"doc-anchor\" href=\"#example-5\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"kw\">let </span>u_pos = NonZeroU64::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>i_pos = NonZeroI64::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>i_neg = NonZeroI64::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>i_min = NonZeroI64::new(i64::MIN)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>u_max = NonZeroU64::new(u64::MAX / <span class=\"number\">2 </span>+ <span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(u_pos, i_pos.unsigned_abs());\n<span class=\"macro\">assert_eq!</span>(u_pos, i_neg.unsigned_abs());\n<span class=\"macro\">assert_eq!</span>(u_max, i_min.unsigned_abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_positive\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.is_positive\" class=\"fn\">is_positive</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if <code>self</code> is positive and <code>false</code> if the\nnumber is negative.</p>\n<h5 id=\"example-6\"><a class=\"doc-anchor\" href=\"#example-6\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI64::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI64::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert!</span>(pos_five.is_positive());\n<span class=\"macro\">assert!</span>(!neg_five.is_positive());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_negative\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.is_negative\" class=\"fn\">is_negative</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if <code>self</code> is negative and <code>false</code> if the\nnumber is positive.</p>\n<h5 id=\"example-7\"><a class=\"doc-anchor\" href=\"#example-7\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI64::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI64::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert!</span>(neg_five.is_negative());\n<span class=\"macro\">assert!</span>(!pos_five.is_negative());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_neg\" class=\"fn\">checked_neg</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked negation. Computes <code>-self</code>,\nreturning <code>None</code> if <code>self == NonZeroI64::MIN</code>.</p>\n<h5 id=\"example-8\"><a class=\"doc-anchor\" href=\"#example-8\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI64::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI64::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI64::new(i64::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos_five.checked_neg(), <span class=\"prelude-val\">Some</span>(neg_five));\n<span class=\"macro\">assert_eq!</span>(min.checked_neg(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.overflowing_neg\" class=\"fn\">overflowing_neg</a>(self) -&gt; (<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Negates self, overflowing if this is equal to the minimum value.</p>\n<p>See <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html#method.overflowing_neg\" title=\"method i64::overflowing_neg\"><code>i64::overflowing_neg</code></a>\nfor documentation on overflow behaviour.</p>\n<h5 id=\"example-9\"><a class=\"doc-anchor\" href=\"#example-9\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI64::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI64::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI64::new(i64::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos_five.overflowing_neg(), (neg_five, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(min.overflowing_neg(), (min, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_neg\" class=\"fn\">saturating_neg</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating negation. Computes <code>-self</code>,\nreturning <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroI64::MAX</code></a>\nif <code>self == NonZeroI64::MIN</code>\ninstead of overflowing.</p>\n<h5 id=\"example-10\"><a class=\"doc-anchor\" href=\"#example-10\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI64::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI64::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI64::new(i64::MIN)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min_plus_one = NonZeroI64::new(i64::MIN + <span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroI64::new(i64::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos_five.saturating_neg(), neg_five);\n<span class=\"macro\">assert_eq!</span>(min.saturating_neg(), max);\n<span class=\"macro\">assert_eq!</span>(max.saturating_neg(), min_plus_one);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.wrapping_neg\" class=\"fn\">wrapping_neg</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) negation. Computes <code>-self</code>, wrapping around at the boundary\nof the type.</p>\n<p>See <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html#method.wrapping_neg\" title=\"method i64::wrapping_neg\"><code>i64::wrapping_neg</code></a>\nfor documentation on overflow behaviour.</p>\n<h5 id=\"example-11\"><a class=\"doc-anchor\" href=\"#example-11\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI64::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI64::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI64::new(i64::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos_five.wrapping_neg(), neg_five);\n<span class=\"macro\">assert_eq!</span>(min.wrapping_neg(), min);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroI64::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroI64::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroI64::new(i64::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(four), two.checked_mul(two));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, max.checked_mul(two));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_mul\" class=\"fn\">saturating_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together.\nReturn <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroI64::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroI64::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroI64::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroI64::new(i64::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(four, two.saturating_mul(two));\n<span class=\"macro\">assert_eq!</span>(max, four.saturating_mul(max));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_mul\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.unchecked_mul\" class=\"fn\">unchecked_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together,\nassuming overflow cannot occur.\nOverflow is unchecked, and it is undefined behaviour to overflow\n<em>even if the result would wrap to a non-zero value</em>.\nThe behaviour is undefined as soon as\n<code>self * rhs &gt; i64::MAX</code>, or <code>self * rhs &lt; i64::MIN</code>.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(nonzero_ops)]\n\n</span><span class=\"kw\">let </span>two = NonZeroI64::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroI64::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(four, <span class=\"kw\">unsafe </span>{ two.unchecked_mul(two) });</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_pow\" class=\"fn\">checked_pow</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Raises non-zero value to an integer power.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>three = NonZeroI64::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>twenty_seven = NonZeroI64::new(<span class=\"number\">27</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>half_max = NonZeroI64::new(i64::MAX / <span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(twenty_seven), three.checked_pow(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, half_max.checked_pow(<span class=\"number\">3</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_pow\" class=\"fn\">saturating_pow</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Raise non-zero value to an integer power.\nReturn <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MIN\" title=\"associated constant sp_std::num::NonZero::MIN\"><code>NonZeroI64::MIN</code></a> or <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroI64::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-10\"><a class=\"doc-anchor\" href=\"#examples-10\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>three = NonZeroI64::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>twenty_seven = NonZeroI64::new(<span class=\"number\">27</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroI64::new(i64::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(twenty_seven, three.saturating_pow(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(max, max.saturating_pow(<span class=\"number\">3</span>));</code></pre></div>\n</div></details></div></details>",0,"sp_std::num::NonZeroI64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NonZero%3Ci128%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#impl-NonZero%3Ci128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_unchecked\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.34.0\">const: 1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a></span><h4 class=\"code-header\">pub const unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.new_unchecked\" class=\"fn\">new_unchecked</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a non-zero without checking whether the value is non-zero.\nThis results in undefined behaviour if the value is zero.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>The value must not be zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.47.0\">const: 1.47.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.new\" class=\"fn\">new</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a non-zero if the given value is not zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.from_mut_unchecked\" class=\"fn\">from_mut_unchecked</a>(n: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>) -&gt; &amp;mut <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_from_mut</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts a primitive mutable reference to a non-zero mutable reference\nwithout checking whether the referenced value is non-zero.\nThis results in undefined behavior if <code>*n</code> is zero.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p>The referenced value must not be currently zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.from_mut\" class=\"fn\">from_mut</a>(n: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_from_mut</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts a primitive mutable reference to a non-zero mutable reference\nif the referenced integer is not zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.34.0\">const: 1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.get\" class=\"fn\">get</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a></h4></section></summary><div class=\"docblock\"><p>Returns the value as a primitive type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.BITS\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0\">1.67.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.BITS\" class=\"constant\">BITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a> = 128u32</h4></section></summary><div class=\"docblock\"><p>The size of this non-zero integer type in bits.</p>\n<p>This value is equal to <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html#associatedconstant.BITS\" title=\"associated constant i128::BITS\"><code>i128::BITS</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(NonZeroI128::BITS, i128::BITS);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0, const since 1.53.0\">1.53.0 (const: 1.53.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.leading_zeros\" class=\"fn\">leading_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of leading zeros in the binary representation of <code>self</code>.</p>\n<p>On many architectures, this function can perform better than <code>leading_zeros()</code> on the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = std::num::NonZeroI128::new(-<span class=\"number\">1i128</span>).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(n.leading_zeros(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0, const since 1.53.0\">1.53.0 (const: 1.53.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.trailing_zeros\" class=\"fn\">trailing_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of trailing zeros in the binary representation\nof <code>self</code>.</p>\n<p>On many architectures, this function can perform better than <code>trailing_zeros()</code> on the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = std::num::NonZeroI128::new(<span class=\"number\">0b0101000</span>).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(n.trailing_zeros(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_ones\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/120287\" title=\"Tracking issue for non_zero_count_ones\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.count_ones\" class=\"fn\">count_ones</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>non_zero_count_ones</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns the number of ones in the binary representation of <code>self</code>.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(non_zero_count_ones)]\n\n</span><span class=\"kw\">let </span>one = num::NonZeroU32::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>three = num::NonZeroU32::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>a = NonZeroI128::new(<span class=\"number\">0b100_0000</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>b = NonZeroI128::new(<span class=\"number\">0b100_0011</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(a.count_ones(), one);\n<span class=\"macro\">assert_eq!</span>(b.count_ones(), three);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MIN\" class=\"constant\">MIN</a>: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt; = _</h4></section></summary><div class=\"docblock\"><p>The smallest value that can be represented by this non-zero\ninteger type,\nequal to <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html#associatedconstant.MIN\" title=\"associated constant i128::MIN\"><code>i128::MIN</code></a>.</p>\n<p>Note: While most integer types are defined for every whole\nnumber between <code>MIN</code> and <code>MAX</code>, signed non-zero integers are\na special case. They have a “gap” at 0.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroI128::MIN.get(), i128::MIN);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt; = _</h4></section></summary><div class=\"docblock\"><p>The largest value that can be represented by this non-zero\ninteger type,\nequal to <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html#associatedconstant.MAX\" title=\"associated constant i128::MAX\"><code>i128::MAX</code></a>.</p>\n<p>Note: While most integer types are defined for every whole\nnumber between <code>MIN</code> and <code>MAX</code>, signed non-zero integers are\na special case. They have a “gap” at 0.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroI128::MAX.get(), i128::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.abs\" class=\"fn\">abs</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Computes the absolute value of self.\nSee <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html#method.abs\" title=\"method i128::abs\"><code>i128::abs</code></a>\nfor documentation on overflow behaviour.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos = NonZeroI128::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg = NonZeroI128::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos, pos.abs());\n<span class=\"macro\">assert_eq!</span>(pos, neg.abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_abs\" class=\"fn\">checked_abs</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked absolute value.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if\n<code>self == NonZeroI128::MIN</code>.\nThe result cannot be zero.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos = NonZeroI128::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg = NonZeroI128::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI128::new(i128::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(pos), neg.checked_abs());\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, min.checked_abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.overflowing_abs\" class=\"fn\">overflowing_abs</a>(self) -&gt; (<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Computes the absolute value of self,\nwith overflow information, see\n<a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html#method.overflowing_abs\" title=\"method i128::overflowing_abs\"><code>i128::overflowing_abs</code></a>.</p>\n<h5 id=\"example-2\"><a class=\"doc-anchor\" href=\"#example-2\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos = NonZeroI128::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg = NonZeroI128::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI128::new(i128::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>((pos, <span class=\"bool-val\">false</span>), pos.overflowing_abs());\n<span class=\"macro\">assert_eq!</span>((pos, <span class=\"bool-val\">false</span>), neg.overflowing_abs());\n<span class=\"macro\">assert_eq!</span>((min, <span class=\"bool-val\">true</span>), min.overflowing_abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_abs\" class=\"fn\">saturating_abs</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating absolute value, see\n<a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html#method.saturating_abs\" title=\"method i128::saturating_abs\"><code>i128::saturating_abs</code></a>.</p>\n<h5 id=\"example-3\"><a class=\"doc-anchor\" href=\"#example-3\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos = NonZeroI128::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg = NonZeroI128::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI128::new(i128::MIN)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min_plus = NonZeroI128::new(i128::MIN + <span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroI128::new(i128::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos, pos.saturating_abs());\n<span class=\"macro\">assert_eq!</span>(pos, neg.saturating_abs());\n<span class=\"macro\">assert_eq!</span>(max, min.saturating_abs());\n<span class=\"macro\">assert_eq!</span>(max, min_plus.saturating_abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.wrapping_abs\" class=\"fn\">wrapping_abs</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping absolute value, see\n<a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html#method.wrapping_abs\" title=\"method i128::wrapping_abs\"><code>i128::wrapping_abs</code></a>.</p>\n<h5 id=\"example-4\"><a class=\"doc-anchor\" href=\"#example-4\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos = NonZeroI128::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg = NonZeroI128::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI128::new(i128::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos, pos.wrapping_abs());\n<span class=\"macro\">assert_eq!</span>(pos, neg.wrapping_abs());\n<span class=\"macro\">assert_eq!</span>(min, min.wrapping_abs());\n<span class=\"macro\">assert_eq!</span>(max, (-max).wrapping_abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unsigned_abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.unsigned_abs\" class=\"fn\">unsigned_abs</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Computes the absolute value of self\nwithout any wrapping or panicking.</p>\n<h5 id=\"example-5\"><a class=\"doc-anchor\" href=\"#example-5\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"kw\">let </span>u_pos = NonZeroU128::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>i_pos = NonZeroI128::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>i_neg = NonZeroI128::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>i_min = NonZeroI128::new(i128::MIN)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>u_max = NonZeroU128::new(u128::MAX / <span class=\"number\">2 </span>+ <span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(u_pos, i_pos.unsigned_abs());\n<span class=\"macro\">assert_eq!</span>(u_pos, i_neg.unsigned_abs());\n<span class=\"macro\">assert_eq!</span>(u_max, i_min.unsigned_abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_positive\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.is_positive\" class=\"fn\">is_positive</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if <code>self</code> is positive and <code>false</code> if the\nnumber is negative.</p>\n<h5 id=\"example-6\"><a class=\"doc-anchor\" href=\"#example-6\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI128::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI128::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert!</span>(pos_five.is_positive());\n<span class=\"macro\">assert!</span>(!neg_five.is_positive());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_negative\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.is_negative\" class=\"fn\">is_negative</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if <code>self</code> is negative and <code>false</code> if the\nnumber is positive.</p>\n<h5 id=\"example-7\"><a class=\"doc-anchor\" href=\"#example-7\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI128::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI128::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert!</span>(neg_five.is_negative());\n<span class=\"macro\">assert!</span>(!pos_five.is_negative());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_neg\" class=\"fn\">checked_neg</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked negation. Computes <code>-self</code>,\nreturning <code>None</code> if <code>self == NonZeroI128::MIN</code>.</p>\n<h5 id=\"example-8\"><a class=\"doc-anchor\" href=\"#example-8\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI128::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI128::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI128::new(i128::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos_five.checked_neg(), <span class=\"prelude-val\">Some</span>(neg_five));\n<span class=\"macro\">assert_eq!</span>(min.checked_neg(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.overflowing_neg\" class=\"fn\">overflowing_neg</a>(self) -&gt; (<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Negates self, overflowing if this is equal to the minimum value.</p>\n<p>See <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html#method.overflowing_neg\" title=\"method i128::overflowing_neg\"><code>i128::overflowing_neg</code></a>\nfor documentation on overflow behaviour.</p>\n<h5 id=\"example-9\"><a class=\"doc-anchor\" href=\"#example-9\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI128::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI128::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI128::new(i128::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos_five.overflowing_neg(), (neg_five, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(min.overflowing_neg(), (min, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_neg\" class=\"fn\">saturating_neg</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating negation. Computes <code>-self</code>,\nreturning <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroI128::MAX</code></a>\nif <code>self == NonZeroI128::MIN</code>\ninstead of overflowing.</p>\n<h5 id=\"example-10\"><a class=\"doc-anchor\" href=\"#example-10\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI128::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI128::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI128::new(i128::MIN)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min_plus_one = NonZeroI128::new(i128::MIN + <span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroI128::new(i128::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos_five.saturating_neg(), neg_five);\n<span class=\"macro\">assert_eq!</span>(min.saturating_neg(), max);\n<span class=\"macro\">assert_eq!</span>(max.saturating_neg(), min_plus_one);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.wrapping_neg\" class=\"fn\">wrapping_neg</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) negation. Computes <code>-self</code>, wrapping around at the boundary\nof the type.</p>\n<p>See <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html#method.wrapping_neg\" title=\"method i128::wrapping_neg\"><code>i128::wrapping_neg</code></a>\nfor documentation on overflow behaviour.</p>\n<h5 id=\"example-11\"><a class=\"doc-anchor\" href=\"#example-11\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroI128::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroI128::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroI128::new(i128::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos_five.wrapping_neg(), neg_five);\n<span class=\"macro\">assert_eq!</span>(min.wrapping_neg(), min);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroI128::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroI128::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroI128::new(i128::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(four), two.checked_mul(two));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, max.checked_mul(two));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_mul\" class=\"fn\">saturating_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together.\nReturn <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroI128::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroI128::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroI128::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroI128::new(i128::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(four, two.saturating_mul(two));\n<span class=\"macro\">assert_eq!</span>(max, four.saturating_mul(max));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_mul\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.unchecked_mul\" class=\"fn\">unchecked_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together,\nassuming overflow cannot occur.\nOverflow is unchecked, and it is undefined behaviour to overflow\n<em>even if the result would wrap to a non-zero value</em>.\nThe behaviour is undefined as soon as\n<code>self * rhs &gt; i128::MAX</code>, or <code>self * rhs &lt; i128::MIN</code>.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(nonzero_ops)]\n\n</span><span class=\"kw\">let </span>two = NonZeroI128::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroI128::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(four, <span class=\"kw\">unsafe </span>{ two.unchecked_mul(two) });</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_pow\" class=\"fn\">checked_pow</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Raises non-zero value to an integer power.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>three = NonZeroI128::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>twenty_seven = NonZeroI128::new(<span class=\"number\">27</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>half_max = NonZeroI128::new(i128::MAX / <span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(twenty_seven), three.checked_pow(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, half_max.checked_pow(<span class=\"number\">3</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_pow\" class=\"fn\">saturating_pow</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Raise non-zero value to an integer power.\nReturn <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MIN\" title=\"associated constant sp_std::num::NonZero::MIN\"><code>NonZeroI128::MIN</code></a> or <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroI128::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-10\"><a class=\"doc-anchor\" href=\"#examples-10\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>three = NonZeroI128::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>twenty_seven = NonZeroI128::new(<span class=\"number\">27</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroI128::new(i128::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(twenty_seven, three.saturating_pow(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(max, max.saturating_pow(<span class=\"number\">3</span>));</code></pre></div>\n</div></details></div></details>",0,"sp_std::num::NonZeroI128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NonZero%3Cisize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#impl-NonZero%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_unchecked\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.34.0\">const: 1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a></span><h4 class=\"code-header\">pub const unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.new_unchecked\" class=\"fn\">new_unchecked</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a non-zero without checking whether the value is non-zero.\nThis results in undefined behaviour if the value is zero.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>The value must not be zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.47.0\">const: 1.47.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.new\" class=\"fn\">new</a>(n: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a non-zero if the given value is not zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.from_mut_unchecked\" class=\"fn\">from_mut_unchecked</a>(n: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>) -&gt; &amp;mut <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_from_mut</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts a primitive mutable reference to a non-zero mutable reference\nwithout checking whether the referenced value is non-zero.\nThis results in undefined behavior if <code>*n</code> is zero.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p>The referenced value must not be currently zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><h4 class=\"code-header\">pub fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.from_mut\" class=\"fn\">from_mut</a>(n: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_from_mut</code>)</span></div></span></summary><div class=\"docblock\"><p>Converts a primitive mutable reference to a non-zero mutable reference\nif the referenced integer is not zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const since 1.34.0\">const: 1.34.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.get\" class=\"fn\">get</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a></h4></section></summary><div class=\"docblock\"><p>Returns the value as a primitive type.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.BITS\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.67.0\">1.67.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.BITS\" class=\"constant\">BITS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a> = 64u32</h4></section></summary><div class=\"docblock\"><p>The size of this non-zero integer type in bits.</p>\n<p>This value is equal to <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html#associatedconstant.BITS\" title=\"associated constant isize::BITS\"><code>isize::BITS</code></a>.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"macro\">assert_eq!</span>(NonZeroIsize::BITS, isize::BITS);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.leading_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0, const since 1.53.0\">1.53.0 (const: 1.53.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.leading_zeros\" class=\"fn\">leading_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of leading zeros in the binary representation of <code>self</code>.</p>\n<p>On many architectures, this function can perform better than <code>leading_zeros()</code> on the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = std::num::NonZeroIsize::new(-<span class=\"number\">1isize</span>).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(n.leading_zeros(), <span class=\"number\">0</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.trailing_zeros\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0, const since 1.53.0\">1.53.0 (const: 1.53.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.trailing_zeros\" class=\"fn\">trailing_zeros</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of trailing zeros in the binary representation\nof <code>self</code>.</p>\n<p>On many architectures, this function can perform better than <code>trailing_zeros()</code> on the underlying integer type, as special handling of zero can be avoided.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>n = std::num::NonZeroIsize::new(<span class=\"number\">0b0101000</span>).unwrap();\n\n<span class=\"macro\">assert_eq!</span>(n.trailing_zeros(), <span class=\"number\">3</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count_ones\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"const unstable\">const: <a href=\"https://github.com/rust-lang/rust/issues/120287\" title=\"Tracking issue for non_zero_count_ones\">unstable</a></span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.count_ones\" class=\"fn\">count_ones</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>non_zero_count_ones</code>)</span></div></span></summary><div class=\"docblock\"><p>Returns the number of ones in the binary representation of <code>self</code>.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<p>Basic usage:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(non_zero_count_ones)]\n\n</span><span class=\"kw\">let </span>one = num::NonZeroU32::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>three = num::NonZeroU32::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>a = NonZeroIsize::new(<span class=\"number\">0b100_0000</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>b = NonZeroIsize::new(<span class=\"number\">0b100_0011</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(a.count_ones(), one);\n<span class=\"macro\">assert_eq!</span>(b.count_ones(), three);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MIN\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MIN\" class=\"constant\">MIN</a>: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt; = _</h4></section></summary><div class=\"docblock\"><p>The smallest value that can be represented by this non-zero\ninteger type,\nequal to <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html#associatedconstant.MIN\" title=\"associated constant isize::MIN\"><code>isize::MIN</code></a>.</p>\n<p>Note: While most integer types are defined for every whole\nnumber between <code>MIN</code> and <code>MAX</code>, signed non-zero integers are\na special case. They have a “gap” at 0.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroIsize::MIN.get(), isize::MIN);</code></pre></div>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MAX\" class=\"associatedconstant\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.70.0\">1.70.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a></span><h4 class=\"code-header\">pub const <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" class=\"constant\">MAX</a>: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt; = _</h4></section></summary><div class=\"docblock\"><p>The largest value that can be represented by this non-zero\ninteger type,\nequal to <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html#associatedconstant.MAX\" title=\"associated constant isize::MAX\"><code>isize::MAX</code></a>.</p>\n<p>Note: While most integer types are defined for every whole\nnumber between <code>MIN</code> and <code>MAX</code>, signed non-zero integers are\na special case. They have a “gap” at 0.</p>\n<h5 id=\"examples-5\"><a class=\"doc-anchor\" href=\"#examples-5\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"macro\">assert_eq!</span>(NonZeroIsize::MAX.get(), isize::MAX);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.abs\" class=\"fn\">abs</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Computes the absolute value of self.\nSee <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html#method.abs\" title=\"method isize::abs\"><code>isize::abs</code></a>\nfor documentation on overflow behaviour.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos = NonZeroIsize::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg = NonZeroIsize::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos, pos.abs());\n<span class=\"macro\">assert_eq!</span>(pos, neg.abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_abs\" class=\"fn\">checked_abs</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked absolute value.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if\n<code>self == NonZeroIsize::MIN</code>.\nThe result cannot be zero.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos = NonZeroIsize::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg = NonZeroIsize::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroIsize::new(isize::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(pos), neg.checked_abs());\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, min.checked_abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.overflowing_abs\" class=\"fn\">overflowing_abs</a>(self) -&gt; (<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Computes the absolute value of self,\nwith overflow information, see\n<a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html#method.overflowing_abs\" title=\"method isize::overflowing_abs\"><code>isize::overflowing_abs</code></a>.</p>\n<h5 id=\"example-2\"><a class=\"doc-anchor\" href=\"#example-2\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos = NonZeroIsize::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg = NonZeroIsize::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroIsize::new(isize::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>((pos, <span class=\"bool-val\">false</span>), pos.overflowing_abs());\n<span class=\"macro\">assert_eq!</span>((pos, <span class=\"bool-val\">false</span>), neg.overflowing_abs());\n<span class=\"macro\">assert_eq!</span>((min, <span class=\"bool-val\">true</span>), min.overflowing_abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_abs\" class=\"fn\">saturating_abs</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating absolute value, see\n<a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html#method.saturating_abs\" title=\"method isize::saturating_abs\"><code>isize::saturating_abs</code></a>.</p>\n<h5 id=\"example-3\"><a class=\"doc-anchor\" href=\"#example-3\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos = NonZeroIsize::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg = NonZeroIsize::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroIsize::new(isize::MIN)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min_plus = NonZeroIsize::new(isize::MIN + <span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroIsize::new(isize::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos, pos.saturating_abs());\n<span class=\"macro\">assert_eq!</span>(pos, neg.saturating_abs());\n<span class=\"macro\">assert_eq!</span>(max, min.saturating_abs());\n<span class=\"macro\">assert_eq!</span>(max, min_plus.saturating_abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.wrapping_abs\" class=\"fn\">wrapping_abs</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping absolute value, see\n<a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html#method.wrapping_abs\" title=\"method isize::wrapping_abs\"><code>isize::wrapping_abs</code></a>.</p>\n<h5 id=\"example-4\"><a class=\"doc-anchor\" href=\"#example-4\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos = NonZeroIsize::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg = NonZeroIsize::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroIsize::new(isize::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos, pos.wrapping_abs());\n<span class=\"macro\">assert_eq!</span>(pos, neg.wrapping_abs());\n<span class=\"macro\">assert_eq!</span>(min, min.wrapping_abs());\n<span class=\"macro\">assert_eq!</span>(max, (-max).wrapping_abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unsigned_abs\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.unsigned_abs\" class=\"fn\">unsigned_abs</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Computes the absolute value of self\nwithout any wrapping or panicking.</p>\n<h5 id=\"example-5\"><a class=\"doc-anchor\" href=\"#example-5\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"kw\">let </span>u_pos = NonZeroUsize::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>i_pos = NonZeroIsize::new(<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>i_neg = NonZeroIsize::new(-<span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>i_min = NonZeroIsize::new(isize::MIN)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>u_max = NonZeroUsize::new(usize::MAX / <span class=\"number\">2 </span>+ <span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(u_pos, i_pos.unsigned_abs());\n<span class=\"macro\">assert_eq!</span>(u_pos, i_neg.unsigned_abs());\n<span class=\"macro\">assert_eq!</span>(u_max, i_min.unsigned_abs());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_positive\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.is_positive\" class=\"fn\">is_positive</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if <code>self</code> is positive and <code>false</code> if the\nnumber is negative.</p>\n<h5 id=\"example-6\"><a class=\"doc-anchor\" href=\"#example-6\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroIsize::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroIsize::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert!</span>(pos_five.is_positive());\n<span class=\"macro\">assert!</span>(!neg_five.is_positive());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_negative\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.is_negative\" class=\"fn\">is_negative</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if <code>self</code> is negative and <code>false</code> if the\nnumber is positive.</p>\n<h5 id=\"example-7\"><a class=\"doc-anchor\" href=\"#example-7\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroIsize::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroIsize::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert!</span>(neg_five.is_negative());\n<span class=\"macro\">assert!</span>(!pos_five.is_negative());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_neg\" class=\"fn\">checked_neg</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Checked negation. Computes <code>-self</code>,\nreturning <code>None</code> if <code>self == NonZeroIsize::MIN</code>.</p>\n<h5 id=\"example-8\"><a class=\"doc-anchor\" href=\"#example-8\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroIsize::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroIsize::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroIsize::new(isize::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos_five.checked_neg(), <span class=\"prelude-val\">Some</span>(neg_five));\n<span class=\"macro\">assert_eq!</span>(min.checked_neg(), <span class=\"prelude-val\">None</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.overflowing_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.overflowing_neg\" class=\"fn\">overflowing_neg</a>(self) -&gt; (<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Negates self, overflowing if this is equal to the minimum value.</p>\n<p>See <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html#method.overflowing_neg\" title=\"method isize::overflowing_neg\"><code>isize::overflowing_neg</code></a>\nfor documentation on overflow behaviour.</p>\n<h5 id=\"example-9\"><a class=\"doc-anchor\" href=\"#example-9\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroIsize::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroIsize::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroIsize::new(isize::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos_five.overflowing_neg(), (neg_five, <span class=\"bool-val\">false</span>));\n<span class=\"macro\">assert_eq!</span>(min.overflowing_neg(), (min, <span class=\"bool-val\">true</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_neg\" class=\"fn\">saturating_neg</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Saturating negation. Computes <code>-self</code>,\nreturning <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroIsize::MAX</code></a>\nif <code>self == NonZeroIsize::MIN</code>\ninstead of overflowing.</p>\n<h5 id=\"example-10\"><a class=\"doc-anchor\" href=\"#example-10\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroIsize::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroIsize::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroIsize::new(isize::MIN)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min_plus_one = NonZeroIsize::new(isize::MIN + <span class=\"number\">1</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroIsize::new(isize::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos_five.saturating_neg(), neg_five);\n<span class=\"macro\">assert_eq!</span>(min.saturating_neg(), max);\n<span class=\"macro\">assert_eq!</span>(max.saturating_neg(), min_plus_one);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_neg\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0, const since 1.71.0\">1.71.0 (const: 1.71.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.wrapping_neg\" class=\"fn\">wrapping_neg</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Wrapping (modular) negation. Computes <code>-self</code>, wrapping around at the boundary\nof the type.</p>\n<p>See <a href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html#method.wrapping_neg\" title=\"method isize::wrapping_neg\"><code>isize::wrapping_neg</code></a>\nfor documentation on overflow behaviour.</p>\n<h5 id=\"example-11\"><a class=\"doc-anchor\" href=\"#example-11\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>pos_five = NonZeroIsize::new(<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>neg_five = NonZeroIsize::new(-<span class=\"number\">5</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>min = NonZeroIsize::new(isize::MIN)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(pos_five.wrapping_neg(), neg_five);\n<span class=\"macro\">assert_eq!</span>(min.wrapping_neg(), min);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_mul\" class=\"fn\">checked_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-6\"><a class=\"doc-anchor\" href=\"#examples-6\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroIsize::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroIsize::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroIsize::new(isize::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(four), two.checked_mul(two));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, max.checked_mul(two));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_mul\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_mul\" class=\"fn\">saturating_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together.\nReturn <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroIsize::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-7\"><a class=\"doc-anchor\" href=\"#examples-7\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>two = NonZeroIsize::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroIsize::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroIsize::new(isize::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(four, two.saturating_mul(two));\n<span class=\"macro\">assert_eq!</span>(max, four.saturating_mul(max));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unchecked_mul\" class=\"method\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.unchecked_mul\" class=\"fn\">unchecked_mul</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>nonzero_ops</code>)</span></div></span></summary><div class=\"docblock\"><p>Multiplies two non-zero integers together,\nassuming overflow cannot occur.\nOverflow is unchecked, and it is undefined behaviour to overflow\n<em>even if the result would wrap to a non-zero value</em>.\nThe behaviour is undefined as soon as\n<code>self * rhs &gt; isize::MAX</code>, or <code>self * rhs &lt; isize::MIN</code>.</p>\n<h5 id=\"examples-8\"><a class=\"doc-anchor\" href=\"#examples-8\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"attr\">#![feature(nonzero_ops)]\n\n</span><span class=\"kw\">let </span>two = NonZeroIsize::new(<span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>four = NonZeroIsize::new(<span class=\"number\">4</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(four, <span class=\"kw\">unsafe </span>{ two.unchecked_mul(two) });</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.checked_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.checked_pow\" class=\"fn\">checked_pow</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Raises non-zero value to an integer power.\nChecks for overflow and returns <a href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> on overflow.\nAs a consequence, the result cannot wrap to zero.</p>\n<h5 id=\"examples-9\"><a class=\"doc-anchor\" href=\"#examples-9\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>three = NonZeroIsize::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>twenty_seven = NonZeroIsize::new(<span class=\"number\">27</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>half_max = NonZeroIsize::new(isize::MAX / <span class=\"number\">2</span>)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">Some</span>(twenty_seven), three.checked_pow(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(<span class=\"prelude-val\">None</span>, half_max.checked_pow(<span class=\"number\">3</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.saturating_pow\" class=\"method\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.64.0, const since 1.64.0\">1.64.0 (const: 1.64.0)</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a></span><h4 class=\"code-header\">pub const fn <a href=\"sp_std/num/struct.NonZero.html#tymethod.saturating_pow\" class=\"fn\">saturating_pow</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Raise non-zero value to an integer power.\nReturn <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MIN\" title=\"associated constant sp_std::num::NonZero::MIN\"><code>NonZeroIsize::MIN</code></a> or <a href=\"sp_std/num/struct.NonZero.html#associatedconstant.MAX\" title=\"associated constant sp_std::num::NonZero::MAX\"><code>NonZeroIsize::MAX</code></a> on overflow.</p>\n<h5 id=\"examples-10\"><a class=\"doc-anchor\" href=\"#examples-10\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>three = NonZeroIsize::new(<span class=\"number\">3</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>twenty_seven = NonZeroIsize::new(<span class=\"number\">27</span>)<span class=\"question-mark\">?</span>;\n<span class=\"kw\">let </span>max = NonZeroIsize::new(isize::MAX)<span class=\"question-mark\">?</span>;\n\n<span class=\"macro\">assert_eq!</span>(twenty_seven, three.saturating_pow(<span class=\"number\">3</span>));\n<span class=\"macro\">assert_eq!</span>(max, max.saturating_pow(<span class=\"number\">3</span>));</code></pre></div>\n</div></details></div></details>",0,"sp_std::num::NonZeroIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-NonZero%3Cusize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#impl-PartialOrd-for-NonZero%3Cusize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.PartialOrd.html\" title=\"trait sp_std::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"sp_std/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","sp_std::num::NonZeroUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-NonZero%3Ci128%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#impl-PartialOrd-for-NonZero%3Ci128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.PartialOrd.html\" title=\"trait sp_std::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"sp_std/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","sp_std::num::NonZeroI128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-NonZero%3Cisize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#impl-PartialOrd-for-NonZero%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.PartialOrd.html\" title=\"trait sp_std::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"sp_std/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","sp_std::num::NonZeroIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#impl-PartialOrd-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.PartialOrd.html\" title=\"trait sp_std::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"sp_std/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","sp_std::num::NonZeroU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-NonZero%3Ci8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#impl-PartialOrd-for-NonZero%3Ci8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.PartialOrd.html\" title=\"trait sp_std::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"sp_std/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","sp_std::num::NonZeroI8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-NonZero%3Ci64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#impl-PartialOrd-for-NonZero%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.PartialOrd.html\" title=\"trait sp_std::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"sp_std/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","sp_std::num::NonZeroI64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-NonZero%3Ci16%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#impl-PartialOrd-for-NonZero%3Ci16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.PartialOrd.html\" title=\"trait sp_std::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"sp_std/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","sp_std::num::NonZeroI16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-NonZero%3Cu16%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#impl-PartialOrd-for-NonZero%3Cu16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.PartialOrd.html\" title=\"trait sp_std::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"sp_std/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","sp_std::num::NonZeroU16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-NonZero%3Cu8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#impl-PartialOrd-for-NonZero%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.PartialOrd.html\" title=\"trait sp_std::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"sp_std/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","sp_std::num::NonZeroU8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-NonZero%3Cu32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#impl-PartialOrd-for-NonZero%3Cu32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.PartialOrd.html\" title=\"trait sp_std::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"sp_std/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","sp_std::num::NonZeroU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-NonZero%3Cu128%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#impl-PartialOrd-for-NonZero%3Cu128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.PartialOrd.html\" title=\"trait sp_std::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"sp_std/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","sp_std::num::NonZeroU128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-NonZero%3Ci32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#impl-PartialOrd-for-NonZero%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.PartialOrd.html\" title=\"trait sp_std::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"sp_std/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"sp_std/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","sp_std::num::NonZeroI32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-NonZero%3Ci8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#impl-Hash-for-NonZero%3Ci8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/hash/trait.Hash.html\" title=\"trait sp_std::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\"><code>Hasher</code></a>. <a href=\"sp_std/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"sp_std/marker/trait.Sized.html\" title=\"trait sp_std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\"><code>Hasher</code></a>. <a href=\"sp_std/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","sp_std::num::NonZeroI8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-NonZero%3Cu16%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#impl-Hash-for-NonZero%3Cu16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/hash/trait.Hash.html\" title=\"trait sp_std::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\"><code>Hasher</code></a>. <a href=\"sp_std/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"sp_std/marker/trait.Sized.html\" title=\"trait sp_std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\"><code>Hasher</code></a>. <a href=\"sp_std/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","sp_std::num::NonZeroU16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-NonZero%3Cu128%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#impl-Hash-for-NonZero%3Cu128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/hash/trait.Hash.html\" title=\"trait sp_std::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\"><code>Hasher</code></a>. <a href=\"sp_std/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"sp_std/marker/trait.Sized.html\" title=\"trait sp_std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\"><code>Hasher</code></a>. <a href=\"sp_std/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","sp_std::num::NonZeroU128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-NonZero%3Ci64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#impl-Hash-for-NonZero%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/hash/trait.Hash.html\" title=\"trait sp_std::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\"><code>Hasher</code></a>. <a href=\"sp_std/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"sp_std/marker/trait.Sized.html\" title=\"trait sp_std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\"><code>Hasher</code></a>. <a href=\"sp_std/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","sp_std::num::NonZeroI64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-NonZero%3Cusize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#impl-Hash-for-NonZero%3Cusize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/hash/trait.Hash.html\" title=\"trait sp_std::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\"><code>Hasher</code></a>. <a href=\"sp_std/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"sp_std/marker/trait.Sized.html\" title=\"trait sp_std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\"><code>Hasher</code></a>. <a href=\"sp_std/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","sp_std::num::NonZeroUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-NonZero%3Cu32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#impl-Hash-for-NonZero%3Cu32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/hash/trait.Hash.html\" title=\"trait sp_std::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\"><code>Hasher</code></a>. <a href=\"sp_std/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"sp_std/marker/trait.Sized.html\" title=\"trait sp_std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\"><code>Hasher</code></a>. <a href=\"sp_std/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","sp_std::num::NonZeroU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-NonZero%3Ci128%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#impl-Hash-for-NonZero%3Ci128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/hash/trait.Hash.html\" title=\"trait sp_std::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\"><code>Hasher</code></a>. <a href=\"sp_std/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"sp_std/marker/trait.Sized.html\" title=\"trait sp_std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\"><code>Hasher</code></a>. <a href=\"sp_std/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","sp_std::num::NonZeroI128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#impl-Hash-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/hash/trait.Hash.html\" title=\"trait sp_std::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\"><code>Hasher</code></a>. <a href=\"sp_std/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"sp_std/marker/trait.Sized.html\" title=\"trait sp_std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\"><code>Hasher</code></a>. <a href=\"sp_std/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","sp_std::num::NonZeroU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-NonZero%3Ci16%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#impl-Hash-for-NonZero%3Ci16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/hash/trait.Hash.html\" title=\"trait sp_std::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\"><code>Hasher</code></a>. <a href=\"sp_std/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"sp_std/marker/trait.Sized.html\" title=\"trait sp_std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\"><code>Hasher</code></a>. <a href=\"sp_std/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","sp_std::num::NonZeroI16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-NonZero%3Cu8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#impl-Hash-for-NonZero%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/hash/trait.Hash.html\" title=\"trait sp_std::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\"><code>Hasher</code></a>. <a href=\"sp_std/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"sp_std/marker/trait.Sized.html\" title=\"trait sp_std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\"><code>Hasher</code></a>. <a href=\"sp_std/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","sp_std::num::NonZeroU8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-NonZero%3Cisize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#impl-Hash-for-NonZero%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/hash/trait.Hash.html\" title=\"trait sp_std::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\"><code>Hasher</code></a>. <a href=\"sp_std/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"sp_std/marker/trait.Sized.html\" title=\"trait sp_std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\"><code>Hasher</code></a>. <a href=\"sp_std/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","sp_std::num::NonZeroIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-NonZero%3Ci32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#impl-Hash-for-NonZero%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/hash/trait.Hash.html\" title=\"trait sp_std::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\"><code>Hasher</code></a>. <a href=\"sp_std/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"sp_std/marker/trait.Sized.html\" title=\"trait sp_std::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"sp_std/hash/trait.Hasher.html\" title=\"trait sp_std::hash::Hasher\"><code>Hasher</code></a>. <a href=\"sp_std/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","sp_std::num::NonZeroI32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-NonZero%3Cusize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#impl-Clone-for-NonZero%3Cusize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/clone/trait.Clone.html\" title=\"trait sp_std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"sp_std/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"sp_std/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","sp_std::num::NonZeroUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-NonZero%3Cu8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#impl-Clone-for-NonZero%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/clone/trait.Clone.html\" title=\"trait sp_std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"sp_std/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"sp_std/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","sp_std::num::NonZeroU8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-NonZero%3Ci32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#impl-Clone-for-NonZero%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/clone/trait.Clone.html\" title=\"trait sp_std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"sp_std/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"sp_std/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","sp_std::num::NonZeroI32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-NonZero%3Cisize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#impl-Clone-for-NonZero%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/clone/trait.Clone.html\" title=\"trait sp_std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"sp_std/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"sp_std/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","sp_std::num::NonZeroIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#impl-Clone-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/clone/trait.Clone.html\" title=\"trait sp_std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"sp_std/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"sp_std/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","sp_std::num::NonZeroU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-NonZero%3Ci128%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#impl-Clone-for-NonZero%3Ci128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/clone/trait.Clone.html\" title=\"trait sp_std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"sp_std/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"sp_std/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","sp_std::num::NonZeroI128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-NonZero%3Cu16%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#impl-Clone-for-NonZero%3Cu16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/clone/trait.Clone.html\" title=\"trait sp_std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"sp_std/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"sp_std/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","sp_std::num::NonZeroU16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-NonZero%3Cu128%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#impl-Clone-for-NonZero%3Cu128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/clone/trait.Clone.html\" title=\"trait sp_std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"sp_std/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"sp_std/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","sp_std::num::NonZeroU128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-NonZero%3Ci64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#impl-Clone-for-NonZero%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/clone/trait.Clone.html\" title=\"trait sp_std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"sp_std/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"sp_std/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","sp_std::num::NonZeroI64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-NonZero%3Ci8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#impl-Clone-for-NonZero%3Ci8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/clone/trait.Clone.html\" title=\"trait sp_std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"sp_std/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"sp_std/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","sp_std::num::NonZeroI8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-NonZero%3Ci16%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#impl-Clone-for-NonZero%3Ci16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/clone/trait.Clone.html\" title=\"trait sp_std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"sp_std/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"sp_std/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","sp_std::num::NonZeroI16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-NonZero%3Cu32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#impl-Clone-for-NonZero%3Cu32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/clone/trait.Clone.html\" title=\"trait sp_std::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"sp_std/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"sp_std/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","sp_std::num::NonZeroU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-NonZero%3Ci32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#impl-Display-for-NonZero%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Display.html\" title=\"trait sp_std::fmt::Display\">Display</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"sp_std/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","sp_std::num::NonZeroI32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#impl-Display-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Display.html\" title=\"trait sp_std::fmt::Display\">Display</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"sp_std/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","sp_std::num::NonZeroU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-NonZero%3Ci128%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#impl-Display-for-NonZero%3Ci128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Display.html\" title=\"trait sp_std::fmt::Display\">Display</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"sp_std/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","sp_std::num::NonZeroI128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-NonZero%3Cisize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#impl-Display-for-NonZero%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Display.html\" title=\"trait sp_std::fmt::Display\">Display</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"sp_std/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","sp_std::num::NonZeroIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-NonZero%3Ci8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#impl-Display-for-NonZero%3Ci8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Display.html\" title=\"trait sp_std::fmt::Display\">Display</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"sp_std/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","sp_std::num::NonZeroI8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-NonZero%3Ci16%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#impl-Display-for-NonZero%3Ci16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Display.html\" title=\"trait sp_std::fmt::Display\">Display</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"sp_std/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","sp_std::num::NonZeroI16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-NonZero%3Cusize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#impl-Display-for-NonZero%3Cusize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Display.html\" title=\"trait sp_std::fmt::Display\">Display</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"sp_std/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","sp_std::num::NonZeroUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-NonZero%3Ci64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#impl-Display-for-NonZero%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Display.html\" title=\"trait sp_std::fmt::Display\">Display</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"sp_std/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","sp_std::num::NonZeroI64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-NonZero%3Cu32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#impl-Display-for-NonZero%3Cu32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Display.html\" title=\"trait sp_std::fmt::Display\">Display</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"sp_std/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","sp_std::num::NonZeroU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-NonZero%3Cu128%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#impl-Display-for-NonZero%3Cu128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Display.html\" title=\"trait sp_std::fmt::Display\">Display</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"sp_std/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","sp_std::num::NonZeroU128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-NonZero%3Cu16%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#impl-Display-for-NonZero%3Cu16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Display.html\" title=\"trait sp_std::fmt::Display\">Display</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"sp_std/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","sp_std::num::NonZeroU16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-NonZero%3Cu8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#impl-Display-for-NonZero%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Display.html\" title=\"trait sp_std::fmt::Display\">Display</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"sp_std/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","sp_std::num::NonZeroU8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-NonZero%3Ci16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a></span><a href=\"#impl-BitOr-for-NonZero%3Ci16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;) -&gt; &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt; as <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" title=\"type sp_std::ops::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","sp_std::num::NonZeroI16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-NonZero%3Ci8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a></span><a href=\"#impl-BitOr-for-NonZero%3Ci8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;) -&gt; &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt; as <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" title=\"type sp_std::ops::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","sp_std::num::NonZeroI8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3Cu64%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a></span><a href=\"#impl-BitOr%3Cu64%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>) -&gt; &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" title=\"type sp_std::ops::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<u64>","sp_std::num::NonZeroU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3Ci128%3E-for-NonZero%3Ci128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a></span><a href=\"#impl-BitOr%3Ci128%3E-for-NonZero%3Ci128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>) -&gt; &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt; as <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" title=\"type sp_std::ops::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<i128>","sp_std::num::NonZeroI128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3Cu8%3E-for-NonZero%3Cu8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a></span><a href=\"#impl-BitOr%3Cu8%3E-for-NonZero%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>) -&gt; &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; as <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" title=\"type sp_std::ops::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<u8>","sp_std::num::NonZeroU8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3Cusize%3E-for-NonZero%3Cusize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a></span><a href=\"#impl-BitOr%3Cusize%3E-for-NonZero%3Cusize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>) -&gt; &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; as <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" title=\"type sp_std::ops::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<usize>","sp_std::num::NonZeroUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3Ci64%3E-for-NonZero%3Ci64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a></span><a href=\"#impl-BitOr%3Ci64%3E-for-NonZero%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>) -&gt; &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt; as <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" title=\"type sp_std::ops::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<i64>","sp_std::num::NonZeroI64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-NonZero%3Cu16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a></span><a href=\"#impl-BitOr-for-NonZero%3Cu16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;) -&gt; &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt; as <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" title=\"type sp_std::ops::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","sp_std::num::NonZeroU16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-NonZero%3Cu128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a></span><a href=\"#impl-BitOr-for-NonZero%3Cu128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;) -&gt; &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt; as <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" title=\"type sp_std::ops::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","sp_std::num::NonZeroU128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3Cisize%3E-for-NonZero%3Cisize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a></span><a href=\"#impl-BitOr%3Cisize%3E-for-NonZero%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>) -&gt; &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt; as <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" title=\"type sp_std::ops::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<isize>","sp_std::num::NonZeroIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3Cu128%3E-for-NonZero%3Cu128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a></span><a href=\"#impl-BitOr%3Cu128%3E-for-NonZero%3Cu128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>) -&gt; &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt; as <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" title=\"type sp_std::ops::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<u128>","sp_std::num::NonZeroU128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3Ci32%3E-for-NonZero%3Ci32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a></span><a href=\"#impl-BitOr%3Ci32%3E-for-NonZero%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>) -&gt; &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt; as <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" title=\"type sp_std::ops::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<i32>","sp_std::num::NonZeroI32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a></span><a href=\"#impl-BitOr-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" title=\"type sp_std::ops::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","sp_std::num::NonZeroU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3Cu16%3E-for-NonZero%3Cu16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a></span><a href=\"#impl-BitOr%3Cu16%3E-for-NonZero%3Cu16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>) -&gt; &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt; as <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" title=\"type sp_std::ops::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<u16>","sp_std::num::NonZeroU16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-NonZero%3Cu32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a></span><a href=\"#impl-BitOr-for-NonZero%3Cu32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt; as <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" title=\"type sp_std::ops::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","sp_std::num::NonZeroU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-NonZero%3Cusize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a></span><a href=\"#impl-BitOr-for-NonZero%3Cusize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;) -&gt; &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; as <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" title=\"type sp_std::ops::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","sp_std::num::NonZeroUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3Ci16%3E-for-NonZero%3Ci16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a></span><a href=\"#impl-BitOr%3Ci16%3E-for-NonZero%3Ci16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>) -&gt; &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt; as <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" title=\"type sp_std::ops::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<i16>","sp_std::num::NonZeroI16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-NonZero%3Ci128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a></span><a href=\"#impl-BitOr-for-NonZero%3Ci128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;) -&gt; &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt; as <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" title=\"type sp_std::ops::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","sp_std::num::NonZeroI128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-NonZero%3Cisize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a></span><a href=\"#impl-BitOr-for-NonZero%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;) -&gt; &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt; as <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" title=\"type sp_std::ops::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","sp_std::num::NonZeroIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3Cu32%3E-for-NonZero%3Cu32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a></span><a href=\"#impl-BitOr%3Cu32%3E-for-NonZero%3Cu32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>) -&gt; &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt; as <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" title=\"type sp_std::ops::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<u32>","sp_std::num::NonZeroU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-NonZero%3Ci64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a></span><a href=\"#impl-BitOr-for-NonZero%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;) -&gt; &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt; as <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" title=\"type sp_std::ops::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","sp_std::num::NonZeroI64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3Ci8%3E-for-NonZero%3Ci8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a></span><a href=\"#impl-BitOr%3Ci8%3E-for-NonZero%3Ci8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>) -&gt; &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt; as <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" title=\"type sp_std::ops::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr<i8>","sp_std::num::NonZeroI8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-NonZero%3Cu8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a></span><a href=\"#impl-BitOr-for-NonZero%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; as <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" title=\"type sp_std::ops::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","sp_std::num::NonZeroU8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr-for-NonZero%3Ci32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a></span><a href=\"#impl-BitOr-for-NonZero%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#method.bitor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\" class=\"fn\">bitor</a>(self, rhs: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;) -&gt; &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt; as <a class=\"trait\" href=\"sp_std/ops/trait.BitOr.html\" title=\"trait sp_std::ops::BitOr\">BitOr</a>&gt;::<a class=\"associatedtype\" href=\"sp_std/ops/trait.BitOr.html#associatedtype.Output\" title=\"type sp_std::ops::BitOr::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>|</code> operation. <a href=\"sp_std/ops/trait.BitOr.html#tymethod.bitor\">Read more</a></div></details></div></details>","BitOr","sp_std::num::NonZeroI32"],["<section id=\"impl-StructuralPartialEq-for-NonZero%3Ci128%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#impl-StructuralPartialEq-for-NonZero%3Ci128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/marker/trait.StructuralPartialEq.html\" title=\"trait sp_std::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h3></section>","StructuralPartialEq","sp_std::num::NonZeroI128"],["<section id=\"impl-StructuralPartialEq-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#impl-StructuralPartialEq-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/marker/trait.StructuralPartialEq.html\" title=\"trait sp_std::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h3></section>","StructuralPartialEq","sp_std::num::NonZeroU64"],["<section id=\"impl-StructuralPartialEq-for-NonZero%3Ci8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#impl-StructuralPartialEq-for-NonZero%3Ci8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/marker/trait.StructuralPartialEq.html\" title=\"trait sp_std::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h3></section>","StructuralPartialEq","sp_std::num::NonZeroI8"],["<section id=\"impl-StructuralPartialEq-for-NonZero%3Ci16%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#impl-StructuralPartialEq-for-NonZero%3Ci16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/marker/trait.StructuralPartialEq.html\" title=\"trait sp_std::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h3></section>","StructuralPartialEq","sp_std::num::NonZeroI16"],["<section id=\"impl-StructuralPartialEq-for-NonZero%3Cu32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#impl-StructuralPartialEq-for-NonZero%3Cu32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/marker/trait.StructuralPartialEq.html\" title=\"trait sp_std::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h3></section>","StructuralPartialEq","sp_std::num::NonZeroU32"],["<section id=\"impl-StructuralPartialEq-for-NonZero%3Ci32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#impl-StructuralPartialEq-for-NonZero%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/marker/trait.StructuralPartialEq.html\" title=\"trait sp_std::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h3></section>","StructuralPartialEq","sp_std::num::NonZeroI32"],["<section id=\"impl-StructuralPartialEq-for-NonZero%3Cu8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#impl-StructuralPartialEq-for-NonZero%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/marker/trait.StructuralPartialEq.html\" title=\"trait sp_std::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h3></section>","StructuralPartialEq","sp_std::num::NonZeroU8"],["<section id=\"impl-StructuralPartialEq-for-NonZero%3Cusize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#impl-StructuralPartialEq-for-NonZero%3Cusize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/marker/trait.StructuralPartialEq.html\" title=\"trait sp_std::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h3></section>","StructuralPartialEq","sp_std::num::NonZeroUsize"],["<section id=\"impl-StructuralPartialEq-for-NonZero%3Cu16%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#impl-StructuralPartialEq-for-NonZero%3Cu16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/marker/trait.StructuralPartialEq.html\" title=\"trait sp_std::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h3></section>","StructuralPartialEq","sp_std::num::NonZeroU16"],["<section id=\"impl-StructuralPartialEq-for-NonZero%3Ci64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#impl-StructuralPartialEq-for-NonZero%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/marker/trait.StructuralPartialEq.html\" title=\"trait sp_std::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h3></section>","StructuralPartialEq","sp_std::num::NonZeroI64"],["<section id=\"impl-StructuralPartialEq-for-NonZero%3Cisize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#impl-StructuralPartialEq-for-NonZero%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/marker/trait.StructuralPartialEq.html\" title=\"trait sp_std::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h3></section>","StructuralPartialEq","sp_std::num::NonZeroIsize"],["<section id=\"impl-StructuralPartialEq-for-NonZero%3Cu128%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#impl-StructuralPartialEq-for-NonZero%3Cu128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/marker/trait.StructuralPartialEq.html\" title=\"trait sp_std::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h3></section>","StructuralPartialEq","sp_std::num::NonZeroU128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-NonZero%3Cu32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#impl-Debug-for-NonZero%3Cu32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Debug.html\" title=\"trait sp_std::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"sp_std/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","sp_std::num::NonZeroU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-NonZero%3Ci16%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#impl-Debug-for-NonZero%3Ci16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Debug.html\" title=\"trait sp_std::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"sp_std/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","sp_std::num::NonZeroI16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-NonZero%3Ci8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#impl-Debug-for-NonZero%3Ci8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Debug.html\" title=\"trait sp_std::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"sp_std/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","sp_std::num::NonZeroI8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-NonZero%3Ci64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#impl-Debug-for-NonZero%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Debug.html\" title=\"trait sp_std::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"sp_std/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","sp_std::num::NonZeroI64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-NonZero%3Cu16%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#impl-Debug-for-NonZero%3Cu16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Debug.html\" title=\"trait sp_std::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"sp_std/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","sp_std::num::NonZeroU16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-NonZero%3Cu128%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#impl-Debug-for-NonZero%3Cu128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Debug.html\" title=\"trait sp_std::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"sp_std/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","sp_std::num::NonZeroU128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-NonZero%3Cisize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#impl-Debug-for-NonZero%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Debug.html\" title=\"trait sp_std::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"sp_std/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","sp_std::num::NonZeroIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-NonZero%3Cu8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#impl-Debug-for-NonZero%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Debug.html\" title=\"trait sp_std::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"sp_std/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","sp_std::num::NonZeroU8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-NonZero%3Ci128%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#impl-Debug-for-NonZero%3Ci128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Debug.html\" title=\"trait sp_std::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"sp_std/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","sp_std::num::NonZeroI128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-NonZero%3Cusize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#impl-Debug-for-NonZero%3Cusize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Debug.html\" title=\"trait sp_std::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"sp_std/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","sp_std::num::NonZeroUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-NonZero%3Ci32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#impl-Debug-for-NonZero%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Debug.html\" title=\"trait sp_std::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"sp_std/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","sp_std::num::NonZeroI32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#impl-Debug-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Debug.html\" title=\"trait sp_std::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"sp_std/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","sp_std::num::NonZeroU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Octal-for-NonZero%3Cusize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#impl-Octal-for-NonZero%3Cusize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Octal.html\" title=\"trait sp_std::fmt::Octal\">Octal</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Octal.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Octal","sp_std::num::NonZeroUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Octal-for-NonZero%3Cu8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#impl-Octal-for-NonZero%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Octal.html\" title=\"trait sp_std::fmt::Octal\">Octal</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Octal.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Octal","sp_std::num::NonZeroU8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Octal-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#impl-Octal-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Octal.html\" title=\"trait sp_std::fmt::Octal\">Octal</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Octal.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Octal","sp_std::num::NonZeroU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Octal-for-NonZero%3Cu32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#impl-Octal-for-NonZero%3Cu32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Octal.html\" title=\"trait sp_std::fmt::Octal\">Octal</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Octal.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Octal","sp_std::num::NonZeroU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Octal-for-NonZero%3Ci8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#impl-Octal-for-NonZero%3Ci8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Octal.html\" title=\"trait sp_std::fmt::Octal\">Octal</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Octal.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Octal","sp_std::num::NonZeroI8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Octal-for-NonZero%3Ci16%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#impl-Octal-for-NonZero%3Ci16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Octal.html\" title=\"trait sp_std::fmt::Octal\">Octal</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Octal.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Octal","sp_std::num::NonZeroI16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Octal-for-NonZero%3Cu16%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#impl-Octal-for-NonZero%3Cu16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Octal.html\" title=\"trait sp_std::fmt::Octal\">Octal</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Octal.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Octal","sp_std::num::NonZeroU16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Octal-for-NonZero%3Ci128%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#impl-Octal-for-NonZero%3Ci128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Octal.html\" title=\"trait sp_std::fmt::Octal\">Octal</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Octal.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Octal","sp_std::num::NonZeroI128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Octal-for-NonZero%3Cu128%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#impl-Octal-for-NonZero%3Cu128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Octal.html\" title=\"trait sp_std::fmt::Octal\">Octal</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Octal.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Octal","sp_std::num::NonZeroU128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Octal-for-NonZero%3Cisize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#impl-Octal-for-NonZero%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Octal.html\" title=\"trait sp_std::fmt::Octal\">Octal</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Octal.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Octal","sp_std::num::NonZeroIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Octal-for-NonZero%3Ci32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#impl-Octal-for-NonZero%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Octal.html\" title=\"trait sp_std::fmt::Octal\">Octal</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Octal.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Octal","sp_std::num::NonZeroI32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Octal-for-NonZero%3Ci64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#impl-Octal-for-NonZero%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Octal.html\" title=\"trait sp_std::fmt::Octal\">Octal</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Octal.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Octal","sp_std::num::NonZeroI64"],["<section id=\"impl-Eq-for-NonZero%3Cu32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#impl-Eq-for-NonZero%3Cu32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.Eq.html\" title=\"trait sp_std::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h3></section>","Eq","sp_std::num::NonZeroU32"],["<section id=\"impl-Eq-for-NonZero%3Ci64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#impl-Eq-for-NonZero%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.Eq.html\" title=\"trait sp_std::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h3></section>","Eq","sp_std::num::NonZeroI64"],["<section id=\"impl-Eq-for-NonZero%3Ci8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#impl-Eq-for-NonZero%3Ci8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.Eq.html\" title=\"trait sp_std::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h3></section>","Eq","sp_std::num::NonZeroI8"],["<section id=\"impl-Eq-for-NonZero%3Ci128%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#impl-Eq-for-NonZero%3Ci128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.Eq.html\" title=\"trait sp_std::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h3></section>","Eq","sp_std::num::NonZeroI128"],["<section id=\"impl-Eq-for-NonZero%3Cu8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#impl-Eq-for-NonZero%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.Eq.html\" title=\"trait sp_std::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h3></section>","Eq","sp_std::num::NonZeroU8"],["<section id=\"impl-Eq-for-NonZero%3Ci16%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#impl-Eq-for-NonZero%3Ci16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.Eq.html\" title=\"trait sp_std::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h3></section>","Eq","sp_std::num::NonZeroI16"],["<section id=\"impl-Eq-for-NonZero%3Cisize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#impl-Eq-for-NonZero%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.Eq.html\" title=\"trait sp_std::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h3></section>","Eq","sp_std::num::NonZeroIsize"],["<section id=\"impl-Eq-for-NonZero%3Ci32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#impl-Eq-for-NonZero%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.Eq.html\" title=\"trait sp_std::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h3></section>","Eq","sp_std::num::NonZeroI32"],["<section id=\"impl-Eq-for-NonZero%3Cu128%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#impl-Eq-for-NonZero%3Cu128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.Eq.html\" title=\"trait sp_std::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h3></section>","Eq","sp_std::num::NonZeroU128"],["<section id=\"impl-Eq-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#impl-Eq-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.Eq.html\" title=\"trait sp_std::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h3></section>","Eq","sp_std::num::NonZeroU64"],["<section id=\"impl-Eq-for-NonZero%3Cu16%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#impl-Eq-for-NonZero%3Cu16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.Eq.html\" title=\"trait sp_std::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h3></section>","Eq","sp_std::num::NonZeroU16"],["<section id=\"impl-Eq-for-NonZero%3Cusize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#impl-Eq-for-NonZero%3Cusize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.Eq.html\" title=\"trait sp_std::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h3></section>","Eq","sp_std::num::NonZeroUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-NonZero%3Ci8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#impl-Ord-for-NonZero%3Ci8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.Ord.html\" title=\"trait sp_std::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;) -&gt; <a class=\"enum\" href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"sp_std/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"sp_std/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"sp_std/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;, max: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"sp_std/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","sp_std::num::NonZeroI8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-NonZero%3Ci64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#impl-Ord-for-NonZero%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.Ord.html\" title=\"trait sp_std::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;) -&gt; <a class=\"enum\" href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"sp_std/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"sp_std/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"sp_std/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;, max: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"sp_std/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","sp_std::num::NonZeroI64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-NonZero%3Cu8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#impl-Ord-for-NonZero%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.Ord.html\" title=\"trait sp_std::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"enum\" href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"sp_std/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"sp_std/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"sp_std/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;, max: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"sp_std/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","sp_std::num::NonZeroU8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-NonZero%3Cisize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#impl-Ord-for-NonZero%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.Ord.html\" title=\"trait sp_std::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;) -&gt; <a class=\"enum\" href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"sp_std/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"sp_std/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"sp_std/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;, max: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"sp_std/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","sp_std::num::NonZeroIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-NonZero%3Cusize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#impl-Ord-for-NonZero%3Cusize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.Ord.html\" title=\"trait sp_std::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;) -&gt; <a class=\"enum\" href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"sp_std/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"sp_std/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"sp_std/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;, max: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"sp_std/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","sp_std::num::NonZeroUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-NonZero%3Ci128%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#impl-Ord-for-NonZero%3Ci128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.Ord.html\" title=\"trait sp_std::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;) -&gt; <a class=\"enum\" href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"sp_std/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"sp_std/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"sp_std/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;, max: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"sp_std/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","sp_std::num::NonZeroI128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-NonZero%3Ci32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#impl-Ord-for-NonZero%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.Ord.html\" title=\"trait sp_std::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;) -&gt; <a class=\"enum\" href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"sp_std/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"sp_std/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"sp_std/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;, max: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"sp_std/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","sp_std::num::NonZeroI32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-NonZero%3Ci16%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#impl-Ord-for-NonZero%3Ci16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.Ord.html\" title=\"trait sp_std::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;) -&gt; <a class=\"enum\" href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"sp_std/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"sp_std/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"sp_std/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;, max: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"sp_std/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","sp_std::num::NonZeroI16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-NonZero%3Cu16%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#impl-Ord-for-NonZero%3Cu16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.Ord.html\" title=\"trait sp_std::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;) -&gt; <a class=\"enum\" href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"sp_std/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"sp_std/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"sp_std/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;, max: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"sp_std/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","sp_std::num::NonZeroU16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-NonZero%3Cu32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#impl-Ord-for-NonZero%3Cu32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.Ord.html\" title=\"trait sp_std::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"enum\" href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"sp_std/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"sp_std/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"sp_std/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;, max: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"sp_std/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","sp_std::num::NonZeroU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-NonZero%3Cu128%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#impl-Ord-for-NonZero%3Cu128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.Ord.html\" title=\"trait sp_std::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;) -&gt; <a class=\"enum\" href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"sp_std/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"sp_std/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"sp_std/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;, max: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"sp_std/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","sp_std::num::NonZeroU128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#impl-Ord-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.Ord.html\" title=\"trait sp_std::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; <a class=\"enum\" href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"sp_std/cmp/enum.Ordering.html\" title=\"enum sp_std::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"sp_std/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"sp_std/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"sp_std/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;, max: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"sp_std/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","sp_std::num::NonZeroU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-NonZero%3Cu128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a></span><a href=\"#impl-BitOrAssign-for-NonZero%3Cu128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOrAssign.html\" title=\"trait sp_std::ops::BitOrAssign\">BitOrAssign</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","sp_std::num::NonZeroU128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3Cu128%3E-for-NonZero%3Cu128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a></span><a href=\"#impl-BitOrAssign%3Cu128%3E-for-NonZero%3Cu128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOrAssign.html\" title=\"trait sp_std::ops::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<u128>","sp_std::num::NonZeroU128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-NonZero%3Cusize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a></span><a href=\"#impl-BitOrAssign-for-NonZero%3Cusize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOrAssign.html\" title=\"trait sp_std::ops::BitOrAssign\">BitOrAssign</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","sp_std::num::NonZeroUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3Cu16%3E-for-NonZero%3Cu16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a></span><a href=\"#impl-BitOrAssign%3Cu16%3E-for-NonZero%3Cu16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOrAssign.html\" title=\"trait sp_std::ops::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<u16>","sp_std::num::NonZeroU16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3Ci128%3E-for-NonZero%3Ci128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a></span><a href=\"#impl-BitOrAssign%3Ci128%3E-for-NonZero%3Ci128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOrAssign.html\" title=\"trait sp_std::ops::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<i128>","sp_std::num::NonZeroI128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3Ci64%3E-for-NonZero%3Ci64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a></span><a href=\"#impl-BitOrAssign%3Ci64%3E-for-NonZero%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOrAssign.html\" title=\"trait sp_std::ops::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<i64>","sp_std::num::NonZeroI64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-NonZero%3Ci32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a></span><a href=\"#impl-BitOrAssign-for-NonZero%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOrAssign.html\" title=\"trait sp_std::ops::BitOrAssign\">BitOrAssign</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","sp_std::num::NonZeroI32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3Ci32%3E-for-NonZero%3Ci32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a></span><a href=\"#impl-BitOrAssign%3Ci32%3E-for-NonZero%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOrAssign.html\" title=\"trait sp_std::ops::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<i32>","sp_std::num::NonZeroI32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3Cisize%3E-for-NonZero%3Cisize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a></span><a href=\"#impl-BitOrAssign%3Cisize%3E-for-NonZero%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOrAssign.html\" title=\"trait sp_std::ops::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<isize>","sp_std::num::NonZeroIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3Cusize%3E-for-NonZero%3Cusize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a></span><a href=\"#impl-BitOrAssign%3Cusize%3E-for-NonZero%3Cusize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOrAssign.html\" title=\"trait sp_std::ops::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<usize>","sp_std::num::NonZeroUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3Cu8%3E-for-NonZero%3Cu8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a></span><a href=\"#impl-BitOrAssign%3Cu8%3E-for-NonZero%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOrAssign.html\" title=\"trait sp_std::ops::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<u8>","sp_std::num::NonZeroU8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3Ci8%3E-for-NonZero%3Ci8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a></span><a href=\"#impl-BitOrAssign%3Ci8%3E-for-NonZero%3Ci8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOrAssign.html\" title=\"trait sp_std::ops::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<i8>","sp_std::num::NonZeroI8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-NonZero%3Ci8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a></span><a href=\"#impl-BitOrAssign-for-NonZero%3Ci8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOrAssign.html\" title=\"trait sp_std::ops::BitOrAssign\">BitOrAssign</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","sp_std::num::NonZeroI8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-NonZero%3Cu16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a></span><a href=\"#impl-BitOrAssign-for-NonZero%3Cu16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOrAssign.html\" title=\"trait sp_std::ops::BitOrAssign\">BitOrAssign</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","sp_std::num::NonZeroU16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-NonZero%3Ci64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a></span><a href=\"#impl-BitOrAssign-for-NonZero%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOrAssign.html\" title=\"trait sp_std::ops::BitOrAssign\">BitOrAssign</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","sp_std::num::NonZeroI64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3Ci16%3E-for-NonZero%3Ci16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a></span><a href=\"#impl-BitOrAssign%3Ci16%3E-for-NonZero%3Ci16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOrAssign.html\" title=\"trait sp_std::ops::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<i16>","sp_std::num::NonZeroI16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a></span><a href=\"#impl-BitOrAssign-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOrAssign.html\" title=\"trait sp_std::ops::BitOrAssign\">BitOrAssign</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","sp_std::num::NonZeroU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-NonZero%3Ci16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a></span><a href=\"#impl-BitOrAssign-for-NonZero%3Ci16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOrAssign.html\" title=\"trait sp_std::ops::BitOrAssign\">BitOrAssign</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","sp_std::num::NonZeroI16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-NonZero%3Cisize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a></span><a href=\"#impl-BitOrAssign-for-NonZero%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOrAssign.html\" title=\"trait sp_std::ops::BitOrAssign\">BitOrAssign</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","sp_std::num::NonZeroIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-NonZero%3Ci128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a></span><a href=\"#impl-BitOrAssign-for-NonZero%3Ci128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOrAssign.html\" title=\"trait sp_std::ops::BitOrAssign\">BitOrAssign</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","sp_std::num::NonZeroI128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-NonZero%3Cu8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a></span><a href=\"#impl-BitOrAssign-for-NonZero%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOrAssign.html\" title=\"trait sp_std::ops::BitOrAssign\">BitOrAssign</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","sp_std::num::NonZeroU8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign-for-NonZero%3Cu32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a></span><a href=\"#impl-BitOrAssign-for-NonZero%3Cu32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOrAssign.html\" title=\"trait sp_std::ops::BitOrAssign\">BitOrAssign</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign","sp_std::num::NonZeroU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3Cu32%3E-for-NonZero%3Cu32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a></span><a href=\"#impl-BitOrAssign%3Cu32%3E-for-NonZero%3Cu32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOrAssign.html\" title=\"trait sp_std::ops::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<u32>","sp_std::num::NonZeroU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3Cu64%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.45.0\">1.45.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a></span><a href=\"#impl-BitOrAssign%3Cu64%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.BitOrAssign.html\" title=\"trait sp_std::ops::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>)</h4></section></summary><div class='docblock'>Performs the <code>|=</code> operation. <a href=\"sp_std/ops/trait.BitOrAssign.html#tymethod.bitor_assign\">Read more</a></div></details></div></details>","BitOrAssign<u64>","sp_std::num::NonZeroU64"],["<section id=\"impl-Copy-for-NonZero%3Cu8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#impl-Copy-for-NonZero%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/marker/trait.Copy.html\" title=\"trait sp_std::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h3></section>","Copy","sp_std::num::NonZeroU8"],["<section id=\"impl-Copy-for-NonZero%3Cu16%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#impl-Copy-for-NonZero%3Cu16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/marker/trait.Copy.html\" title=\"trait sp_std::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h3></section>","Copy","sp_std::num::NonZeroU16"],["<section id=\"impl-Copy-for-NonZero%3Cusize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#impl-Copy-for-NonZero%3Cusize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/marker/trait.Copy.html\" title=\"trait sp_std::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h3></section>","Copy","sp_std::num::NonZeroUsize"],["<section id=\"impl-Copy-for-NonZero%3Ci128%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#impl-Copy-for-NonZero%3Ci128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/marker/trait.Copy.html\" title=\"trait sp_std::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h3></section>","Copy","sp_std::num::NonZeroI128"],["<section id=\"impl-Copy-for-NonZero%3Ci64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#impl-Copy-for-NonZero%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/marker/trait.Copy.html\" title=\"trait sp_std::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h3></section>","Copy","sp_std::num::NonZeroI64"],["<section id=\"impl-Copy-for-NonZero%3Ci8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#impl-Copy-for-NonZero%3Ci8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/marker/trait.Copy.html\" title=\"trait sp_std::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h3></section>","Copy","sp_std::num::NonZeroI8"],["<section id=\"impl-Copy-for-NonZero%3Cu32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#impl-Copy-for-NonZero%3Cu32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/marker/trait.Copy.html\" title=\"trait sp_std::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h3></section>","Copy","sp_std::num::NonZeroU32"],["<section id=\"impl-Copy-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#impl-Copy-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/marker/trait.Copy.html\" title=\"trait sp_std::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h3></section>","Copy","sp_std::num::NonZeroU64"],["<section id=\"impl-Copy-for-NonZero%3Ci32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#impl-Copy-for-NonZero%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/marker/trait.Copy.html\" title=\"trait sp_std::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h3></section>","Copy","sp_std::num::NonZeroI32"],["<section id=\"impl-Copy-for-NonZero%3Cisize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#impl-Copy-for-NonZero%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/marker/trait.Copy.html\" title=\"trait sp_std::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h3></section>","Copy","sp_std::num::NonZeroIsize"],["<section id=\"impl-Copy-for-NonZero%3Ci16%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#impl-Copy-for-NonZero%3Ci16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/marker/trait.Copy.html\" title=\"trait sp_std::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h3></section>","Copy","sp_std::num::NonZeroI16"],["<section id=\"impl-Copy-for-NonZero%3Cu128%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#impl-Copy-for-NonZero%3Cu128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/marker/trait.Copy.html\" title=\"trait sp_std::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h3></section>","Copy","sp_std::num::NonZeroU128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-NonZero%3Cisize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#impl-PartialEq-for-NonZero%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.PartialEq.html\" title=\"trait sp_std::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","sp_std::num::NonZeroIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-NonZero%3Cu32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#impl-PartialEq-for-NonZero%3Cu32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.PartialEq.html\" title=\"trait sp_std::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","sp_std::num::NonZeroU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#impl-PartialEq-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.PartialEq.html\" title=\"trait sp_std::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","sp_std::num::NonZeroU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-NonZero%3Cu8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#impl-PartialEq-for-NonZero%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.PartialEq.html\" title=\"trait sp_std::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","sp_std::num::NonZeroU8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-NonZero%3Ci32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#impl-PartialEq-for-NonZero%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.PartialEq.html\" title=\"trait sp_std::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","sp_std::num::NonZeroI32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-NonZero%3Ci16%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#impl-PartialEq-for-NonZero%3Ci16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.PartialEq.html\" title=\"trait sp_std::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","sp_std::num::NonZeroI16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-NonZero%3Cu16%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#impl-PartialEq-for-NonZero%3Cu16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.PartialEq.html\" title=\"trait sp_std::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","sp_std::num::NonZeroU16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-NonZero%3Cu128%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#impl-PartialEq-for-NonZero%3Cu128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.PartialEq.html\" title=\"trait sp_std::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","sp_std::num::NonZeroU128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-NonZero%3Ci128%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#impl-PartialEq-for-NonZero%3Ci128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.PartialEq.html\" title=\"trait sp_std::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","sp_std::num::NonZeroI128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-NonZero%3Ci64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#impl-PartialEq-for-NonZero%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.PartialEq.html\" title=\"trait sp_std::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","sp_std::num::NonZeroI64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-NonZero%3Cusize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#impl-PartialEq-for-NonZero%3Cusize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.PartialEq.html\" title=\"trait sp_std::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","sp_std::num::NonZeroUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-NonZero%3Ci8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#impl-PartialEq-for-NonZero%3Ci8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/cmp/trait.PartialEq.html\" title=\"trait sp_std::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","sp_std::num::NonZeroI8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Binary-for-NonZero%3Cu32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#impl-Binary-for-NonZero%3Cu32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Binary.html\" title=\"trait sp_std::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Binary.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Binary","sp_std::num::NonZeroU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Binary-for-NonZero%3Ci16%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#impl-Binary-for-NonZero%3Ci16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Binary.html\" title=\"trait sp_std::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Binary.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Binary","sp_std::num::NonZeroI16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Binary-for-NonZero%3Ci8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#impl-Binary-for-NonZero%3Ci8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Binary.html\" title=\"trait sp_std::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Binary.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Binary","sp_std::num::NonZeroI8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Binary-for-NonZero%3Ci32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#impl-Binary-for-NonZero%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Binary.html\" title=\"trait sp_std::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Binary.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Binary","sp_std::num::NonZeroI32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Binary-for-NonZero%3Cu16%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#impl-Binary-for-NonZero%3Cu16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Binary.html\" title=\"trait sp_std::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Binary.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Binary","sp_std::num::NonZeroU16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Binary-for-NonZero%3Cu8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#impl-Binary-for-NonZero%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Binary.html\" title=\"trait sp_std::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Binary.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Binary","sp_std::num::NonZeroU8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Binary-for-NonZero%3Cu128%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#impl-Binary-for-NonZero%3Cu128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Binary.html\" title=\"trait sp_std::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Binary.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Binary","sp_std::num::NonZeroU128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Binary-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#impl-Binary-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Binary.html\" title=\"trait sp_std::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Binary.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Binary","sp_std::num::NonZeroU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Binary-for-NonZero%3Cusize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#impl-Binary-for-NonZero%3Cusize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Binary.html\" title=\"trait sp_std::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Binary.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Binary","sp_std::num::NonZeroUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Binary-for-NonZero%3Ci64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#impl-Binary-for-NonZero%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Binary.html\" title=\"trait sp_std::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Binary.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Binary","sp_std::num::NonZeroI64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Binary-for-NonZero%3Ci128%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#impl-Binary-for-NonZero%3Ci128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Binary.html\" title=\"trait sp_std::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Binary.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Binary","sp_std::num::NonZeroI128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Binary-for-NonZero%3Cisize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#impl-Binary-for-NonZero%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.Binary.html\" title=\"trait sp_std::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.Binary.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Binary","sp_std::num::NonZeroIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-NonZero%3Ci8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#impl-LowerHex-for-NonZero%3Ci8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.LowerHex.html\" title=\"trait sp_std::fmt::LowerHex\">LowerHex</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","sp_std::num::NonZeroI8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-NonZero%3Cisize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#impl-LowerHex-for-NonZero%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.LowerHex.html\" title=\"trait sp_std::fmt::LowerHex\">LowerHex</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","sp_std::num::NonZeroIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-NonZero%3Cusize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#impl-LowerHex-for-NonZero%3Cusize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.LowerHex.html\" title=\"trait sp_std::fmt::LowerHex\">LowerHex</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","sp_std::num::NonZeroUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#impl-LowerHex-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.LowerHex.html\" title=\"trait sp_std::fmt::LowerHex\">LowerHex</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","sp_std::num::NonZeroU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-NonZero%3Cu16%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#impl-LowerHex-for-NonZero%3Cu16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.LowerHex.html\" title=\"trait sp_std::fmt::LowerHex\">LowerHex</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","sp_std::num::NonZeroU16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-NonZero%3Cu8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#impl-LowerHex-for-NonZero%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.LowerHex.html\" title=\"trait sp_std::fmt::LowerHex\">LowerHex</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","sp_std::num::NonZeroU8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-NonZero%3Cu32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#impl-LowerHex-for-NonZero%3Cu32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.LowerHex.html\" title=\"trait sp_std::fmt::LowerHex\">LowerHex</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","sp_std::num::NonZeroU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-NonZero%3Cu128%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#impl-LowerHex-for-NonZero%3Cu128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.LowerHex.html\" title=\"trait sp_std::fmt::LowerHex\">LowerHex</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","sp_std::num::NonZeroU128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-NonZero%3Ci32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#impl-LowerHex-for-NonZero%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.LowerHex.html\" title=\"trait sp_std::fmt::LowerHex\">LowerHex</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","sp_std::num::NonZeroI32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-NonZero%3Ci16%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#impl-LowerHex-for-NonZero%3Ci16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.LowerHex.html\" title=\"trait sp_std::fmt::LowerHex\">LowerHex</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","sp_std::num::NonZeroI16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-NonZero%3Ci64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#impl-LowerHex-for-NonZero%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.LowerHex.html\" title=\"trait sp_std::fmt::LowerHex\">LowerHex</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","sp_std::num::NonZeroI64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-NonZero%3Ci128%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#impl-LowerHex-for-NonZero%3Ci128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.LowerHex.html\" title=\"trait sp_std::fmt::LowerHex\">LowerHex</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","sp_std::num::NonZeroI128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-NonZero%3Ci16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a></span><a href=\"#impl-FromStr-for-NonZero%3Ci16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/str/trait.FromStr.html\" title=\"trait sp_std::str::FromStr\">FromStr</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/str/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"sp_std/num/struct.ParseIntError.html\" title=\"struct sp_std::num::ParseIntError\">ParseIntError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/str/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt; as <a class=\"trait\" href=\"sp_std/str/trait.FromStr.html\" title=\"trait sp_std::str::FromStr\">FromStr</a>&gt;::<a class=\"associatedtype\" href=\"sp_std/str/trait.FromStr.html#associatedtype.Err\" title=\"type sp_std::str::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"sp_std/str/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","sp_std::num::NonZeroI16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-NonZero%3Cu32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a></span><a href=\"#impl-FromStr-for-NonZero%3Cu32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/str/trait.FromStr.html\" title=\"trait sp_std::str::FromStr\">FromStr</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/str/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"sp_std/num/struct.ParseIntError.html\" title=\"struct sp_std::num::ParseIntError\">ParseIntError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/str/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt; as <a class=\"trait\" href=\"sp_std/str/trait.FromStr.html\" title=\"trait sp_std::str::FromStr\">FromStr</a>&gt;::<a class=\"associatedtype\" href=\"sp_std/str/trait.FromStr.html#associatedtype.Err\" title=\"type sp_std::str::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"sp_std/str/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","sp_std::num::NonZeroU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-NonZero%3Cu16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a></span><a href=\"#impl-FromStr-for-NonZero%3Cu16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/str/trait.FromStr.html\" title=\"trait sp_std::str::FromStr\">FromStr</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/str/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"sp_std/num/struct.ParseIntError.html\" title=\"struct sp_std::num::ParseIntError\">ParseIntError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/str/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt; as <a class=\"trait\" href=\"sp_std/str/trait.FromStr.html\" title=\"trait sp_std::str::FromStr\">FromStr</a>&gt;::<a class=\"associatedtype\" href=\"sp_std/str/trait.FromStr.html#associatedtype.Err\" title=\"type sp_std::str::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"sp_std/str/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","sp_std::num::NonZeroU16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-NonZero%3Ci32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a></span><a href=\"#impl-FromStr-for-NonZero%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/str/trait.FromStr.html\" title=\"trait sp_std::str::FromStr\">FromStr</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/str/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"sp_std/num/struct.ParseIntError.html\" title=\"struct sp_std::num::ParseIntError\">ParseIntError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/str/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt; as <a class=\"trait\" href=\"sp_std/str/trait.FromStr.html\" title=\"trait sp_std::str::FromStr\">FromStr</a>&gt;::<a class=\"associatedtype\" href=\"sp_std/str/trait.FromStr.html#associatedtype.Err\" title=\"type sp_std::str::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"sp_std/str/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","sp_std::num::NonZeroI32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-NonZero%3Cu8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a></span><a href=\"#impl-FromStr-for-NonZero%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/str/trait.FromStr.html\" title=\"trait sp_std::str::FromStr\">FromStr</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/str/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"sp_std/num/struct.ParseIntError.html\" title=\"struct sp_std::num::ParseIntError\">ParseIntError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/str/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; as <a class=\"trait\" href=\"sp_std/str/trait.FromStr.html\" title=\"trait sp_std::str::FromStr\">FromStr</a>&gt;::<a class=\"associatedtype\" href=\"sp_std/str/trait.FromStr.html#associatedtype.Err\" title=\"type sp_std::str::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"sp_std/str/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","sp_std::num::NonZeroU8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-NonZero%3Ci64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a></span><a href=\"#impl-FromStr-for-NonZero%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/str/trait.FromStr.html\" title=\"trait sp_std::str::FromStr\">FromStr</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/str/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"sp_std/num/struct.ParseIntError.html\" title=\"struct sp_std::num::ParseIntError\">ParseIntError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/str/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt; as <a class=\"trait\" href=\"sp_std/str/trait.FromStr.html\" title=\"trait sp_std::str::FromStr\">FromStr</a>&gt;::<a class=\"associatedtype\" href=\"sp_std/str/trait.FromStr.html#associatedtype.Err\" title=\"type sp_std::str::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"sp_std/str/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","sp_std::num::NonZeroI64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-NonZero%3Cusize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a></span><a href=\"#impl-FromStr-for-NonZero%3Cusize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/str/trait.FromStr.html\" title=\"trait sp_std::str::FromStr\">FromStr</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/str/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"sp_std/num/struct.ParseIntError.html\" title=\"struct sp_std::num::ParseIntError\">ParseIntError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/str/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(\n    src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; as <a class=\"trait\" href=\"sp_std/str/trait.FromStr.html\" title=\"trait sp_std::str::FromStr\">FromStr</a>&gt;::<a class=\"associatedtype\" href=\"sp_std/str/trait.FromStr.html#associatedtype.Err\" title=\"type sp_std::str::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"sp_std/str/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","sp_std::num::NonZeroUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-NonZero%3Cisize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a></span><a href=\"#impl-FromStr-for-NonZero%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/str/trait.FromStr.html\" title=\"trait sp_std::str::FromStr\">FromStr</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/str/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"sp_std/num/struct.ParseIntError.html\" title=\"struct sp_std::num::ParseIntError\">ParseIntError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/str/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(\n    src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt; as <a class=\"trait\" href=\"sp_std/str/trait.FromStr.html\" title=\"trait sp_std::str::FromStr\">FromStr</a>&gt;::<a class=\"associatedtype\" href=\"sp_std/str/trait.FromStr.html#associatedtype.Err\" title=\"type sp_std::str::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"sp_std/str/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","sp_std::num::NonZeroIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-NonZero%3Cu128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a></span><a href=\"#impl-FromStr-for-NonZero%3Cu128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/str/trait.FromStr.html\" title=\"trait sp_std::str::FromStr\">FromStr</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/str/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"sp_std/num/struct.ParseIntError.html\" title=\"struct sp_std::num::ParseIntError\">ParseIntError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/str/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt; as <a class=\"trait\" href=\"sp_std/str/trait.FromStr.html\" title=\"trait sp_std::str::FromStr\">FromStr</a>&gt;::<a class=\"associatedtype\" href=\"sp_std/str/trait.FromStr.html#associatedtype.Err\" title=\"type sp_std::str::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"sp_std/str/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","sp_std::num::NonZeroU128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a></span><a href=\"#impl-FromStr-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/str/trait.FromStr.html\" title=\"trait sp_std::str::FromStr\">FromStr</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/str/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"sp_std/num/struct.ParseIntError.html\" title=\"struct sp_std::num::ParseIntError\">ParseIntError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/str/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"sp_std/str/trait.FromStr.html\" title=\"trait sp_std::str::FromStr\">FromStr</a>&gt;::<a class=\"associatedtype\" href=\"sp_std/str/trait.FromStr.html#associatedtype.Err\" title=\"type sp_std::str::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"sp_std/str/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","sp_std::num::NonZeroU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-NonZero%3Ci8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a></span><a href=\"#impl-FromStr-for-NonZero%3Ci8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/str/trait.FromStr.html\" title=\"trait sp_std::str::FromStr\">FromStr</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/str/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"sp_std/num/struct.ParseIntError.html\" title=\"struct sp_std::num::ParseIntError\">ParseIntError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/str/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt; as <a class=\"trait\" href=\"sp_std/str/trait.FromStr.html\" title=\"trait sp_std::str::FromStr\">FromStr</a>&gt;::<a class=\"associatedtype\" href=\"sp_std/str/trait.FromStr.html#associatedtype.Err\" title=\"type sp_std::str::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"sp_std/str/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","sp_std::num::NonZeroI8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-NonZero%3Ci128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a></span><a href=\"#impl-FromStr-for-NonZero%3Ci128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/str/trait.FromStr.html\" title=\"trait sp_std::str::FromStr\">FromStr</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/str/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"struct\" href=\"sp_std/num/struct.ParseIntError.html\" title=\"struct sp_std::num::ParseIntError\">ParseIntError</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/str/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(src: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt; as <a class=\"trait\" href=\"sp_std/str/trait.FromStr.html\" title=\"trait sp_std::str::FromStr\">FromStr</a>&gt;::<a class=\"associatedtype\" href=\"sp_std/str/trait.FromStr.html#associatedtype.Err\" title=\"type sp_std::str::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"sp_std/str/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","sp_std::num::NonZeroI128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Cu32%3E%3E-for-NonZero%3Ci128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#490\">source</a></span><a href=\"#impl-From%3CNonZero%3Cu32%3E%3E-for-NonZero%3Ci128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#490\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroU32</code> to <code>NonZeroI128</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<u32>>","sp_std::num::NonZeroI128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Cu64%3E%3E-for-NonZero%3Cu128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#464\">source</a></span><a href=\"#impl-From%3CNonZero%3Cu64%3E%3E-for-NonZero%3Cu128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#464\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroU64</code> to <code>NonZeroU128</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<u64>>","sp_std::num::NonZeroU128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Cu32%3E%3E-for-NonZero%3Ci64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#489\">source</a></span><a href=\"#impl-From%3CNonZero%3Cu32%3E%3E-for-NonZero%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#489\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroU32</code> to <code>NonZeroI64</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<u32>>","sp_std::num::NonZeroI64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Cu8%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#455\">source</a></span><a href=\"#impl-From%3CNonZero%3Cu8%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#455\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroU8</code> to <code>NonZeroU64</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<u8>>","sp_std::num::NonZeroU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Ci8%3E%3E-for-NonZero%3Ci64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#469\">source</a></span><a href=\"#impl-From%3CNonZero%3Ci8%3E%3E-for-NonZero%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#469\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroI8</code> to <code>NonZeroI64</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<i8>>","sp_std::num::NonZeroI64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Cu16%3E%3E-for-NonZero%3Ci64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#487\">source</a></span><a href=\"#impl-From%3CNonZero%3Cu16%3E%3E-for-NonZero%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#487\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroU16</code> to <code>NonZeroI64</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<u16>>","sp_std::num::NonZeroI64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Cu8%3E%3E-for-NonZero%3Cu16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#453\">source</a></span><a href=\"#impl-From%3CNonZero%3Cu8%3E%3E-for-NonZero%3Cu16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#453\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroU8</code> to <code>NonZeroU16</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<u8>>","sp_std::num::NonZeroU16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Cu8%3E%3E-for-NonZero%3Ci64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#483\">source</a></span><a href=\"#impl-From%3CNonZero%3Cu8%3E%3E-for-NonZero%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#483\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroU8</code> to <code>NonZeroI64</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<u8>>","sp_std::num::NonZeroI64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Cu16%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#459\">source</a></span><a href=\"#impl-From%3CNonZero%3Cu16%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#459\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroU16</code> to <code>NonZeroU64</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<u16>>","sp_std::num::NonZeroU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Ci16%3E%3E-for-NonZero%3Cisize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#475\">source</a></span><a href=\"#impl-From%3CNonZero%3Ci16%3E%3E-for-NonZero%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#475\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroI16</code> to <code>NonZeroIsize</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<i16>>","sp_std::num::NonZeroIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Cu8%3E%3E-for-NonZero%3Ci32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#482\">source</a></span><a href=\"#impl-From%3CNonZero%3Cu8%3E%3E-for-NonZero%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#482\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroU8</code> to <code>NonZeroI32</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<u8>>","sp_std::num::NonZeroI32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Cu16%3E%3E-for-NonZero%3Ci32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#486\">source</a></span><a href=\"#impl-From%3CNonZero%3Cu16%3E%3E-for-NonZero%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#486\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroU16</code> to <code>NonZeroI32</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<u16>>","sp_std::num::NonZeroI32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Cu8%3E%3E-for-NonZero%3Ci128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#484\">source</a></span><a href=\"#impl-From%3CNonZero%3Cu8%3E%3E-for-NonZero%3Ci128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#484\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroU8</code> to <code>NonZeroI128</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<u8>>","sp_std::num::NonZeroI128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Cu8%3E%3E-for-NonZero%3Cu32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#454\">source</a></span><a href=\"#impl-From%3CNonZero%3Cu8%3E%3E-for-NonZero%3Cu32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#454\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroU8</code> to <code>NonZeroU32</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<u8>>","sp_std::num::NonZeroU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Ci16%3E%3E-for-NonZero%3Ci128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#474\">source</a></span><a href=\"#impl-From%3CNonZero%3Ci16%3E%3E-for-NonZero%3Ci128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#474\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroI16</code> to <code>NonZeroI128</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<i16>>","sp_std::num::NonZeroI128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Ci16%3E%3E-for-NonZero%3Ci32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#472\">source</a></span><a href=\"#impl-From%3CNonZero%3Ci16%3E%3E-for-NonZero%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#472\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroI16</code> to <code>NonZeroI32</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<i16>>","sp_std::num::NonZeroI32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Cu8%3E%3E-for-NonZero%3Cisize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#485\">source</a></span><a href=\"#impl-From%3CNonZero%3Cu8%3E%3E-for-NonZero%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#485\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroU8</code> to <code>NonZeroIsize</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<u8>>","sp_std::num::NonZeroIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Cu16%3E%3E-for-NonZero%3Cu128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#460\">source</a></span><a href=\"#impl-From%3CNonZero%3Cu16%3E%3E-for-NonZero%3Cu128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#460\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroU16</code> to <code>NonZeroU128</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<u16>>","sp_std::num::NonZeroU128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Cu32%3E%3E-for-NonZero%3Cu128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#463\">source</a></span><a href=\"#impl-From%3CNonZero%3Cu32%3E%3E-for-NonZero%3Cu128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#463\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroU32</code> to <code>NonZeroU128</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<u32>>","sp_std::num::NonZeroU128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Cu16%3E%3E-for-NonZero%3Cu32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#458\">source</a></span><a href=\"#impl-From%3CNonZero%3Cu16%3E%3E-for-NonZero%3Cu32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#458\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroU16</code> to <code>NonZeroU32</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<u16>>","sp_std::num::NonZeroU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Ci8%3E%3E-for-NonZero%3Cisize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#471\">source</a></span><a href=\"#impl-From%3CNonZero%3Ci8%3E%3E-for-NonZero%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#471\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroI8</code> to <code>NonZeroIsize</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<i8>>","sp_std::num::NonZeroIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Ci64%3E%3E-for-NonZero%3Ci128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#478\">source</a></span><a href=\"#impl-From%3CNonZero%3Ci64%3E%3E-for-NonZero%3Ci128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#478\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroI64</code> to <code>NonZeroI128</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<i64>>","sp_std::num::NonZeroI128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Ci8%3E%3E-for-NonZero%3Ci32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#468\">source</a></span><a href=\"#impl-From%3CNonZero%3Ci8%3E%3E-for-NonZero%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#468\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroI8</code> to <code>NonZeroI32</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<i8>>","sp_std::num::NonZeroI32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Cu8%3E%3E-for-NonZero%3Cusize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#457\">source</a></span><a href=\"#impl-From%3CNonZero%3Cu8%3E%3E-for-NonZero%3Cusize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#457\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroU8</code> to <code>NonZeroUsize</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<u8>>","sp_std::num::NonZeroUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Ci8%3E%3E-for-NonZero%3Ci128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#470\">source</a></span><a href=\"#impl-From%3CNonZero%3Ci8%3E%3E-for-NonZero%3Ci128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#470\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroI8</code> to <code>NonZeroI128</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<i8>>","sp_std::num::NonZeroI128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Ci32%3E%3E-for-NonZero%3Ci64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#476\">source</a></span><a href=\"#impl-From%3CNonZero%3Ci32%3E%3E-for-NonZero%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#476\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroI32</code> to <code>NonZeroI64</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<i32>>","sp_std::num::NonZeroI64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Cu64%3E%3E-for-NonZero%3Ci128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#491\">source</a></span><a href=\"#impl-From%3CNonZero%3Cu64%3E%3E-for-NonZero%3Ci128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#491\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroU64</code> to <code>NonZeroI128</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<u64>>","sp_std::num::NonZeroI128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Cu32%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#462\">source</a></span><a href=\"#impl-From%3CNonZero%3Cu32%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#462\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroU32</code> to <code>NonZeroU64</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<u32>>","sp_std::num::NonZeroU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Cu16%3E%3E-for-NonZero%3Cusize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#461\">source</a></span><a href=\"#impl-From%3CNonZero%3Cu16%3E%3E-for-NonZero%3Cusize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#461\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroU16</code> to <code>NonZeroUsize</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<u16>>","sp_std::num::NonZeroUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Ci16%3E%3E-for-NonZero%3Ci64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#473\">source</a></span><a href=\"#impl-From%3CNonZero%3Ci16%3E%3E-for-NonZero%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#473\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroI16</code> to <code>NonZeroI64</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<i16>>","sp_std::num::NonZeroI64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Cu8%3E%3E-for-NonZero%3Cu128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#456\">source</a></span><a href=\"#impl-From%3CNonZero%3Cu8%3E%3E-for-NonZero%3Cu128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#456\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroU8</code> to <code>NonZeroU128</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<u8>>","sp_std::num::NonZeroU128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Ci8%3E%3E-for-NonZero%3Ci16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#467\">source</a></span><a href=\"#impl-From%3CNonZero%3Ci8%3E%3E-for-NonZero%3Ci16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#467\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroI8</code> to <code>NonZeroI16</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<i8>>","sp_std::num::NonZeroI16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Ci32%3E%3E-for-NonZero%3Ci128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#477\">source</a></span><a href=\"#impl-From%3CNonZero%3Ci32%3E%3E-for-NonZero%3Ci128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#477\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroI32</code> to <code>NonZeroI128</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<i32>>","sp_std::num::NonZeroI128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Cu8%3E%3E-for-NonZero%3Ci16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#481\">source</a></span><a href=\"#impl-From%3CNonZero%3Cu8%3E%3E-for-NonZero%3Ci16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#481\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroU8</code> to <code>NonZeroI16</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<u8>>","sp_std::num::NonZeroI16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CAlignment%3E-for-NonZero%3Cusize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/ptr/alignment.rs.html#186\">source</a><a href=\"#impl-From%3CAlignment%3E-for-NonZero%3Cusize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/ptr/struct.Alignment.html\" title=\"struct sp_std::ptr::Alignment\">Alignment</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/ptr/alignment.rs.html#188\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(align: <a class=\"struct\" href=\"sp_std/ptr/struct.Alignment.html\" title=\"struct sp_std::ptr::Alignment\">Alignment</a>) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Alignment>","sp_std::num::NonZeroUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CNonZero%3Cu16%3E%3E-for-NonZero%3Ci128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.41.0\">1.41.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#488\">source</a></span><a href=\"#impl-From%3CNonZero%3Cu16%3E%3E-for-NonZero%3Ci128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.From.html\" title=\"trait sp_std::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#488\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(small: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts <code>NonZeroU16</code> to <code>NonZeroI128</code> losslessly.</p>\n</div></details></div></details>","From<NonZero<u16>>","sp_std::num::NonZeroI128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci16%3E%3E-for-NonZero%3Cu128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#571\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci16%3E%3E-for-NonZero%3Cu128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#571\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI16</code> to <code>NonZeroU128</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i16>>","sp_std::num::NonZeroU128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cisize%3E%3E-for-NonZero%3Cusize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#572\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cisize%3E%3E-for-NonZero%3Cusize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#572\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroIsize</code> to <code>NonZeroUsize</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<isize>>","sp_std::num::NonZeroUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cusize%3E-for-NonZero%3Cusize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0\">1.46.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#526\">source</a></span><a href=\"#impl-TryFrom%3Cusize%3E-for-NonZero%3Cusize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#526\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>usize</code> to <code>NonZeroUsize</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<usize>","sp_std::num::NonZeroUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cu64%3E%3E-for-NonZero%3Cu16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#568\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cu64%3E%3E-for-NonZero%3Cu16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#568\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU64</code> to <code>NonZeroU16</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<u64>>","sp_std::num::NonZeroU16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu64%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0\">1.46.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#524\">source</a></span><a href=\"#impl-TryFrom%3Cu64%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#524\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>u64</code> to <code>NonZeroU64</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<u64>","sp_std::num::NonZeroU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cu128%3E%3E-for-NonZero%3Cu8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#567\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cu128%3E%3E-for-NonZero%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#567\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU128</code> to <code>NonZeroU8</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<u128>>","sp_std::num::NonZeroU8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cusize%3E%3E-for-NonZero%3Cisize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#580\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cusize%3E%3E-for-NonZero%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#580\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroUsize</code> to <code>NonZeroIsize</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<usize>>","sp_std::num::NonZeroIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cu64%3E%3E-for-NonZero%3Ci8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#575\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cu64%3E%3E-for-NonZero%3Ci8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#575\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU64</code> to <code>NonZeroI8</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<u64>>","sp_std::num::NonZeroI8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci32%3E%3E-for-NonZero%3Cu32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#569\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci32%3E%3E-for-NonZero%3Cu32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#569\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI32</code> to <code>NonZeroU32</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i32>>","sp_std::num::NonZeroU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci16%3E%3E-for-NonZero%3Ci8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#575\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci16%3E%3E-for-NonZero%3Ci8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#575\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI16</code> to <code>NonZeroI8</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i16>>","sp_std::num::NonZeroI8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci64%3E%3E-for-NonZero%3Cu32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#569\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci64%3E%3E-for-NonZero%3Cu32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#569\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI64</code> to <code>NonZeroU32</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i64>>","sp_std::num::NonZeroU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci8%3E%3E-for-NonZero%3Cu128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#571\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci8%3E%3E-for-NonZero%3Cu128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#571\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI8</code> to <code>NonZeroU128</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i8>>","sp_std::num::NonZeroU128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cu128%3E%3E-for-NonZero%3Cusize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#572\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cu128%3E%3E-for-NonZero%3Cusize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#572\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU128</code> to <code>NonZeroUsize</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<u128>>","sp_std::num::NonZeroUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci64%3E%3E-for-NonZero%3Ci16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#576\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci64%3E%3E-for-NonZero%3Ci16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#576\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI64</code> to <code>NonZeroI16</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i64>>","sp_std::num::NonZeroI16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci32%3E%3E-for-NonZero%3Cu128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#571\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci32%3E%3E-for-NonZero%3Cu128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#571\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI32</code> to <code>NonZeroU128</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i32>>","sp_std::num::NonZeroU128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cu64%3E%3E-for-NonZero%3Cisize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#580\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cu64%3E%3E-for-NonZero%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#580\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU64</code> to <code>NonZeroIsize</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<u64>>","sp_std::num::NonZeroIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci64%3E%3E-for-NonZero%3Cu128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#571\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci64%3E%3E-for-NonZero%3Cu128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#571\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI64</code> to <code>NonZeroU128</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i64>>","sp_std::num::NonZeroU128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci64%3E%3E-for-NonZero%3Ci8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#575\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci64%3E%3E-for-NonZero%3Ci8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#575\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI64</code> to <code>NonZeroI8</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i64>>","sp_std::num::NonZeroI8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci8%3E%3E-for-NonZero%3Cu16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#568\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci8%3E%3E-for-NonZero%3Cu16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#568\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI8</code> to <code>NonZeroU16</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i8>>","sp_std::num::NonZeroU16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cu128%3E%3E-for-NonZero%3Ci64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#578\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cu128%3E%3E-for-NonZero%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#578\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU128</code> to <code>NonZeroI64</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<u128>>","sp_std::num::NonZeroI64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci128%3E%3E-for-NonZero%3Cisize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#580\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci128%3E%3E-for-NonZero%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#580\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI128</code> to <code>NonZeroIsize</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i128>>","sp_std::num::NonZeroIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cusize%3E%3E-for-NonZero%3Ci8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#575\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cusize%3E%3E-for-NonZero%3Ci8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#575\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroUsize</code> to <code>NonZeroI8</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<usize>>","sp_std::num::NonZeroI8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cu64%3E%3E-for-NonZero%3Ci16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#576\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cu64%3E%3E-for-NonZero%3Ci16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#576\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU64</code> to <code>NonZeroI16</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<u64>>","sp_std::num::NonZeroI16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci128%3E%3E-for-NonZero%3Cu128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#571\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci128%3E%3E-for-NonZero%3Cu128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#571\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI128</code> to <code>NonZeroU128</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i128>>","sp_std::num::NonZeroU128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cu16%3E%3E-for-NonZero%3Ci8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#575\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cu16%3E%3E-for-NonZero%3Ci8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#575\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU16</code> to <code>NonZeroI8</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<u16>>","sp_std::num::NonZeroI8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cusize%3E%3E-for-NonZero%3Cu128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#571\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cusize%3E%3E-for-NonZero%3Cu128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#571\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroUsize</code> to <code>NonZeroU128</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<usize>>","sp_std::num::NonZeroU128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cu32%3E%3E-for-NonZero%3Ci16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#576\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cu32%3E%3E-for-NonZero%3Ci16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#576\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU32</code> to <code>NonZeroI16</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<u32>>","sp_std::num::NonZeroI16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cu8%3E%3E-for-NonZero%3Ci8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#575\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cu8%3E%3E-for-NonZero%3Ci8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#575\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU8</code> to <code>NonZeroI8</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<u8>>","sp_std::num::NonZeroI8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cisize%3E%3E-for-NonZero%3Ci8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#575\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cisize%3E%3E-for-NonZero%3Ci8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#575\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroIsize</code> to <code>NonZeroI8</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<isize>>","sp_std::num::NonZeroI8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Ci64%3E-for-NonZero%3Ci64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0\">1.46.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#530\">source</a></span><a href=\"#impl-TryFrom%3Ci64%3E-for-NonZero%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#530\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>i64</code> to <code>NonZeroI64</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<i64>","sp_std::num::NonZeroI64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cu128%3E%3E-for-NonZero%3Cu32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#569\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cu128%3E%3E-for-NonZero%3Cu32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#569\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU128</code> to <code>NonZeroU32</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<u128>>","sp_std::num::NonZeroU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cisize%3E%3E-for-NonZero%3Cu32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#569\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cisize%3E%3E-for-NonZero%3Cu32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#569\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroIsize</code> to <code>NonZeroU32</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<isize>>","sp_std::num::NonZeroU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cisize%3E%3E-for-NonZero%3Cu16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#568\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cisize%3E%3E-for-NonZero%3Cu16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#568\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroIsize</code> to <code>NonZeroU16</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<isize>>","sp_std::num::NonZeroU16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cusize%3E%3E-for-NonZero%3Ci128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#579\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cusize%3E%3E-for-NonZero%3Ci128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#579\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroUsize</code> to <code>NonZeroI128</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<usize>>","sp_std::num::NonZeroI128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cu16%3E%3E-for-NonZero%3Ci16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#576\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cu16%3E%3E-for-NonZero%3Ci16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#576\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU16</code> to <code>NonZeroI16</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<u16>>","sp_std::num::NonZeroI16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci128%3E%3E-for-NonZero%3Cusize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#572\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci128%3E%3E-for-NonZero%3Cusize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#572\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI128</code> to <code>NonZeroUsize</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i128>>","sp_std::num::NonZeroUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cu128%3E%3E-for-NonZero%3Ci32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#577\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cu128%3E%3E-for-NonZero%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#577\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU128</code> to <code>NonZeroI32</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<u128>>","sp_std::num::NonZeroI32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci32%3E%3E-for-NonZero%3Ci16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#576\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci32%3E%3E-for-NonZero%3Ci16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#576\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI32</code> to <code>NonZeroI16</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i32>>","sp_std::num::NonZeroI16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci16%3E%3E-for-NonZero%3Cu32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#569\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci16%3E%3E-for-NonZero%3Cu32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#569\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI16</code> to <code>NonZeroU32</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i16>>","sp_std::num::NonZeroU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cu32%3E%3E-for-NonZero%3Cusize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#572\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cu32%3E%3E-for-NonZero%3Cusize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#572\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU32</code> to <code>NonZeroUsize</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<u32>>","sp_std::num::NonZeroUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cisize%3E%3E-for-NonZero%3Ci64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#578\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cisize%3E%3E-for-NonZero%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#578\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroIsize</code> to <code>NonZeroI64</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<isize>>","sp_std::num::NonZeroI64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cu32%3E%3E-for-NonZero%3Ci8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#575\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cu32%3E%3E-for-NonZero%3Ci8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#575\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU32</code> to <code>NonZeroI8</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<u32>>","sp_std::num::NonZeroI8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cisize%3E%3E-for-NonZero%3Cu8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#567\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cisize%3E%3E-for-NonZero%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#567\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroIsize</code> to <code>NonZeroU8</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<isize>>","sp_std::num::NonZeroU8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cu128%3E%3E-for-NonZero%3Ci128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#579\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cu128%3E%3E-for-NonZero%3Ci128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#579\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU128</code> to <code>NonZeroI128</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<u128>>","sp_std::num::NonZeroI128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci8%3E%3E-for-NonZero%3Cusize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#572\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci8%3E%3E-for-NonZero%3Cusize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#572\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI8</code> to <code>NonZeroUsize</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i8>>","sp_std::num::NonZeroUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci128%3E%3E-for-NonZero%3Ci16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#576\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci128%3E%3E-for-NonZero%3Ci16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#576\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI128</code> to <code>NonZeroI16</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i128>>","sp_std::num::NonZeroI16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cu128%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#570\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cu128%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#570\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU128</code> to <code>NonZeroU64</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<u128>>","sp_std::num::NonZeroU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cisize%3E%3E-for-NonZero%3Ci128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#579\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cisize%3E%3E-for-NonZero%3Ci128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#579\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroIsize</code> to <code>NonZeroI128</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<isize>>","sp_std::num::NonZeroI128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cu32%3E%3E-for-NonZero%3Cu8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#567\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cu32%3E%3E-for-NonZero%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#567\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU32</code> to <code>NonZeroU8</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<u32>>","sp_std::num::NonZeroU8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cu32%3E%3E-for-NonZero%3Cisize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#580\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cu32%3E%3E-for-NonZero%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#580\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU32</code> to <code>NonZeroIsize</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<u32>>","sp_std::num::NonZeroIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cu64%3E%3E-for-NonZero%3Cu32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#569\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cu64%3E%3E-for-NonZero%3Cu32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#569\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU64</code> to <code>NonZeroU32</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<u64>>","sp_std::num::NonZeroU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci32%3E%3E-for-NonZero%3Cusize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#572\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci32%3E%3E-for-NonZero%3Cusize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#572\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI32</code> to <code>NonZeroUsize</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i32>>","sp_std::num::NonZeroUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cu32%3E%3E-for-NonZero%3Cu16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#568\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cu32%3E%3E-for-NonZero%3Cu16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#568\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU32</code> to <code>NonZeroU16</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<u32>>","sp_std::num::NonZeroU16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cusize%3E%3E-for-NonZero%3Ci32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#577\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cusize%3E%3E-for-NonZero%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#577\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroUsize</code> to <code>NonZeroI32</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<usize>>","sp_std::num::NonZeroI32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Ci16%3E-for-NonZero%3Ci16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0\">1.46.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#528\">source</a></span><a href=\"#impl-TryFrom%3Ci16%3E-for-NonZero%3Ci16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#528\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>i16</code> to <code>NonZeroI16</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<i16>","sp_std::num::NonZeroI16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cu16%3E%3E-for-NonZero%3Cisize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#580\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cu16%3E%3E-for-NonZero%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#580\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU16</code> to <code>NonZeroIsize</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<u16>>","sp_std::num::NonZeroIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu16%3E-for-NonZero%3Cu16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0\">1.46.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#522\">source</a></span><a href=\"#impl-TryFrom%3Cu16%3E-for-NonZero%3Cu16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#522\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>u16</code> to <code>NonZeroU16</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<u16>","sp_std::num::NonZeroU16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci128%3E%3E-for-NonZero%3Cu16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#568\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci128%3E%3E-for-NonZero%3Cu16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#568\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI128</code> to <code>NonZeroU16</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i128>>","sp_std::num::NonZeroU16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cusize%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#570\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cusize%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#570\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroUsize</code> to <code>NonZeroU64</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<usize>>","sp_std::num::NonZeroU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci128%3E%3E-for-NonZero%3Ci64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#578\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci128%3E%3E-for-NonZero%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#578\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI128</code> to <code>NonZeroI64</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i128>>","sp_std::num::NonZeroI64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci32%3E%3E-for-NonZero%3Cu16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#568\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci32%3E%3E-for-NonZero%3Cu16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#568\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI32</code> to <code>NonZeroU16</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i32>>","sp_std::num::NonZeroU16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cisize%3E%3E-for-NonZero%3Ci32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#577\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cisize%3E%3E-for-NonZero%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#577\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroIsize</code> to <code>NonZeroI32</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<isize>>","sp_std::num::NonZeroI32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci16%3E%3E-for-NonZero%3Cu8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#567\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci16%3E%3E-for-NonZero%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#567\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI16</code> to <code>NonZeroU8</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i16>>","sp_std::num::NonZeroU8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci128%3E%3E-for-NonZero%3Cu32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#569\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci128%3E%3E-for-NonZero%3Cu32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#569\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI128</code> to <code>NonZeroU32</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i128>>","sp_std::num::NonZeroU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cu32%3E%3E-for-NonZero%3Ci32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#577\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cu32%3E%3E-for-NonZero%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#577\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU32</code> to <code>NonZeroI32</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<u32>>","sp_std::num::NonZeroI32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Ci8%3E-for-NonZero%3Ci8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0\">1.46.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#527\">source</a></span><a href=\"#impl-TryFrom%3Ci8%3E-for-NonZero%3Ci8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#527\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>i8</code> to <code>NonZeroI8</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<i8>","sp_std::num::NonZeroI8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cu64%3E%3E-for-NonZero%3Cusize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#572\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cu64%3E%3E-for-NonZero%3Cusize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#572\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU64</code> to <code>NonZeroUsize</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<u64>>","sp_std::num::NonZeroUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cisize%3E%3E-for-NonZero%3Ci16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#576\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cisize%3E%3E-for-NonZero%3Ci16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#576\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroIsize</code> to <code>NonZeroI16</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<isize>>","sp_std::num::NonZeroI16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cu64%3E%3E-for-NonZero%3Ci64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#578\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cu64%3E%3E-for-NonZero%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#578\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU64</code> to <code>NonZeroI64</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<u64>>","sp_std::num::NonZeroI64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci8%3E%3E-for-NonZero%3Cu32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#569\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci8%3E%3E-for-NonZero%3Cu32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#569\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI8</code> to <code>NonZeroU32</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i8>>","sp_std::num::NonZeroU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci128%3E%3E-for-NonZero%3Cu8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#567\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci128%3E%3E-for-NonZero%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#567\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI128</code> to <code>NonZeroU8</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i128>>","sp_std::num::NonZeroU8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu32%3E-for-NonZero%3Cu32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0\">1.46.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#523\">source</a></span><a href=\"#impl-TryFrom%3Cu32%3E-for-NonZero%3Cu32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#523\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>u32</code> to <code>NonZeroU32</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<u32>","sp_std::num::NonZeroU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cu64%3E%3E-for-NonZero%3Cu8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#567\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cu64%3E%3E-for-NonZero%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#567\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU64</code> to <code>NonZeroU8</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<u64>>","sp_std::num::NonZeroU8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci64%3E%3E-for-NonZero%3Cisize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#580\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci64%3E%3E-for-NonZero%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#580\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI64</code> to <code>NonZeroIsize</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i64>>","sp_std::num::NonZeroIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci64%3E%3E-for-NonZero%3Ci32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#577\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci64%3E%3E-for-NonZero%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#577\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI64</code> to <code>NonZeroI32</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i64>>","sp_std::num::NonZeroI32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cu128%3E%3E-for-NonZero%3Ci8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#575\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cu128%3E%3E-for-NonZero%3Ci8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#575\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU128</code> to <code>NonZeroI8</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<u128>>","sp_std::num::NonZeroI8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Ci128%3E-for-NonZero%3Ci128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0\">1.46.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#531\">source</a></span><a href=\"#impl-TryFrom%3Ci128%3E-for-NonZero%3Ci128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#531\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>i128</code> to <code>NonZeroI128</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<i128>","sp_std::num::NonZeroI128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci64%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#570\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci64%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#570\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI64</code> to <code>NonZeroU64</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i64>>","sp_std::num::NonZeroU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci32%3E%3E-for-NonZero%3Cu8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#567\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci32%3E%3E-for-NonZero%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#567\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI32</code> to <code>NonZeroU8</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i32>>","sp_std::num::NonZeroU8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci16%3E%3E-for-NonZero%3Cu16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#568\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci16%3E%3E-for-NonZero%3Cu16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#568\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI16</code> to <code>NonZeroU16</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i16>>","sp_std::num::NonZeroU16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cisize%3E%3E-for-NonZero%3Cu128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#571\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cisize%3E%3E-for-NonZero%3Cu128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#571\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroIsize</code> to <code>NonZeroU128</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<isize>>","sp_std::num::NonZeroU128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu8%3E-for-NonZero%3Cu8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0\">1.46.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#521\">source</a></span><a href=\"#impl-TryFrom%3Cu8%3E-for-NonZero%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#521\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>u8</code> to <code>NonZeroU8</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<u8>","sp_std::num::NonZeroU8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cusize%3E%3E-for-NonZero%3Cu16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#568\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cusize%3E%3E-for-NonZero%3Cu16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#568\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroUsize</code> to <code>NonZeroU16</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<usize>>","sp_std::num::NonZeroU16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cusize%3E%3E-for-NonZero%3Cu8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#567\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cusize%3E%3E-for-NonZero%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#567\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroUsize</code> to <code>NonZeroU8</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<usize>>","sp_std::num::NonZeroU8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci8%3E%3E-for-NonZero%3Cu8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#567\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci8%3E%3E-for-NonZero%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#567\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI8</code> to <code>NonZeroU8</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i8>>","sp_std::num::NonZeroU8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci128%3E%3E-for-NonZero%3Ci8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#575\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci128%3E%3E-for-NonZero%3Ci8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#575\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI128</code> to <code>NonZeroI8</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i128>>","sp_std::num::NonZeroI8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cisize%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#570\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cisize%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#570\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroIsize</code> to <code>NonZeroU64</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<isize>>","sp_std::num::NonZeroU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cu16%3E%3E-for-NonZero%3Cu8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#567\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cu16%3E%3E-for-NonZero%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#567\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU16</code> to <code>NonZeroU8</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<u16>>","sp_std::num::NonZeroU8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci32%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#570\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci32%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#570\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI32</code> to <code>NonZeroU64</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i32>>","sp_std::num::NonZeroU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci8%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#570\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci8%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#570\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI8</code> to <code>NonZeroU64</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i8>>","sp_std::num::NonZeroU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cu128%3E%3E-for-NonZero%3Cisize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#580\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cu128%3E%3E-for-NonZero%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#580\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU128</code> to <code>NonZeroIsize</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<u128>>","sp_std::num::NonZeroIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cu64%3E%3E-for-NonZero%3Ci32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#577\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cu64%3E%3E-for-NonZero%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#577\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU64</code> to <code>NonZeroI32</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<u64>>","sp_std::num::NonZeroI32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cusize%3E%3E-for-NonZero%3Ci64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#578\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cusize%3E%3E-for-NonZero%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#578\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroUsize</code> to <code>NonZeroI64</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<usize>>","sp_std::num::NonZeroI64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cusize%3E%3E-for-NonZero%3Cu32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#569\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cusize%3E%3E-for-NonZero%3Cu32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#569\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroUsize</code> to <code>NonZeroU32</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<usize>>","sp_std::num::NonZeroU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci32%3E%3E-for-NonZero%3Cisize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#580\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci32%3E%3E-for-NonZero%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#580\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI32</code> to <code>NonZeroIsize</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i32>>","sp_std::num::NonZeroIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci64%3E%3E-for-NonZero%3Cusize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#572\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci64%3E%3E-for-NonZero%3Cusize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#572\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI64</code> to <code>NonZeroUsize</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i64>>","sp_std::num::NonZeroUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cu128%3E%3E-for-NonZero%3Cu16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#568\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cu128%3E%3E-for-NonZero%3Cu16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#568\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU128</code> to <code>NonZeroU16</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<u128>>","sp_std::num::NonZeroU16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci64%3E%3E-for-NonZero%3Cu16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#568\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci64%3E%3E-for-NonZero%3Cu16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#568\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI64</code> to <code>NonZeroU16</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i64>>","sp_std::num::NonZeroU16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cisize%3E-for-NonZero%3Cisize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0\">1.46.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#532\">source</a></span><a href=\"#impl-TryFrom%3Cisize%3E-for-NonZero%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#532\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>isize</code> to <code>NonZeroIsize</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<isize>","sp_std::num::NonZeroIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cusize%3E%3E-for-NonZero%3Ci16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#576\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cusize%3E%3E-for-NonZero%3Ci16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#576\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroUsize</code> to <code>NonZeroI16</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<usize>>","sp_std::num::NonZeroI16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci32%3E%3E-for-NonZero%3Ci8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#575\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci32%3E%3E-for-NonZero%3Ci8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#575\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI32</code> to <code>NonZeroI8</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i32>>","sp_std::num::NonZeroI8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci16%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#570\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci16%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#570\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI16</code> to <code>NonZeroU64</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i16>>","sp_std::num::NonZeroU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Cu128%3E-for-NonZero%3Cu128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0\">1.46.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#525\">source</a></span><a href=\"#impl-TryFrom%3Cu128%3E-for-NonZero%3Cu128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#525\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>u128</code> to <code>NonZeroU128</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<u128>","sp_std::num::NonZeroU128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Cu128%3E%3E-for-NonZero%3Ci16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#576\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Cu128%3E%3E-for-NonZero%3Ci16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#576\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroU128</code> to <code>NonZeroI16</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<u128>>","sp_std::num::NonZeroI16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci16%3E%3E-for-NonZero%3Cusize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#572\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci16%3E%3E-for-NonZero%3Cusize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#572\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI16</code> to <code>NonZeroUsize</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i16>>","sp_std::num::NonZeroUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci128%3E%3E-for-NonZero%3Cu64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#570\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci128%3E%3E-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#570\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI128</code> to <code>NonZeroU64</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i128>>","sp_std::num::NonZeroU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci128%3E%3E-for-NonZero%3Ci32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#577\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci128%3E%3E-for-NonZero%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#577\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI128</code> to <code>NonZeroI32</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i128>>","sp_std::num::NonZeroI32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CNonZero%3Ci64%3E%3E-for-NonZero%3Cu8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.49.0\">1.49.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#567\">source</a></span><a href=\"#impl-TryFrom%3CNonZero%3Ci64%3E%3E-for-NonZero%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#567\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>NonZeroI64</code> to <code>NonZeroU8</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<NonZero<i64>>","sp_std::num::NonZeroU8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3Ci32%3E-for-NonZero%3Ci32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0\">1.46.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#529\">source</a></span><a href=\"#impl-TryFrom%3Ci32%3E-for-NonZero%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/convert/num.rs.html#529\">source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>\n) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;, &lt;<a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt; as <a class=\"trait\" href=\"sp_std/convert/trait.TryFrom.html\" title=\"trait sp_std::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;&gt;::<a class=\"associatedtype\" href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type sp_std::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Attempts to convert <code>i32</code> to <code>NonZeroI32</code>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"sp_std/num/struct.TryFromIntError.html\" title=\"struct sp_std::num::TryFromIntError\">TryFromIntError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details></div></details>","TryFrom<i32>","sp_std::num::NonZeroI32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-NonZero%3Ci32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#impl-UpperHex-for-NonZero%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.UpperHex.html\" title=\"trait sp_std::fmt::UpperHex\">UpperHex</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","sp_std::num::NonZeroI32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-NonZero%3Cu16%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#impl-UpperHex-for-NonZero%3Cu16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.UpperHex.html\" title=\"trait sp_std::fmt::UpperHex\">UpperHex</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u16.html\">u16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1524-1527\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","sp_std::num::NonZeroU16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-NonZero%3Ci64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#impl-UpperHex-for-NonZero%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.UpperHex.html\" title=\"trait sp_std::fmt::UpperHex\">UpperHex</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","sp_std::num::NonZeroI64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-NonZero%3Cu32%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#impl-UpperHex-for-NonZero%3Cu32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.UpperHex.html\" title=\"trait sp_std::fmt::UpperHex\">UpperHex</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u32.html\">u32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1529-1532\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","sp_std::num::NonZeroU32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-NonZero%3Ci16%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#impl-UpperHex-for-NonZero%3Ci16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.UpperHex.html\" title=\"trait sp_std::fmt::UpperHex\">UpperHex</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","sp_std::num::NonZeroI16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-NonZero%3Cu128%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#impl-UpperHex-for-NonZero%3Cu128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.UpperHex.html\" title=\"trait sp_std::fmt::UpperHex\">UpperHex</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u128.html\">u128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1539-1542\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","sp_std::num::NonZeroU128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-NonZero%3Cu64%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#impl-UpperHex-for-NonZero%3Cu64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.UpperHex.html\" title=\"trait sp_std::fmt::UpperHex\">UpperHex</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u64.html\">u64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1534-1537\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","sp_std::num::NonZeroU64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-NonZero%3Ci128%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#impl-UpperHex-for-NonZero%3Ci128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.UpperHex.html\" title=\"trait sp_std::fmt::UpperHex\">UpperHex</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","sp_std::num::NonZeroI128"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-NonZero%3Cu8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#impl-UpperHex-for-NonZero%3Cu8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.UpperHex.html\" title=\"trait sp_std::fmt::UpperHex\">UpperHex</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1519-1522\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","sp_std::num::NonZeroU8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-NonZero%3Ci8%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#impl-UpperHex-for-NonZero%3Ci8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.UpperHex.html\" title=\"trait sp_std::fmt::UpperHex\">UpperHex</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","sp_std::num::NonZeroI8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-NonZero%3Cisize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#impl-UpperHex-for-NonZero%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.UpperHex.html\" title=\"trait sp_std::fmt::UpperHex\">UpperHex</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","sp_std::num::NonZeroIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-NonZero%3Cusize%3E\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#impl-UpperHex-for-NonZero%3Cusize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/fmt/trait.UpperHex.html\" title=\"trait sp_std::fmt::UpperHex\">UpperHex</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1544-1547\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"sp_std/fmt/struct.Formatter.html\" title=\"struct sp_std::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"sp_std/result/enum.Result.html\" title=\"enum sp_std::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"sp_std/fmt/struct.Error.html\" title=\"struct sp_std::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","sp_std::num::NonZeroUsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-NonZero%3Ci32%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0\">1.71.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a></span><a href=\"#impl-Neg-for-NonZero%3Ci32%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.Neg.html\" title=\"trait sp_std::ops::Neg\">Neg</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/ops/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1563-1568\">source</a><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i32.html\">i32</a>&gt;</h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"sp_std/ops/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","sp_std::num::NonZeroI32"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-NonZero%3Cisize%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0\">1.71.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a></span><a href=\"#impl-Neg-for-NonZero%3Cisize%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.Neg.html\" title=\"trait sp_std::ops::Neg\">Neg</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/ops/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1584-1589\">source</a><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.isize.html\">isize</a>&gt;</h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"sp_std/ops/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","sp_std::num::NonZeroIsize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-NonZero%3Ci64%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0\">1.71.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a></span><a href=\"#impl-Neg-for-NonZero%3Ci64%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.Neg.html\" title=\"trait sp_std::ops::Neg\">Neg</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/ops/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1570-1575\">source</a><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i64.html\">i64</a>&gt;</h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"sp_std/ops/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","sp_std::num::NonZeroI64"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-NonZero%3Ci8%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0\">1.71.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a></span><a href=\"#impl-Neg-for-NonZero%3Ci8%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.Neg.html\" title=\"trait sp_std::ops::Neg\">Neg</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/ops/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1549-1554\">source</a><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i8.html\">i8</a>&gt;</h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"sp_std/ops/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","sp_std::num::NonZeroI8"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-NonZero%3Ci16%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0\">1.71.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a></span><a href=\"#impl-Neg-for-NonZero%3Ci16%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.Neg.html\" title=\"trait sp_std::ops::Neg\">Neg</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/ops/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1556-1561\">source</a><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i16.html\">i16</a>&gt;</h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"sp_std/ops/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","sp_std::num::NonZeroI16"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-NonZero%3Ci128%3E\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.71.0\">1.71.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a></span><a href=\"#impl-Neg-for-NonZero%3Ci128%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"sp_std/ops/trait.Neg.html\" title=\"trait sp_std::ops::Neg\">Neg</a> for <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"sp_std/ops/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.77.0/src/core/num/nonzero.rs.html#1577-1582\">source</a><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"sp_std/ops/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; <a class=\"struct\" href=\"sp_std/num/struct.NonZero.html\" title=\"struct sp_std::num::NonZero\">NonZero</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.i128.html\">i128</a>&gt;</h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"sp_std/ops/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","sp_std::num::NonZeroI128"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()