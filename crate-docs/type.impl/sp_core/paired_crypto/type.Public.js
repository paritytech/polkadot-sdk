(function() {var type_impls = {
"sp_core":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPair%3CLeftPair,+RightPair,+LEFT_PLUS_RIGHT_PUBLIC_LEN,+SIGNATURE_LEN,+SubTag%3E%3E-for-CryptoBytes%3CLEFT_PLUS_RIGHT_PUBLIC_LEN,+(PublicTag,+(PairedCryptoTag,+SubTag))%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/sp_core/paired_crypto.rs.html#150-167\">source</a><a href=\"#impl-From%3CPair%3CLeftPair,+RightPair,+LEFT_PLUS_RIGHT_PUBLIC_LEN,+SIGNATURE_LEN,+SubTag%3E%3E-for-CryptoBytes%3CLEFT_PLUS_RIGHT_PUBLIC_LEN,+(PublicTag,+(PairedCryptoTag,+SubTag))%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;LeftPair: <a class=\"trait\" href=\"sp_core/crypto/trait.Pair.html\" title=\"trait sp_core::crypto::Pair\">PairT</a>, RightPair: <a class=\"trait\" href=\"sp_core/crypto/trait.Pair.html\" title=\"trait sp_core::crypto::Pair\">PairT</a>, const LEFT_PLUS_RIGHT_PUBLIC_LEN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, const SIGNATURE_LEN: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>, SubTag: PairedCryptoSubTagBound&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"sp_core/paired_crypto/struct.Pair.html\" title=\"struct sp_core::paired_crypto::Pair\">Pair</a>&lt;LeftPair, RightPair, LEFT_PLUS_RIGHT_PUBLIC_LEN, SIGNATURE_LEN, SubTag&gt;&gt; for <a class=\"type\" href=\"sp_core/paired_crypto/type.Public.html\" title=\"type sp_core::paired_crypto::Public\">Public</a>&lt;LEFT_PLUS_RIGHT_PUBLIC_LEN, SubTag&gt;<span class=\"where fmt-newline\">where\n    <a class=\"struct\" href=\"sp_core/paired_crypto/struct.Pair.html\" title=\"struct sp_core::paired_crypto::Pair\">Pair</a>&lt;LeftPair, RightPair, LEFT_PLUS_RIGHT_PUBLIC_LEN, SIGNATURE_LEN, SubTag&gt;: <a class=\"trait\" href=\"sp_core/crypto/trait.Pair.html\" title=\"trait sp_core::crypto::Pair\">PairT</a>&lt;Public = <a class=\"type\" href=\"sp_core/paired_crypto/type.Public.html\" title=\"type sp_core::paired_crypto::Public\">Public</a>&lt;LEFT_PLUS_RIGHT_PUBLIC_LEN, SubTag&gt;&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/sp_core/paired_crypto.rs.html#162-166\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(\n    x: <a class=\"struct\" href=\"sp_core/paired_crypto/struct.Pair.html\" title=\"struct sp_core::paired_crypto::Pair\">Pair</a>&lt;LeftPair, RightPair, LEFT_PLUS_RIGHT_PUBLIC_LEN, SIGNATURE_LEN, SubTag&gt;\n) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Pair<LeftPair, RightPair, LEFT_PLUS_RIGHT_PUBLIC_LEN, SIGNATURE_LEN, SubTag>>","sp_core::paired_crypto::ecdsa_bls377::Public"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()