(function() {var implementors = {
"bp_messages":[],
"bridge_runtime_common":[["impl&lt;H: <a class=\"trait\" href=\"bridge_runtime_common/messages_xcm_extension/trait.XcmBlobHauler.html\" title=\"trait bridge_runtime_common::messages_xcm_extension::XcmBlobHauler\">XcmBlobHauler</a>, Lanes: Get&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(<a class=\"struct\" href=\"bridge_runtime_common/messages_xcm_extension/struct.SenderAndLane.html\" title=\"struct bridge_runtime_common::messages_xcm_extension::SenderAndLane\">SenderAndLane</a>, (<a class=\"enum\" href=\"staging_xcm/v4/junction/enum.NetworkId.html\" title=\"enum staging_xcm::v4::junction::NetworkId\">NetworkId</a>, <a class=\"type\" href=\"staging_xcm/v4/location/type.InteriorLocation.html\" title=\"type staging_xcm::v4::location::InteriorLocation\">InteriorLocation</a>))&gt;&gt;&gt; OnMessagesDelivered for <a class=\"struct\" href=\"bridge_runtime_common/messages_xcm_extension/struct.XcmBlobHaulerAdapter.html\" title=\"struct bridge_runtime_common::messages_xcm_extension::XcmBlobHaulerAdapter\">XcmBlobHaulerAdapter</a>&lt;H, Lanes&gt;"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()