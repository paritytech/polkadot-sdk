(function() {var implementors = {
"pallet_conviction_voting":[["impl&lt;Votes: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"sp_arithmetic/traits/trait.AtLeast32BitUnsigned.html\" title=\"trait sp_arithmetic::traits::AtLeast32BitUnsigned\">AtLeast32BitUnsigned</a> + TypeInfo + Codec, Total: Get&lt;Votes&gt;, Class&gt; VoteTally&lt;Votes, Class&gt; for <a class=\"struct\" href=\"pallet_conviction_voting/struct.Tally.html\" title=\"struct pallet_conviction_voting::Tally\">Tally</a>&lt;Votes, Total&gt;"]],
"pallet_ranked_collective":[["impl&lt;T: <a class=\"trait\" href=\"pallet_ranked_collective/pallet/trait.Config.html\" title=\"trait pallet_ranked_collective::pallet::Config\">Config</a>&lt;I&gt;, I: 'static, M: <a class=\"trait\" href=\"pallet_ranked_collective/trait.GetMaxVoters.html\" title=\"trait pallet_ranked_collective::GetMaxVoters\">GetMaxVoters</a>&lt;Class = <a class=\"type\" href=\"pallet_ranked_collective/type.ClassOf.html\" title=\"type pallet_ranked_collective::ClassOf\">ClassOf</a>&lt;T, I&gt;&gt;&gt; VoteTally&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>, &lt;&lt;T as <a class=\"trait\" href=\"pallet_ranked_collective/pallet/trait.Config.html\" title=\"trait pallet_ranked_collective::pallet::Config\">Config</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"pallet_ranked_collective/pallet/trait.Config.html#associatedtype.Polls\" title=\"type pallet_ranked_collective::pallet::Config::Polls\">Polls</a> as Polling&lt;<a class=\"struct\" href=\"pallet_ranked_collective/struct.Tally.html\" title=\"struct pallet_ranked_collective::Tally\">Tally</a>&lt;T, I, <a class=\"struct\" href=\"pallet_ranked_collective/pallet/struct.Pallet.html\" title=\"struct pallet_ranked_collective::pallet::Pallet\">Pallet</a>&lt;T, I&gt;&gt;&gt;&gt;::Class&gt; for <a class=\"struct\" href=\"pallet_ranked_collective/struct.Tally.html\" title=\"struct pallet_ranked_collective::Tally\">Tally</a>&lt;T, I, M&gt;"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()