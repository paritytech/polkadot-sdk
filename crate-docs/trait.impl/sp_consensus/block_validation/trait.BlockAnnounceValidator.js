(function() {var implementors = {
"cumulus_client_network":[["impl&lt;Block: <a class=\"trait\" href=\"sp_runtime/traits/trait.Block.html\" title=\"trait sp_runtime::traits::Block\">BlockT</a>, RCInterface&gt; <a class=\"trait\" href=\"sp_consensus/block_validation/trait.BlockAnnounceValidator.html\" title=\"trait sp_consensus::block_validation::BlockAnnounceValidator\">BlockAnnounceValidator</a>&lt;Block&gt; for <a class=\"struct\" href=\"cumulus_client_network/struct.RequireSecondedInBlockAnnounce.html\" title=\"struct cumulus_client_network::RequireSecondedInBlockAnnounce\">RequireSecondedInBlockAnnounce</a>&lt;Block, RCInterface&gt;<span class=\"where fmt-newline\">where\n    RCInterface: RelayChainInterface + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,</span>"],["impl&lt;Block: <a class=\"trait\" href=\"sp_runtime/traits/trait.Block.html\" title=\"trait sp_runtime::traits::Block\">BlockT</a>&gt; <a class=\"trait\" href=\"sp_consensus/block_validation/trait.BlockAnnounceValidator.html\" title=\"trait sp_consensus::block_validation::BlockAnnounceValidator\">BlockAnnounceValidator</a>&lt;Block&gt; for <a class=\"struct\" href=\"cumulus_client_network/struct.AssumeSybilResistance.html\" title=\"struct cumulus_client_network::AssumeSybilResistance\">AssumeSybilResistance</a>"]],
"cumulus_test_client":[],
"node_testing":[],
"polkadot_test_client":[],
"sp_consensus":[],
"substrate_test_runtime_client":[]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()