(function() {var implementors = {
"bp_xcm_bridge_hub_router":[],
"cumulus_pallet_xcmp_queue":[["impl&lt;SiblingBridgeHubParaId: Get&lt;ParaId&gt;, Runtime: <a class=\"trait\" href=\"cumulus_pallet_xcmp_queue/pallet/trait.Config.html\" title=\"trait cumulus_pallet_xcmp_queue::pallet::Config\">Config</a>&gt; XcmChannelStatusProvider for <a class=\"struct\" href=\"cumulus_pallet_xcmp_queue/bridging/struct.OutXcmpChannelStatusProvider.html\" title=\"struct cumulus_pallet_xcmp_queue::bridging::OutXcmpChannelStatusProvider\">OutXcmpChannelStatusProvider</a>&lt;SiblingBridgeHubParaId, Runtime&gt;"],["impl&lt;SiblingBridgeHubParaId: Get&lt;ParaId&gt;, Runtime: <a class=\"trait\" href=\"cumulus_pallet_xcmp_queue/pallet/trait.Config.html\" title=\"trait cumulus_pallet_xcmp_queue::pallet::Config\">Config</a>&gt; XcmChannelStatusProvider for <a class=\"struct\" href=\"cumulus_pallet_xcmp_queue/bridging/struct.InAndOutXcmpChannelStatusProvider.html\" title=\"struct cumulus_pallet_xcmp_queue::bridging::InAndOutXcmpChannelStatusProvider\">InAndOutXcmpChannelStatusProvider</a>&lt;SiblingBridgeHubParaId, Runtime&gt;"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()