(function() {var implementors = {
"staging_xcm_builder":[["impl&lt;AssetId: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.73.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, Balance: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.73.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, ConvertAssetId: <a class=\"trait\" href=\"sp_runtime/traits/trait.MaybeEquivalence.html\" title=\"trait sp_runtime::traits::MaybeEquivalence\">MaybeEquivalence</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.73.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.73.0/std/primitive.array.html\">32</a>], AssetId&gt;, ConvertBalance: <a class=\"trait\" href=\"sp_runtime/traits/trait.MaybeEquivalence.html\" title=\"trait sp_runtime::traits::MaybeEquivalence\">MaybeEquivalence</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.73.0/std/primitive.u128.html\">u128</a>, Balance&gt;&gt; MatchesFungibles&lt;AssetId, Balance&gt; for <a class=\"struct\" href=\"staging_xcm_builder/struct.ConvertedAbstractId.html\" title=\"struct staging_xcm_builder::ConvertedAbstractId\">ConvertedAbstractId</a>&lt;AssetId, Balance, ConvertAssetId, ConvertBalance&gt;"],["impl&lt;AssetId: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.73.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, Balance: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.73.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, MatchAssetId: <a class=\"trait\" href=\"frame_support/traits/members/trait.Contains.html\" title=\"trait frame_support::traits::members::Contains\">Contains</a>&lt;<a class=\"struct\" href=\"staging_xcm_builder/test_utils/struct.MultiLocation.html\" title=\"struct staging_xcm_builder::test_utils::MultiLocation\">MultiLocation</a>&gt;, ConvertAssetId: <a class=\"trait\" href=\"sp_runtime/traits/trait.MaybeEquivalence.html\" title=\"trait sp_runtime::traits::MaybeEquivalence\">MaybeEquivalence</a>&lt;<a class=\"struct\" href=\"staging_xcm_builder/test_utils/struct.MultiLocation.html\" title=\"struct staging_xcm_builder::test_utils::MultiLocation\">MultiLocation</a>, AssetId&gt;, ConvertBalance: <a class=\"trait\" href=\"sp_runtime/traits/trait.MaybeEquivalence.html\" title=\"trait sp_runtime::traits::MaybeEquivalence\">MaybeEquivalence</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.73.0/std/primitive.u128.html\">u128</a>, Balance&gt;&gt; MatchesFungibles&lt;AssetId, Balance&gt; for <a class=\"struct\" href=\"staging_xcm_builder/struct.MatchedConvertedConcreteId.html\" title=\"struct staging_xcm_builder::MatchedConvertedConcreteId\">MatchedConvertedConcreteId</a>&lt;AssetId, Balance, MatchAssetId, ConvertAssetId, ConvertBalance&gt;"],["impl&lt;AssetId: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.73.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, Balance: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.73.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, ConvertAssetId: <a class=\"trait\" href=\"sp_runtime/traits/trait.MaybeEquivalence.html\" title=\"trait sp_runtime::traits::MaybeEquivalence\">MaybeEquivalence</a>&lt;<a class=\"struct\" href=\"staging_xcm_builder/test_utils/struct.MultiLocation.html\" title=\"struct staging_xcm_builder::test_utils::MultiLocation\">MultiLocation</a>, AssetId&gt;, ConvertBalance: <a class=\"trait\" href=\"sp_runtime/traits/trait.MaybeEquivalence.html\" title=\"trait sp_runtime::traits::MaybeEquivalence\">MaybeEquivalence</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.73.0/std/primitive.u128.html\">u128</a>, Balance&gt;&gt; MatchesFungibles&lt;AssetId, Balance&gt; for <a class=\"struct\" href=\"staging_xcm_builder/struct.ConvertedConcreteId.html\" title=\"struct staging_xcm_builder::ConvertedConcreteId\">ConvertedConcreteId</a>&lt;AssetId, Balance, ConvertAssetId, ConvertBalance&gt;"]],
"staging_xcm_executor":[]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()