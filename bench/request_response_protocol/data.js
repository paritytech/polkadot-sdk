window.BENCHMARK_DATA = {
  "lastUpdate": 1753189825990,
  "repoUrl": "https://github.com/paritytech/polkadot-sdk",
  "entries": {
    "request_response_protocol": [
      {
        "commit": {
          "author": {
            "email": "eresav@me.com",
            "name": "Andrei Eres",
            "username": "AndreiEres"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "6bfe4523acf597ef47dfdcefd11b0eee396bc5c5",
          "message": "networking-bench: Update benchmarks payload (#7056)\n\n# Description\n\n- Used 10 notifications and requests within the benchmarks. After moving\nthe network workers' initialization out of the benchmarks, it is\nacceptable to use this small number without losing precision.\n- Removed the 128MB payload that consumed most of the execution time.",
          "timestamp": "2025-01-09T18:20:07Z",
          "tree_id": "903477b959e883dd8daeff00beda8441cd55d58d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/6bfe4523acf597ef47dfdcefd11b0eee396bc5c5"
        },
        "date": 1736449911762,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17163862,
            "range": "± 170203",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17446070,
            "range": "± 164252",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18730101,
            "range": "± 98579",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22547421,
            "range": "± 293148",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 50727588,
            "range": "± 643035",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 300331693,
            "range": "± 3948705",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2091391647,
            "range": "± 54342059",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14256263,
            "range": "± 109675",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14412977,
            "range": "± 77653",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14771320,
            "range": "± 98653",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18936940,
            "range": "± 137625",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49662562,
            "range": "± 413487",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 291586625,
            "range": "± 4639808",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2308878584,
            "range": "± 8781236",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "franciscoaguirreperez@gmail.com",
            "name": "Francisco Aguirre",
            "username": "franciscoaguirre"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e051f3edd3d6a0699a9261c8f8985d2e8e95c276",
          "message": "Add XCM benchmarks to collectives-westend (#6820)\n\nCollectives-westend was using `FixedWeightBounds`, meaning the same\nweight per instruction. Added proper benchmarks.\n\n---------\n\nCo-authored-by: GitHub Action <action@github.com>\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>",
          "timestamp": "2025-01-10T02:20:01Z",
          "tree_id": "442535aa9d038b646a8bc597f5baf489661c544a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e051f3edd3d6a0699a9261c8f8985d2e8e95c276"
        },
        "date": 1736478677328,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17513611,
            "range": "± 231894",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17747614,
            "range": "± 158066",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19342746,
            "range": "± 92774",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23054691,
            "range": "± 164988",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 52100650,
            "range": "± 407725",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 313787855,
            "range": "± 2904933",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2337544694,
            "range": "± 119956966",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14631080,
            "range": "± 84241",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14840693,
            "range": "± 117272",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15424874,
            "range": "± 209023",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19730480,
            "range": "± 136949",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50191870,
            "range": "± 441053",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 299081098,
            "range": "± 1880044",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2405092455,
            "range": "± 9514900",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "738282a2c4127f5e6a1c8d50235ba126b9f05025",
          "message": "Fix incorrected deprecated message (#7118)",
          "timestamp": "2025-01-11T10:32:50Z",
          "tree_id": "b2498b9f12218fdc6dbd1e34243d44889f118bc3",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/738282a2c4127f5e6a1c8d50235ba126b9f05025"
        },
        "date": 1736594645848,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18044700,
            "range": "± 153767",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18331354,
            "range": "± 167473",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20147906,
            "range": "± 344420",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23977172,
            "range": "± 319112",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53129643,
            "range": "± 635022",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 317087858,
            "range": "± 4521386",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2413386156,
            "range": "± 31594654",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15036676,
            "range": "± 118681",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15074889,
            "range": "± 104668",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15857748,
            "range": "± 235167",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20039519,
            "range": "± 173065",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50820511,
            "range": "± 692420",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 308376455,
            "range": "± 3036490",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2460718408,
            "range": "± 6624429",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7d8e3a434ea1e760190456e8df1359aa8137e16a",
          "message": "reference-docs: Start `state` and mention well known keys (#7037)\n\nCloses: https://github.com/paritytech/polkadot-sdk/issues/7033",
          "timestamp": "2025-01-13T12:32:01Z",
          "tree_id": "3dd18660d4fd66b37863cb6862e37aa0dcd4908c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/7d8e3a434ea1e760190456e8df1359aa8137e16a"
        },
        "date": 1736775176661,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17639219,
            "range": "± 234844",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17906936,
            "range": "± 188639",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19398134,
            "range": "± 139774",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23110768,
            "range": "± 179179",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55345609,
            "range": "± 1069731",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 320737970,
            "range": "± 8971466",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2344482664,
            "range": "± 65530518",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14592616,
            "range": "± 191900",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14855276,
            "range": "± 112557",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15342068,
            "range": "± 151346",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19772082,
            "range": "± 159814",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52121899,
            "range": "± 296503",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 318478991,
            "range": "± 3338407",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2513740445,
            "range": "± 22113207",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ba572ae892d4e4fae89ca053d8a137117b0f3a17",
          "message": "[pallet-revive] Update gas encoding (#6689)\n\nUpdate the current approach to attach the `ref_time`, `pov` and\n`deposit` parameters to an Ethereum transaction.\nPreviously we will pass these 3 parameters along with the signed\npayload, and check that the fees resulting from `gas x gas_price` match\nthe actual fees paid by the user for the extrinsic.\n\nThis approach unfortunately can be attacked. A malicious actor could\nforce such a transaction to fail by injecting low values for some of\nthese extra parameters as they are not part of the signed payload.\n\nThe new approach encodes these 3 extra parameters in the lower digits of\nthe transaction gas, approximating the the log2 of the actual values to\nencode each components on 2 digits\n\n---------\n\nCo-authored-by: GitHub Action <action@github.com>\nCo-authored-by: command-bot <>",
          "timestamp": "2025-01-13T14:49:37Z",
          "tree_id": "4a9a0a7887bb994eca8d3e08360d73900bc2f4d3",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ba572ae892d4e4fae89ca053d8a137117b0f3a17"
        },
        "date": 1736784087882,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18018663,
            "range": "± 273071",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17634888,
            "range": "± 67745",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19368755,
            "range": "± 298109",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23258470,
            "range": "± 289207",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51975347,
            "range": "± 470598",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 291360469,
            "range": "± 2392874",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2433093474,
            "range": "± 17063120",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14358250,
            "range": "± 67345",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14626759,
            "range": "± 124568",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14901564,
            "range": "± 137575",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18956808,
            "range": "± 86040",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50747715,
            "range": "± 593781",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 292926166,
            "range": "± 3960874",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2370491534,
            "range": "± 41198195",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1728078+michalkucharczyk@users.noreply.github.com",
            "name": "Michal Kucharczyk",
            "username": "michalkucharczyk"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0e0fa4782e2872ea74d8038ebedb9f6e6be53457",
          "message": "`fatxpool`: rotator cache size now depends on pool's limits (#7102)\n\n# Description\n\nThis PR modifies the hard-coded size of extrinsics cache within\n[`PoolRotator`](https://github.com/paritytech/polkadot-sdk/blob/cdf107de700388a52a17b2fb852c98420c78278e/substrate/client/transaction-pool/src/graph/rotator.rs#L36-L45)\nto be inline with pool limits.\n\nThe problem was, that due to small size (comparing to number of txs in\nsingle block) of hard coded size:\n\nhttps://github.com/paritytech/polkadot-sdk/blob/cdf107de700388a52a17b2fb852c98420c78278e/substrate/client/transaction-pool/src/graph/rotator.rs#L34\nexcessive number of unnecessary verification were performed in\n`prune_tags`:\n\nhttps://github.com/paritytech/polkadot-sdk/blob/cdf107de700388a52a17b2fb852c98420c78278e/substrate/client/transaction-pool/src/graph/pool.rs#L369-L370\n\nThis was resulting in quite long durations of `prune_tags` execution\ntime (which was ok for 6s, but becomes noticable for 2s blocks):\n```\nPruning at HashAndNumber { number: 83, ... }. Resubmitting transactions: 6142, reverification took: 237.818955ms    \nPruning at HashAndNumber { number: 84, ... }. Resubmitting transactions: 5985, reverification took: 222.118218ms    \nPruning at HashAndNumber { number: 85, ... }. Resubmitting transactions: 5981, reverification took: 215.546847ms\n```\n\nThe fix reduces the overhead:\n```\nPruning at HashAndNumber { number: 92, ... }. Resubmitting transactions: 6325, reverification took: 14.728354ms    \nPruning at HashAndNumber { number: 93, ... }. Resubmitting transactions: 7030, reverification took: 23.973607ms    \nPruning at HashAndNumber { number: 94, ... }. Resubmitting transactions: 4465, reverification took: 9.532472ms    \n```\n\n## Review Notes\nI decided to leave the hardocded `EXPECTED_SIZE` for the legacy\ntransaction pool. Removing verification of transactions during\nre-submission may negatively impact the behavior of the legacy\n(single-state) pool. As in long-term we probably want to deprecate old\npool, I did not invest time to assess the impact of rotator change in\nbehavior of the legacy pool.\n\n---------\n\nCo-authored-by: command-bot <>\nCo-authored-by: Iulian Barbu <14218860+iulianbarbu@users.noreply.github.com>",
          "timestamp": "2025-01-13T17:42:22Z",
          "tree_id": "206d7c3d681e324e45101018e7b758dffe9f5f15",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/0e0fa4782e2872ea74d8038ebedb9f6e6be53457"
        },
        "date": 1736793223534,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17037566,
            "range": "± 91575",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17227602,
            "range": "± 113959",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18721782,
            "range": "± 91561",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22471893,
            "range": "± 186497",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 50006160,
            "range": "± 1505467",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 289683491,
            "range": "± 2550640",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2228352738,
            "range": "± 112499268",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14104640,
            "range": "± 97418",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14108451,
            "range": "± 58367",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14556976,
            "range": "± 92937",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18683920,
            "range": "± 127622",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 47644153,
            "range": "± 318348",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 281509357,
            "range": "± 1293849",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2244328548,
            "range": "± 11468921",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alin@parity.io",
            "name": "Alin Dima",
            "username": "alindima"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ddffa027d7b78af330a2d3d18b7dfdbd00e431f0",
          "message": "forbid v1 descriptors with UMP signals (#7127)",
          "timestamp": "2025-01-14T08:40:50Z",
          "tree_id": "b2e6007a7f07c47680adfebdb3e238ecd4482c7f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ddffa027d7b78af330a2d3d18b7dfdbd00e431f0"
        },
        "date": 1736847226606,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19462857,
            "range": "± 598925",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20225289,
            "range": "± 1177085",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21414985,
            "range": "± 516276",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26637736,
            "range": "± 1089928",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 58545195,
            "range": "± 1893684",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 356625882,
            "range": "± 4046990",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2354886616,
            "range": "± 147484564",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14799189,
            "range": "± 145343",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15280767,
            "range": "± 64215",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15823890,
            "range": "± 133161",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 24771051,
            "range": "± 853048",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 61867496,
            "range": "± 3128815",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 392129254,
            "range": "± 18397344",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2952516885,
            "range": "± 51666969",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "60601340+lexnv@users.noreply.github.com",
            "name": "Alexandru Vasile",
            "username": "lexnv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "105c5b94f5d3bf394a3ddf1d10ab0932ce93181b",
          "message": "litep2p: Sufix litep2p to the identify agent version for visibility (#7133)\n\nThis PR adds the `(litep2p)` suffix to the agent version (user agent) of\nthe identify protocol.\n\nThe change is needed to gain visibility into network backends and\ndetermine exactly the number of validators that are running litep2p.\nUsing tools like subp2p-explorer, we can determine if the validators are\nrunning litep2p nodes.\n\nThis reflects on the identify protocol:\n\n```\ninfo=Identify {\n  protocol_version: Some(\"/substrate/1.0\"),\n  agent_version: Some(\"polkadot-parachain/v1.17.0-967989c5d94 (kusama-node-name-01) (litep2p)\")\n  ...\n}\n```\n\ncc @paritytech/networking\n\n---------\n\nSigned-off-by: Alexandru Vasile <alexandru.vasile@parity.io>",
          "timestamp": "2025-01-14T13:30:05Z",
          "tree_id": "ce6a5b4d320c19e7d556b2046408e9e26f92cc72",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/105c5b94f5d3bf394a3ddf1d10ab0932ce93181b"
        },
        "date": 1736865049178,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18258120,
            "range": "± 168392",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18475138,
            "range": "± 261401",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20109765,
            "range": "± 141889",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23463644,
            "range": "± 281495",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 52862185,
            "range": "± 447627",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 311528806,
            "range": "± 9209973",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2378817914,
            "range": "± 95238790",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14930493,
            "range": "± 115190",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15193451,
            "range": "± 79032",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15605536,
            "range": "± 122620",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19487293,
            "range": "± 278402",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50674982,
            "range": "± 478004",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 301902494,
            "range": "± 3710570",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2434776357,
            "range": "± 25814766",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "023763da2043333c3524bd7f12ac6c7b2d084b39",
          "message": "[pallet-revive-eth-rpc] persist eth transaction hash (#6836)\n\nAdd an option to persist EVM transaction hash to a SQL db.\nThis should make it possible to run a full archive ETH RPC node\n(assuming the substrate node is also a full archive node)\n\nSome queries such as eth_getTransactionByHash,\neth_getBlockTransactionCountByHash, and other need to work with a\ntransaction hash indexes, which are not stored in Substrate and need to\nbe stored by the eth-rpc proxy.\n\nThe refactoring break down the Client into a `BlockInfoProvider` and\n`ReceiptProvider`\n- BlockInfoProvider does not need any persistence data, as we can fetch\nall block info from the source substrate chain\n- ReceiptProvider comes in two flavor, \n  - An in memory cache implementation - This is the one we had so far.\n- A DB implementation - This one persist rows with the block_hash, the\ntransaction_index and the transaction_hash, so that we can later fetch\nthe block and extrinsic for that receipt and reconstruct the ReceiptInfo\nobject.\n\nThis PR also adds a new binary eth-indexer, that iterate past and new\nblocks and write the receipt hashes to the DB using the new\nReceiptProvider.\n\n---------\n\nCo-authored-by: GitHub Action <action@github.com>\nCo-authored-by: command-bot <>",
          "timestamp": "2025-01-14T13:41:24Z",
          "tree_id": "94241c9c7ef55673e81804dca424fbf2ece937d7",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/023763da2043333c3524bd7f12ac6c7b2d084b39"
        },
        "date": 1736866697263,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18334732,
            "range": "± 117265",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18478726,
            "range": "± 201625",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20085042,
            "range": "± 234649",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23438229,
            "range": "± 146186",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 52948075,
            "range": "± 702613",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 316621583,
            "range": "± 7963195",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2525076169,
            "range": "± 103338396",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14845301,
            "range": "± 114393",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14939408,
            "range": "± 122964",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15419460,
            "range": "± 157795",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19386973,
            "range": "± 224999",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50332012,
            "range": "± 248799",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 300579505,
            "range": "± 3167964",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2453529695,
            "range": "± 21238059",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6878ba1f399b628cf456ad3abfe72f2553422e1f",
          "message": "Retry approval on availability failure if the check is still needed (#6807)\n\nRecovering the POV can fail in situation where the node just restart and\nthe DHT topology wasn't fully discovered yet, so the current node can't\nconnect to most of its Peers. This is bad because for gossiping the\nassignment you need to be connected to just a few peers, so because we\ncan't approve the candidate and other nodes will see this as a no show.\n\nThis becomes bad in the scenario where you've got a lot of nodes\nrestarting at the same time, so you end up having a lot of no-shows in\nthe network that are never covered, in that case it makes sense for\nnodes to actually retry approving the candidate at a later data in time\nand retry several times if the block containing the candidate wasn't\napproved.\n\n## TODO\n- [x] Add a subsystem test.\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>",
          "timestamp": "2025-01-14T14:52:49Z",
          "tree_id": "a840a94db44fe19bd889ebdf7f2861865680ee1a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/6878ba1f399b628cf456ad3abfe72f2553422e1f"
        },
        "date": 1736869550482,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19779909,
            "range": "± 439717",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19894140,
            "range": "± 312859",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21667174,
            "range": "± 294044",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25449483,
            "range": "± 304446",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 61802876,
            "range": "± 1301090",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 380588393,
            "range": "± 5535300",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2594898336,
            "range": "± 80868651",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16271569,
            "range": "± 190294",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16417142,
            "range": "± 135317",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16976098,
            "range": "± 138724",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21446072,
            "range": "± 379223",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 55648752,
            "range": "± 750986",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 341691336,
            "range": "± 2639587",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2675359995,
            "range": "± 26922907",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d38bb9533b70abb7eff4e8770177d7840899ca86",
          "message": "approval-voting: Fix sending of assignments after restart (#6973)\n\nThere is a problem on restart where nodes will not trigger their needed\nassignment if they were offline while the time of the assignment passed.\n\nThat happens because after restart we will hit this condition\nhttps://github.com/paritytech/polkadot-sdk/blob/4e805ca05067f6ed970f33f9be51483185b0cc0b/polkadot/node/core/approval-voting/src/lib.rs#L2495\nand considered will be `tick_now` which is already higher than the tick\nof our assignment.\n\nThe fix is to schedule a wakeup for untriggered assignments at restart\nand let the logic of processing an wakeup decide if it needs to trigger\nthe assignment or not.\n\nOne thing that we need to be careful here is to make sure we don't\nschedule the wake up immediately after restart because, the node would\nstill be behind with all the assignments that should have received and\nmight make it wrongfully decide it needs to trigger its assignment, so I\nadded a `RESTART_WAKEUP_DELAY: Tick = 12` which should be more than\nenough for the node to catch up.\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>\nCo-authored-by: ordian <write@reusable.software>\nCo-authored-by: Andrei Eres <eresav@me.com>",
          "timestamp": "2025-01-14T17:10:27Z",
          "tree_id": "5f3c488550900117e030d5e7268c0775e4479292",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d38bb9533b70abb7eff4e8770177d7840899ca86"
        },
        "date": 1736877700755,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17175140,
            "range": "± 144091",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18112687,
            "range": "± 313904",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19316438,
            "range": "± 86244",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23070150,
            "range": "± 117672",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53363617,
            "range": "± 2016094",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 314185597,
            "range": "± 8152695",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2318622229,
            "range": "± 62064152",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14991231,
            "range": "± 229294",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15276196,
            "range": "± 137495",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15675463,
            "range": "± 301759",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20346687,
            "range": "± 164529",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51042604,
            "range": "± 383701",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 304804620,
            "range": "± 2184821",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2420487989,
            "range": "± 11266299",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "skunert49@gmail.com",
            "name": "Sebastian Kunert",
            "username": "skunert"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ba36b2d2293d72d087072254e6371d9089f192b7",
          "message": "CI: Only format umbrella crate during umbrella check (#7139)\n\nThe umbrella crate quick-check was always failing whenever there was\nsomething misformated in the whole codebase.\nThis leads to an error that indicates that a new crate was added, even\nwhen it was not.\n\nAfter this PR we only apply `cargo fmt` to the newly generated umbrella\ncrate `polkadot-sdk`. This results in this check being independent from\nthe fmt job which should check the entire codebase.",
          "timestamp": "2025-01-14T17:56:30Z",
          "tree_id": "4c9d54a88060cf1ed429532b9096d0521c6d6278",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ba36b2d2293d72d087072254e6371d9089f192b7"
        },
        "date": 1736880397020,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18165065,
            "range": "± 190980",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18286268,
            "range": "± 210677",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20021115,
            "range": "± 392823",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23443791,
            "range": "± 150845",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53241323,
            "range": "± 410480",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 306596809,
            "range": "± 2418646",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2533432411,
            "range": "± 43407896",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14947791,
            "range": "± 96630",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15258953,
            "range": "± 136218",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15845731,
            "range": "± 164053",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19511629,
            "range": "± 138963",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51047941,
            "range": "± 1254996",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 307126744,
            "range": "± 2700022",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2426136602,
            "range": "± 16201609",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "carlosalag@protonmail.com",
            "name": "Carlo Sala",
            "username": "carlosala"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "85c244f6e6e59db23bdfcfef903fd9145f0546ad",
          "message": "xcm: convert properly assets in xcmpayment apis (#7134)\n\nPort #6459 changes to relays as well, which were probably forgotten in\nthat PR.\nThanks!\n\n---------\n\nCo-authored-by: Francisco Aguirre <franciscoaguirreperez@gmail.com>\nCo-authored-by: command-bot <>",
          "timestamp": "2025-01-14T19:57:05Z",
          "tree_id": "8a81e263b00e7faaa9ef4265fa398e217a9717f4",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/85c244f6e6e59db23bdfcfef903fd9145f0546ad"
        },
        "date": 1736887781488,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19326492,
            "range": "± 192239",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19568984,
            "range": "± 237771",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21620253,
            "range": "± 195700",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25280870,
            "range": "± 198142",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55589853,
            "range": "± 621510",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 362998845,
            "range": "± 8023013",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2565082540,
            "range": "± 118976847",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15942265,
            "range": "± 114508",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15985412,
            "range": "± 79738",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16293529,
            "range": "± 146380",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20539328,
            "range": "± 187988",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52601713,
            "range": "± 427856",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 332849201,
            "range": "± 2675278",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2550310247,
            "range": "± 11374664",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5f391db8af50a79db83acfe37f73c7202177d71c",
          "message": "PRDOC: Document `validate: false` (#7117)",
          "timestamp": "2025-01-14T20:22:52Z",
          "tree_id": "b90cddafe7426e86d589d89aed6845397d18d474",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/5f391db8af50a79db83acfe37f73c7202177d71c"
        },
        "date": 1736889236001,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18706619,
            "range": "± 165714",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19255104,
            "range": "± 345992",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20911502,
            "range": "± 164935",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25370905,
            "range": "± 475262",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 63313080,
            "range": "± 1410083",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 406209658,
            "range": "± 7306113",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2504138350,
            "range": "± 106585985",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15681205,
            "range": "± 449218",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15945439,
            "range": "± 119874",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16523680,
            "range": "± 134349",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21422392,
            "range": "± 180345",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 59244545,
            "range": "± 1008938",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 363103114,
            "range": "± 10768721",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2817715625,
            "range": "± 46035714",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "skunert49@gmail.com",
            "name": "Sebastian Kunert",
            "username": "skunert"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d5539aa63edc8068eff9c4cbb78214c3a5ab66b2",
          "message": "Parachains: Use relay chain slot for velocity measurement (#6825)\n\ncloses #3967 \n\n## Changes\nWe now use relay chain slots to measure velocity on chain. Previously we\nwere storing the current parachain slot. Then in `on_state_proof` of the\n`ConsensusHook` we were checking how many blocks were athored in the\ncurrent parachain slot. This works well when the parachain slot time and\nrelay chain slot time is the same. With elastic scaling, we can have\nparachain slot times lower than that of the relay chain. In these cases\nwe want to measure velocity in relation to the relay chain. This PR\nadjusts that.\n\n\n##  Migration\nThis PR includes a migration. Storage item `SlotInfo` of pallet\n`aura-ext` is renamed to `RelaySlotInfo` to better reflect its new\ncontent. A migration has been added that just kills the old storage\nitem. `RelaySlotInfo` will be `None` initially but its value will be\nadjusted after one new relay chain slot arrives.\n\n---------\n\nCo-authored-by: command-bot <>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-01-14T22:47:19Z",
          "tree_id": "cbcdcd56a70e6bd67dc20a556f4fa69acba96164",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d5539aa63edc8068eff9c4cbb78214c3a5ab66b2"
        },
        "date": 1736897829845,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17722201,
            "range": "± 116282",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18012556,
            "range": "± 177550",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19381997,
            "range": "± 109964",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22946110,
            "range": "± 181601",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51386664,
            "range": "± 435439",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 292305767,
            "range": "± 4514382",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2352164298,
            "range": "± 65310014",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14230879,
            "range": "± 107403",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14377533,
            "range": "± 96294",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15098952,
            "range": "± 112444",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19361823,
            "range": "± 184034",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50307501,
            "range": "± 409590",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 297428866,
            "range": "± 1987586",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2470574263,
            "range": "± 17857659",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0d660a420fbc11a90cde5aa4e43ce2027b502162",
          "message": "approval-voting: Make importing of duplicate assignment idempotent (#6971)\n\nNormally, approval-voting wouldn't receive duplicate assignments because\napproval-distribution makes sure of it, however in the situation where\nwe restart we might receive the same assignment again and since\napproval-voting already persisted it we will end up inserting it twice\nin `ApprovalEntry.tranches.assignments` because that's an array.\n\nFix this by making sure duplicate assignments are a noop if the\nvalidator already had an assignment imported at the same tranche.\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>\nCo-authored-by: ordian <write@reusable.software>",
          "timestamp": "2025-01-15T09:13:23Z",
          "tree_id": "65fbb6d76e92ed10477d288c458b69c0ad8e281a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/0d660a420fbc11a90cde5aa4e43ce2027b502162"
        },
        "date": 1736935766797,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18408807,
            "range": "± 355811",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18457808,
            "range": "± 263289",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19801345,
            "range": "± 292748",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24000614,
            "range": "± 260191",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53346613,
            "range": "± 493793",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 315930032,
            "range": "± 6811735",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2596476385,
            "range": "± 28124692",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14977752,
            "range": "± 526668",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15249615,
            "range": "± 241734",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15739770,
            "range": "± 150608",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19654452,
            "range": "± 197491",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50821643,
            "range": "± 225568",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 304634582,
            "range": "± 3193676",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2454352580,
            "range": "± 10160829",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "60601340+lexnv@users.noreply.github.com",
            "name": "Alexandru Vasile",
            "username": "lexnv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ef064a357c97c2635f05295aac1698a91fa2f4fd",
          "message": "req-resp/litep2p: Reject inbound requests from banned peers (#7158)\n\nThis PR rejects inbound requests from banned peers (reputation is below\nthe banned threshold).\n\nThis mirrors the request-response implementation from the libp2p side.\nI won't expect this to get triggered too often, but we'll monitor this\nmetric.\n\nWhile at it, have registered a new inbound failure metric to have\nvisibility into this.\n\nDiscovered during the investigation of:\nhttps://github.com/paritytech/polkadot-sdk/issues/7076#issuecomment-2589613046\n\ncc @paritytech/networking\n\n---------\n\nSigned-off-by: Alexandru Vasile <alexandru.vasile@parity.io>",
          "timestamp": "2025-01-15T11:04:37Z",
          "tree_id": "9d3ca09a7c9aa59dab2d7fb614d4ab978d516a2c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ef064a357c97c2635f05295aac1698a91fa2f4fd"
        },
        "date": 1736944100208,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17611124,
            "range": "± 168550",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17922403,
            "range": "± 90481",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19266958,
            "range": "± 261691",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22983394,
            "range": "± 234550",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51394167,
            "range": "± 442708",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 292396407,
            "range": "± 2873177",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2323722628,
            "range": "± 75890400",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14422717,
            "range": "± 174704",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14605702,
            "range": "± 104698",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15182823,
            "range": "± 149796",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18811332,
            "range": "± 188290",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49651859,
            "range": "± 261695",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 293475543,
            "range": "± 2014055",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2379715345,
            "range": "± 13962787",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alexandre.balde@parity.io",
            "name": "Alexandre R. Baldé",
            "username": "rockbmb"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "cb0d8544dc8828c7b5e7f6a5fc20ce8c6ef9bbb4",
          "message": "Remove 0 as a special case in gas/storage meters (#6890)\n\nCloses #6846 .\n\n---------\n\nSigned-off-by: xermicus <cyrill@parity.io>\nCo-authored-by: command-bot <>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>\nCo-authored-by: xermicus <cyrill@parity.io>",
          "timestamp": "2025-01-15T13:14:54Z",
          "tree_id": "7962b0041a87ad5b6b5a3dbb5c26e4703b291285",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/cb0d8544dc8828c7b5e7f6a5fc20ce8c6ef9bbb4"
        },
        "date": 1736950854839,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18128549,
            "range": "± 117859",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18179551,
            "range": "± 176411",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19698538,
            "range": "± 211171",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23526145,
            "range": "± 216141",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 52949353,
            "range": "± 783449",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 309730096,
            "range": "± 6435843",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2310416654,
            "range": "± 67131835",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14746141,
            "range": "± 265145",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14624380,
            "range": "± 151870",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15303350,
            "range": "± 171911",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19004387,
            "range": "± 115996",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49388843,
            "range": "± 535637",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 296602487,
            "range": "± 4244718",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2402669328,
            "range": "± 26473664",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d822e07d51dda41982291dc6582a8c4a34821e94",
          "message": "[pallet-revive] Bump asset-hub westend spec version (#7176)\n\nBump asset-hub westend spec version\n\n---------\n\nCo-authored-by: command-bot <>",
          "timestamp": "2025-01-15T13:48:38Z",
          "tree_id": "e10cbef466384a55cb70d8a06279b92e9e89f55d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d822e07d51dda41982291dc6582a8c4a34821e94"
        },
        "date": 1736952526432,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18254286,
            "range": "± 121382",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18609699,
            "range": "± 316668",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19709322,
            "range": "± 175699",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23949767,
            "range": "± 242271",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53978128,
            "range": "± 543126",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 316571212,
            "range": "± 4624985",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2421168844,
            "range": "± 58228106",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15287954,
            "range": "± 166398",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15295784,
            "range": "± 178520",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15771912,
            "range": "± 189753",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20025963,
            "range": "± 331182",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51565054,
            "range": "± 781983",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 309242359,
            "range": "± 4312550",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2474618025,
            "range": "± 21670842",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ece32e38a1a37aa354d51b16c07a42c66f23976e",
          "message": "[pallet-revive] Remove debug buffer (#7163)\n\nRemove the `debug_buffer` feature\n\n---------\n\nCo-authored-by: command-bot <>\nCo-authored-by: Cyrill Leutwiler <cyrill@parity.io>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>",
          "timestamp": "2025-01-15T17:37:59Z",
          "tree_id": "7d68de4fdbfafcb85dea33ba480521078b4fdd6b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ece32e38a1a37aa354d51b16c07a42c66f23976e"
        },
        "date": 1736965673094,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17939690,
            "range": "± 156078",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18148230,
            "range": "± 187454",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19709998,
            "range": "± 140061",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23489686,
            "range": "± 220391",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53548192,
            "range": "± 529866",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 298153051,
            "range": "± 3285810",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2452752745,
            "range": "± 66316983",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14627982,
            "range": "± 97753",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14801115,
            "range": "± 102672",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15265155,
            "range": "± 187311",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19238177,
            "range": "± 206352",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49708940,
            "range": "± 622625",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 298148610,
            "range": "± 3889401",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2414731202,
            "range": "± 22682292",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5be65872188a4ac1bf76333af3958b65f2a9629e",
          "message": "[pallet-revive] Remove revive events (#7164)\n\nRemove all pallet::events except for the `ContractEmitted` event that is\nemitted by contracts\n\n---------\n\nCo-authored-by: command-bot <>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>",
          "timestamp": "2025-01-15T19:23:54Z",
          "tree_id": "b90c0c104eba03064ac578fc573c153eb3bec52e",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/5be65872188a4ac1bf76333af3958b65f2a9629e"
        },
        "date": 1736972027688,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18372717,
            "range": "± 210143",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18462748,
            "range": "± 117987",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19652310,
            "range": "± 121453",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23562077,
            "range": "± 162544",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53478752,
            "range": "± 1090746",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 316001707,
            "range": "± 3132883",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2331506604,
            "range": "± 110256047",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14653478,
            "range": "± 173976",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14731829,
            "range": "± 125117",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15386650,
            "range": "± 139801",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19365751,
            "range": "± 213118",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49751117,
            "range": "± 398216",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 294616068,
            "range": "± 2625649",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2408988939,
            "range": "± 28171907",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "liam.aharon@hotmail.com",
            "name": "liamaharon",
            "username": "liamaharon"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "be2404cccd9923c41e2f16bfe655f19574f1ae0e",
          "message": "Implement `pallet-asset-rewards` (#3926)\n\nCloses #3149 \n\n## Description\n\nThis PR introduces `pallet-asset-rewards`, which allows accounts to be\nrewarded for freezing `fungible` tokens. The motivation for creating\nthis pallet is to allow incentivising LPs.\n\nSee the pallet docs for more info about the pallet.\n\n## Runtime changes\n\nThe pallet has been added to\n- `asset-hub-rococo`\n- `asset-hub-westend`\n\nThe `NativeAndAssets` `fungibles` Union did not contain `PoolAssets`, so\nit has been renamed `NativeAndNonPoolAssets`\n\nA new `fungibles` Union `NativeAndAllAssets` was created to encompass\nall assets and the native token.\n\n## TODO\n- [x] Emulation tests\n- [x] Fill in Freeze logic (blocked\nhttps://github.com/paritytech/polkadot-sdk/issues/3342) and re-run\nbenchmarks\n\n---------\n\nCo-authored-by: command-bot <>\nCo-authored-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>\nCo-authored-by: muharem <ismailov.m.h@gmail.com>\nCo-authored-by: Guillaume Thiolliere <gui.thiolliere@gmail.com>",
          "timestamp": "2025-01-16T06:26:59Z",
          "tree_id": "aa90529d06d73e2ad5d12708830213302e23ac6a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/be2404cccd9923c41e2f16bfe655f19574f1ae0e"
        },
        "date": 1737012046386,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19157804,
            "range": "± 203729",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19553379,
            "range": "± 170674",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21033152,
            "range": "± 248042",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25787654,
            "range": "± 625285",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 65422726,
            "range": "± 1271536",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 407165643,
            "range": "± 9054261",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2538724429,
            "range": "± 165946431",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16091513,
            "range": "± 213653",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16174168,
            "range": "± 190838",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16682004,
            "range": "± 181863",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21732154,
            "range": "± 861978",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53994686,
            "range": "± 3273159",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 374258182,
            "range": "± 21142073",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2830854255,
            "range": "± 83814457",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "giuseppe.re@parity.io",
            "name": "Giuseppe Re",
            "username": "re-gius"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "64abc745d9a7e7d6bea471e7bd2e895c503199c2",
          "message": "Update `parity-publish` to v0.10.4 (#7193)\n\nThe changes from v0.10.3 are only related to dependencies version. This\nshould fix some failing CIs.\n\nThis PR also updates the Rust cache version in CI.",
          "timestamp": "2025-01-16T14:00:59Z",
          "tree_id": "0ae678c987baad6fd5d34d15ec036bf49638c7a8",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/64abc745d9a7e7d6bea471e7bd2e895c503199c2"
        },
        "date": 1737039043274,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17584553,
            "range": "± 248876",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17675994,
            "range": "± 83401",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19180723,
            "range": "± 112837",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22694589,
            "range": "± 103193",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 50526010,
            "range": "± 410379",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 287769114,
            "range": "± 1719335",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2196478209,
            "range": "± 21133490",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14319864,
            "range": "± 141768",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14407371,
            "range": "± 91929",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14886917,
            "range": "± 71010",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18950257,
            "range": "± 253863",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49476953,
            "range": "± 218857",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 294394284,
            "range": "± 2003880",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2349405061,
            "range": "± 37038070",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "88332432+dastansam@users.noreply.github.com",
            "name": "Dastan",
            "username": "dastansam"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f7baa84f48aa72b96e8c9a9ec8a1934431de6709",
          "message": "[FRAME] `pallet_asset_tx_payment`: replace `AssetId` bound from `Copy` to `Clone` (#7194)\n\ncloses https://github.com/paritytech/polkadot-sdk/issues/6911",
          "timestamp": "2025-01-16T15:12:41Z",
          "tree_id": "76e82138f2681d38c1837774260368084f3321d0",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f7baa84f48aa72b96e8c9a9ec8a1934431de6709"
        },
        "date": 1737044377210,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19945056,
            "range": "± 426716",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20032928,
            "range": "± 425297",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22292701,
            "range": "± 643098",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 28099924,
            "range": "± 1394811",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 68451246,
            "range": "± 2794289",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 428333459,
            "range": "± 9289883",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2574827317,
            "range": "± 213720637",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16584153,
            "range": "± 336899",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16546325,
            "range": "± 237883",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17876652,
            "range": "± 307422",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23219119,
            "range": "± 1084064",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 63226169,
            "range": "± 894853",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 395282150,
            "range": "± 13401989",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2857880129,
            "range": "± 66590516",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "363911+pepoviola@users.noreply.github.com",
            "name": "Javier Viola",
            "username": "pepoviola"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "77ad8abb4a3aada3362fc4d5780db1844cc2e15d",
          "message": "Migrate substrate zombienet test poc (#7178)\n\nZombienet substrate tests PoC (using native provider).\n\ncc: @emamihe @alvicsam",
          "timestamp": "2025-01-16T16:09:24Z",
          "tree_id": "60adef081ef6ce5f5746930839f47c859bb25317",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/77ad8abb4a3aada3362fc4d5780db1844cc2e15d"
        },
        "date": 1737046705925,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18168708,
            "range": "± 121752",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18533278,
            "range": "± 137708",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20148580,
            "range": "± 497248",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23597340,
            "range": "± 191963",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 52244377,
            "range": "± 471469",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 301079748,
            "range": "± 2459829",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2495852104,
            "range": "± 42486797",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15064551,
            "range": "± 90439",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15126610,
            "range": "± 210687",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15605269,
            "range": "± 113899",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19447320,
            "range": "± 195116",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50621768,
            "range": "± 394179",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 306056897,
            "range": "± 3453280",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2435107403,
            "range": "± 17259492",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "gui.thiolliere@gmail.com",
            "name": "Guillaume Thiolliere",
            "username": "gui1117"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4b2febe18c6f2180a31a902433c00c30f8903ef7",
          "message": "Make frame crate not use the feature experimental (#7177)\n\nWe already use it for lots of pallet.\n\nKeeping it feature gated by experimental means we lose the information\nof which pallet was using experimental before the migration to frame\ncrate usage.\n\nWe can consider `polkadot-sdk-frame` crate unstable but let's not use\nthe feature `experimental`.\n\n---------\n\nCo-authored-by: command-bot <>",
          "timestamp": "2025-01-17T11:46:28Z",
          "tree_id": "d3c04961bfcb06080b83e764b72bd06a609a2c84",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4b2febe18c6f2180a31a902433c00c30f8903ef7"
        },
        "date": 1737118318915,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18088388,
            "range": "± 228949",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18042711,
            "range": "± 141304",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19455012,
            "range": "± 170870",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23911112,
            "range": "± 467793",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56609937,
            "range": "± 1310417",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 336995393,
            "range": "± 6659536",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2778740486,
            "range": "± 103991073",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14889067,
            "range": "± 244241",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15126065,
            "range": "± 212413",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16249191,
            "range": "± 354192",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20056750,
            "range": "± 450755",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52206620,
            "range": "± 1214898",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 321376342,
            "range": "± 9783716",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2606503249,
            "range": "± 67805264",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alex.theissen@me.com",
            "name": "Alexander Theißen",
            "username": "athei"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d62a90c8c729acd98c7e9a5cab9803b8b211ffc5",
          "message": "pallet_revive: Bump PolkaVM (#7203)\n\nUpdate to PolkaVM `0.19`. This version renumbers the opcodes in order to\nbe in-line with the grey paper. Hopefully, for the last time. This means\nthat it breaks existing contracts.\n\n---------\n\nSigned-off-by: xermicus <cyrill@parity.io>\nCo-authored-by: command-bot <>\nCo-authored-by: xermicus <cyrill@parity.io>",
          "timestamp": "2025-01-17T14:36:28Z",
          "tree_id": "968e43038c8fb4da1fd52c21631862be5ec7491f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d62a90c8c729acd98c7e9a5cab9803b8b211ffc5"
        },
        "date": 1737128852258,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18364193,
            "range": "± 881274",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18608187,
            "range": "± 162908",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20405683,
            "range": "± 633656",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24566062,
            "range": "± 315871",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57668950,
            "range": "± 1268082",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 354008420,
            "range": "± 8009030",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2572046074,
            "range": "± 109938897",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15443759,
            "range": "± 183487",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15350356,
            "range": "± 130783",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15940296,
            "range": "± 164453",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19961632,
            "range": "± 259145",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52153794,
            "range": "± 660727",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 316226044,
            "range": "± 5220342",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2523189047,
            "range": "± 20851527",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "0@mcornholio.ru",
            "name": "Yuri Volkov",
            "username": "mutantcornholio"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c2531dc12dedfb345c16200229038ef8d04972cc",
          "message": "review-bot upgrade (#7214)\n\nUpgrading PAPI in review-bot:\nhttps://github.com/paritytech/review-bot/issues/140",
          "timestamp": "2025-01-17T17:00:04Z",
          "tree_id": "aba80af7d686cb9ce7a7c829d22c93e3f3cdd9f3",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c2531dc12dedfb345c16200229038ef8d04972cc"
        },
        "date": 1737136366940,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18304738,
            "range": "± 191073",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18527236,
            "range": "± 281673",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20043720,
            "range": "± 226665",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23781324,
            "range": "± 162492",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54567179,
            "range": "± 817817",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 313420659,
            "range": "± 4555487",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2605308384,
            "range": "± 45571261",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14677700,
            "range": "± 141201",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14765049,
            "range": "± 86961",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15236255,
            "range": "± 124141",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19210241,
            "range": "± 115039",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51714726,
            "range": "± 831038",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 307169871,
            "range": "± 2961139",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2438498238,
            "range": "± 11898175",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "7702fdd1bd869e518bf176ccf0268f83f8927f9b",
          "message": "[pallet-revive] Add  tracing support (1/3) (#7166)\n\nAdd foundation for supporting call traces in pallet_revive\n\nFollow up:\n- PR #7167 Add changes to eth-rpc to introduce debug endpoint that will\nuse pallet-revive tracing features\n- PR #6727 Add new RPC to the client and implement tracing runtime API\nthat can capture traces on previous blocks\n\n---------\n\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>",
          "timestamp": "2025-01-17T18:21:38Z",
          "tree_id": "c83fae415391294d96d84614537a8454d6a2a84b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/7702fdd1bd869e518bf176ccf0268f83f8927f9b"
        },
        "date": 1737147608745,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17979571,
            "range": "± 229661",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18244692,
            "range": "± 150519",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19763823,
            "range": "± 132968",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23496696,
            "range": "± 504601",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 52131354,
            "range": "± 457737",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 309407290,
            "range": "± 2527716",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2406364477,
            "range": "± 86731526",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14765115,
            "range": "± 105120",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14854341,
            "range": "± 119648",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15258502,
            "range": "± 72031",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19361630,
            "range": "± 242393",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50663308,
            "range": "± 489173",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 304482389,
            "range": "± 3026713",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2386263416,
            "range": "± 31593728",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "32275622+seemantaggarwal@users.noreply.github.com",
            "name": "seemantaggarwal",
            "username": "seemantaggarwal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "4937f779068d1ab947c9eada8e1d3f5b7191eb94",
          "message": "Use docify export for parachain template hardcoded configuration and embed it in its README #6333 (#7093)\n\nUse docify export for parachain template hardcoded configuration and\nembed it in its README #6333\n\nDocify currently has a limitation of not being able to embed a\nvariable/const in its code, without embedding it's definition, even if\ndo something in a string like\n\n\"this is a sample string ${sample_variable}\"\n\nIt will embed the entire string \n\"this is a sample string ${sample_variable}\"\nwithout replacing the value of sample_variable from the code\n\nHence, the goal was just to make it obvious in the README where the\nPARACHAIN_ID value is coming from, so a note has been added at the start\nfor the same, so whenever somebody is running these commands, they will\nbe aware about the value and replace accordingly.\n\nTo make it simpler, we added a \nrust ignore block so the user can just look it up in the readme itself\nand does not have to scan through the runtime directory for the value.\n\n---------\n\nCo-authored-by: Iulian Barbu <14218860+iulianbarbu@users.noreply.github.com>",
          "timestamp": "2025-01-20T10:21:29Z",
          "tree_id": "bf73d3be67c48f088a2d8ea09a7f98b9d05ef959",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4937f779068d1ab947c9eada8e1d3f5b7191eb94"
        },
        "date": 1737372833952,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 21112001,
            "range": "± 726247",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20952942,
            "range": "± 1053150",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21958949,
            "range": "± 332781",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26553717,
            "range": "± 641259",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 63482603,
            "range": "± 2311791",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 430378516,
            "range": "± 15308694",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2896325497,
            "range": "± 235769895",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15668955,
            "range": "± 485238",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16594168,
            "range": "± 423578",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17661021,
            "range": "± 438277",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22989128,
            "range": "± 895428",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 60803065,
            "range": "± 1734343",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 409673043,
            "range": "± 12780549",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2947073658,
            "range": "± 63584767",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "skunert49@gmail.com",
            "name": "Sebastian Kunert",
            "username": "skunert"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "d5d9b1276a088a6bd7a8c2c698320dad3d0ee2c4",
          "message": "Stabilize `ensure_execute_processes_have_correct_num_threads` test (#7253)\n\nSaw this test flake a few times, last time\n[here](https://github.com/paritytech/polkadot-sdk/actions/runs/12834432188/job/35791830215).\n\nWe first fetch all processes in the test, then query `/proc/<pid>/stat`\nfor every one of them. When the file was not found, we would error. Now\nwe tolerate not finding this file. Ran 200 times locally without error,\nbefore would fail a few times, probably depending on process fluctuation\n(which I expect to be high on CI runners).",
          "timestamp": "2025-01-20T11:02:59Z",
          "tree_id": "ae157145721731ae535a6f5633902334e6ce545a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d5d9b1276a088a6bd7a8c2c698320dad3d0ee2c4"
        },
        "date": 1737374176727,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17422732,
            "range": "± 119219",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17708208,
            "range": "± 100861",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19427012,
            "range": "± 141533",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22912638,
            "range": "± 170760",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 52536572,
            "range": "± 770324",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 325779334,
            "range": "± 5149128",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2300108714,
            "range": "± 72743446",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14426000,
            "range": "± 142949",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14492808,
            "range": "± 97496",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15027981,
            "range": "± 91093",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19263461,
            "range": "± 116918",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50104357,
            "range": "± 590082",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 293283706,
            "range": "± 1721853",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2420889348,
            "range": "± 11376355",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ea27696aeed8e76cfb82492f6f3665948d766fe5",
          "message": "[pallet-revive] eth-rpc error logging (#7251)\n\nLog error instead of failing with an error when block processing fails\n\n---------\n\nCo-authored-by: command-bot <>",
          "timestamp": "2025-01-20T11:47:29Z",
          "tree_id": "e73af823265c0bd183ed33d3d4170ee727a2b722",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ea27696aeed8e76cfb82492f6f3665948d766fe5"
        },
        "date": 1737376869300,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18771338,
            "range": "± 242423",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18791059,
            "range": "± 256843",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20144976,
            "range": "± 291039",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23690349,
            "range": "± 153020",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 52603663,
            "range": "± 2269605",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 319913688,
            "range": "± 9578750",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2538452292,
            "range": "± 105117903",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15262462,
            "range": "± 171255",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15562067,
            "range": "± 177331",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16148001,
            "range": "± 245144",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20052853,
            "range": "± 200616",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51687520,
            "range": "± 573038",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 308609914,
            "range": "± 5033150",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2434308809,
            "range": "± 13042974",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "yrong1997@gmail.com",
            "name": "Ron",
            "username": "yrong"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "569ce71e2c759b26601608f145d9b5efcb906919",
          "message": "Migrate pallet-mmr to umbrella crate (#7081)\n\nPart of https://github.com/paritytech/polkadot-sdk/issues/6504",
          "timestamp": "2025-01-20T14:16:57Z",
          "tree_id": "92132f125d5f9934b551da362af5b39250a3c53f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/569ce71e2c759b26601608f145d9b5efcb906919"
        },
        "date": 1737385973042,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 16879660,
            "range": "± 165255",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17188718,
            "range": "± 101153",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18712548,
            "range": "± 170822",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22439961,
            "range": "± 179765",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 50331570,
            "range": "± 432563",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 295769453,
            "range": "± 1602481",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2300071111,
            "range": "± 21113938",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14220818,
            "range": "± 153346",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14293497,
            "range": "± 67882",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14745967,
            "range": "± 124850",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18616681,
            "range": "± 137998",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 47651938,
            "range": "± 472286",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 282228495,
            "range": "± 1470248",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2247880839,
            "range": "± 7725470",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "runcomet@protonmail.com",
            "name": "runcomet",
            "username": "runcomet"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "711e6ff33373bc08b026446ce19b73920bfe068c",
          "message": "Migrate `pallet-assets-freezer` to umbrella crate (#6599)\n\nPart of https://github.com/paritytech/polkadot-sdk/issues/6504\n\n### Added modules\n\n- `utility`: Traits not tied to any direct operation in the runtime.\n\npolkadot address: 14SRqZTC1d8rfxL8W1tBTnfUBPU23ACFVPzp61FyGf4ftUFg\n\n---------\n\nCo-authored-by: Giuseppe Re <giuseppe.re@parity.io>",
          "timestamp": "2025-01-20T16:12:44Z",
          "tree_id": "4f4b01b3189d08a7662c4986bcd35a0cdf12aac6",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/711e6ff33373bc08b026446ce19b73920bfe068c"
        },
        "date": 1737393330228,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18055831,
            "range": "± 359936",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18157697,
            "range": "± 399030",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19826214,
            "range": "± 426007",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23375077,
            "range": "± 590290",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53265825,
            "range": "± 830529",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 311195248,
            "range": "± 7229491",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2508621951,
            "range": "± 37513773",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15123148,
            "range": "± 247343",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15039146,
            "range": "± 340111",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15525050,
            "range": "± 253736",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19459771,
            "range": "± 317878",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51177997,
            "range": "± 1324533",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 314552697,
            "range": "± 10126109",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2504317267,
            "range": "± 15786540",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "benjamin@gallois.cc",
            "name": "Benjamin Gallois",
            "username": "bgallois"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2c4ceccebe2c338029eef243645455d525a5a78b",
          "message": "Fix `frame-benchmarking-cli` not buildable without rocksdb (#7263)\n\n## Description\n\nThe `frame-benchmarking-cli` crate has not been buildable without the\n`rocksdb` feature since version 1.17.0.\n\n**Error:**  \n```rust\nself.database()?.unwrap_or(Database::RocksDb),\n                             ^^^^^^^ variant or associated item not found in `Database`\n```\n\nThis issue is also related to the `rocksdb` feature bleeding (#3793),\nwhere the `rocksdb` feature was always activated even when compiling\nthis crate with `--no-default-features`.\n\n**Fix:**  \n- Resolved the error by choosing `paritydb` as the default database when\ncompiled without the `rocksdb` feature.\n- Fixed the issue where the `sc-cli` crate's `rocksdb` feature was\nalways active, even compiling `frame-benchmarking-cli` with\n`--no-default-features`.\n\n## Review Notes\n\nFix the crate to be built without rocksdb, not intended to solve #3793.\n\n---------\n\nCo-authored-by: command-bot <>",
          "timestamp": "2025-01-20T21:19:48Z",
          "tree_id": "42c3bf3888529a0b4b0b85c87a9d5814dfb30c18",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/2c4ceccebe2c338029eef243645455d525a5a78b"
        },
        "date": 1737410999170,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18488390,
            "range": "± 123986",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18795468,
            "range": "± 144980",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20219790,
            "range": "± 116871",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23654992,
            "range": "± 75707",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53554239,
            "range": "± 427420",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 319764511,
            "range": "± 5692119",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2472618270,
            "range": "± 27808887",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15085718,
            "range": "± 109104",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14982627,
            "range": "± 95447",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15703470,
            "range": "± 171769",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19530417,
            "range": "± 185213",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50712341,
            "range": "± 358775",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 305581430,
            "range": "± 1468290",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2442363349,
            "range": "± 23000516",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cbf3925e1fe1383b998cfb428038c46da1577501",
          "message": "[eth-indexer] subscribe to finalize blocks instead of best blocks (#7260)\n\nFor eth-indexer, it's probably safer to use `subscribe_finalized` and\nindex these blocks into the DB rather than `subscribe_best`\n\n---------\n\nCo-authored-by: command-bot <>",
          "timestamp": "2025-01-20T22:58:21Z",
          "tree_id": "27475d6dbd249e2e1b4b930038f1a1cd4be00564",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/cbf3925e1fe1383b998cfb428038c46da1577501"
        },
        "date": 1737417148279,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17271208,
            "range": "± 78850",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17734759,
            "range": "± 303563",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18990916,
            "range": "± 92565",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22585603,
            "range": "± 132385",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51221295,
            "range": "± 562658",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 283401812,
            "range": "± 2346370",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2249084970,
            "range": "± 66563554",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14261144,
            "range": "± 85620",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14359887,
            "range": "± 56477",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14723154,
            "range": "± 83250",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18532906,
            "range": "± 390122",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 48480680,
            "range": "± 387844",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 286442338,
            "range": "± 1784820",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2304917879,
            "range": "± 6397679",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "jose@blockdeep.io",
            "name": "José Molina Colmenero",
            "username": "Moliholy"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "12ed0f4ffe4dcf3a8fe8928e3791141a110fad8b",
          "message": "Add an extra_constant to pallet-collator-selection (#7206)\n\nCurrently `pallet-collator-selection` does not expose a way to query the\nassigned pot account derived from the `PotId` configuration item.\nWithout it, it is not possible to transfer the existential deposit to\nit.\n\nThis PR addresses this issue by exposing an extra constant.\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-01-21T09:49:09Z",
          "tree_id": "606f8c7eb20cf23b7b299cdde264f8503415b819",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/12ed0f4ffe4dcf3a8fe8928e3791141a110fad8b"
        },
        "date": 1737456413662,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 20306283,
            "range": "± 256890",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20767347,
            "range": "± 297831",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21873982,
            "range": "± 301200",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26871701,
            "range": "± 451244",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 66525852,
            "range": "± 1640230",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 421653578,
            "range": "± 20746923",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 3071179289,
            "range": "± 36423565",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16236375,
            "range": "± 315976",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16315818,
            "range": "± 202432",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16626545,
            "range": "± 246160",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20993207,
            "range": "± 257717",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 57320684,
            "range": "± 1201455",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 358290060,
            "range": "± 4793232",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2707290220,
            "range": "± 28684018",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "claravanstaden64@gmail.com",
            "name": "Clara van Staden",
            "username": "claravanstaden"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c0c0632c2efca435e973a1f6788e24235fe0e2a6",
          "message": "Snowbridge - Copy Rococo integration tests to Westend (#7108)\n\nCopies all the integration tests from Rococo to Westend.\n\nCloses: https://github.com/paritytech/polkadot-sdk/issues/6389",
          "timestamp": "2025-01-21T14:11:50Z",
          "tree_id": "245cc885df6e82b498175778a667548dce9f9a09",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c0c0632c2efca435e973a1f6788e24235fe0e2a6"
        },
        "date": 1737471726801,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17536198,
            "range": "± 121212",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17822261,
            "range": "± 158020",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19370525,
            "range": "± 182193",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23222848,
            "range": "± 297414",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53059338,
            "range": "± 931496",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 298218217,
            "range": "± 4239266",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2425768999,
            "range": "± 143731600",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14610346,
            "range": "± 100562",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14753882,
            "range": "± 175556",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15126000,
            "range": "± 63805",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19213816,
            "range": "± 239018",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50386080,
            "range": "± 454901",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 293042735,
            "range": "± 3270371",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2402432828,
            "range": "± 19039944",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ludovic.domingues96@gmail.com",
            "name": "Ludovic_Domingues",
            "username": "Krayt78"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9edaef09a69e39b0785f8339f93a3ed6a1f6e023",
          "message": "Migrate pallet-paged-list-fuzzer to umbrella crate (#6930)\n\nPart of  #6504\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: Giuseppe Re <giuseppe.re@parity.io>",
          "timestamp": "2025-01-21T17:36:04Z",
          "tree_id": "8f4410fe7bbfba61ebfee9ff25593496596d86d9",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/9edaef09a69e39b0785f8339f93a3ed6a1f6e023"
        },
        "date": 1737484329186,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18168111,
            "range": "± 277561",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18310431,
            "range": "± 223262",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19844693,
            "range": "± 340508",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23443474,
            "range": "± 272682",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53665757,
            "range": "± 906228",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 329267549,
            "range": "± 7203906",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2294490715,
            "range": "± 15736389",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14754657,
            "range": "± 102915",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15044332,
            "range": "± 204200",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15471691,
            "range": "± 234583",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20123475,
            "range": "± 213903",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51503133,
            "range": "± 1159902",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 304912064,
            "range": "± 4478959",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2438996186,
            "range": "± 18266391",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "363911+pepoviola@users.noreply.github.com",
            "name": "Javier Viola",
            "username": "pepoviola"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2345eb9a5b5e2145ac1c04fd9cf1fcf12b7278b6",
          "message": "Bump zombienet version to `v1.3.119` (#7283)\n\nThis version include a fix that make test\n`zombienet-polkadot-malus-0001-dispute-valid` green again.\nThx!",
          "timestamp": "2025-01-21T21:24:05Z",
          "tree_id": "79041ea24648703c8978b3b5268e00f102249ee6",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/2345eb9a5b5e2145ac1c04fd9cf1fcf12b7278b6"
        },
        "date": 1737497719905,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17484087,
            "range": "± 99771",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17653061,
            "range": "± 152585",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19324279,
            "range": "± 181899",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23097042,
            "range": "± 248508",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 52763241,
            "range": "± 787546",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 301224907,
            "range": "± 2977872",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2238912573,
            "range": "± 206256952",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14594413,
            "range": "± 304915",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14864407,
            "range": "± 103757",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15766852,
            "range": "± 126979",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20077951,
            "range": "± 141129",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52139893,
            "range": "± 814045",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 308676962,
            "range": "± 4359186",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2496544685,
            "range": "± 13279994",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "serban@parity.io",
            "name": "Serban Iorga",
            "username": "serban300"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "1bdb817f2b140b0c2573396146fd7bbfb936af10",
          "message": "Enable BEEFY `report_fork_voting()` (#6856)\n\nRelated to https://github.com/paritytech/polkadot-sdk/issues/4523\n\nFollow-up for: https://github.com/paritytech/polkadot-sdk/pull/5188\n\nReopening https://github.com/paritytech/polkadot-sdk/pull/6732 as a new\nPR\n\n---------\n\nCo-authored-by: command-bot <>",
          "timestamp": "2025-01-22T10:01:28Z",
          "tree_id": "a014a8246dab85d5b371f306aac68609b4ac6947",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/1bdb817f2b140b0c2573396146fd7bbfb936af10"
        },
        "date": 1737543139601,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17224821,
            "range": "± 116992",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17448861,
            "range": "± 99986",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18817058,
            "range": "± 153966",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22614653,
            "range": "± 149322",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 50725963,
            "range": "± 743826",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 296387354,
            "range": "± 1899947",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2285090349,
            "range": "± 88699847",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14238295,
            "range": "± 90789",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14374416,
            "range": "± 148270",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14936959,
            "range": "± 112108",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18747434,
            "range": "± 150100",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49110568,
            "range": "± 509353",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 287227092,
            "range": "± 2175720",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2350864227,
            "range": "± 15553045",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "59443568+sw10pa@users.noreply.github.com",
            "name": "Stephane Gurgenidze",
            "username": "sw10pa"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4eb9228840be0abef1c45cf8fa8bc44b5f95200a",
          "message": "collation-generation: resolve mismatch between descriptor and commitments core index (#7104)\n\n## Issue\n[[#7107] Core Index Mismatch in Commitments and\nDescriptor](https://github.com/paritytech/polkadot-sdk/issues/7107)\n\n## Description\nThis PR resolves a bug where normal (non-malus) undying collators failed\nto generate and submit collations, resulting in the following error:\n\n`ERROR tokio-runtime-worker parachain::collation-generation: Failed to\nconstruct and distribute collation: V2 core index check failed: The core\nindex in commitments doesn't match the one in descriptor.`\n\nMore details about the issue and reproduction steps are described in the\n[related issue](https://github.com/paritytech/polkadot-sdk/issues/7107).\n\n## Summary of Fix\n- When core selectors are provided in the UMP signals, core indexes will\nbe chosen using them;\n- The fix ensures that functionality remains unchanged for parachains\nnot using UMP signals;\n- Added checks to stop processing if the same core is selected\nrepeatedly.\n\n## TODO\n- [X] Implement the fix;\n- [x] Add tests;\n- [x] Add PRdoc.",
          "timestamp": "2025-01-22T11:00:50Z",
          "tree_id": "73f36ea0a295d0adf3f15e8201dc0dddb9de2443",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4eb9228840be0abef1c45cf8fa8bc44b5f95200a"
        },
        "date": 1737547225841,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17591905,
            "range": "± 77275",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17730249,
            "range": "± 104764",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19462014,
            "range": "± 179451",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23200596,
            "range": "± 635097",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54191053,
            "range": "± 918803",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 318372087,
            "range": "± 6020272",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2513454153,
            "range": "± 88076012",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14662274,
            "range": "± 228111",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14750960,
            "range": "± 143480",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15411144,
            "range": "± 143059",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19954494,
            "range": "± 209327",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51675146,
            "range": "± 785096",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 297467984,
            "range": "± 10443551",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2431374621,
            "range": "± 8103863",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "69342343+MrishoLukamba@users.noreply.github.com",
            "name": "Mrisho Lukamba",
            "username": "MrishoLukamba"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "634a17b6f67c71e589f921b0ddd4c23bbed883f1",
          "message": "Unify Import verifier usage across parachain template and omninode (#7195)\n\nCloses #7055\n\n@skunert @bkchr\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: command-bot <>\nCo-authored-by: Sebastian Kunert <skunert49@gmail.com>",
          "timestamp": "2025-01-22T15:06:18Z",
          "tree_id": "7730c1e3bb98148039a8322f04aef3fa9dfcd179",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/634a17b6f67c71e589f921b0ddd4c23bbed883f1"
        },
        "date": 1737561444305,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18108598,
            "range": "± 165680",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18310336,
            "range": "± 140417",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19678926,
            "range": "± 302175",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23109195,
            "range": "± 268722",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 52575587,
            "range": "± 716830",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 306634454,
            "range": "± 5461515",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2333421654,
            "range": "± 140510288",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14288670,
            "range": "± 96746",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14420693,
            "range": "± 72385",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14965166,
            "range": "± 153477",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18890398,
            "range": "± 273190",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 48738512,
            "range": "± 616012",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 291343607,
            "range": "± 3171234",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2367260950,
            "range": "± 27798952",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "60601340+lexnv@users.noreply.github.com",
            "name": "Alexandru Vasile",
            "username": "lexnv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "fd64a1e7768ba6e8676cbbf25c4e821a901c0a7f",
          "message": "net/libp2p: Enforce outbound request-response timeout limits (#7222)\n\nThis PR enforces that outbound requests are finished within the\nspecified protocol timeout.\n\nThe stable2412 version running libp2p 0.52.4 contains a bug which does\nnot track request timeouts properly:\n- https://github.com/libp2p/rust-libp2p/pull/5429\n\nThe issue has been detected while submitting libp2p -> litep2p requests\nin kusama. This aims to check that pending outbound requests have not\ntimedout. Although the issue has been fixed in libp2p, there might be\nother cases where this may happen. For example:\n- https://github.com/libp2p/rust-libp2p/pull/5417\n\nFor more context see:\nhttps://github.com/paritytech/polkadot-sdk/issues/7076#issuecomment-2596085096\n\n\n1. Ideally, the force-timeout mechanism in this PR should never be\ntriggered in production. However, origin/stable2412 occasionally\nencounters this issue. When this happens, 2 warnings may be generated:\n- one warning introduced by this PR wrt force timeout terminating the\nrequest\n- possible one warning when the libp2p decides (if at all) to provide\nthe response back to substrate (as mentioned by @alexggh\n[here](https://github.com/paritytech/polkadot-sdk/pull/7222/files#diff-052aeaf79fef3d9a18c2cfd67006aa306b8d52e848509d9077a6a0f2eb856af7L769)\nand\n[here](https://github.com/paritytech/polkadot-sdk/pull/7222/files#diff-052aeaf79fef3d9a18c2cfd67006aa306b8d52e848509d9077a6a0f2eb856af7L842)\n\n2. This implementation does not propagate to the substrate service the\n`RequestFinished { error: .. }`. That event is only used internally by\nsubstrate to increment metrics. However, we don't have the peer\ninformation available to propagate the event properly when we\nforce-timeout the request. Considering this should most likely not\nhappen in production (origin/master) and that we'll be able to extract\ninformation by warnings, I would say this is a good tradeoff for code\nsimplicity:\n\n\nhttps://github.com/paritytech/polkadot-sdk/blob/06e3b5c6a7696048d65f1b8729f16b379a16f501/substrate/client/network/src/service.rs#L1543\n\n\n### Testing\n\nAdded a new test to ensure the timeout is reached properly, even if\nlibp2p does not produce a response in due time.\n\nI've also transitioned the tests to using `tokio::test` due to a\nlimitation of\n[CI](https://github.com/paritytech/polkadot-sdk/actions/runs/12832055737/job/35784043867)\n\n```\n--- TRY 1 STDERR:        sc-network request_responses::tests::max_response_size_exceeded ---\nthread 'request_responses::tests::max_response_size_exceeded' panicked at /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.40.0/src/time/interval.rs:139:26:\nthere is no reactor running, must be called from the context of a Tokio 1.x runtime\n```\n\n\n\ncc @paritytech/networking\n\n---------\n\nSigned-off-by: Alexandru Vasile <alexandru.vasile@parity.io>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-01-22T16:51:59Z",
          "tree_id": "17935494a17a9360cc2d6485a7009724bcb76fef",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/fd64a1e7768ba6e8676cbbf25c4e821a901c0a7f"
        },
        "date": 1737567871593,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17332101,
            "range": "± 115518",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17632435,
            "range": "± 101645",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18894011,
            "range": "± 137294",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22823920,
            "range": "± 195523",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 50696494,
            "range": "± 448459",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 294930390,
            "range": "± 3920965",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2129239854,
            "range": "± 51248077",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14267666,
            "range": "± 106998",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14283890,
            "range": "± 49221",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14761581,
            "range": "± 117305",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18980312,
            "range": "± 141705",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49340374,
            "range": "± 277101",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 291494936,
            "range": "± 2458394",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2325664147,
            "range": "± 22865042",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "FereMouSiopi@proton.me",
            "name": "FereMouSiopi",
            "username": "FereMouSiopi"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "89b022842c7ab922de5bf026cd45e43b9cd8c654",
          "message": "Migrate `pallet-insecure-randomness-collective-flip` to umbrella crate (#6738)\n\nPart of https://github.com/paritytech/polkadot-sdk/issues/6504\n\n---------\n\nCo-authored-by: command-bot <>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-01-22T18:08:59Z",
          "tree_id": "cc44d8d5ba3fdf2339d181c13dcd627e344d1111",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/89b022842c7ab922de5bf026cd45e43b9cd8c654"
        },
        "date": 1737572766849,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17237123,
            "range": "± 106362",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17671202,
            "range": "± 177271",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19406711,
            "range": "± 185884",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23367225,
            "range": "± 597672",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 52198169,
            "range": "± 646307",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 305708857,
            "range": "± 3552246",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2361844739,
            "range": "± 89160907",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14173896,
            "range": "± 229627",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14449298,
            "range": "± 173353",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15026028,
            "range": "± 253742",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19080091,
            "range": "± 130106",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49440458,
            "range": "± 287564",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 293193870,
            "range": "± 2678446",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2404568047,
            "range": "± 50529481",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5772b9dbde8f88718ec5c6409f444d6e5b4e4e03",
          "message": "[pallet-revive] fee estimation fixes (#7281)\n\n- Fix the EVM fee cost estimation.\nThe estimation shown in EVM wallet was using Native instead of EVM\ndecimals\n- Remove the precise code length estimation in dry run call.\nOver-estimating is fine, since extra gas is refunded anyway.\n- Ensure that the estimated fee calculated from gas_price x gas use the\nencoded weight & deposit limit instead of the exact one calculated by\nthe dry-run. Else we can end up with a fee that is lower than the actual\nfee paid by the user\n\n---------\n\nCo-authored-by: command-bot <>",
          "timestamp": "2025-01-23T09:57:06Z",
          "tree_id": "b25a28f13b631208eec39649193f984dbb68820e",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/5772b9dbde8f88718ec5c6409f444d6e5b4e4e03"
        },
        "date": 1737629826349,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18781640,
            "range": "± 179580",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19050687,
            "range": "± 175550",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20798941,
            "range": "± 177402",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24204258,
            "range": "± 295582",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 58562282,
            "range": "± 760222",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 358961761,
            "range": "± 6718371",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2721471337,
            "range": "± 120880540",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15383674,
            "range": "± 112010",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15589071,
            "range": "± 144749",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16359587,
            "range": "± 88849",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20643808,
            "range": "± 181466",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53042867,
            "range": "± 1177312",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 336537600,
            "range": "± 6918551",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2604747510,
            "range": "± 16206172",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "runcomet@protonmail.com",
            "name": "runcomet",
            "username": "runcomet"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "04847d515ef56da4d0801c9b89a4241dfa827b33",
          "message": "Balances: Configurable Number of Genesis Accounts with Specified Balances for Benchmarking (#6267)\n\n# Derived Dev Accounts\n\nResolves https://github.com/paritytech/polkadot-sdk/issues/6040\n\n## Description\nThis update introduces support for creating an arbitrary number of\ndeveloper accounts at the genesis block based on a specified derivation\npath. This functionality is gated by the runtime-benchmarks feature,\nensuring it is only enabled during benchmarking scenarios.\n\n### Key Features\n- Arbitrary Dev Accounts at Genesis: Developers can now specify any\nnumber of accounts to be generated at genesis using a hard derivation\npath.\n\n- Default Derivation Path: If no derivation path is provided (i.e., when\n`Option<dev_accounts: (..., None)>` is set to `Some` at genesis), the\nsystem will default to the path `//Sender//{}`.\n\n- No Impact on Total Token Issuance: Developer accounts are excluded\nfrom the total issuance of the token supply at genesis, ensuring they do\nnot affect the overall balance or token distribution.\n\npolkadot address: 14SRqZTC1d8rfxL8W1tBTnfUBPU23ACFVPzp61FyGf4ftUFg\n\n---------\n\nCo-authored-by: Sebastian Kunert <skunert49@gmail.com>",
          "timestamp": "2025-01-23T10:38:15Z",
          "tree_id": "2e6227b4cd51ae9aad6ed4b03538e4eb4ed049f5",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/04847d515ef56da4d0801c9b89a4241dfa827b33"
        },
        "date": 1737632211537,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18932331,
            "range": "± 151984",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19281512,
            "range": "± 185162",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20812886,
            "range": "± 143042",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24880598,
            "range": "± 250352",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 60380771,
            "range": "± 1167993",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 375000230,
            "range": "± 6402899",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2787588806,
            "range": "± 95369334",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15338349,
            "range": "± 149803",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15580666,
            "range": "± 183796",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15935156,
            "range": "± 181187",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20625851,
            "range": "± 125753",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 56529413,
            "range": "± 1499200",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 362834088,
            "range": "± 5877065",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2714415511,
            "range": "± 60071106",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "a.khssnv@gmail.com",
            "name": "Alisher A. Khassanov",
            "username": "khssnv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "66bd26d35c21ad260120129776c86870ff1dd220",
          "message": "Add `offchain_localStorageClear` RPC method (#7266)\n\n# Description\n\nCloses https://github.com/paritytech/polkadot-sdk/issues/7265.\n\n## Integration\n\nRequires changes in\n`https://github.com/polkadot-js/api/packages/{rpc-augment,types-support,types}`\nto be visible in Polkadot\\Substrate Portal and in other libraries where\nwe should explicitly state RPC methods.\n\nAccompany PR to `polkadot-js/api`:\nhttps://github.com/polkadot-js/api/pull/6070.\n\n## Review Notes\n\nPlease put the right label on my PR.\n\n---------\n\nCo-authored-by: command-bot <>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-01-23T11:01:55Z",
          "tree_id": "a68a17a4e6d0a5320ce2ea2e0421515e4421751a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/66bd26d35c21ad260120129776c86870ff1dd220"
        },
        "date": 1737633469336,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17793999,
            "range": "± 126295",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18105917,
            "range": "± 110302",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19539554,
            "range": "± 266454",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23535606,
            "range": "± 163742",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53388152,
            "range": "± 3292138",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 321196958,
            "range": "± 4978903",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2480094138,
            "range": "± 45485034",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14253662,
            "range": "± 54257",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14291859,
            "range": "± 193633",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14835416,
            "range": "± 118965",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18904611,
            "range": "± 157572",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49232196,
            "range": "± 623740",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 288564137,
            "range": "± 2429554",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2360878487,
            "range": "± 14353806",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "bkontur@gmail.com",
            "name": "Branislav Kontur",
            "username": "bkontur"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "085da479dee8e09ad3de83dbc59b304bd36b4ebe",
          "message": "Bridges small nits/improvements (#7307)\n\nThis PR contains small fixes identified during work on the larger PR:\nhttps://github.com/paritytech/polkadot-sdk/issues/6906.\n\n---------\n\nCo-authored-by: command-bot <>",
          "timestamp": "2025-01-23T11:55:14Z",
          "tree_id": "36c525ca26c1e465f4fe088589d1e30b3f02fe2a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/085da479dee8e09ad3de83dbc59b304bd36b4ebe"
        },
        "date": 1737636767248,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18789188,
            "range": "± 132891",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19169474,
            "range": "± 151668",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20735723,
            "range": "± 207118",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24751662,
            "range": "± 427873",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57624261,
            "range": "± 1444681",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 369108787,
            "range": "± 8881839",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2738784992,
            "range": "± 85629670",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15402871,
            "range": "± 64531",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15659988,
            "range": "± 104368",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16207852,
            "range": "± 207429",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20314007,
            "range": "± 141289",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52159553,
            "range": "± 545489",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 338681235,
            "range": "± 5778508",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2584877417,
            "range": "± 61762454",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alin@parity.io",
            "name": "Alin Dima",
            "username": "alindima"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "cfc5b6f59a1fa46aa55144bff5eb7fca14e27e2b",
          "message": "bump lookahead to 3 for testnet genesis (#7252)\n\nThis is the right value after\nhttps://github.com/paritytech/polkadot-sdk/pull/4880, which corresponds\nto an allowedAncestryLen of 2 (which is the default)\n\nWIll fix https://github.com/paritytech/polkadot-sdk/issues/7105",
          "timestamp": "2025-01-23T13:00:31Z",
          "tree_id": "7f68012322ae7652b91643eedd929cdded5937be",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/cfc5b6f59a1fa46aa55144bff5eb7fca14e27e2b"
        },
        "date": 1737640514895,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19348123,
            "range": "± 223452",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19550012,
            "range": "± 175021",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20966958,
            "range": "± 316762",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25330550,
            "range": "± 562622",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57067195,
            "range": "± 1862717",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 368858853,
            "range": "± 5529146",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2731726867,
            "range": "± 60806804",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15425503,
            "range": "± 107234",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15459858,
            "range": "± 167566",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15937410,
            "range": "± 178311",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20663978,
            "range": "± 182366",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52456608,
            "range": "± 760680",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 330437967,
            "range": "± 3329495",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2524818790,
            "range": "± 12921281",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1177472+mordamax@users.noreply.github.com",
            "name": "Maksym H",
            "username": "mordamax"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "6091330ae6d799bcf34d366acda7aff91c609ab1",
          "message": "Refactor command bot and drop rejecting non paritytech members (#7231)\n\nAims to \n- close #7049 \n- close https://github.com/paritytech/opstooling/issues/449\n- close https://github.com/paritytech/opstooling/issues/463\n\nWhat's changed:\n- removed is paritytech member check as required prerequisite to run a\ncommand\n- run the cmd.py script taking it from master, if someone who run this\nis not a member of paritytech, and from current branch, if is a member.\nThat keeps the developer experience & easy testing if paritytech members\nare contributing to cmd.py\n- isolate the cmd job from being able to access GH App token or PR\ntoken- currently the fmt/bench/prdoc are being run with limited\npermissions scope, just to generate output, which then is uploaded to\nartifacts, and then the other job which doesn't run any files from repo,\ndoes a commit/push more securely",
          "timestamp": "2025-01-23T13:30:26Z",
          "tree_id": "da45e8f46110ea08661552bbc0795a8fa2c5a8a5",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/6091330ae6d799bcf34d366acda7aff91c609ab1"
        },
        "date": 1737642047643,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17646943,
            "range": "± 279730",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17874774,
            "range": "± 162539",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19354280,
            "range": "± 142041",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23000629,
            "range": "± 114160",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51387600,
            "range": "± 744773",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 295605833,
            "range": "± 4715702",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2111008169,
            "range": "± 62805932",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14047498,
            "range": "± 90950",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14265292,
            "range": "± 201824",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14677955,
            "range": "± 32615",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18979005,
            "range": "± 98397",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49091699,
            "range": "± 292918",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 292106444,
            "range": "± 1461272",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2278335567,
            "range": "± 13883628",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1177472+mordamax@users.noreply.github.com",
            "name": "Maksym H",
            "username": "mordamax"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3a7f3c0af63b1a7566ca29c59fa4ac274bd911f1",
          "message": "Fix setting the image properly (#7315)\n\nFixed condition which sets weights/large images",
          "timestamp": "2025-01-23T16:08:32Z",
          "tree_id": "ddf15c0baa7aad24dfe8dde9c77711bbf57959c7",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/3a7f3c0af63b1a7566ca29c59fa4ac274bd911f1"
        },
        "date": 1737651588012,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17764904,
            "range": "± 151591",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17906625,
            "range": "± 98109",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19295712,
            "range": "± 81280",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22717280,
            "range": "± 185742",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51590228,
            "range": "± 536510",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 310371598,
            "range": "± 2513197",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2396185613,
            "range": "± 80891417",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14477255,
            "range": "± 139053",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14676122,
            "range": "± 55407",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14915548,
            "range": "± 227341",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19285700,
            "range": "± 111626",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50536645,
            "range": "± 168011",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 303567042,
            "range": "± 5384957",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2391610028,
            "range": "± 36893923",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "bkontur@gmail.com",
            "name": "Branislav Kontur",
            "username": "bkontur"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "23600076de203dad498d815ff4b7ed2968217c10",
          "message": "Nits for collectives-westend XCM benchmarks setup (#7215)\n\nCloses: https://github.com/paritytech/polkadot-sdk/issues/2904\n\n---------\n\nCo-authored-by: command-bot <>",
          "timestamp": "2025-01-24T12:32:19Z",
          "tree_id": "1ab71e2b09edd1f19fb9eb5b7bea0f4a189d5e9c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/23600076de203dad498d815ff4b7ed2968217c10"
        },
        "date": 1737724841001,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17473009,
            "range": "± 320867",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17936649,
            "range": "± 238976",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19345985,
            "range": "± 113839",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23209482,
            "range": "± 215900",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51683620,
            "range": "± 496347",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 291500929,
            "range": "± 3401467",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2276206301,
            "range": "± 53558901",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14536212,
            "range": "± 118408",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14487537,
            "range": "± 97065",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15424759,
            "range": "± 106552",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19356225,
            "range": "± 92541",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49665002,
            "range": "± 239212",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 300639653,
            "range": "± 10178373",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2417398906,
            "range": "± 7877540",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "14218860+iulianbarbu@users.noreply.github.com",
            "name": "Iulian Barbu",
            "username": "iulianbarbu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a2c63e8d8a512eca28ed24c3c58ea7609c28b9ee",
          "message": "fix(cmd bench-omni): build omni-bencher with production profile (#7299)\n\n# Description\n\nThis PR builds frame-omni-bencher with `production` profile when calling\n`/cmd bench-omni` to compute benchmarks for pallets.\nFix proposed by @bkchr , thanks!\n\nCloses #6797.\n\n## Integration\n\nN/A\n\n## Review Notes\n\nMore info on #6797, and related to how the fix was tested:\nhttps://github.com/paritytech/polkadot-sdk/issues/6797#issuecomment-2611903102.\n\n---------\n\nSigned-off-by: Iulian Barbu <iulian.barbu@parity.io>\nCo-authored-by: command-bot <>",
          "timestamp": "2025-01-24T13:29:25Z",
          "tree_id": "93aa5d24fb63b13db179ce2b696deb7f7d4f2ba1",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/a2c63e8d8a512eca28ed24c3c58ea7609c28b9ee"
        },
        "date": 1737728389007,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17994941,
            "range": "± 209909",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18502222,
            "range": "± 305355",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19725907,
            "range": "± 178657",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23687299,
            "range": "± 315762",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54516118,
            "range": "± 1274550",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 356218003,
            "range": "± 5036676",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2548213776,
            "range": "± 179747240",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15019952,
            "range": "± 251372",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15198984,
            "range": "± 306715",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15498005,
            "range": "± 233856",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20412934,
            "range": "± 1009217",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54354828,
            "range": "± 2342088",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 300197674,
            "range": "± 4267982",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2423662945,
            "range": "± 51811157",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "bkontur@gmail.com",
            "name": "Branislav Kontur",
            "username": "bkontur"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7710483541ce273df892c77a6e300aaa2efa1dca",
          "message": "Bridges: emulated tests small nits/improvements (#7322)\n\nThis PR includes minor fixes identified during work on the larger PR:\n[https://github.com/paritytech/polkadot-sdk/issues/6906](https://github.com/paritytech/polkadot-sdk/issues/6906).\n\nSpecifically, this PR removes the use of\n`open_bridge_between_asset_hub_rococo_and_asset_hub_westend`, which is\nno longer relevant for BridgeHubs, as bridges are now created with\ngenesis settings. This function was used in the generic\n`test_dry_run_transfer_across_pk_bridge` macro, which could cause\ncompilation issues when used in other contexts (e.g. fellows repo).\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-01-24T15:05:36Z",
          "tree_id": "2598c5e554465a1a38bd317b69c21942a0a9174f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/7710483541ce273df892c77a6e300aaa2efa1dca"
        },
        "date": 1737735369351,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19148256,
            "range": "± 117629",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19858520,
            "range": "± 141843",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20938779,
            "range": "± 305929",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24758946,
            "range": "± 306548",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53560409,
            "range": "± 565962",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 324506386,
            "range": "± 2687549",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2412081602,
            "range": "± 96594616",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15259724,
            "range": "± 105672",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15217990,
            "range": "± 102013",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15792854,
            "range": "± 196497",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19996642,
            "range": "± 324071",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50838364,
            "range": "± 376307",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 311810507,
            "range": "± 3665689",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2509459781,
            "range": "± 37029672",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "14218860+iulianbarbu@users.noreply.github.com",
            "name": "Iulian Barbu",
            "username": "iulianbarbu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ccd6337f1bfef8ff9da9020fefc25db5a6508da7",
          "message": "sync-templates: enable syncing from stable release patches (#7227)\n\n# Description\n\nWe're unable to sync templates repos with what's in\npolkadot-sdk/templates for stable2412 because the tag which references\nthe release (`polkadot-stable2412`) is missing the Plan.toml file, which\nis needed by PSVM, ran when syncing, to update the templates\ndependencies versions in Cargo.tomls. This PR adds a workflow `patch`\ninput, to enable the workflow to use PSVM with a tag corresponding to a\npatch stable release (e.g. `polkadot-stable2412-1`), which will contain\nthe `Plan.toml` file.\n\n## Integration\n\nThis enables the templates repos update with the contents of latest\nstable2412 release, in terms of polkadot-sdk/templates, which is\nrelevant for getting-started docs.\n\n## Review Notes\n\nThis PR adds a `patch` input for the `misc-sync-templates.yml` workflow,\nwhich if set will be used with `psvm` accordingly to update templates\nrepos' dependencies versions based on upcomming patch stable2412-1,\nwhich contains the `Plan.toml`. The workflow will be ran manually after\nstable2412-1 is out and this work is tracked under #6329 .\n\nSigned-off-by: Iulian Barbu <iulian.barbu@parity.io>",
          "timestamp": "2025-01-24T16:29:17Z",
          "tree_id": "adb23e6ebd52248f86ca4a252dc335d5510a50d8",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ccd6337f1bfef8ff9da9020fefc25db5a6508da7"
        },
        "date": 1737739274216,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17989872,
            "range": "± 96767",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18030381,
            "range": "± 199197",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19599614,
            "range": "± 110390",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23213848,
            "range": "± 172393",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51806173,
            "range": "± 543681",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 305101961,
            "range": "± 3064762",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2282159735,
            "range": "± 114146463",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14811018,
            "range": "± 117986",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14879800,
            "range": "± 71008",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15445769,
            "range": "± 141927",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19323631,
            "range": "± 162473",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50181179,
            "range": "± 272971",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 302392649,
            "range": "± 2396137",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2395376793,
            "range": "± 7045855",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "223bd28896cfa7ece1068c70da9f433a08da5554",
          "message": "[pallet-revive] eth-rpc minor fixes (#7325)\n\n- Add option to specify database_url using DATABASE_URL environment\nvariable\n- Add a eth-rpc-tester rust bin that can be used to test deployment\nbefore releasing eth-rpc\n- make evm_block non fallible so that it can return an Ok response for\nolder blocks when the runtime API is not available\n- update cargo.lock to integrate changes from\nhttps://github.com/paritytech/subxt/pull/1904\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-01-24T16:34:15Z",
          "tree_id": "e4cb0c9a140ced6d3db9021c0ff6c4142e4d2e7a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/223bd28896cfa7ece1068c70da9f433a08da5554"
        },
        "date": 1737741178862,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18766548,
            "range": "± 177375",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18843713,
            "range": "± 106638",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20305541,
            "range": "± 147758",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23957624,
            "range": "± 259766",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 52919702,
            "range": "± 595440",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 300688644,
            "range": "± 6034894",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2553907638,
            "range": "± 91466770",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14826069,
            "range": "± 131739",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14978212,
            "range": "± 101041",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15178576,
            "range": "± 133191",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19407594,
            "range": "± 163535",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50369022,
            "range": "± 136603",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 295892540,
            "range": "± 2755675",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2385374718,
            "range": "± 19082449",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alex.theissen@me.com",
            "name": "Alexander Theißen",
            "username": "athei"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dcbea60cc7a280f37986f2f815ec3fcff4758be5",
          "message": "revive: Fix compilation of `uapi` crate when `unstable-hostfn` is not set (#7318)\n\nThis regression was introduced with some of the recent PRs. Regression\nfixed and test added.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-01-24T18:20:09Z",
          "tree_id": "4394d8c652cb545eeade1843252669d35df034aa",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/dcbea60cc7a280f37986f2f815ec3fcff4758be5"
        },
        "date": 1737745781134,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18519448,
            "range": "± 181558",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18651701,
            "range": "± 223661",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20117667,
            "range": "± 144822",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23976890,
            "range": "± 371256",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 52533035,
            "range": "± 680890",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 310029347,
            "range": "± 2946867",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2344511282,
            "range": "± 25542703",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14875225,
            "range": "± 85450",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14985258,
            "range": "± 103168",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15554057,
            "range": "± 184086",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19432891,
            "range": "± 136395",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50381632,
            "range": "± 421111",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 302236759,
            "range": "± 2468129",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2423896450,
            "range": "± 16039820",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "gui.thiolliere@gmail.com",
            "name": "Guillaume Thiolliere",
            "username": "gui1117"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "682f8cd22f5bcb76d1b98820b62be49d11deae10",
          "message": "`set_validation_data` register weight manually, do not use refund when the pre dispatch is zero. (#7327)\n\nRelated https://github.com/paritytech/polkadot-sdk/issues/6772\n\nFor an extrinsic, in the post dispatch info, the actual weight is only\nused to reclaim unused weight. If the actual weight is more than the pre\ndispatch weight, then the extrinsic is using the minimum, e.g., the\nweight used registered in pre dispatch.\n\nIn parachain-system pallet one call is `set_validation_data`. This call\nis returning an actual weight, but the pre-dispatch weight is 0.\n\nThis PR fix the disregard of actual weight of `set_validation_data` by\nregistering it manually.",
          "timestamp": "2025-01-25T03:04:45Z",
          "tree_id": "6ae4f129204d616ae2ed51523c5be5354ef1f203",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/682f8cd22f5bcb76d1b98820b62be49d11deae10"
        },
        "date": 1737777381965,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18912233,
            "range": "± 185987",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19422943,
            "range": "± 142004",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21039592,
            "range": "± 214317",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24946168,
            "range": "± 360245",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56396812,
            "range": "± 644627",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 357928141,
            "range": "± 6654997",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2349414602,
            "range": "± 118998794",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15633374,
            "range": "± 190602",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15761837,
            "range": "± 228526",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16197987,
            "range": "± 113316",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20574813,
            "range": "± 237079",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53506831,
            "range": "± 643230",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 320152054,
            "range": "± 3254518",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2560653792,
            "range": "± 29546124",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "bkontur@gmail.com",
            "name": "Branislav Kontur",
            "username": "bkontur"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c95e49c4c9848c42d5cbfd261de0d22eec9c2bf6",
          "message": "Removed unused dependencies (partial progress) (#7329)\n\nPart of: https://github.com/paritytech/polkadot-sdk/issues/6906",
          "timestamp": "2025-01-26T21:18:43Z",
          "tree_id": "943db5ce05aa4d97b3c5e7ea5869fcacd90d22cd",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c95e49c4c9848c42d5cbfd261de0d22eec9c2bf6"
        },
        "date": 1737929318171,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17687776,
            "range": "± 110092",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17884789,
            "range": "± 106254",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19274166,
            "range": "± 93613",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22901890,
            "range": "± 141621",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51170624,
            "range": "± 673932",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 305106656,
            "range": "± 2788383",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2169934372,
            "range": "± 49386154",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14455115,
            "range": "± 107618",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14510624,
            "range": "± 157945",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14991726,
            "range": "± 93740",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18915683,
            "range": "± 183350",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49045989,
            "range": "± 412726",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 288318186,
            "range": "± 1627277",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2332909330,
            "range": "± 10469725",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "dmitry@markin.tech",
            "name": "Dmitry Markin",
            "username": "dmitry-markin"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ee30ec723ee22e247014217e48513a2e7690c953",
          "message": "[sync] Let new subscribers know about already connected peers (backward-compatible) (#7344)\n\nRevert https://github.com/paritytech/polkadot-sdk/pull/7011 and replace\nit with a backward-compatible solution suitable for backporting to a\nrelease branch.\n\n### Review notes\nIt's easier to review this PR per commit: the first commit is just a\nrevert, so it's enough to review only the second one, which is almost a\none-liner.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-01-27T12:29:49Z",
          "tree_id": "baef02a556e3f6c8de2d365edc34fca484ab88c1",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ee30ec723ee22e247014217e48513a2e7690c953"
        },
        "date": 1737984545865,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17526977,
            "range": "± 82215",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17777856,
            "range": "± 75036",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19153537,
            "range": "± 111124",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22797406,
            "range": "± 115553",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51207521,
            "range": "± 613208",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 281927743,
            "range": "± 2645068",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2197573218,
            "range": "± 60137326",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14231024,
            "range": "± 158609",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14300696,
            "range": "± 92234",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14785617,
            "range": "± 144625",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18637523,
            "range": "± 118355",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 48374998,
            "range": "± 216277",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 285183024,
            "range": "± 6294103",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2240049866,
            "range": "± 5150239",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "30932534+EleisonC@users.noreply.github.com",
            "name": "christopher k",
            "username": "EleisonC"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d85147d013e112feae5000816932d0543aee95da",
          "message": "Add development chain-spec file for minimal/parachain templates for Omni Node compatibility (#6529)\n\n# Description\n\nThis PR adds development chain specs for the minimal and parachain\ntemplates.\n[#6334](https://github.com/paritytech/polkadot-sdk/issues/6334)\n\n\n## Integration\n\nThis PR adds development chain specs for the minimal and para chain\ntemplate runtimes, ensuring synchronization with runtime code. It\nupdates zombienet-omni-node.toml, zombinet.toml files to include valid\nchain spec paths, simplifying configuration for zombienet in the\nparachain and minimal template.\n\n## Review Notes\n\n1. Overview of Changes:\n- Added development chain specs for use in the minimal and parachain\ntemplate.\n- Updated zombienet-omni-node.toml and zombinet.toml files in the\nminimal and parachain templates to include paths to the new dev chain\nspecs.\n\n2. Integration Guidance:\n**NB: Follow the templates' READMEs from the polkadot-SDK master branch.\nPlease build the binaries and runtimes based on the polkadot-SDK master\nbranch.**\n- Ensure you have set up your runtimes `parachain-template-runtime` and\n`minimal-template-runtime`\n- Ensure you have installed the nodes required ie\n`parachain-template-node` and `minimal-template-node`\n- Set up [Zombinet](https://paritytech.github.io/zombienet/intro.html)\n- For running the parachains, you will need to install the polkadot\n`cargo install --path polkadot` remember from the polkadot-SDK master\nbranch.\n- Inside the template folders minimal or parachain, run the command to\nstart with `Zombienet with Omni Node`, `Zombienet with\nminimal-template-node` or `Zombienet with parachain-template-node`\n\n*Include your leftover TODOs, if any, here.*\n* [ ] Test the syncing of chain specs with runtime's code.\n\n---------\n\nSigned-off-by: EleisonC <ckalule7@gmail.com>\nCo-authored-by: Iulian Barbu <14218860+iulianbarbu@users.noreply.github.com>\nCo-authored-by: Alexander Samusev <41779041+alvicsam@users.noreply.github.com>",
          "timestamp": "2025-01-27T13:01:49Z",
          "tree_id": "bb0c4f4d2dc63c5625bb9d9f83eb433b8841ccfd",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d85147d013e112feae5000816932d0543aee95da"
        },
        "date": 1737986904681,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17532848,
            "range": "± 75845",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17840417,
            "range": "± 88265",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19082205,
            "range": "± 188877",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22674127,
            "range": "± 219360",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 50550666,
            "range": "± 550212",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 289806509,
            "range": "± 1409440",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2212678529,
            "range": "± 53106097",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14234407,
            "range": "± 424445",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14430245,
            "range": "± 121524",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14872095,
            "range": "± 83990",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18958523,
            "range": "± 114787",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49365651,
            "range": "± 455691",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 283256394,
            "range": "± 1302441",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2252443633,
            "range": "± 14833984",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ludovic.domingues96@gmail.com",
            "name": "Ludovic_Domingues",
            "username": "Krayt78"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "db3ff60b5af2a9017cb968a4727835f3d00340f0",
          "message": "Migrating polkadot-runtime-common slots benchmarking to v2 (#6614)\n\n#Description\nMigrated polkadot-runtime-parachains slots benchmarking to the new\nbenchmarking syntax v2.\nThis is part of #6202\n\n---------\n\nCo-authored-by: Giuseppe Re <giuseppe.re@parity.io>\nCo-authored-by: seemantaggarwal <32275622+seemantaggarwal@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-01-27T14:37:00Z",
          "tree_id": "030b3f496c64e746f2206b1a93b3c9c7355e9d32",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/db3ff60b5af2a9017cb968a4727835f3d00340f0"
        },
        "date": 1737991956222,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19039262,
            "range": "± 316116",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19703668,
            "range": "± 248963",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21454237,
            "range": "± 349142",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25634866,
            "range": "± 387429",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 60722428,
            "range": "± 1405052",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 392761009,
            "range": "± 6347830",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2593888993,
            "range": "± 238548391",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15663939,
            "range": "± 171528",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16219740,
            "range": "± 147638",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15850638,
            "range": "± 108392",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20266253,
            "range": "± 159007",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54089026,
            "range": "± 1474414",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 347010832,
            "range": "± 7133089",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2655118948,
            "range": "± 43590682",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "yrong1997@gmail.com",
            "name": "Ron",
            "username": "yrong"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b30aa3193048d6bbdf21408bd0cc4503010fe3f8",
          "message": "xcm: fix for DenyThenTry Barrier (#7169)\n\nResolves (partially):\nhttps://github.com/paritytech/polkadot-sdk/issues/7148 (see _Problem 1 -\n`ShouldExecute` tuple implementation and `Deny` filter tuple_)\n\nThis PR changes the behavior of `DenyThenTry` from the pattern\n`DenyIfAllMatch` to `DenyIfAnyMatch` for the tuple.\n\nI would expect the latter is the right behavior so make the fix in\nplace, but we can also add a dedicated Impl with the legacy one\nuntouched.\n\n## TODO\n- [x] add unit-test for `DenyReserveTransferToRelayChain`\n- [x] add test and investigate/check `DenyThenTry` as discussed\n[here](https://github.com/paritytech/polkadot-sdk/pull/6838#discussion_r1914553990)\nand update documentation if needed\n\n---------\n\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>\nCo-authored-by: Francisco Aguirre <franciscoaguirreperez@gmail.com>\nCo-authored-by: command-bot <>\nCo-authored-by: Clara van Staden <claravanstaden64@gmail.com>\nCo-authored-by: Adrian Catangiu <adrian@parity.io>",
          "timestamp": "2025-01-27T17:31:05Z",
          "tree_id": "7fa236a2b3152a85bc32cfbff3e0d953f468640f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/b30aa3193048d6bbdf21408bd0cc4503010fe3f8"
        },
        "date": 1738002160859,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19057756,
            "range": "± 240746",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19385610,
            "range": "± 201914",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21116234,
            "range": "± 181567",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24447847,
            "range": "± 300767",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55453511,
            "range": "± 787528",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 344712904,
            "range": "± 6068170",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2602381207,
            "range": "± 91929769",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15305235,
            "range": "± 282369",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15482347,
            "range": "± 130456",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15970249,
            "range": "± 123239",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20275916,
            "range": "± 136522",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52533449,
            "range": "± 681248",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 316827719,
            "range": "± 2646875",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2491906245,
            "range": "± 19724829",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alin@parity.io",
            "name": "Alin Dima",
            "username": "alindima"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e6aad5b010e630dbac7d86873fef45580630b406",
          "message": "cumulus: bump PARENT_SEARCH_DEPTH and add test for 12-core elastic scaling (#6983)\n\nOn top of https://github.com/paritytech/polkadot-sdk/pull/6757\n\nFixes https://github.com/paritytech/polkadot-sdk/issues/6858 by bumping\nthe `PARENT_SEARCH_DEPTH` constant to a larger value (30) and adds a\nzombienet-sdk test that exercises the 12-core scenario.\n\nThis is a node-side limit that restricts the number of allowed pending\navailability candidates when choosing the parent parablock during\nauthoring.\nThis limit is rather redundant, as the parachain runtime already\nrestricts the unincluded segment length to the configured value in the\n[FixedVelocityConsensusHook](https://github.com/paritytech/polkadot-sdk/blob/88d900afbff7ebe600dfe5e3ee9f87fe52c93d1f/cumulus/pallets/aura-ext/src/consensus_hook.rs#L35)\n(which ideally should be equal to this `PARENT_SEARCH_DEPTH`).\n\nFor 12 cores, a value of 24 should be enough, but I bumped it to 30 to\nhave some extra buffer.\n\nThere are two other potential ways of fixing this:\n- remove this constant altogether, as the parachain runtime already\nmakes those guarantees. Chose not to do this, as it can't hurt to have\nan extra safeguard\n- set this value to be equal to the uninlcuded segment size. This value\nhowever is not exposed to the node-side and would require a new runtime\nAPI, which seems overkill for a redundant check.\n\n---------\n\nCo-authored-by: Javier Viola <javier@parity.io>",
          "timestamp": "2025-01-28T08:32:00Z",
          "tree_id": "04f7690e702bfca2ab234b18b2575a391c81bc75",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e6aad5b010e630dbac7d86873fef45580630b406"
        },
        "date": 1738056986238,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18873383,
            "range": "± 124739",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19182615,
            "range": "± 193243",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21315067,
            "range": "± 422890",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24621128,
            "range": "± 295102",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 58959309,
            "range": "± 1302129",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 370100525,
            "range": "± 6197056",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2687361918,
            "range": "± 146904065",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15282910,
            "range": "± 99839",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15775035,
            "range": "± 257471",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15983792,
            "range": "± 155563",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20563914,
            "range": "± 387928",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 57486725,
            "range": "± 1332872",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 327580929,
            "range": "± 10257178",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2582603547,
            "range": "± 41273481",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "cyrill@parity.io",
            "name": "xermicus",
            "username": "xermicus"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4302f74f7874e6a894578731142a7b310a1449b0",
          "message": "[pallet-revive] pack exceeding syscall arguments into registers (#7319)\n\nThis PR changes how we call runtime API methods with more than 6\narguments: They are no longer spilled to the stack but packed into\nregisters instead. Pointers are 32 bit wide so we can pack two of them\ninto a single 64 bit register. Since we mostly pass pointers, this\ntechnique effectively increases the number of arguments we can pass\nusing the available registers.\n\nTo make this work for `instantiate` too we now pass the code hash and\nthe call data in the same buffer, akin to how the `create` family\nopcodes work in the EVM. The code hash is fixed in size, implying the\nstart of the constructor call data.\n\n---------\n\nSigned-off-by: xermicus <cyrill@parity.io>\nSigned-off-by: Cyrill Leutwiler <bigcyrill@hotmail.com>\nCo-authored-by: command-bot <>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>",
          "timestamp": "2025-01-28T09:03:21Z",
          "tree_id": "f6c41a646675532e87a6cd6ee428fe7a14feb512",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4302f74f7874e6a894578731142a7b310a1449b0"
        },
        "date": 1738058069481,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18320678,
            "range": "± 251106",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18596163,
            "range": "± 142344",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20100255,
            "range": "± 191673",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23693472,
            "range": "± 265744",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53710714,
            "range": "± 937672",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 310448795,
            "range": "± 2869645",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2445689604,
            "range": "± 52490864",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14980713,
            "range": "± 163517",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14954285,
            "range": "± 145291",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15836339,
            "range": "± 146787",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19879774,
            "range": "± 192166",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51619258,
            "range": "± 2601436",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 304231458,
            "range": "± 4066503",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2440813504,
            "range": "± 18495773",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ascjones@gmail.com",
            "name": "Andrew Jones",
            "username": "ascjones"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0b8d744109a3c29d97a28e768a027e3438c8a69a",
          "message": "Implement pallet view function queries (#4722)\n\nCloses #216.\n\nThis PR allows pallets to define a `view_functions` impl like so:\n\n```rust\n#[pallet::view_functions]\nimpl<T: Config> Pallet<T>\nwhere\n\tT::AccountId: From<SomeType1> + SomeAssociation1,\n{\n\t/// Query value no args.\n\tpub fn get_value() -> Option<u32> {\n\t\tSomeValue::<T>::get()\n\t}\n\n\t/// Query value with args.\n\tpub fn get_value_with_arg(key: u32) -> Option<u32> {\n\t\tSomeMap::<T>::get(key)\n\t}\n}\n```\n### `QueryId`\n\nEach view function is uniquely identified by a `QueryId`, which for this\nimplementation is generated by:\n\n```twox_128(pallet_name) ++ twox_128(\"fn_name(fnarg_types) -> return_ty\")```\n\nThe prefix `twox_128(pallet_name)` is the same as the storage prefix for pallets and take into account multiple instances of the same pallet.\n\nThe suffix is generated from the fn type signature so is guaranteed to be unique for that pallet impl. For one of the view fns in the example above it would be `twox_128(\"get_value_with_arg(u32) -> Option<u32>\")`. It is a known limitation that only the type names themselves are taken into account: in the case of type aliases the signature may have the same underlying types but a different id; for generics the concrete types may be different but the signatures will remain the same.\n\nThe existing Runtime `Call` dispatchables are addressed by their concatenated indices `pallet_index ++ call_index`, and the dispatching is handled by the SCALE decoding of the `RuntimeCallEnum::PalletVariant(PalletCallEnum::dispatchable_variant(payload))`. For `view_functions` the runtime/pallet generated enum structure is replaced by implementing the `DispatchQuery` trait on the outer (runtime) scope, dispatching to a pallet based on the id prefix, and the inner (pallet) scope dispatching to the specific function based on the id suffix.\n\nFuture implementations could also modify/extend this scheme and routing to pallet agnostic queries.\n\n### Executing externally\n\nThese view functions can be executed externally via the system runtime api:\n\n```rust\npub trait ViewFunctionsApi<QueryId, Query, QueryResult, Error> where\n\tQueryId: codec::Codec,\n\tQuery: codec::Codec,\n\tQueryResult: codec::Codec,\n\tError: codec::Codec,\n{\n\t/// Execute a view function query.\nfn execute_query(query_id: QueryId, query: Query) -> Result<QueryResult,\nError>;\n}\n```\n### `XCQ`\nCurrently there is work going on by @xlc to implement [`XCQ`](https://github.com/open-web3-stack/XCQ/) which may eventually supersede this work.\n\nIt may be that we still need the fixed function local query dispatching in addition to XCQ, in the same way that we have chain specific runtime dispatchables and XCM.\n\nI have kept this in mind and the high level query API is agnostic to the underlying query dispatch and execution. I am just providing the implementation for the `view_function` definition.\n\n### Metadata\nCurrently I am utilizing the `custom` section of the frame metadata, to avoid modifying the official metadata format until this is standardized.\n\n### vs `runtime_api`\nThere are similarities with `runtime_apis`, some differences being:\n- queries can be defined directly on pallets, so no need for boilerplate declarations and implementations\n- no versioning, the `QueryId` will change if the signature changes. \n- possibility for queries to be executed from smart contracts (see below)\n\n### Calling from contracts\nFuture work would be to add `weight` annotations to the view function queries, and a host function to `pallet_contracts` to allow executing these queries from contracts.\n\n### TODO\n\n- [x] Consistent naming (view functions pallet impl, queries, high level api?)\n- [ ] End to end tests via `runtime_api`\n- [ ] UI tests\n- [x] Mertadata tests\n- [ ] Docs\n\n---------\n\nCo-authored-by: kianenigma <kian@parity.io>\nCo-authored-by: James Wilson <james@jsdw.me>\nCo-authored-by: Giuseppe Re <giuseppe.re@parity.io>\nCo-authored-by: Guillaume Thiolliere <guillaume.thiolliere@parity.io>",
          "timestamp": "2025-01-28T11:52:43Z",
          "tree_id": "8ea2b6aefaeb17d6c3f8fd7ddb6062f79faf963e",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/0b8d744109a3c29d97a28e768a027e3438c8a69a"
        },
        "date": 1738069524562,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18588949,
            "range": "± 118208",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18716675,
            "range": "± 253287",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20345091,
            "range": "± 75331",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24155868,
            "range": "± 254381",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53220559,
            "range": "± 516115",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 305909091,
            "range": "± 3900803",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2291607050,
            "range": "± 152270682",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15594917,
            "range": "± 98181",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15626624,
            "range": "± 159037",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16413063,
            "range": "± 128568",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20436633,
            "range": "± 343335",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52542817,
            "range": "± 738231",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 306787514,
            "range": "± 2778379",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2482806302,
            "range": "± 14526712",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "dmitry@markin.tech",
            "name": "Dmitry Markin",
            "username": "dmitry-markin"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "758db43c524605bd81c39777de6c402ee5e0a5e3",
          "message": "[net/libp2p] Use raw `Identify` observed addresses to discover external addresses (#7338)\n\nInstead of using libp2p-provided external address candidates,\nsusceptible to address translation issues, use litep2p-backend approach\nbased on confirming addresses observed by multiple peers as external.\n\nFixes https://github.com/paritytech/polkadot-sdk/issues/7207.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-01-28T15:01:36Z",
          "tree_id": "52e0ef38f16211c70bc3826722aff7b7754ec0b7",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/758db43c524605bd81c39777de6c402ee5e0a5e3"
        },
        "date": 1738079551530,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18185303,
            "range": "± 140152",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18407208,
            "range": "± 161341",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19980357,
            "range": "± 77900",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23783758,
            "range": "± 304670",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53081543,
            "range": "± 340450",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 310321415,
            "range": "± 3793622",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2597584959,
            "range": "± 124083946",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14794710,
            "range": "± 184057",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15117423,
            "range": "± 136474",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15714765,
            "range": "± 149885",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19733332,
            "range": "± 131143",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51319725,
            "range": "± 535754",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 310561285,
            "range": "± 3073102",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2451232713,
            "range": "± 26310496",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41779041+alvicsam@users.noreply.github.com",
            "name": "Alexander Samusev",
            "username": "alvicsam"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0dcb580e3012c2ee61a91390c5f69451a096a820",
          "message": "ci: fix workflow permissions (#7366)\n\ncc https://github.com/paritytech/ci_cd/issues/1101",
          "timestamp": "2025-01-28T17:12:18Z",
          "tree_id": "ffb6f41b530b33a3d146c91f5a7c8236c521324c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/0dcb580e3012c2ee61a91390c5f69451a096a820"
        },
        "date": 1738087358252,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19919252,
            "range": "± 1005983",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 22642536,
            "range": "± 512734",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 24074646,
            "range": "± 1421374",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 29638504,
            "range": "± 715851",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 67674746,
            "range": "± 1435350",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 481552871,
            "range": "± 11163632",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2725405505,
            "range": "± 66336200",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17269628,
            "range": "± 217682",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17541415,
            "range": "± 276150",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17911403,
            "range": "± 292062",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23375408,
            "range": "± 252263",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 61169543,
            "range": "± 2173096",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 427448211,
            "range": "± 5748993",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2989494934,
            "range": "± 117995070",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1177472+mordamax@users.noreply.github.com",
            "name": "Maksym H",
            "username": "mordamax"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9ab00b15b2e98d008822fe6addaaad148f513bea",
          "message": "remove old bench & revert the frame-weight-template (#7362)\n\n- remove old bench from cmd.py and left alias for backward compatibility\n- reverted the frame-wight-template as the problem was that it umbrella\ntemplate wasn't picked correctly in the old benchmarks, in\nframe-omni-bench it correctly identifies the dependencies and uses\ncorrect template\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-01-28T19:32:46Z",
          "tree_id": "32c65a77194bfad2b966d1d9371feba6b395693c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/9ab00b15b2e98d008822fe6addaaad148f513bea"
        },
        "date": 1738096035807,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 21080392,
            "range": "± 543286",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20179438,
            "range": "± 501048",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22297576,
            "range": "± 829511",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26064828,
            "range": "± 497345",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 63050651,
            "range": "± 2563665",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 457473568,
            "range": "± 15678258",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2818007918,
            "range": "± 209595760",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16988780,
            "range": "± 633541",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17085191,
            "range": "± 514925",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18366026,
            "range": "± 633296",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22719978,
            "range": "± 408447",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 58100354,
            "range": "± 1079915",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 396459112,
            "range": "± 12313142",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2765952434,
            "range": "± 62285113",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "v@lery.dev",
            "name": "Valery Gantchev",
            "username": "vgantchev"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f373af0d1c1e296c1b07486dd74710b40089250e",
          "message": "Use checked math in frame-balances named_reserve (#7365)\n\nThis PR modifies `named_reserve()` in frame-balances to use checked math\ninstead of defensive saturating math.\n\nThe use of saturating math relies on the assumption that the sum of the\nvalues will always fit in `u128::MAX`. However, there is nothing\npreventing the implementing pallet from passing a larger value which\noverflows. This can happen if the implementing pallet does not validate\nuser input and instead relies on `named_reserve()` to return an error\n(this saves an additional read)\n\nThis is not a security concern, as the method will subsequently return\nan error thanks to `<Self as ReservableCurrency<_>>::reserve(who,\nvalue)?;`. However, the `defensive_saturating_add` will panic in\n`--all-features`, creating false positive crashes in fuzzing operations.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-01-29T09:11:04Z",
          "tree_id": "9f39b6fef5a83298029fc92ace7de587549fff02",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f373af0d1c1e296c1b07486dd74710b40089250e"
        },
        "date": 1738145055878,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18383998,
            "range": "± 174513",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18855389,
            "range": "± 200752",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20670575,
            "range": "± 146587",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24183981,
            "range": "± 747237",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53759449,
            "range": "± 860246",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 332367385,
            "range": "± 10252029",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2476034886,
            "range": "± 20377312",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15297137,
            "range": "± 155959",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15407758,
            "range": "± 244170",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15851092,
            "range": "± 204035",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20563324,
            "range": "± 379446",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52298041,
            "range": "± 605129",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 325274705,
            "range": "± 6822607",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2531492282,
            "range": "± 33491179",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ludovic.domingues96@gmail.com",
            "name": "Ludovic_Domingues",
            "username": "Krayt78"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "57f0b95978a0eed283cc894724a4ba1c5d4ca258",
          "message": "Migrating cumulus-pallet-session-benchmarking to Benchmarking V2  (#6564)\n\n# Description\n\nMigrating cumulus-pallet-session-benchmarking to the new benchmarking\nsyntax v2.\nThis is a part of #6202\n\n---------\n\nCo-authored-by: seemantaggarwal <32275622+seemantaggarwal@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-01-29T11:13:56Z",
          "tree_id": "a9541d14e5745408a36a5cf4acedc08ab3370a9f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/57f0b95978a0eed283cc894724a4ba1c5d4ca258"
        },
        "date": 1738152570583,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18196840,
            "range": "± 119271",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18209776,
            "range": "± 97156",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19924752,
            "range": "± 136784",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23827875,
            "range": "± 191723",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54684366,
            "range": "± 603665",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 323847988,
            "range": "± 3572691",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2484463672,
            "range": "± 83498964",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14995104,
            "range": "± 154582",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15144572,
            "range": "± 136593",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15535801,
            "range": "± 85181",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19948983,
            "range": "± 139430",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52405835,
            "range": "± 871079",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 312976799,
            "range": "± 1914813",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2454262599,
            "range": "± 44887496",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "bkontur@gmail.com",
            "name": "Branislav Kontur",
            "username": "bkontur"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ada12be652a4fa8f60fc54e8cfe9ca81e09ad28b",
          "message": "Bridges small nits/improvements (#7383)\n\nThis PR contains small fixes and backwards compatibility issues\nidentified during work on the larger PR:\nhttps://github.com/paritytech/polkadot-sdk/issues/6906.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-01-29T14:33:08Z",
          "tree_id": "b81dbda9d653a05c991f6e994b685def500719ac",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ada12be652a4fa8f60fc54e8cfe9ca81e09ad28b"
        },
        "date": 1738164251861,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19988279,
            "range": "± 284652",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20358986,
            "range": "± 256375",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21504455,
            "range": "± 405024",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25358822,
            "range": "± 1233829",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55348457,
            "range": "± 674909",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 361470012,
            "range": "± 6635033",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2382522018,
            "range": "± 23599191",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16026454,
            "range": "± 272515",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16168098,
            "range": "± 277781",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16989771,
            "range": "± 264112",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21169823,
            "range": "± 358849",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54397430,
            "range": "± 767347",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 335382456,
            "range": "± 5211204",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2583129549,
            "range": "± 30927017",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "manuel.mauro@protonmail.com",
            "name": "Manuel Mauro",
            "username": "manuelmauro"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "80e30ec3cdccae8e9099bd67840ff8737b043496",
          "message": "Add support for feature `pallet_balances/insecure_zero_ed` in benchmarks and testing (#7379)\n\n# Description\n\nCurrently benchmarks and tests on pallet_balances would fail when the\nfeature insecure_zero_ed is enabled. This PR allows to run such\nbenchmark and tests keeping into account the fact that accounts would\nnot be deleted when their balance goes below a threshold.\n\n## Integration\n\n*In depth notes about how this PR should be integrated by downstream\nprojects. This part is mandatory, and should be\nreviewed by reviewers, if the PR does NOT have the `R0-Silent` label. In\ncase of a `R0-Silent`, it can be ignored.*\n\n## Review Notes\n\n*In depth notes about the **implementation** details of your PR. This\nshould be the main guide for reviewers to\nunderstand your approach and effectively review it. If too long, use\n\n[`<details>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details)*.\n\n*Imagine that someone who is depending on the old code wants to\nintegrate your new code and the only information that\nthey get is this section. It helps to include example usage and default\nvalue here, with a `diff` code-block to show\npossibly integration.*\n\n*Include your leftover TODOs, if any, here.*\n\n# Checklist\n\n* [x] My PR includes a detailed description as outlined in the\n\"Description\" and its two subsections above.\n* [x] My PR follows the [labeling requirements](\n\nhttps://github.com/paritytech/polkadot-sdk/blob/master/docs/contributor/CONTRIBUTING.md#Process\n) of this project (at minimum one label for `T` required)\n* External contributors: ask maintainers to put the right label on your\nPR.\n* [x] I have made corresponding changes to the documentation (if\napplicable)\n* [x] I have added tests that prove my fix is effective or that my\nfeature works (if applicable)\n\nYou can remove the \"Checklist\" section once all have been checked. Thank\nyou for your contribution!\n\n✄\n-----------------------------------------------------------------------------\n\n---------\n\nCo-authored-by: Rodrigo Quelhas <rodrigo_quelhas@outlook.pt>",
          "timestamp": "2025-01-29T22:11:52Z",
          "tree_id": "2c966a8913ba0f6518561501ee0c5ee85dabe1d1",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/80e30ec3cdccae8e9099bd67840ff8737b043496"
        },
        "date": 1738191882110,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18491560,
            "range": "± 294221",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18591258,
            "range": "± 176414",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20176753,
            "range": "± 161509",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24236155,
            "range": "± 275971",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56281190,
            "range": "± 1004761",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 363778697,
            "range": "± 4949512",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2384941034,
            "range": "± 207063680",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15202601,
            "range": "± 274578",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15258162,
            "range": "± 156030",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15865030,
            "range": "± 170177",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20050148,
            "range": "± 143554",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53145612,
            "range": "± 1085925",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 326434516,
            "range": "± 6641801",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2590711174,
            "range": "± 20205537",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1177472+mordamax@users.noreply.github.com",
            "name": "Maksym H",
            "username": "mordamax"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9e425175e9db6b84f3ed2fd96f0326d798c25b2",
          "message": "Improvements for Weekly bench (#7390)\n\n- added 3 links for subweight comparison - now, ~1 month ago release, ~3\nmonth ago release tag\n- added `--3way --ours` flags for `git apply` to resolve potential\nconflict\n- stick to the weekly branch from the start until the end, to prevent\nrace condition with conflicts",
          "timestamp": "2025-01-30T11:46:36Z",
          "tree_id": "6c09ea8ab8d141712e8be35575592597e75de84d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e9e425175e9db6b84f3ed2fd96f0326d798c25b2"
        },
        "date": 1738240636708,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18759515,
            "range": "± 171491",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18821252,
            "range": "± 133765",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20424271,
            "range": "± 132917",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24576631,
            "range": "± 240502",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56535335,
            "range": "± 1548966",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 335812232,
            "range": "± 11496025",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2367400086,
            "range": "± 36351349",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15211683,
            "range": "± 149199",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15207600,
            "range": "± 198150",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15851553,
            "range": "± 91666",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19931194,
            "range": "± 233915",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52676211,
            "range": "± 897189",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 311842346,
            "range": "± 4854517",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2536761564,
            "range": "± 14675189",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "59443568+sw10pa@users.noreply.github.com",
            "name": "Stephane Gurgenidze",
            "username": "sw10pa"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "48f69cca47fcb95f65b5a4e4165e9c3bf359e82b",
          "message": "malus-collator: implement malicious collator submitting same collation to all backing groups (#6924)\n\n## Issues\n- [[#5049] Elastic scaling: zombienet\ntests](https://github.com/paritytech/polkadot-sdk/issues/5049)\n- [[#4526] Add zombienet tests for malicious\ncollators](https://github.com/paritytech/polkadot-sdk/issues/4526)\n\n## Description\nModified the undying collator to include a malus mode, in which it\nsubmits the same collation to all assigned backing groups.\n\n## TODO\n* [X] Implement malicious collator that submits the same collation to\nall backing groups;\n* [X] Avoid the core index check in the collation generation subsystem:\nhttps://github.com/paritytech/polkadot-sdk/blob/master/polkadot/node/collation-generation/src/lib.rs#L552-L553;\n* [X] Resolve the mismatch between the descriptor and the commitments\ncore index: https://github.com/paritytech/polkadot-sdk/pull/7104\n* [X] Implement `duplicate_collations` test with zombienet-sdk;\n* [X] Add PRdoc.",
          "timestamp": "2025-01-30T12:42:17Z",
          "tree_id": "306c378f0b701fbf00ec994741b6065288d97bdf",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/48f69cca47fcb95f65b5a4e4165e9c3bf359e82b"
        },
        "date": 1738244214292,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18614231,
            "range": "± 203435",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18738877,
            "range": "± 221722",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20483864,
            "range": "± 175232",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24406252,
            "range": "± 234607",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56063792,
            "range": "± 872454",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 348090252,
            "range": "± 7000361",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2722067233,
            "range": "± 51565476",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15604985,
            "range": "± 163024",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15776732,
            "range": "± 116346",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16425221,
            "range": "± 104093",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20739460,
            "range": "± 217008",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53113203,
            "range": "± 2068108",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 320590045,
            "range": "± 3215370",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2518022768,
            "range": "± 19308525",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "write@reusable.software",
            "name": "ordian",
            "username": "ordian"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0d35be7bc80a9c375db52585866601f4294b1e3d",
          "message": "fix pre-dispatch PoV underweight for ParasInherent (#7378)\n\nThis should fix the error log related to PoV pre-dispatch weight being\nlower than post-dispatch for `ParasInherent`:\n```\nERROR tokio-runtime-worker runtime::frame-support: Post dispatch weight is greater than pre dispatch weight. Pre dispatch weight may underestimating the actual weight. Greater post dispatch weight components are ignored.\n                                        Pre dispatch weight: Weight { ref_time: 47793353978, proof_size: 1019 },\n                                        Post dispatch weight: Weight { ref_time: 5030321719, proof_size: 135395 }\n```\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-01-30T14:15:12Z",
          "tree_id": "299d8defabb798b6e6ecf908a253bf8aac6e41f2",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/0d35be7bc80a9c375db52585866601f4294b1e3d"
        },
        "date": 1738249856580,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17719376,
            "range": "± 284124",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17819333,
            "range": "± 120561",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19491074,
            "range": "± 64236",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23176207,
            "range": "± 148340",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51500221,
            "range": "± 639735",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 283377191,
            "range": "± 2338955",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2161390029,
            "range": "± 104197880",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14424634,
            "range": "± 167620",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14640386,
            "range": "± 98097",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15230192,
            "range": "± 111105",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19014124,
            "range": "± 137495",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49043193,
            "range": "± 396536",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 287688955,
            "range": "± 1032827",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2274671651,
            "range": "± 11386467",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "egor@parity.io",
            "name": "Egor_P",
            "username": "EgorPopelyaev"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "698d9ae5b32785d3a5a55b770e973bbdb59ad271",
          "message": "[Backport] Version bumps from stable2412-1 + prdocs reorg (#7401)\n\nThis PR backports regular version bumps and prdoc reorganization from\nstable release branch back to master",
          "timestamp": "2025-01-31T09:25:44Z",
          "tree_id": "7f4bfd29059cb41939b169de88b552717b7fe607",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/698d9ae5b32785d3a5a55b770e973bbdb59ad271"
        },
        "date": 1738318525252,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17571216,
            "range": "± 66281",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17820416,
            "range": "± 116090",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19391714,
            "range": "± 140495",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23180450,
            "range": "± 220676",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51606746,
            "range": "± 517856",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 281643876,
            "range": "± 2687722",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2209798017,
            "range": "± 14023580",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14625407,
            "range": "± 98757",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14768972,
            "range": "± 151965",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15241097,
            "range": "± 68287",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19128589,
            "range": "± 86506",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49546038,
            "range": "± 342320",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 290224484,
            "range": "± 2559268",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2337080112,
            "range": "± 20426357",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "23833ccee9c1c2062123e60901e6dc1076e0697d",
          "message": "Remove warnings by cleaning up the `Cargo.toml` (#7416)",
          "timestamp": "2025-01-31T22:47:28Z",
          "tree_id": "598b03b65537f6ebea91fc5510ac5377f25177ea",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/23833ccee9c1c2062123e60901e6dc1076e0697d"
        },
        "date": 1738366713975,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18298571,
            "range": "± 42834",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18599005,
            "range": "± 200978",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20185896,
            "range": "± 100699",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24175254,
            "range": "± 260492",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56491099,
            "range": "± 619664",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 364679788,
            "range": "± 5032156",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2691488175,
            "range": "± 68717654",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15063679,
            "range": "± 103753",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15313021,
            "range": "± 132087",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15894250,
            "range": "± 74578",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20556891,
            "range": "± 288447",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51986149,
            "range": "± 761601",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 316657391,
            "range": "± 3597564",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2555486379,
            "range": "± 31068912",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alin@parity.io",
            "name": "Alin Dima",
            "username": "alindima"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4cd07c56378291fddb9fceab3b508cf99034126a",
          "message": "deprecate AsyncBackingParams (#7254)\n\nPart of https://github.com/paritytech/polkadot-sdk/issues/5079.\n\nRemoves all usage of the static async backing params, replacing them\nwith dynamically computed equivalent values (based on the claim queue\nand scheduling lookahead).\n\nAdds a new runtime API for querying the scheduling lookahead value. If\nnot present, falls back to 3 (the default value that is backwards\ncompatible with values we have on production networks for\nallowed_ancestry_len)\n\nAlso resolves most of\nhttps://github.com/paritytech/polkadot-sdk/issues/4447, removing code\nthat handles async backing not yet being enabled.\nWhile doing this, I removed the support for collation protocol version 1\non collators, as it only worked for leaves not supporting async backing\n(which are none).\nI also unhooked the legacy v1 statement-distribution (for the same\nreason as above). That subsystem is basically dead code now, so I had to\nremove some of its tests as they would no longer pass (since the\nsubsystem no longer sends messages to the legacy variant). I did not\nremove the entire legacy subsystem yet, as that would pollute this PR\ntoo much. We can remove the entire v1 and v2 validation protocols in a\nfollow up PR.\n\nIn another PR: remove test files with names `prospective_parachains`\n(it'd pollute this PR if we do now)\n\nTODO:\n- [x] add deprecation warnings\n- [x] prdoc\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-02-03T09:01:15Z",
          "tree_id": "59d7a1f1357bdfdea64825e74e9e190c719369b1",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4cd07c56378291fddb9fceab3b508cf99034126a"
        },
        "date": 1738576654321,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19161830,
            "range": "± 225404",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19211005,
            "range": "± 248252",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20595357,
            "range": "± 228179",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25249681,
            "range": "± 181885",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57348263,
            "range": "± 1163996",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 363240048,
            "range": "± 7752350",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2516448991,
            "range": "± 174750024",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15187923,
            "range": "± 190366",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15234033,
            "range": "± 183770",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15559085,
            "range": "± 209272",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20313902,
            "range": "± 152045",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52335229,
            "range": "± 1105592",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 334219922,
            "range": "± 3983897",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2525541799,
            "range": "± 19920480",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1177472+mordamax@users.noreply.github.com",
            "name": "Maksym H",
            "username": "mordamax"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4f4f6f82bd54748231384128c8d8b37e51bd8367",
          "message": "add allow(dead_code) to substrate weight templates (#7408)\n\naddress failed CI after full regeneration\n\nExample https://github.com/paritytech/polkadot-sdk/pull/7406\nFailed CI\nhttps://github.com/paritytech/polkadot-sdk/actions/runs/13070646240\n\nMonkey-patched weights which have been overridden by automation\n\n![image](https://github.com/user-attachments/assets/ecf69173-f4dd-4113-a319-4f29d779ecae)",
          "timestamp": "2025-02-03T12:25:21Z",
          "tree_id": "f05c358e926a472916d44609a3427998ab630799",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4f4f6f82bd54748231384128c8d8b37e51bd8367"
        },
        "date": 1738588436370,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18254533,
            "range": "± 69172",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18444588,
            "range": "± 121746",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20089489,
            "range": "± 118387",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23710658,
            "range": "± 184739",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53123898,
            "range": "± 837581",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 339460004,
            "range": "± 5087973",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2468318970,
            "range": "± 167253844",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14922583,
            "range": "± 85090",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14803702,
            "range": "± 104048",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15413288,
            "range": "± 57396",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19751385,
            "range": "± 183172",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51061139,
            "range": "± 448223",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 314036201,
            "range": "± 3268249",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2299951396,
            "range": "± 81687971",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "cyrill@parity.io",
            "name": "xermicus",
            "username": "xermicus"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "274a781e8ca1a9432c7ec87593bd93214abbff50",
          "message": "[pallet-revive] do not trap the caller on instantiations with duplicate contracts (#7414)\n\nThis PR changes the behavior of `instantiate` when the resulting\ncontract address already exists (because the caller tried to instantiate\nthe same contract with the same salt multiple times): Instead of\ntrapping the caller, return an error code.\n\nSolidity allows `catch`ing this, which doesn't work if we are trapping\nthe caller. For example, the change makes the following snippet work:\n\n```Solidity\ntry new Foo{salt: hex\"00\"}() returns (Foo) {\n    // Instantiation was successful (contract address was free and constructor did not revert)\n} catch {\n    // This branch is expected to be taken if the instantiation failed because of a duplicate salt\n}\n```\n\n`revive` PR: https://github.com/paritytech/revive/pull/188\n\n---------\n\nSigned-off-by: Cyrill Leutwiler <bigcyrill@hotmail.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-02-03T15:59:39Z",
          "tree_id": "bba40945cfb044e8b8752fd3493329ea7900a423",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/274a781e8ca1a9432c7ec87593bd93214abbff50"
        },
        "date": 1738601329122,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17108468,
            "range": "± 200699",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17352423,
            "range": "± 83027",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18676278,
            "range": "± 81456",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22253857,
            "range": "± 78032",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 50033011,
            "range": "± 565403",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 299412604,
            "range": "± 3125253",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2166004946,
            "range": "± 68346575",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 13854550,
            "range": "± 83076",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 13972928,
            "range": "± 121053",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14442676,
            "range": "± 73897",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18202123,
            "range": "± 200356",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 46594466,
            "range": "± 421451",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 276843280,
            "range": "± 3102891",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2212415722,
            "range": "± 9351694",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "14218860+iulianbarbu@users.noreply.github.com",
            "name": "Iulian Barbu",
            "username": "iulianbarbu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "0e386bed464b37b20c3e0c3d27b7f92d1a476a88",
          "message": "fix(sync-templates): keep parachain-template's workspace Cargo.toml (#7439)\n\n# Description\n\nAnother small fix for sync-templates. We're copying the `polkadot-sdk`'s\n`parachain-template` files (including the `parachain-template-docs`'s\nCargo.toml) to the directory where we're creating the workspace with all\n`parachain-template` members crates, and workspace's toml. The error is\nthat in this directory for the workspace we first create the workspace's\nCargo.toml, and then copy the files of the `polkadot-sdk`'s\n`parachain-template`, including the `Cargo.toml` of the\n`parachain-template-docs` crate, which overwrites the workspace\nCargo.toml. In the end we delete the `Cargo.toml` (which we assume it is\nof the `parachain-template-docs` crate), forgetting that previously\nthere should've been a workspace Cargo.toml, which should still be kept\nand committed to the template's repository.\n\nThe error happens here:\nhttps://github.com/paritytech/polkadot-sdk/actions/runs/13111697690/job/36577834127\n\n## Integration\n\nN/A\n\n## Review Notes\n\nOnce again, merging this into master requires re-running sync templates\nbased on latest version on master. Hopefully this will be the last issue\nrelated to the workflow itself.\n\n---------\n\nSigned-off-by: Iulian Barbu <iulian.barbu@parity.io>",
          "timestamp": "2025-02-04T09:35:22Z",
          "tree_id": "6d46731b2cc2fe15bf064c61d358d3768accade8",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/0e386bed464b37b20c3e0c3d27b7f92d1a476a88"
        },
        "date": 1738665036745,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17183604,
            "range": "± 141405",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17508243,
            "range": "± 98384",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19108828,
            "range": "± 237448",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22694578,
            "range": "± 190960",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51265417,
            "range": "± 541930",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 315057053,
            "range": "± 3231663",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2505053867,
            "range": "± 54592651",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14019224,
            "range": "± 68717",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14239358,
            "range": "± 82562",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14697149,
            "range": "± 57769",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19033573,
            "range": "± 94061",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 47974483,
            "range": "± 291013",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 284807490,
            "range": "± 3745939",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2297630052,
            "range": "± 23722380",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "serban@parity.io",
            "name": "Serban Iorga",
            "username": "serban300"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "d6aa157888902fdfcee3995e5ff209847977c696",
          "message": "Fix Message codec indexes (#7437)\n\nFixes https://github.com/paritytech/polkadot-sdk/issues/7400",
          "timestamp": "2025-02-04T10:02:45Z",
          "tree_id": "b6bb1dd7d23dfab61aedc83640af615e7f5a7e60",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d6aa157888902fdfcee3995e5ff209847977c696"
        },
        "date": 1738666332273,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18995345,
            "range": "± 350626",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19098306,
            "range": "± 251977",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21083338,
            "range": "± 226485",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24976534,
            "range": "± 513456",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57040156,
            "range": "± 994729",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 336804204,
            "range": "± 5016611",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2647136191,
            "range": "± 100589986",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15201626,
            "range": "± 92262",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15502481,
            "range": "± 424301",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16237478,
            "range": "± 242045",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20718887,
            "range": "± 356345",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52981474,
            "range": "± 432222",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 326760797,
            "range": "± 4835449",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2574330732,
            "range": "± 24969898",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1728078+michalkucharczyk@users.noreply.github.com",
            "name": "Michal Kucharczyk",
            "username": "michalkucharczyk"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "aa42debebaf3bf8e6979497256bc1fbad2db0e11",
          "message": "`fatxpool`: do not use individual transaction listeners (#7316)\n\n#### Description\nDuring 2s block investigation it turned out that\n[ForkAwareTxPool::register_listeners](https://github.com/paritytech/polkadot-sdk/blob/master/substrate/client/transaction-pool/src/fork_aware_txpool/fork_aware_txpool.rs#L1036)\ncall takes significant amount of time.\n```\nregister_listeners: at HashAndNumber { number: 12, hash: 0xe9a1...0b1d2 } took 200.041933ms\nregister_listeners: at HashAndNumber { number: 13, hash: 0x5eb8...a87c6 } took 264.487414ms\nregister_listeners: at HashAndNumber { number: 14, hash: 0x30cb...2e6ec } took 340.525566ms\nregister_listeners: at HashAndNumber { number: 15, hash: 0x0450...4f05c } took 405.686659ms\nregister_listeners: at HashAndNumber { number: 16, hash: 0xfa6f...16c20 } took 477.977836ms\nregister_listeners: at HashAndNumber { number: 17, hash: 0x5474...5d0c1 } took 483.046029ms\nregister_listeners: at HashAndNumber { number: 18, hash: 0x3ca5...37b78 } took 482.715468ms\nregister_listeners: at HashAndNumber { number: 19, hash: 0xbfcc...df254 } took 484.206999ms\nregister_listeners: at HashAndNumber { number: 20, hash: 0xd748...7f027 } took 414.635236ms\nregister_listeners: at HashAndNumber { number: 21, hash: 0x2baa...f66b5 } took 418.015897ms\nregister_listeners: at HashAndNumber { number: 22, hash: 0x5f1d...282b5 } took 423.342397ms\nregister_listeners: at HashAndNumber { number: 23, hash: 0x7a18...f2d03 } took 472.742939ms\nregister_listeners: at HashAndNumber { number: 24, hash: 0xc381...3fd07 } took 489.625557ms\n```\n\nThis PR implements the idea outlined in #7071. Instead of having a\nseparate listener for every transaction in each view, we now use a\nsingle stream of aggregated events per view, with each stream providing\nevents for all transactions in that view. Each event is represented as a\ntuple: (transaction-hash, transaction-status). This significantly reduce\nthe time required for `maintain`.\n\n#### Review Notes\n- single aggregated stream, provided by the individual view delivers\nevents in form of `(transaction-hash, transaction-status)`,\n- `MultiViewListener` now has a task. This task is responsible for:\n- polling the stream map (which consists of individual view's aggregated\nstreams) and the `controller_receiver` which provides side-channel\n[commands](https://github.com/paritytech/polkadot-sdk/blob/2b18e080cfcd6b56ee638c729f891154e566e52e/substrate/client/transaction-pool/src/fork_aware_txpool/multi_view_listener.rs#L68-L95)\n(like `AddView` or `FinalizeTransaction`) sent from the _transaction\npool_.\n- dispatching individual transaction statuses and control commands into\nthe external (created via API, e.g. over RPC) listeners of individual\ntransactions,\n- external listener is responsible for status handling _logic_ (e.g.\ndeduplication of events, or ignoring some of them) and triggering\nstatuses to external world (_this was not changed_).\n- level of debug messages was adjusted (per-tx messages shall be\n_trace_),\n\nCloses #7071\n\n---------\n\nCo-authored-by: Sebastian Kunert <skunert49@gmail.com>",
          "timestamp": "2025-02-04T12:18:04Z",
          "tree_id": "1f096529c55a66eabfa7b44d957e89929ba57029",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/aa42debebaf3bf8e6979497256bc1fbad2db0e11"
        },
        "date": 1738675209380,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18332381,
            "range": "± 163011",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18444365,
            "range": "± 120891",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20104777,
            "range": "± 157369",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23318108,
            "range": "± 414724",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55176838,
            "range": "± 1001803",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 348842046,
            "range": "± 5447214",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2560968954,
            "range": "± 195609442",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14612539,
            "range": "± 132285",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14717740,
            "range": "± 127478",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15209345,
            "range": "± 126240",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19756409,
            "range": "± 139850",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49312412,
            "range": "± 561656",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 292119992,
            "range": "± 8291465",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2403101085,
            "range": "± 26711463",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "claravanstaden64@gmail.com",
            "name": "Clara van Staden",
            "username": "claravanstaden"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8834a9bf7dcb1e5a7498b7148787c544136609b2",
          "message": "Snowbridge: Remove fee amount check from tests (#7436)\n\nRemove the specific fee amount checks in integration tests, since it\nchanges every time weights are regenerated.",
          "timestamp": "2025-02-04T12:55:44Z",
          "tree_id": "0190e4e4cae113a163a5e44b5cf5abe61e883076",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/8834a9bf7dcb1e5a7498b7148787c544136609b2"
        },
        "date": 1738676694050,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19111990,
            "range": "± 157497",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19479525,
            "range": "± 541876",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21385708,
            "range": "± 634502",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25570026,
            "range": "± 483730",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 61971032,
            "range": "± 1807242",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 371750805,
            "range": "± 10093760",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2476047504,
            "range": "± 247584347",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15204729,
            "range": "± 264706",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15190263,
            "range": "± 211046",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16014681,
            "range": "± 312206",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20237694,
            "range": "± 290647",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51993638,
            "range": "± 921961",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 326780004,
            "range": "± 7124765",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2554076057,
            "range": "± 16711381",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alexandre.balde@parity.io",
            "name": "Alexandre R. Baldé",
            "username": "rockbmb"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a883475944b26c24704df7f0ff329121e396a6bb",
          "message": "Add missing events to nomination pool extrinsincs (#7377)\n\nFound via\nhttps://github.com/open-web3-stack/polkadot-ecosystem-tests/pull/165.\n\nCloses #7370 .\n\n# Description\n\nSome extrinsics from `pallet_nomination_pools` were not emitting events:\n* `set_configs`\n* `set_claim_permission`\n* `set_metadata`\n* `chill`\n* `nominate`\n\n## Integration\n\nN/A\n\n## Review Notes\n\nN/A\n\n---------\n\nCo-authored-by: Ankan <10196091+Ank4n@users.noreply.github.com>",
          "timestamp": "2025-02-04T16:04:23Z",
          "tree_id": "aae1d07ef8a941d519f3fea9bdacc4ad5bcd5219",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/a883475944b26c24704df7f0ff329121e396a6bb"
        },
        "date": 1738687947554,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17696986,
            "range": "± 134575",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18331507,
            "range": "± 198489",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19815581,
            "range": "± 226253",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23632211,
            "range": "± 438442",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56400269,
            "range": "± 1135508",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 329356543,
            "range": "± 9564315",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2526506870,
            "range": "± 112734335",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14797460,
            "range": "± 138988",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14954809,
            "range": "± 152639",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15320011,
            "range": "± 242542",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19644431,
            "range": "± 198215",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51138744,
            "range": "± 489762",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 306157824,
            "range": "± 4630452",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2501599884,
            "range": "± 15188473",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alex.theissen@me.com",
            "name": "Alexander Theißen",
            "username": "athei"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "4c28354be1f5eec875d116a1ab7d9429023ef83b",
          "message": "revive: Include immutable storage deposit into the contracts `storage_base_deposit` (#7230)\n\nThis PR is centered around a main fix regarding the base deposit and a\nbunch of drive by or related fixtures that make sense to resolve in one\ngo. It could be broken down more but I am constantly rebasing this PR\nand would appreciate getting those fixes in as-one.\n\n**This adds a multi block migration to Westend AssetHub that wipes the\npallet state clean. This is necessary because of the changes to the\n`ContractInfo` storage item. It will not delete the child storage\nthough. This will leave a tiny bit of garbage behind but won't cause any\nproblems. They will just be orphaned.**\n\n## Record the deposit for immutable data into the `storage_base_deposit`\n\nThe `storage_base_deposit` are all the deposit a contract has to pay for\nexisting. It included the deposit for its own metadata and a deposit\nproportional (< 1.0x) to the size of its code. However, the immutable\ncode size was not recorded there. This would lead to the situation where\non terminate this portion wouldn't be refunded staying locked into the\ncontract. It would also make the calculation of the deposit changes on\n`set_code_hash` more complicated when it updates the immutable data (to\nbe done in #6985). Reason is because it didn't know how much was payed\nbefore since the storage prices could have changed in the mean time.\n\nIn order for this solution to work I needed to delay the deposit\ncalculation for a new contract for after the contract is done executing\nis constructor as only then we know the immutable data size. Before, we\njust charged this eagerly in `charge_instantiate` before we execute the\nconstructor. Now, we merely send the ED as free balance before the\nconstructor in order to create the account. After the constructor is\ndone we calculate the contract base deposit and charge it. This will\nmake `set_code_hash` much easier to implement.\n\nAs a side effect it is now legal to call `set_immutable_data` multiple\ntimes per constructor (even though I see no reason to do so). It simply\noverrides the immutable data with the new value. The deposit accounting\nwill be done after the constructor returns (as mentioned above) instead\nof when setting the immutable data.\n\n## Don't pre-charge for reading immutable data\n\nI noticed that we were pre-charging weight for the max allowable\nimmutable data when reading those values and then refunding after read.\nThis is not necessary as we know its length without reading the storage\nas we store it out of band in contract metadata. This makes reading it\nfree. Less pre-charging less problems.\n\n## Remove delegate locking\n\nFixes #7092\n\nThis is also in the spirit of making #6985 easier to implement. The\nlocking complicates `set_code_hash` as we might need to block settings\nthe code hash when locks exist. Check #7092 for further rationale.\n\n## Enforce \"no terminate in constructor\" eagerly\n\nWe used to enforce this rule after the contract execution returned. Now\nwe error out early in the host call. This makes it easier to be sure to\nargue that a contract info still exists (wasn't terminated) when a\nconstructor successfully returns. All around this his just much simpler\nthan dealing this check.\n\n## Moved refcount functions to `CodeInfo`\n\nThey never really made sense to exist on `Stack`. But now with the\nlocking gone this makes even less sense. The refcount is stored inside\n`CodeInfo` to lets just move them there.\n\n## Set `CodeHashLockupDepositPercent` for test runtime\n\nThe test runtime was setting `CodeHashLockupDepositPercent` to zero.\nThis was trivializing many code paths and excluded them from testing. I\nset it to `30%` which is our default value and fixed up all the tests\nthat broke. This should give us confidence that the lockup doeposit\ncollections properly works.\n\n## Reworked the `MockExecutable` to have both a `deploy` and a `call`\nentry point\n\nThis type used for testing could only have either entry points but not\nboth. In order to fix the `immutable_data_set_overrides` I needed to a\nnew function `add_both` to `MockExecutable` that allows to have both\nentry points. Make sure to make use of it in the future :)\n\n---------\n\nCo-authored-by: command-bot <>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: PG Herveou <pgherveou@gmail.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>",
          "timestamp": "2025-02-04T21:20:20Z",
          "tree_id": "41b307281d8f8a96e38748949c7a6d35b45114dc",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4c28354be1f5eec875d116a1ab7d9429023ef83b"
        },
        "date": 1738707023961,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18628091,
            "range": "± 357524",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18833054,
            "range": "± 171009",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19970801,
            "range": "± 121299",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24043717,
            "range": "± 175090",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55391941,
            "range": "± 1046241",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 383998348,
            "range": "± 8690056",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2620868532,
            "range": "± 106589377",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14959405,
            "range": "± 98830",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15002662,
            "range": "± 176659",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15342416,
            "range": "± 182747",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19767620,
            "range": "± 177523",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51074348,
            "range": "± 829954",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 318208175,
            "range": "± 4910716",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2518987971,
            "range": "± 40154787",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alex.theissen@me.com",
            "name": "Alexander Theißen",
            "username": "athei"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "31abe6117f2deed5928816b1606b9a42aab8838d",
          "message": "Remove pallet_revive benchmarks from Westend AssetHub (#7454)\n\nWe are using the substrate weights on the test net. Removing the benches\nso that they are not generated by accident and then not used.",
          "timestamp": "2025-02-05T09:56:28Z",
          "tree_id": "4e690dea8f1cd88d928fdaa87711785394855f39",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/31abe6117f2deed5928816b1606b9a42aab8838d"
        },
        "date": 1738752213194,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18276046,
            "range": "± 442383",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18936878,
            "range": "± 189083",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20563831,
            "range": "± 340711",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24270332,
            "range": "± 320989",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57354424,
            "range": "± 1793775",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 353219969,
            "range": "± 8712440",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2632476504,
            "range": "± 194899086",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14934277,
            "range": "± 147094",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15129956,
            "range": "± 142507",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15712314,
            "range": "± 154901",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20347510,
            "range": "± 213139",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51537852,
            "range": "± 778449",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 322586237,
            "range": "± 4274460",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2525596551,
            "range": "± 17326014",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "skunert49@gmail.com",
            "name": "Sebastian Kunert",
            "username": "skunert"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9c474d5452a855adc843785c71fc842f81eeed56",
          "message": "omni-node: Adjust manual seal parameters (#7451)\n\nThis PR will make omni-node dev-mode once again compatible with older\nruntimes.\n\nThe changes introduced in\nhttps://github.com/paritytech/polkadot-sdk/pull/6825 changed constraints\nthat are enforced in the runtime. For normal chains this should work\nfine, since we have real parameters there, like relay chain slots and\nparachain slots.\n\nFor these manual seal parameters we need to respect the constraints,\nwhile faking all the parameters. This PR should fix manual seal in\nomni-node to work with runtime build before and after\nhttps://github.com/paritytech/polkadot-sdk/pull/6825 (I tested that).\n\nIn the future, we should look into improving the parameterization here,\npossibly by introducing proper aura pre-digests so that the parachain\nslot moves forward. This will require quite a bit of refactoring on the\nmanual seal node side however. Issue:\nhttps://github.com/paritytech/polkadot-sdk/issues/7453\n\nAlso, the dev chain spec in parachain template is updated. This makes it\nwork with stable2412-1 and master omni-node. Once the changes here are\nbackported and in a release, all combinations will work again.\n\nfixes https://github.com/paritytech/polkadot-sdk/issues/7341\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-02-05T14:53:36Z",
          "tree_id": "8dc156f5199bc4cd7ab1c87438688c6a6a842c9b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/9c474d5452a855adc843785c71fc842f81eeed56"
        },
        "date": 1738770344195,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17706165,
            "range": "± 204452",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17847458,
            "range": "± 236778",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19562072,
            "range": "± 239902",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23173817,
            "range": "± 538527",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 52907836,
            "range": "± 612245",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 326633228,
            "range": "± 5907073",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2468624155,
            "range": "± 77819724",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14420794,
            "range": "± 233274",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14497851,
            "range": "± 161787",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14809024,
            "range": "± 109447",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19247918,
            "range": "± 235724",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49943680,
            "range": "± 1855438",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 292451054,
            "range": "± 3869357",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2372247471,
            "range": "± 13340884",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "14218860+iulianbarbu@users.noreply.github.com",
            "name": "Iulian Barbu",
            "username": "iulianbarbu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "87f4f3f0df5fc0cc72f69e612909d4d213965820",
          "message": "omni-node: add offchain worker (#7479)\n\n# Description\n\nCopy pasted the `parachain-template-node` offchain worker setup to\nomni-node-lib for both aura and manual seal nodes.\n\nCloses #7447 \n\n## Integration\n\nEnabled offchain workers for both `polkadot-omni-node` and\n`polkadot-parachain` nodes. This would allow executing offchain logic in\nthe runtime and considering it on the node side.\n\n---------\n\nSigned-off-by: Iulian Barbu <iulian.barbu@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-02-05T19:17:15Z",
          "tree_id": "82637de79a33cbf7f3f057f8f1f391847419b821",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/87f4f3f0df5fc0cc72f69e612909d4d213965820"
        },
        "date": 1738786000038,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17567153,
            "range": "± 215373",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17896432,
            "range": "± 173096",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19378233,
            "range": "± 203515",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22607933,
            "range": "± 205433",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54846312,
            "range": "± 1205344",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 320798028,
            "range": "± 3157450",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2542409736,
            "range": "± 111184035",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14222516,
            "range": "± 147897",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14200981,
            "range": "± 229130",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14989409,
            "range": "± 122456",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19478265,
            "range": "± 220913",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 48803858,
            "range": "± 977086",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 290728282,
            "range": "± 3493594",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2367845896,
            "range": "± 14454988",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "60601340+lexnv@users.noreply.github.com",
            "name": "Alexandru Vasile",
            "username": "lexnv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2f44779a54ebdf068496a1c1b651cf11434c8740",
          "message": "litep2p: Increase keep-alive to 10 seconds to mirror libp2p (#7488)\n\nThis PR ensures that litep2p will keep an idle connection alive for 10\nseconds.\n\nThe bump from 5 seconds is done to mirror the libp2p behavior and\npotentially improve connection stability:\n\nhttps://github.com/paritytech/polkadot-sdk/blob/a07fb323bc0cfb5c2fb4c8fbe9d20e344cc8eeaf/substrate/client/network/src/service.rs#L542-L549\n\ncc @paritytech/networking\n\n---------\n\nSigned-off-by: Alexandru Vasile <alexandru.vasile@parity.io>",
          "timestamp": "2025-02-06T11:42:40Z",
          "tree_id": "964d93f847b24ae933d6310580ceaeda21af0b9a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/2f44779a54ebdf068496a1c1b651cf11434c8740"
        },
        "date": 1738845118986,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17473254,
            "range": "± 130317",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17611370,
            "range": "± 102972",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19345738,
            "range": "± 415317",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22728141,
            "range": "± 211790",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51564189,
            "range": "± 449657",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 292322357,
            "range": "± 3078529",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2235582652,
            "range": "± 61135720",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14116246,
            "range": "± 178218",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14181613,
            "range": "± 128125",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14504844,
            "range": "± 70493",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18440290,
            "range": "± 112129",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 47879127,
            "range": "± 440859",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 281225188,
            "range": "± 2476583",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2307007349,
            "range": "± 30646947",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "917052e58fbcd22f4320e2b722631ddf8ac74960",
          "message": "[pallet-revive] tx fee fixes (#7463)\n\nApply some fixes to properly estimate ethereum tx fees:\n\n- Set the `extension_weight` on the dispatch_info to properly calculate\nthe fee with pallet_transaction_payment\n- Expose the gas_price through Runtime API, just in case we decide to\ntweak the value in future updates, it should be read from the chain\nrather than be a shared constant exposed by the crate\n- add a `evm_gas_to_fee` utility function to properly convert gas to\nsubstrate fee\n- Fix some minor gas encoding for edge cases\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-02-06T16:56:51Z",
          "tree_id": "61e74e9cf200dba354367f8c94021e6984384210",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/917052e58fbcd22f4320e2b722631ddf8ac74960"
        },
        "date": 1738864054392,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18386869,
            "range": "± 163768",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18500326,
            "range": "± 222659",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20327358,
            "range": "± 209062",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24333263,
            "range": "± 378893",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56872169,
            "range": "± 922372",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 360727226,
            "range": "± 10301849",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2691809542,
            "range": "± 74153275",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14759705,
            "range": "± 117733",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15144359,
            "range": "± 67696",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15569351,
            "range": "± 112805",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19827802,
            "range": "± 266731",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51485795,
            "range": "± 923777",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 321997647,
            "range": "± 4257218",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2527146488,
            "range": "± 14502221",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "dharjeezy@gmail.com",
            "name": "dharjeezy",
            "username": "dharjeezy"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f08bf1a1ff0a891c1a06ca6ff4d4be679e7346e0",
          "message": "Update Pallet Referenda to support  Block Number Provider (#6338)\n\nThis PR introduces BlockNumberProvider config for the referenda pallet.\ncloses part of https://github.com/paritytech/polkadot-sdk/issues/6297\n\nPolkadot address: 12GyGD3QhT4i2JJpNzvMf96sxxBLWymz4RdGCxRH5Rj5agKW\n\n---------\n\nCo-authored-by: muharem <ismailov.m.h@gmail.com>",
          "timestamp": "2025-02-07T07:59:51Z",
          "tree_id": "4c4a414b869a7d6c04d00e75ad2cf10f63726ff3",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f08bf1a1ff0a891c1a06ca6ff4d4be679e7346e0"
        },
        "date": 1738918125062,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19815185,
            "range": "± 173543",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20273649,
            "range": "± 244803",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21974297,
            "range": "± 135866",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25663909,
            "range": "± 189277",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 60186094,
            "range": "± 1043538",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 385589598,
            "range": "± 4494384",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2771296871,
            "range": "± 43092304",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15933656,
            "range": "± 178922",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16030651,
            "range": "± 186182",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16234218,
            "range": "± 192161",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20941753,
            "range": "± 155334",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53440630,
            "range": "± 629735",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 343584875,
            "range": "± 4731357",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2608348815,
            "range": "± 21640464",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "dharjeezy@gmail.com",
            "name": "dharjeezy",
            "username": "dharjeezy"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "fddb6a2c36042cf896d3006492bb15d2e2b56bae",
          "message": "Update pallet society to support Block Number Provider (#6623)\n\nThis PR introduces BlockNumberProvider config for pallet society.\ncloses part of https://github.com/paritytech/polkadot-sdk/issues/6297",
          "timestamp": "2025-02-07T08:41:18Z",
          "tree_id": "d49648e9d8da408dfc4d4c97b69f101206f4c70a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/fddb6a2c36042cf896d3006492bb15d2e2b56bae"
        },
        "date": 1738922651516,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19481556,
            "range": "± 129197",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19556663,
            "range": "± 181222",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21310456,
            "range": "± 231651",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25496292,
            "range": "± 361509",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 61973612,
            "range": "± 2829009",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 387242254,
            "range": "± 9668890",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2628107847,
            "range": "± 117951788",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16138782,
            "range": "± 551958",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16072688,
            "range": "± 384316",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16819476,
            "range": "± 173945",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22184161,
            "range": "± 796543",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 58039873,
            "range": "± 2471581",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 368697558,
            "range": "± 11393294",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2634713403,
            "range": "± 48345214",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "4ec221eb92a17eb682bf4124b5157d65208775bd",
          "message": "[pallet-revive] fix eth-rpc indexing (#7493)\n\n- Fix a deadlock on the RWLock cache\n- Remove eth-indexer, we won't need it anymore, the indexing will be\nstarted from within eth-rpc directly\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-02-07T15:32:14Z",
          "tree_id": "c51b2735dc55f194b5f34a920215feba290be6b2",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4ec221eb92a17eb682bf4124b5157d65208775bd"
        },
        "date": 1738945948202,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17274486,
            "range": "± 122923",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17635240,
            "range": "± 135653",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19276139,
            "range": "± 137081",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22764620,
            "range": "± 249100",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 50833108,
            "range": "± 279295",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 291480046,
            "range": "± 2515722",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2313499016,
            "range": "± 70324547",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14085689,
            "range": "± 102934",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14204158,
            "range": "± 229214",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14645913,
            "range": "± 146528",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18303835,
            "range": "± 63624",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 47772716,
            "range": "± 661305",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 280277943,
            "range": "± 1814195",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2342376144,
            "range": "± 7425673",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "363911+pepoviola@users.noreply.github.com",
            "name": "Javier Viola",
            "username": "pepoviola"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "135b7183626e4ac675fe368cf11496050b9e7821",
          "message": "Zombienet gha substrate migration (#7217)\n\nMigrate subtrate's zombienet test from gitlab to gha.\n\n---------\n\nCo-authored-by: alvicsam <alvicsam@gmail.com>",
          "timestamp": "2025-02-07T16:48:31Z",
          "tree_id": "443d3e39a34ee1f6b6f14649ed62816887704c38",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/135b7183626e4ac675fe368cf11496050b9e7821"
        },
        "date": 1738950712306,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17794544,
            "range": "± 178298",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18159511,
            "range": "± 142444",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19633212,
            "range": "± 189111",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23650965,
            "range": "± 270736",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55294429,
            "range": "± 1058008",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 348999413,
            "range": "± 5716493",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2601124641,
            "range": "± 242034710",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14674137,
            "range": "± 212378",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14939281,
            "range": "± 183864",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15497429,
            "range": "± 211050",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20083877,
            "range": "± 276670",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51109426,
            "range": "± 1084804",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 309349244,
            "range": "± 6217310",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2543888017,
            "range": "± 20065290",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "49e381a959e4573b0856608576a5e81ce9ee1184",
          "message": "Fix compilation warnings  (#7507)\n\nThis should fix some compilation warnings discovered under rustc 1.83\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-02-07T21:08:31Z",
          "tree_id": "8f808890daf1fac5dc67944fdd6f8a7a0c06ff0e",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/49e381a959e4573b0856608576a5e81ce9ee1184"
        },
        "date": 1738965622742,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19484390,
            "range": "± 415962",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19967367,
            "range": "± 178326",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19881647,
            "range": "± 283086",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24060256,
            "range": "± 392020",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56564580,
            "range": "± 1974038",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 318136923,
            "range": "± 24911910",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2450618271,
            "range": "± 71286507",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14215787,
            "range": "± 223857",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14557004,
            "range": "± 173892",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14980677,
            "range": "± 192544",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18770578,
            "range": "± 150492",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 48357088,
            "range": "± 571107",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 282493201,
            "range": "± 1760011",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2353371475,
            "range": "± 26165368",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "dharjeezy@gmail.com",
            "name": "dharjeezy",
            "username": "dharjeezy"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "10b77c95429c98412a2bb0a39436519cbf3b0950",
          "message": "Update pallet nomination pool to support Block Number Provider (#6715)\n\nThis PR introduces BlockNumberProvider config for the nomination pool\npallet.\ncloses part of https://github.com/paritytech/polkadot-sdk/issues/6297",
          "timestamp": "2025-02-08T04:44:46Z",
          "tree_id": "46b7c67c0eaf8444e6b0a2d25336cefff2a6c2f9",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/10b77c95429c98412a2bb0a39436519cbf3b0950"
        },
        "date": 1738993136760,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17761463,
            "range": "± 142727",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18110432,
            "range": "± 195917",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19815378,
            "range": "± 232779",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23871802,
            "range": "± 438517",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56803617,
            "range": "± 1390798",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 338220823,
            "range": "± 10059263",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2692888568,
            "range": "± 76946720",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14895500,
            "range": "± 130563",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15158172,
            "range": "± 186828",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15823488,
            "range": "± 107936",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20188914,
            "range": "± 192117",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52935352,
            "range": "± 1371834",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 321007234,
            "range": "± 4184245",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2521447032,
            "range": "± 27863895",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ea51bbf996c6e79f674f751491292309eb9eead9",
          "message": "pallet-revive-fixtures: Support compilation on stable (#7419)\n\nLet's burry out the old `RUSTC_BOOTSTRAP` hack. This is required when\nyou don't use `rustup` which automatically switches to the nightly\ntoolchain when it detects nightly CLI args.\n\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>",
          "timestamp": "2025-02-08T12:03:02Z",
          "tree_id": "f4c9595774d53f40151c614aa8fd43c4826c3159",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ea51bbf996c6e79f674f751491292309eb9eead9"
        },
        "date": 1739019848352,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 20376459,
            "range": "± 271806",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20170477,
            "range": "± 216206",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22244807,
            "range": "± 371914",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 27050681,
            "range": "± 340753",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 63141318,
            "range": "± 1288835",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 428187974,
            "range": "± 4396824",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2689699252,
            "range": "± 147211172",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16100479,
            "range": "± 150115",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16389755,
            "range": "± 135579",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17011985,
            "range": "± 274795",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22398559,
            "range": "± 256854",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 56436482,
            "range": "± 717009",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 392755308,
            "range": "± 8149834",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2820618038,
            "range": "± 30185221",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "109800286+StackOverflowExcept1on@users.noreply.github.com",
            "name": "StackOverflowExcept1on",
            "username": "StackOverflowExcept1on"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2970ab151402a94c146800c769953cf6fdb6ef1d",
          "message": "feat(wasm-builder): add support for new `wasm32v1-none` target (#7008)\n\n# Description\n\nResolves #5777\n\nPreviously `wasm-builder` used hacks such as `-Zbuild-std` (required\n`rust-src` component) and `RUSTC_BOOTSTRAP=1` to build WASM runtime\nwithout WASM features: `sign-ext`, `multivalue` and `reference-types`,\nbut since Rust 1.84 (will be stable on 9 January, 2025) the situation\nhas improved as there is new\n[`wasm32v1-none`](https://doc.rust-lang.org/beta/rustc/platform-support/wasm32v1-none.html)\ntarget that disables all \"post-MVP\" WASM features except\n`mutable-globals`.\n\nPreviously, your `rust-toolchain.toml` looked like this:\n\n```toml\n[toolchain]\nchannel = \"stable\"\ncomponents = [\"rust-src\"]\ntargets = [\"wasm32-unknown-unknown\"]\nprofile = \"default\"\n```\n\nIt should now be updated to something like this:\n\n```toml\n[toolchain]\nchannel = \"stable\"\ntargets = [\"wasm32v1-none\"]\nprofile = \"default\"\n```\n\nTo build the runtime:\n\n```bash\ncargo build --package minimal-template-runtime --release\n```\n\n## Integration\n\nIf you are using Rust 1.84 and above, then install the `wasm32v1-none`\ntarget instead of `wasm32-unknown-unknown` as shown above. You can also\nremove the unnecessary `rust-src` component.\n\nAlso note the slight differences in conditional compilation:\n- `wasm32-unknown-unknown`: `#[cfg(all(target_family = \"wasm\", target_os\n= \"unknown\"))]`\n- `wasm32v1-none`: `#[cfg(all(target_family = \"wasm\", target_os =\n\"none\"))]`\n\nAvoid using `target_os = \"unknown\"` in `#[cfg(...)]` or\n`#[cfg_attr(...)]` and instead use `target_family = \"wasm\"` or\n`target_arch = \"wasm32\"` in the runtime code.\n\n## Review Notes\n\nWasm builder requires the following prerequisites for building the WASM\nbinary:\n- Rust >= 1.68 and Rust < 1.84:\n  - `wasm32-unknown-unknown` target\n  - `rust-src` component\n- Rust >= 1.84:\n  - `wasm32v1-none` target\n- no more `-Zbuild-std` and `RUSTC_BOOTSTRAP=1` hacks and `rust-src`\ncomponent requirements!\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: Bastian Köcher <info@kchr.de>",
          "timestamp": "2025-02-09T00:08:41Z",
          "tree_id": "4a43522910c91f653ac69fa4718807e18edf15a3",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/2970ab151402a94c146800c769953cf6fdb6ef1d"
        },
        "date": 1739063861416,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17769129,
            "range": "± 196785",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18194721,
            "range": "± 105413",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19551680,
            "range": "± 166894",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23536341,
            "range": "± 468552",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55130805,
            "range": "± 934768",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 311959506,
            "range": "± 5782290",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2445777212,
            "range": "± 124159665",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14350933,
            "range": "± 186322",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14656613,
            "range": "± 147626",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14921955,
            "range": "± 149577",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19036707,
            "range": "± 169221",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 48920198,
            "range": "± 470613",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 290449378,
            "range": "± 3303479",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2393788258,
            "range": "± 6190253",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "7b0ac746e4fc26a9959b0dc1aeac2db32d3f289f",
          "message": "[pallet-revive] Add eth_get_logs (#7506)\n\nAdd support for eth_get_logs rpc method\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: xermicus <cyrill@parity.io>",
          "timestamp": "2025-02-10T15:33:16Z",
          "tree_id": "6c995cfd7bfa5866f034e7366f2f7109d9e6ae4e",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/7b0ac746e4fc26a9959b0dc1aeac2db32d3f289f"
        },
        "date": 1739204501701,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17305835,
            "range": "± 68415",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17757999,
            "range": "± 110722",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19401288,
            "range": "± 114544",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22941082,
            "range": "± 239785",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51348854,
            "range": "± 917495",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 321380355,
            "range": "± 3636831",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2277699152,
            "range": "± 60680389",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14247916,
            "range": "± 112141",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14171477,
            "range": "± 117200",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14768848,
            "range": "± 184299",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19192291,
            "range": "± 254721",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 48461334,
            "range": "± 362952",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 286243349,
            "range": "± 2292241",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2356729213,
            "range": "± 18357815",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "dhiraj.kumar2990@gmail.com",
            "name": "Dhiraj Sah",
            "username": "dhirajs0"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f96da6f3c37318568a1a662f39511afa76c13791",
          "message": "transfer function Preservation is changed to Expendable  (#7243)\n\n# Description\n\nFixes #7039\n\nThe Preservation of transfer method of fungible and fungibles adapters\nis changed from Preserve to Expendable. So the behavior of the\nTransferAsset will be consistent with the WithdrawAsset function, as in\n[fungible](https://github.com/paritytech/polkadot-sdk/blob/f3ab3854e1df9e0498599f01ba4f9f152426432a/polkadot/xcm/xcm-builder/src/fungible_adapter.rs#L217)\nand [fungibles](https://github.com/paritytech/polkadot-sdk/issues/url)\nadapter.\n\nThis pull request includes changes to the `fungible_adapter.rs` and\n`fungibles_adapter.rs` files in the `polkadot/xcm/xcm-builder`\ndirectory. The main change involves modifying the transfer method to use\nthe `Expendable` strategy instead of the `Preserve` strategy.\n\nChanges to transfer strategy:\n\n*\n[`polkadot/xcm/xcm-builder/src/fungible_adapter.rs`](diffhunk://#diff-6ebd77385441f2c8b023c480e818a01c4b43ae892c73ca30144cd64ee960bd66L67-R67):\nChanged the transfer method to use `Expendable` instead of `Preserve`.\n*\n[`polkadot/xcm/xcm-builder/src/fungibles_adapter.rs`](diffhunk://#diff-82221429de4c4c88be3d2976ece6475ef4fa56a32abc70290911bd47191f8e17L61-R61):\nChanged the transfer method to use `Expendable` instead of `Preserve`.\n\n---------\n\nCo-authored-by: Francisco Aguirre <franciscoaguirreperez@gmail.com>\nCo-authored-by: Adrian Catangiu <adrian@parity.io>",
          "timestamp": "2025-02-10T16:10:47Z",
          "tree_id": "4a2e65443eece20df30b63234a762f525207ed16",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f96da6f3c37318568a1a662f39511afa76c13791"
        },
        "date": 1739207269189,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18700718,
            "range": "± 1188991",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18552025,
            "range": "± 164362",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20046234,
            "range": "± 220819",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24028222,
            "range": "± 308850",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57495423,
            "range": "± 957353",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 344989742,
            "range": "± 6484948",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2509979862,
            "range": "± 141471467",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14740868,
            "range": "± 130049",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14890443,
            "range": "± 160096",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15571617,
            "range": "± 222818",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19720389,
            "range": "± 151858",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51957406,
            "range": "± 740276",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 310016355,
            "range": "± 6688160",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2512605474,
            "range": "± 25739482",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "5588131+kianenigma@users.noreply.github.com",
            "name": "Kian Paimani",
            "username": "kianenigma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "bd1b02f15a65227266540df48ac22e32f90ebc34",
          "message": "update readme to link to the new polkadot-docs (#7411)\n\ncloses https://github.com/polkadot-developers/polkadot-docs/issues/238\n\n---------\n\nCo-authored-by: Guillaume Thiolliere <gui.thiolliere@gmail.com>",
          "timestamp": "2025-02-10T17:43:09Z",
          "tree_id": "ba50ca6abeea5f67bc9ae7d530c2302210e87598",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/bd1b02f15a65227266540df48ac22e32f90ebc34"
        },
        "date": 1739212386840,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 25352371,
            "range": "± 1780026",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 25569013,
            "range": "± 2512495",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 25160521,
            "range": "± 1950659",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 33917021,
            "range": "± 3254009",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 82336596,
            "range": "± 4766442",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 481039617,
            "range": "± 15964107",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2896248388,
            "range": "± 411492631",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17453107,
            "range": "± 697001",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 18577581,
            "range": "± 857239",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18882596,
            "range": "± 1480233",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 24606624,
            "range": "± 930495",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 71280404,
            "range": "± 4255336",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 453746718,
            "range": "± 34298853",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 3616276605,
            "range": "± 154839424",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "serban@parity.io",
            "name": "Serban Iorga",
            "username": "serban300"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "71c19e4c7ca2b411722ec7d9c1392e1bd81b5681",
          "message": "Use rpc_port in bridge tests (#7520)\n\nUse `rpc_port` instead of `ws_port` in bridge tests since `ws_port` is\ndeprecated.",
          "timestamp": "2025-02-10T19:59:03Z",
          "tree_id": "96c4647f75e0df500deb6ee9124dc02bcb7e51a5",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/71c19e4c7ca2b411722ec7d9c1392e1bd81b5681"
        },
        "date": 1739220433471,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18639933,
            "range": "± 127735",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19200320,
            "range": "± 162195",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20552098,
            "range": "± 163354",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25032827,
            "range": "± 336341",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59414977,
            "range": "± 1085523",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 368204463,
            "range": "± 7413210",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2558992008,
            "range": "± 149879931",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15440844,
            "range": "± 188777",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15361692,
            "range": "± 284661",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16074619,
            "range": "± 186510",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21100268,
            "range": "± 192435",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54762255,
            "range": "± 769641",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 331816409,
            "range": "± 3485331",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2645787474,
            "range": "± 15877082",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "gui.thiolliere@gmail.com",
            "name": "Guillaume Thiolliere",
            "username": "gui1117"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6786bbcba95e1c2cc634f38d7276c077f8087f4a",
          "message": "Warn about cargo remote not copying hidden file by default (#7429)\n\nadd a warning about hidden file not transfered.\n\ncargo remote is not really configurable so I just use my own fork for\nnow: https://github.com/sgeisler/cargo-remote/pull/25",
          "timestamp": "2025-02-12T06:38:10Z",
          "tree_id": "7f6cf22c06218f727ea8421253c26cda6d320e3e",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/6786bbcba95e1c2cc634f38d7276c077f8087f4a"
        },
        "date": 1739345177796,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18900931,
            "range": "± 132617",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19082833,
            "range": "± 184005",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20689832,
            "range": "± 135906",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24548273,
            "range": "± 149856",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55982067,
            "range": "± 859599",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 347566093,
            "range": "± 6140824",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2325348952,
            "range": "± 35892907",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15016623,
            "range": "± 98951",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15192497,
            "range": "± 157532",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15689665,
            "range": "± 80108",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20163073,
            "range": "± 173298",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50944860,
            "range": "± 592886",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 312717744,
            "range": "± 2065648",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2482403153,
            "range": "± 15653946",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "42a61672c11e61b241deb843bc7fca7fc824befe",
          "message": "[pallet-revive] Add tracing support (2/2) (#7167)\n\nAdd debug endpoint to eth-rpc for capturing a block or a single\ntransaction traces\n\nSee:\n-  PR #7166\n\n---------\n\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>\nCo-authored-by: command-bot <>\nCo-authored-by: Yuri Volkov <0@mcornholio.ru>\nCo-authored-by: Maksym H <1177472+mordamax@users.noreply.github.com>\nCo-authored-by: Santi Balaguer <santiago.balaguer@gmail.com>\nCo-authored-by: Dónal Murray <donal.murray@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: xermicus <cyrill@parity.io>",
          "timestamp": "2025-02-12T07:23:49Z",
          "tree_id": "920fb4c8be27dfd7164ac87f04a0c31149cad777",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/42a61672c11e61b241deb843bc7fca7fc824befe"
        },
        "date": 1739347951849,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18778763,
            "range": "± 160761",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19252836,
            "range": "± 233507",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20368484,
            "range": "± 231992",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24776848,
            "range": "± 275693",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56806160,
            "range": "± 1069607",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 363880796,
            "range": "± 6594066",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2661187163,
            "range": "± 82498980",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14840072,
            "range": "± 236240",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15210417,
            "range": "± 145462",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15575510,
            "range": "± 166361",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20051287,
            "range": "± 261185",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51422697,
            "range": "± 1296242",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 334954253,
            "range": "± 6649211",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2526537028,
            "range": "± 25777763",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "73715684+Szegoo@users.noreply.github.com",
            "name": "Sergej Sakac",
            "username": "Szegoo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f22c30c9e308ee3780652adcd788264a6242e0ac",
          "message": "On-demand credits (#5990)\n\nImplementation of on-demand credits as described in\n[RFC-1](https://github.com/polkadot-fellows/RFCs/blob/main/text/0001-agile-coretime.md#instantaneous-coretime)\n\n---------\n\nCo-authored-by: ordian <write@reusable.software>\nCo-authored-by: Dónal Murray <donalm@seadanda.dev>",
          "timestamp": "2025-02-12T14:26:01Z",
          "tree_id": "f79ab0a80f27e4cffa2e4ed65077e6f1340ffab1",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f22c30c9e308ee3780652adcd788264a6242e0ac"
        },
        "date": 1739373511368,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19455136,
            "range": "± 154992",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19596731,
            "range": "± 219541",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21650079,
            "range": "± 233176",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26245143,
            "range": "± 436911",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 61189863,
            "range": "± 1130976",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 383777273,
            "range": "± 6003198",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2492466803,
            "range": "± 211455185",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16318172,
            "range": "± 212489",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16461728,
            "range": "± 245686",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17118324,
            "range": "± 197229",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21751868,
            "range": "± 241321",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 56727591,
            "range": "± 982586",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 336773749,
            "range": "± 4453196",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2702103410,
            "range": "± 11902435",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "serban@parity.io",
            "name": "Serban Iorga",
            "username": "serban300"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "af4c745b52dbf2a4945d2ae2bda5fa22390e16c1",
          "message": "Update some dependencies (#7548)\n\nRelated to https://github.com/paritytech/polkadot-sdk/issues/7360\n\nUpdate some dependencies needed for implementing\n`DecodeWithMemTracking`:\n`parity-scale-codec` -> 3.7.4\n`finality-grandpa` -> 0.16.3\n`bounded-collections` -> 0.2.3\n`impl-codec` -> 0.7.1",
          "timestamp": "2025-02-12T14:49:42Z",
          "tree_id": "7bf3440a50eb7709e873765774a445dcb145a5b8",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/af4c745b52dbf2a4945d2ae2bda5fa22390e16c1"
        },
        "date": 1739375481441,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19933922,
            "range": "± 240446",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20572233,
            "range": "± 333630",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22529739,
            "range": "± 236542",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26301534,
            "range": "± 588499",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 63345288,
            "range": "± 1709246",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 375540126,
            "range": "± 10231831",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2960039080,
            "range": "± 109879759",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17036682,
            "range": "± 218964",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17076168,
            "range": "± 241063",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17674954,
            "range": "± 107594",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22876883,
            "range": "± 331743",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 59443540,
            "range": "± 1141046",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 356099372,
            "range": "± 4935117",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2773567297,
            "range": "± 19243635",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "serban@parity.io",
            "name": "Serban Iorga",
            "username": "serban300"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "848875ad7dbb1b14a6c83e603a64c8a236e0b2f2",
          "message": "Fix build-linux-substrate (#7552)\n\nFix `build-linux-substrate` when opening PRs from a `polkadot-sdk` fork\n\nFailed CI job example:\nhttps://github.com/paritytech/polkadot-sdk/actions/runs/13284026730/job/37088673786?pr=7548",
          "timestamp": "2025-02-12T16:33:26Z",
          "tree_id": "e5f7886fb0c479c8b4724fc004cad703504dcda8",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/848875ad7dbb1b14a6c83e603a64c8a236e0b2f2"
        },
        "date": 1739381032856,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 21817719,
            "range": "± 405547",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 22697072,
            "range": "± 346729",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 24464527,
            "range": "± 449133",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 29397360,
            "range": "± 649767",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 72194838,
            "range": "± 2356031",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 456366136,
            "range": "± 12500778",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 3073226971,
            "range": "± 132416375",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 18270140,
            "range": "± 212331",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 18655892,
            "range": "± 188270",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18905083,
            "range": "± 315172",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 26121038,
            "range": "± 1291766",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 75840277,
            "range": "± 2311993",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 465720555,
            "range": "± 8368971",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 3517774819,
            "range": "± 55069779",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "363911+pepoviola@users.noreply.github.com",
            "name": "Javier Viola",
            "username": "pepoviola"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "43ae08fa0783ff5974925b709d623d30990a2667",
          "message": "Move zombienet cumulus pipeline to gha (#7529)\n\nIncludes a fix on the `wait` job (for waiting images to be ready).",
          "timestamp": "2025-02-12T17:19:44Z",
          "tree_id": "ba83065812fb887de310a527aab79b18dafa969d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/43ae08fa0783ff5974925b709d623d30990a2667"
        },
        "date": 1739383979655,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 21232704,
            "range": "± 203579",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 22630488,
            "range": "± 639684",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 23838334,
            "range": "± 471410",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 28197931,
            "range": "± 403671",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 66784539,
            "range": "± 918836",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 422394063,
            "range": "± 5262306",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2871310797,
            "range": "± 28031001",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17417693,
            "range": "± 128575",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17890119,
            "range": "± 311796",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18894725,
            "range": "± 258971",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 24127276,
            "range": "± 236414",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 64055823,
            "range": "± 1193669",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 398177408,
            "range": "± 7382207",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2994152299,
            "range": "± 31673950",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "32275622+seemantaggarwal@users.noreply.github.com",
            "name": "seemantaggarwal",
            "username": "seemantaggarwal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "645a6f40927c8acea3f32a6363242456de009321",
          "message": "Update Scheduler to have a configurable block provider #7434 (#7441)\n\nFollow up from\nhttps://github.com/paritytech/polkadot-sdk/pull/6362#issuecomment-2629744365\n\nThe goal of this PR is to have the scheduler pallet work on a parachain\nwhich does not produce blocks on a regular schedule, thus can use the\nrelay chain as a block provider.\n\nBecause blocks are not produced regularly, we cannot make the assumption\nthat block number increases monotonically, and thus have new logic to\nhandle multiple spend periods passing between blocks.\n\nRequirement: \n\ninstead of using the hard coded system block number. We add an\nassociated type BlockNumberProvider\n\n---------\n\nSigned-off-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>\nCo-authored-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>",
          "timestamp": "2025-02-13T00:30:37Z",
          "tree_id": "bb63eea1a582dc3683e7e2c88069cabec74fbcf2",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/645a6f40927c8acea3f32a6363242456de009321"
        },
        "date": 1739409714182,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 21962881,
            "range": "± 336599",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 22059755,
            "range": "± 269903",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 24516713,
            "range": "± 337644",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 28967300,
            "range": "± 294189",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 67165648,
            "range": "± 1351212",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 424846445,
            "range": "± 6485355",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2652548087,
            "range": "± 51396667",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17999003,
            "range": "± 324761",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 18147632,
            "range": "± 299101",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 19193373,
            "range": "± 192658",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 24620592,
            "range": "± 409503",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 63491932,
            "range": "± 1843220",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 404710148,
            "range": "± 4745960",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2940256166,
            "range": "± 52279150",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1728078+michalkucharczyk@users.noreply.github.com",
            "name": "Michal Kucharczyk",
            "username": "michalkucharczyk"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e5df3306a5e741bc97b21daa60f25870be897b8c",
          "message": "`fatxpool`: transaction statuses metrics added (#7505)\n\n#### Overview\n\nThis PR introduces a new mechanism to capture and report metrics related\nto timings of transaction lifecycle events, which are currently not\navailable. By exposing these timings, we aim to augment transaction-pool\nreliability dashboards and extend existing Grafana boards.\n\nA new `unknown_from_block_import_txs` metric is also introduced. It\nprovides the number of transactions in imported block which are not\nknown to the node's transaction pool. It allows to monitor alignment of\ntransaction pools across the nodes in the network.\n\n#### Notes for reviewers\n- **[Per-event\nMetrics](https://github.com/paritytech/polkadot-sdk/blob/8a53992e2fb200b084ebf0393ad22d91314fd173/substrate/client/transaction-pool/src/fork_aware_txpool/metrics.rs#L84-L105)\nCollection**: implemented by[\n`EventsMetricsCollector`](https://github.com/paritytech/polkadot-sdk/blob/8a53992e2fb200b084ebf0393ad22d91314fd173/substrate/client/transaction-pool/src/fork_aware_txpool/metrics.rs#L353-L358)\nwhich allows to capture both submission timestamps and transaction\nstatus updates. An asynchronous\n[`EventsMetricsCollectorTask`](https://github.com/paritytech/polkadot-sdk/blob/8a53992e2fb200b084ebf0393ad22d91314fd173/substrate/client/transaction-pool/src/fork_aware_txpool/metrics.rs#L503-L526)\nprocesses the metrics-related messages sent by the\n`EventsMetricsCollector` and reports the timings of transaction statuses\nupdates to Prometheus. This task implements event[\nde-duplication](https://github.com/paritytech/polkadot-sdk/blob/8a53992e2fb200b084ebf0393ad22d91314fd173/substrate/client/transaction-pool/src/fork_aware_txpool/metrics.rs#L458)\nusing a `HashMap` of\n[`TransactionEventMetricsData`](https://github.com/paritytech/polkadot-sdk/blob/8a53992e2fb200b084ebf0393ad22d91314fd173/substrate/client/transaction-pool/src/fork_aware_txpool/metrics.rs#L424-L435)\nentries which also holds transaction submission timestamps used to\n[compute\ntimings](https://github.com/paritytech/polkadot-sdk/blob/8a53992e2fb200b084ebf0393ad22d91314fd173/substrate/client/transaction-pool/src/fork_aware_txpool/metrics.rs#L489-L495).\nTransaction-related items are removed when transaction's final status is\n[reported](https://github.com/paritytech/polkadot-sdk/blob/8a53992e2fb200b084ebf0393ad22d91314fd173/substrate/client/transaction-pool/src/fork_aware_txpool/metrics.rs#L496).\n- Transaction submission timestamp is reusing the timestamp of\n`TimedTransactionSource` kept in mempool. It is reported to\n`EventsMetricsCollector` in\n[`submit_at`](https://github.com/paritytech/polkadot-sdk/blob/8a53992e2fb200b084ebf0393ad22d91314fd173/substrate/client/transaction-pool/src/fork_aware_txpool/fork_aware_txpool.rs#L735)\nand\n[`submit_and_watch`](https://github.com/paritytech/polkadot-sdk/blob/8a53992e2fb200b084ebf0393ad22d91314fd173/substrate/client/transaction-pool/src/fork_aware_txpool/fork_aware_txpool.rs#L836)\nmethods of `ForkAwareTxPool`.\n- Transaction updates are reported to `EventsMetricsCollector` from\n`MultiViewListener`\n[task](https://github.com/paritytech/polkadot-sdk/blob/8a53992e2fb200b084ebf0393ad22d91314fd173/substrate/client/transaction-pool/src/fork_aware_txpool/multi_view_listener.rs#L494).\nThis allows to gather metrics for _watched_ and _non-watched_\ntransactions (what enables metrics on non-rpc-enabled collators).\n- New metric\n([`unknown_from_block_import_txs`](https://github.com/paritytech/polkadot-sdk/blob/8a53992e2fb200b084ebf0393ad22d91314fd173/substrate/client/transaction-pool/src/fork_aware_txpool/metrics.rs#L59-L60))\nallowing checking alignment of pools across the network is\n[reported](https://github.com/paritytech/polkadot-sdk/blob/8a53992e2fb200b084ebf0393ad22d91314fd173/substrate/client/transaction-pool/src/fork_aware_txpool/fork_aware_txpool.rs#L1288-L1292)\nusing new `TxMemPool`\n[method](https://github.com/paritytech/polkadot-sdk/blob/8a53992e2fb200b084ebf0393ad22d91314fd173/substrate/client/transaction-pool/src/fork_aware_txpool/tx_mem_pool.rs#L605-L611).\n\nfixes: #7355, #7448\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Sebastian Kunert <skunert49@gmail.com>\nCo-authored-by: Iulian Barbu <14218860+iulianbarbu@users.noreply.github.com>",
          "timestamp": "2025-02-13T08:25:23Z",
          "tree_id": "3dcc86374c324a490e9653161fe188675c84ce6c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e5df3306a5e741bc97b21daa60f25870be897b8c"
        },
        "date": 1739438252349,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19723192,
            "range": "± 273345",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19991308,
            "range": "± 122748",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21796204,
            "range": "± 205894",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25838720,
            "range": "± 408724",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 61192105,
            "range": "± 970042",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 379081785,
            "range": "± 6569823",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2469205060,
            "range": "± 134899419",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16231620,
            "range": "± 149478",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16309816,
            "range": "± 110004",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17162561,
            "range": "± 188646",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21960755,
            "range": "± 164582",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 57134753,
            "range": "± 971993",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 346917697,
            "range": "± 9694579",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2689624839,
            "range": "± 10693434",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9d14b3b5d4c3ab334299e99d0e5f6fea9c5a7e46",
          "message": "sc-informant: Print full hash when debug logging is enabled (#7554)\n\nWhen debugging stuff, it is useful to see the full hashes and not only\nthe \"short form\". This makes it easier to read logs and follow blocks.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-02-13T12:56:52Z",
          "tree_id": "99f351ac07d8d5b649c3c481d667c7f31f3236e0",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/9d14b3b5d4c3ab334299e99d0e5f6fea9c5a7e46"
        },
        "date": 1739454379012,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18114500,
            "range": "± 174121",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18408265,
            "range": "± 129179",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19736746,
            "range": "± 86306",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23374224,
            "range": "± 134959",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53328850,
            "range": "± 517318",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 324798020,
            "range": "± 7782636",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2560042814,
            "range": "± 152495729",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14485580,
            "range": "± 89748",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14659559,
            "range": "± 266384",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15082849,
            "range": "± 92040",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18920644,
            "range": "± 148128",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49263824,
            "range": "± 335532",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 290735966,
            "range": "± 2689044",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2379181496,
            "range": "± 7251139",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48632512+s0me0ne-unkn0wn@users.noreply.github.com",
            "name": "s0me0ne-unkn0wn",
            "username": "s0me0ne-unkn0wn"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1866c3b4673b66a62b1eb9c8c82f2cd827cbd388",
          "message": "Shorter availability data retention period for testnets (#7353)\n\nCloses #3270\n\n---------\n\nCo-authored-by: command-bot <>",
          "timestamp": "2025-02-13T14:22:42Z",
          "tree_id": "21a0acc42ca1637449d95e7370dcf357dbe5699f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/1866c3b4673b66a62b1eb9c8c82f2cd827cbd388"
        },
        "date": 1739459694054,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19629254,
            "range": "± 281613",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19445394,
            "range": "± 546796",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21275622,
            "range": "± 285532",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25452981,
            "range": "± 808240",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 62865847,
            "range": "± 1719338",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 410025262,
            "range": "± 8305944",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2841761715,
            "range": "± 65975112",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16092849,
            "range": "± 355461",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16586328,
            "range": "± 303297",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17140846,
            "range": "± 241249",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22009127,
            "range": "± 559526",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 56412041,
            "range": "± 1491464",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 354214120,
            "range": "± 6413979",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2688804930,
            "range": "± 47731726",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d11400478dddb6bb78d294ced9d688712343fde0",
          "message": "[pallet-revive] fix subxt version (#7570)\n\nCargo.lock change to subxt were rolled back \nFixing it and updating it in Cargo.toml so it does not happen again\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-02-13T21:53:03Z",
          "tree_id": "95f7fa673309d0b389a73c479ad3a94c2d07610d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d11400478dddb6bb78d294ced9d688712343fde0"
        },
        "date": 1739486838031,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17822203,
            "range": "± 104034",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18084474,
            "range": "± 82170",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19457641,
            "range": "± 142659",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23020824,
            "range": "± 154814",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51040726,
            "range": "± 724450",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 303371894,
            "range": "± 2855426",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2358102514,
            "range": "± 75400990",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14331597,
            "range": "± 101925",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14379691,
            "range": "± 96998",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14863044,
            "range": "± 82123",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18502812,
            "range": "± 243602",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 48413729,
            "range": "± 311048",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 285320555,
            "range": "± 1821363",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2321639079,
            "range": "± 7879137",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alex.theissen@me.com",
            "name": "Alexander Theißen",
            "username": "athei"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b44dc3a5284d6882defb88903f048e0570181642",
          "message": "pallet-revive: Add env var to allow skipping of validation for testing (#7562)\n\nWhen trying to reproduce bugs we sometimes need to deploy code that\nwouldn't pass validation. This PR adds a new environment variable\n`REVIVE_SKIP_VALIDATION` that when set will skip all validation except\nthe contract blob size limit.\n\nPlease note that this only applies to when the pallet is compiled for\n`std` and hence will never be part of on-chain.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-02-14T07:55:23Z",
          "tree_id": "60d33df710eb4895e01f2a9cc132d8d0334727ee",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/b44dc3a5284d6882defb88903f048e0570181642"
        },
        "date": 1739523826138,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17686154,
            "range": "± 152646",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17879259,
            "range": "± 79193",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19515218,
            "range": "± 171177",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22857090,
            "range": "± 318830",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 52546683,
            "range": "± 719958",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 297331555,
            "range": "± 3867336",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2305701118,
            "range": "± 28748726",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14235683,
            "range": "± 382616",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14383236,
            "range": "± 121157",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14735741,
            "range": "± 92499",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18515472,
            "range": "± 189145",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 48289244,
            "range": "± 437891",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 285002811,
            "range": "± 2965820",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2346376187,
            "range": "± 22950535",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c1f4703f4d6fcf8b74c7f4b587d3a00d6adf63a0",
          "message": "frame-benchmarking: Improve macro hygiene (#7571)\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-02-14T09:47:10Z",
          "tree_id": "fa4effc00909ba5d84b0608e35c9ec059cc2bd4e",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c1f4703f4d6fcf8b74c7f4b587d3a00d6adf63a0"
        },
        "date": 1739530098205,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17212617,
            "range": "± 110085",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17380773,
            "range": "± 120713",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18999178,
            "range": "± 190168",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22618185,
            "range": "± 140697",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51201581,
            "range": "± 334047",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 305552869,
            "range": "± 5469261",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2232688815,
            "range": "± 88830714",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14048937,
            "range": "± 134904",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14205852,
            "range": "± 73072",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14768078,
            "range": "± 143153",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18757147,
            "range": "± 156137",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 47516049,
            "range": "± 348131",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 282743151,
            "range": "± 4437832",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2338645343,
            "range": "± 9270033",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "Florian.Franzen@gmail.com",
            "name": "Florian Franzen",
            "username": "FlorianFranzen"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9117f70f226446b2ec75db9a5052af4919b5933a",
          "message": "cumulus-client: use only valid syntax in Cargo.toml (#7455)\n\n# Description\n\nThis PR ensure that only valid syntax is uses inside the `Cargo.toml`. \n\n## Integration\n\nNot sure if worth backporting. Came across this when trying to package\n`try-runtime-cli`.\n\n## Review Notes\n\nIt should be obvious that this is not valid syntax. I am not able to add\nlabels and doubt this requires a prdoc.",
          "timestamp": "2025-02-14T10:04:55Z",
          "tree_id": "0eff889773f574747d952497bbffab4f6fbf8ca6",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/9117f70f226446b2ec75db9a5052af4919b5933a"
        },
        "date": 1739531851665,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17399250,
            "range": "± 115371",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17568296,
            "range": "± 115330",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19097109,
            "range": "± 112859",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22758006,
            "range": "± 485950",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53060837,
            "range": "± 680709",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 309931860,
            "range": "± 2854353",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2543550334,
            "range": "± 198884990",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 13970329,
            "range": "± 203344",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14151006,
            "range": "± 91330",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14696164,
            "range": "± 94154",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18855176,
            "range": "± 113250",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 47429724,
            "range": "± 300436",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 278080533,
            "range": "± 2476413",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2307396693,
            "range": "± 21693070",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "60601340+lexnv@users.noreply.github.com",
            "name": "Alexandru Vasile",
            "username": "lexnv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "20ffada06152b8926cbccfa19334fe7bbb116857",
          "message": "network/tests: Add conformance testing for litep2p and libp2p (#7361)\n\nThis PR implements conformance tests between our network backends\n(litep2p and libp2p).\n\nThe PR creates a setup for extending testing in the future, while\nimplementing the following tests:\n- connectivity check: Connect litep2p -> libp2p and libp2p -> litep2p\n- request response check: Send 32 requests from one backend to the other\n- notification check: Send 128 ping pong notifications and 128 from one\nbackend to the other\n\ncc @paritytech/networking\n\n---------\n\nSigned-off-by: Alexandru Vasile <alexandru.vasile@parity.io>",
          "timestamp": "2025-02-14T11:52:17Z",
          "tree_id": "bafb8b07fe11e771d25080798f9394c4c24cbbe3",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/20ffada06152b8926cbccfa19334fe7bbb116857"
        },
        "date": 1739538463992,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17614428,
            "range": "± 165782",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17847164,
            "range": "± 156280",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19312118,
            "range": "± 120610",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22999615,
            "range": "± 172818",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53214276,
            "range": "± 1793933",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 332787945,
            "range": "± 6429102",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2214921268,
            "range": "± 73183424",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14427412,
            "range": "± 138233",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14546054,
            "range": "± 143973",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15017803,
            "range": "± 675565",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18886709,
            "range": "± 182262",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49514925,
            "range": "± 954618",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 286747440,
            "range": "± 2466182",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2417298481,
            "range": "± 64120742",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alex.theissen@me.com",
            "name": "Alexander Theißen",
            "username": "athei"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "60146ba5d291530880e008e6650e2cfa74c9105c",
          "message": "pallet-revive: Fix the contract size related benchmarks (#7568)\n\nPartly addresses https://github.com/paritytech/polkadot-sdk/issues/6157\n\nThe benchmarks measuring the impact of contract sizes on calling or\ninstantiating a contract were bogus because they needed to be written in\nassembly in order to tightly control the basic block size.\n\nThis fixes the benchmarks for:\n- call_with_code_per_byte\n- upload_code\n- instantiate_with_code\n\nAnd adds a new benchmark that accounts for the fact that the interpreter\nwill always compile whole basic blocks:\n- basic_block_compilation\n\nAfter this PR only the weight we assign to instructions need to be\naddressed.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: PG Herveou <pgherveou@gmail.com>",
          "timestamp": "2025-02-14T13:16:08Z",
          "tree_id": "f31de68f1089b96d01bbc9ea3895409b158eb26b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/60146ba5d291530880e008e6650e2cfa74c9105c"
        },
        "date": 1739542264425,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17310619,
            "range": "± 120745",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17514479,
            "range": "± 83337",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18951969,
            "range": "± 79355",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22350818,
            "range": "± 912854",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 50016009,
            "range": "± 316758",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 287111431,
            "range": "± 1875426",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2232930496,
            "range": "± 54922000",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 13968512,
            "range": "± 191397",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14085003,
            "range": "± 247596",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14454165,
            "range": "± 57516",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18658745,
            "range": "± 76382",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 48507539,
            "range": "± 346680",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 288142737,
            "range": "± 1267803",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2312897744,
            "range": "± 14677335",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1728078+michalkucharczyk@users.noreply.github.com",
            "name": "Michal Kucharczyk",
            "username": "michalkucharczyk"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c94df1bc1be2203f5bc8aa960b0b46a44d97d120",
          "message": "`txpool api`: `remove_invalid` call improved (#6661)\n\n#### Description \nCurrently the transaction which is reported as invalid by a block\nbuilder (or `removed_invalid` by other components) is silently skipped.\n\nThis PR improves this behavior. The transaction pool `report_invalid`\nfunction now accepts optional error associated with every reported\ntransaction, and also the optional block hash which provides hints how\nreported transaction shall be handled. The following API change is\nproposed:\n\nhttps://github.com/paritytech/polkadot-sdk/blob/8be5ef3e9a18e873de78aca1b8f834fa554ce9c8/substrate/client/transaction-pool/api/src/lib.rs#L297-L318\nDepending on error, the transaction pool can decide if transaction shall\nbe removed from the view only or entirely from the pool. Invalid event\nwill be dispatched if required.\n\n\n#### Notes for reviewers\n\n- Actual logic of removing invalid txs is implented in\n[`ViewStore::report_invalid`](https://github.com/paritytech/polkadot-sdk/blob/0fad26c43a65bfb371d667278981d3c68c3ce9d6/substrate/client/transaction-pool/src/fork_aware_txpool/view_store.rs#L657-L680).\nMethod's doc explains the flow.\n- This PR changes `HashMap` to `IndexMap` in revalidation logic. This is\nto preserve the original order of transactions (mainly for purposes of\nunit tests).\n- This PR solves the problem mentioned in:\nhttps://github.com/paritytech/polkadot-sdk/issues/5477#issuecomment-2598809344\n(which can now be resolved). The invalid transactions found during\nmempool revalidation are now also removed from the `view_store`. No\ndangling invalid transaction shall be left in the pool.\n(https://github.com/paritytech/polkadot-sdk/pull/6661/commits/bfec26253219044adaf6cdb3fff542c12460ed5a)\n- The support for dropping invalid transactions reported from the views\nwas also added. This should never happen, but if for any case all views\nwill report invalid transcation (which previously was valid) the\ntransaction will be dropped from the pool\n(https://github.com/paritytech/polkadot-sdk/pull/6661/commits/48214a381438f9b78653b8995bb4e62df9da504a).\n\n\n\nfixes: #6008, #5477\n\n---------\n\nCo-authored-by: command-bot <>\nCo-authored-by: Sebastian Kunert <skunert49@gmail.com>",
          "timestamp": "2025-02-14T17:30:00Z",
          "tree_id": "8ccc2e09a0dbdbbd524395d236277d529cfb92d2",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c94df1bc1be2203f5bc8aa960b0b46a44d97d120"
        },
        "date": 1739557665351,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18406043,
            "range": "± 269240",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18683430,
            "range": "± 362132",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19819192,
            "range": "± 173821",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23629859,
            "range": "± 180771",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 52954479,
            "range": "± 697995",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 313572805,
            "range": "± 4839105",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2354634189,
            "range": "± 91636148",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15109153,
            "range": "± 157560",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15348022,
            "range": "± 82590",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15673498,
            "range": "± 274287",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19827828,
            "range": "± 330207",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50394615,
            "range": "± 704193",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 305391118,
            "range": "± 2647281",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2450036256,
            "range": "± 13826679",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8779c606a44ce4b93f2c900b1cfffa877071be23",
          "message": "Bump the ci_dependencies group across 1 directory with 6 updates (#7555)\n\nBumps the ci_dependencies group with 6 updates in the / directory:\n\n| Package | From | To |\n| --- | --- | --- |\n|\n[lycheeverse/lychee-action](https://github.com/lycheeverse/lychee-action)\n| `2.1.0` | `2.3.0` |\n| [Swatinem/rust-cache](https://github.com/swatinem/rust-cache) |\n`2.7.5` | `2.7.7` |\n|\n[peter-evans/create-pull-request](https://github.com/peter-evans/create-pull-request)\n| `7.0.5` | `7.0.6` |\n|\n[docker/setup-buildx-action](https://github.com/docker/setup-buildx-action)\n| `3.7.1` | `3.9.0` |\n|\n[aws-actions/configure-aws-credentials](https://github.com/aws-actions/configure-aws-credentials)\n| `4.0.2` | `4.1.0` |\n|\n[actions/attest-build-provenance](https://github.com/actions/attest-build-provenance)\n| `1.4.3` | `2.2.0` |\n\n\nUpdates `lycheeverse/lychee-action` from 2.1.0 to 2.3.0\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a\nhref=\"https://github.com/lycheeverse/lychee-action/releases\">lycheeverse/lychee-action's\nreleases</a>.</em></p>\n<blockquote>\n<h2>Version 2.3.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>feat: support ARM workers by <a\nhref=\"https://github.com/LesnyRumcajs\"><code>@​LesnyRumcajs</code></a>\nin <a\nhref=\"https://redirect.github.com/lycheeverse/lychee-action/pull/273\">lycheeverse/lychee-action#273</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a\nhref=\"https://github.com/LesnyRumcajs\"><code>@​LesnyRumcajs</code></a>\nmade their first contribution in <a\nhref=\"https://redirect.github.com/lycheeverse/lychee-action/pull/273\">lycheeverse/lychee-action#273</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a\nhref=\"https://github.com/lycheeverse/lychee-action/compare/v2...v2.3.0\">https://github.com/lycheeverse/lychee-action/compare/v2...v2.3.0</a></p>\n<h2>Version 2.2.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Fix if expressions in GitHub actions by <a\nhref=\"https://github.com/YDX-2147483647\"><code>@​YDX-2147483647</code></a>\nin <a\nhref=\"https://redirect.github.com/lycheeverse/lychee-action/pull/265\">lycheeverse/lychee-action#265</a></li>\n<li>Update README.md to include continue-on-error: true in action by <a\nhref=\"https://github.com/psobolewskiPhD\"><code>@​psobolewskiPhD</code></a>\nin <a\nhref=\"https://redirect.github.com/lycheeverse/lychee-action/pull/267\">lycheeverse/lychee-action#267</a></li>\n<li>Bump default version to latest (0.18.0) by <a\nhref=\"https://github.com/trask\"><code>@​trask</code></a> in <a\nhref=\"https://redirect.github.com/lycheeverse/lychee-action/pull/269\">lycheeverse/lychee-action#269</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a\nhref=\"https://github.com/psobolewskiPhD\"><code>@​psobolewskiPhD</code></a>\nmade their first contribution in <a\nhref=\"https://redirect.github.com/lycheeverse/lychee-action/pull/267\">lycheeverse/lychee-action#267</a></li>\n<li><a href=\"https://github.com/trask\"><code>@​trask</code></a> made\ntheir first contribution in <a\nhref=\"https://redirect.github.com/lycheeverse/lychee-action/pull/269\">lycheeverse/lychee-action#269</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a\nhref=\"https://github.com/lycheeverse/lychee-action/compare/v2...v2.2.0\">https://github.com/lycheeverse/lychee-action/compare/v2...v2.2.0</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a\nhref=\"https://github.com/lycheeverse/lychee-action/commit/f613c4a64e50d792e0b31ec34bbcbba12263c6a6\"><code>f613c4a</code></a>\nfeat: support ARM workers (<a\nhref=\"https://redirect.github.com/lycheeverse/lychee-action/issues/273\">#273</a>)</li>\n<li><a\nhref=\"https://github.com/lycheeverse/lychee-action/commit/f796c8b7d468feb9b8c0a46da3fac0af6874d374\"><code>f796c8b</code></a>\nBump default version to latest (0.18.0) (<a\nhref=\"https://redirect.github.com/lycheeverse/lychee-action/issues/269\">#269</a>)</li>\n<li><a\nhref=\"https://github.com/lycheeverse/lychee-action/commit/4aa18b6ccdac05029fab067313a6a04f941e6494\"><code>4aa18b6</code></a>\nUpdate README.md to include continue-on-error: true in action (<a\nhref=\"https://redirect.github.com/lycheeverse/lychee-action/issues/267\">#267</a>)</li>\n<li><a\nhref=\"https://github.com/lycheeverse/lychee-action/commit/5cd5ba7877bce8b3973756ae3c9474ce1e50be2f\"><code>5cd5ba7</code></a>\nFix if expressions in GitHub actions (<a\nhref=\"https://redirect.github.com/lycheeverse/lychee-action/issues/265\">#265</a>)</li>\n<li>See full diff in <a\nhref=\"https://github.com/lycheeverse/lychee-action/compare/f81112d0d2814ded911bd23e3beaa9dda9093915...f613c4a64e50d792e0b31ec34bbcbba12263c6a6\">compare\nview</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `Swatinem/rust-cache` from 2.7.5 to 2.7.7\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a\nhref=\"https://github.com/swatinem/rust-cache/releases\">Swatinem/rust-cache's\nreleases</a>.</em></p>\n<blockquote>\n<h2>v2.7.7</h2>\n<p><strong>Full Changelog</strong>: <a\nhref=\"https://github.com/Swatinem/rust-cache/compare/v2.7.6...v2.7.7\">https://github.com/Swatinem/rust-cache/compare/v2.7.6...v2.7.7</a></p>\n<h2>v2.7.6</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Updated artifact upload action to v4 by <a\nhref=\"https://github.com/guylamar2006\"><code>@​guylamar2006</code></a>\nin <a\nhref=\"https://redirect.github.com/Swatinem/rust-cache/pull/212\">Swatinem/rust-cache#212</a></li>\n<li>Adds an option to do lookup-only of the cache by <a\nhref=\"https://github.com/danlec\"><code>@​danlec</code></a> in <a\nhref=\"https://redirect.github.com/Swatinem/rust-cache/pull/217\">Swatinem/rust-cache#217</a></li>\n<li>add runner OS in cache key by <a\nhref=\"https://github.com/rnbguy\"><code>@​rnbguy</code></a> in <a\nhref=\"https://redirect.github.com/Swatinem/rust-cache/pull/220\">Swatinem/rust-cache#220</a></li>\n<li>Allow opting out of caching $CARGO_HOME/bin. by <a\nhref=\"https://github.com/benjyw\"><code>@​benjyw</code></a> in <a\nhref=\"https://redirect.github.com/Swatinem/rust-cache/pull/216\">Swatinem/rust-cache#216</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a\nhref=\"https://github.com/guylamar2006\"><code>@​guylamar2006</code></a>\nmade their first contribution in <a\nhref=\"https://redirect.github.com/Swatinem/rust-cache/pull/212\">Swatinem/rust-cache#212</a></li>\n<li><a href=\"https://github.com/danlec\"><code>@​danlec</code></a> made\ntheir first contribution in <a\nhref=\"https://redirect.github.com/Swatinem/rust-cache/pull/217\">Swatinem/rust-cache#217</a></li>\n<li><a href=\"https://github.com/rnbguy\"><code>@​rnbguy</code></a> made\ntheir first contribution in <a\nhref=\"https://redirect.github.com/Swatinem/rust-cache/pull/220\">Swatinem/rust-cache#220</a></li>\n<li><a href=\"https://github.com/benjyw\"><code>@​benjyw</code></a> made\ntheir first contribution in <a\nhref=\"https://redirect.github.com/Swatinem/rust-cache/pull/216\">Swatinem/rust-cache#216</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a\nhref=\"https://github.com/Swatinem/rust-cache/compare/v2.7.5...v2.7.6\">https://github.com/Swatinem/rust-cache/compare/v2.7.5...v2.7.6</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a\nhref=\"https://github.com/Swatinem/rust-cache/commit/f0deed1e0edfc6a9be95417288c0e1099b1eeec3\"><code>f0deed1</code></a>\n2.7.7</li>\n<li><a\nhref=\"https://github.com/Swatinem/rust-cache/commit/008623fb834cadde1d7ccee1a26dc84acb660ec3\"><code>008623f</code></a>\nalso cache <code>cargo install</code> metadata</li>\n<li><a\nhref=\"https://github.com/Swatinem/rust-cache/commit/720f7e45ccee46c12a7b1d7bed2ab733be9be5a1\"><code>720f7e4</code></a>\n2.7.6</li>\n<li><a\nhref=\"https://github.com/Swatinem/rust-cache/commit/4b1f006ad2112a11d66969e219444096a98af937\"><code>4b1f006</code></a>\nupdate dependencies, in particular <code>@actions/cache</code></li>\n<li><a\nhref=\"https://github.com/Swatinem/rust-cache/commit/e8e63cdbf2788df3801e6f9a81516b2ca8391886\"><code>e8e63cd</code></a>\nAllow opting out of caching $CARGO_HOME/bin. (<a\nhref=\"https://redirect.github.com/swatinem/rust-cache/issues/216\">#216</a>)</li>\n<li><a\nhref=\"https://github.com/Swatinem/rust-cache/commit/9a2e0d32122f6883cb48fad7a1ac5c49f25b7661\"><code>9a2e0d3</code></a>\nadd runner OS in cache key (<a\nhref=\"https://redirect.github.com/swatinem/rust-cache/issues/220\">#220</a>)</li>\n<li><a\nhref=\"https://github.com/Swatinem/rust-cache/commit/c00f3025caeee0e9c78c18c43de11ab15fd3b486\"><code>c00f302</code></a>\nAdds an option to do lookup-only of the cache (<a\nhref=\"https://redirect.github.com/swatinem/rust-cache/issues/217\">#217</a>)</li>\n<li><a\nhref=\"https://github.com/Swatinem/rust-cache/commit/68b3cb7503c78e67dae8373749990a220eb65352\"><code>68b3cb7</code></a>\nUpdated artifact upload action to v4 (<a\nhref=\"https://redirect.github.com/swatinem/rust-cache/issues/212\">#212</a>)</li>\n<li>See full diff in <a\nhref=\"https://github.com/swatinem/rust-cache/compare/v2.7.5...f0deed1e0edfc6a9be95417288c0e1099b1eeec3\">compare\nview</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `peter-evans/create-pull-request` from 7.0.5 to 7.0.6\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a\nhref=\"https://github.com/peter-evans/create-pull-request/releases\">peter-evans/create-pull-request's\nreleases</a>.</em></p>\n<blockquote>\n<h2>Create Pull Request v7.0.6</h2>\n<p>⚙️ Fixes an issue with commit signing where unicode characters in\nfile paths were not preserved.</p>\n<h2>What's Changed</h2>\n<ul>\n<li>build(deps-dev): bump <code>@​vercel/ncc</code> from 0.38.1 to\n0.38.2 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3365\">peter-evans/create-pull-request#3365</a></li>\n<li>Update distribution by <a\nhref=\"https://github.com/actions-bot\"><code>@​actions-bot</code></a> in\n<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3370\">peter-evans/create-pull-request#3370</a></li>\n<li>build(deps): bump\n<code>@​octokit/plugin-rest-endpoint-methods</code> from 13.2.4 to\n13.2.5 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3375\">peter-evans/create-pull-request#3375</a></li>\n<li>build(deps-dev): bump <code>@​types/node</code> from 18.19.50 to\n18.19.54 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3376\">peter-evans/create-pull-request#3376</a></li>\n<li>build(deps): bump <code>@​octokit/plugin-paginate-rest</code> from\n11.3.3 to 11.3.5 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3377\">peter-evans/create-pull-request#3377</a></li>\n<li>Update distribution by <a\nhref=\"https://github.com/actions-bot\"><code>@​actions-bot</code></a> in\n<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3388\">peter-evans/create-pull-request#3388</a></li>\n<li>build(deps-dev): bump <code>@​types/node</code> from 18.19.54 to\n18.19.55 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3400\">peter-evans/create-pull-request#3400</a></li>\n<li>build(deps): bump <code>@​actions/core</code> from 1.10.1 to 1.11.1\nby <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a>\nin <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3401\">peter-evans/create-pull-request#3401</a></li>\n<li>build(deps): bump\n<code>@​octokit/plugin-rest-endpoint-methods</code> from 13.2.5 to\n13.2.6 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3403\">peter-evans/create-pull-request#3403</a></li>\n<li>build(deps-dev): bump eslint-plugin-import from 2.30.0 to 2.31.0 by\n<a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in\n<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3402\">peter-evans/create-pull-request#3402</a></li>\n<li>build(deps): bump <code>@​octokit/plugin-throttling</code> from\n9.3.1 to 9.3.2 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3404\">peter-evans/create-pull-request#3404</a></li>\n<li>Update distribution by <a\nhref=\"https://github.com/actions-bot\"><code>@​actions-bot</code></a> in\n<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3423\">peter-evans/create-pull-request#3423</a></li>\n<li>build(deps-dev): bump typescript from 5.6.2 to 5.6.3 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3441\">peter-evans/create-pull-request#3441</a></li>\n<li>build(deps): bump undici from 6.19.8 to 6.20.1 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3442\">peter-evans/create-pull-request#3442</a></li>\n<li>Update distribution by <a\nhref=\"https://github.com/actions-bot\"><code>@​actions-bot</code></a> in\n<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3451\">peter-evans/create-pull-request#3451</a></li>\n<li>build(deps-dev): bump <code>@​types/node</code> from 18.19.55 to\n18.19.58 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3457\">peter-evans/create-pull-request#3457</a></li>\n<li>build(deps-dev): bump <code>@​types/jest</code> from 29.5.13 to\n29.5.14 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3462\">peter-evans/create-pull-request#3462</a></li>\n<li>build(deps-dev): bump <code>@​types/node</code> from 18.19.58 to\n18.19.60 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3463\">peter-evans/create-pull-request#3463</a></li>\n<li>chore: don't bundle undici by <a\nhref=\"https://github.com/benmccann\"><code>@​benmccann</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3475\">peter-evans/create-pull-request#3475</a></li>\n<li>Update distribution by <a\nhref=\"https://github.com/actions-bot\"><code>@​actions-bot</code></a> in\n<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3478\">peter-evans/create-pull-request#3478</a></li>\n<li>chore: use node-fetch-native support for proxy env vars by <a\nhref=\"https://github.com/peter-evans\"><code>@​peter-evans</code></a> in\n<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3483\">peter-evans/create-pull-request#3483</a></li>\n<li>build(deps-dev): bump <code>@​types/node</code> from 18.19.60 to\n18.19.64 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3488\">peter-evans/create-pull-request#3488</a></li>\n<li>build(deps-dev): bump undici from 6.20.1 to 6.21.0 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3499\">peter-evans/create-pull-request#3499</a></li>\n<li>build(deps-dev): bump <code>@​vercel/ncc</code> from 0.38.2 to\n0.38.3 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3500\">peter-evans/create-pull-request#3500</a></li>\n<li>docs: note <code>push-to-repo</code> classic PAT\n<code>workflow</code> scope requirement by <a\nhref=\"https://github.com/scop\"><code>@​scop</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3511\">peter-evans/create-pull-request#3511</a></li>\n<li>docs: spelling fixes by <a\nhref=\"https://github.com/scop\"><code>@​scop</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3512\">peter-evans/create-pull-request#3512</a></li>\n<li>build(deps-dev): bump typescript from 5.6.3 to 5.7.2 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3516\">peter-evans/create-pull-request#3516</a></li>\n<li>build(deps-dev): bump prettier from 3.3.3 to 3.4.0 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3517\">peter-evans/create-pull-request#3517</a></li>\n<li>build(deps-dev): bump <code>@​types/node</code> from 18.19.64 to\n18.19.66 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3518\">peter-evans/create-pull-request#3518</a></li>\n<li>docs(README): clarify that an existing open PR is managed by <a\nhref=\"https://github.com/caugner\"><code>@​caugner</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3498\">peter-evans/create-pull-request#3498</a></li>\n<li>Update distribution by <a\nhref=\"https://github.com/actions-bot\"><code>@​actions-bot</code></a> in\n<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3529\">peter-evans/create-pull-request#3529</a></li>\n<li>build(deps): bump <code>@​octokit/plugin-paginate-rest</code> from\n11.3.5 to 11.3.6 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3542\">peter-evans/create-pull-request#3542</a></li>\n<li>build(deps-dev): bump <code>@​types/node</code> from 18.19.66 to\n18.19.67 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3543\">peter-evans/create-pull-request#3543</a></li>\n<li>build(deps-dev): bump prettier from 3.4.0 to 3.4.1 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3544\">peter-evans/create-pull-request#3544</a></li>\n<li>build(deps-dev): bump eslint-import-resolver-typescript from 3.6.3\nto 3.7.0 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3559\">peter-evans/create-pull-request#3559</a></li>\n<li>build(deps-dev): bump prettier from 3.4.1 to 3.4.2 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3560\">peter-evans/create-pull-request#3560</a></li>\n<li>build(deps-dev): bump <code>@​types/node</code> from 18.19.67 to\n18.19.68 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3570\">peter-evans/create-pull-request#3570</a></li>\n<li>build(deps): bump p-limit from 6.1.0 to 6.2.0 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3578\">peter-evans/create-pull-request#3578</a></li>\n<li>Update distribution by <a\nhref=\"https://github.com/actions-bot\"><code>@​actions-bot</code></a> in\n<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3583\">peter-evans/create-pull-request#3583</a></li>\n<li>fix: preserve unicode in filepaths when commit signing by <a\nhref=\"https://github.com/peter-evans\"><code>@​peter-evans</code></a> in\n<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3588\">peter-evans/create-pull-request#3588</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/benmccann\"><code>@​benmccann</code></a>\nmade their first contribution in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3475\">peter-evans/create-pull-request#3475</a></li>\n<li><a href=\"https://github.com/scop\"><code>@​scop</code></a> made their\nfirst contribution in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3511\">peter-evans/create-pull-request#3511</a></li>\n<li><a href=\"https://github.com/caugner\"><code>@​caugner</code></a> made\ntheir first contribution in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3498\">peter-evans/create-pull-request#3498</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a\nhref=\"https://github.com/peter-evans/create-pull-request/commit/67ccf781d68cd99b580ae25a5c18a1cc84ffff1f\"><code>67ccf78</code></a>\nfix: preserve unicode in filepaths when commit signing (<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/issues/3588\">#3588</a>)</li>\n<li><a\nhref=\"https://github.com/peter-evans/create-pull-request/commit/bb88e27d3f9cc69c8bc689eba126096c6fe3dded\"><code>bb88e27</code></a>\nbuild: update distribution (<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/issues/3583\">#3583</a>)</li>\n<li><a\nhref=\"https://github.com/peter-evans/create-pull-request/commit/b378ed537a3374cbb7642141277ace10488f9318\"><code>b378ed5</code></a>\nbuild(deps): bump p-limit from 6.1.0 to 6.2.0 (<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/issues/3578\">#3578</a>)</li>\n<li><a\nhref=\"https://github.com/peter-evans/create-pull-request/commit/fa9200e5b4f0d3fe4adc6d4a980fdb27ca333ed2\"><code>fa9200e</code></a>\nbuild(deps-dev): bump <code>@​types/node</code> from 18.19.67 to\n18.19.68 (<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/issues/3570\">#3570</a>)</li>\n<li><a\nhref=\"https://github.com/peter-evans/create-pull-request/commit/16e0059bfd236716f0191bfcfa63d9ded4cf325f\"><code>16e0059</code></a>\nbuild(deps-dev): bump prettier from 3.4.1 to 3.4.2 (<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/issues/3560\">#3560</a>)</li>\n<li><a\nhref=\"https://github.com/peter-evans/create-pull-request/commit/5bffd5ae80c9e3cdce3fdaba74ba437193643add\"><code>5bffd5a</code></a>\nbuild(deps-dev): bump eslint-import-resolver-typescript (<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/issues/3559\">#3559</a>)</li>\n<li><a\nhref=\"https://github.com/peter-evans/create-pull-request/commit/a22a0ddc2127a4161a9f144623d1e51be98d81aa\"><code>a22a0dd</code></a>\nbuild(deps-dev): bump prettier from 3.4.0 to 3.4.1 (<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/issues/3544\">#3544</a>)</li>\n<li><a\nhref=\"https://github.com/peter-evans/create-pull-request/commit/b27ce378c8a71596550fb729c05c9a998f8ff26f\"><code>b27ce37</code></a>\nbuild(deps-dev): bump <code>@​types/node</code> from 18.19.66 to\n18.19.67 (<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/issues/3543\">#3543</a>)</li>\n<li><a\nhref=\"https://github.com/peter-evans/create-pull-request/commit/4e0cc19e22f9071762b3542aa9fa90a1d682dd32\"><code>4e0cc19</code></a>\nbuild(deps): bump <code>@​octokit/plugin-paginate-rest</code> from\n11.3.5 to 11.3.6 (<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/issues/3542\">#3542</a>)</li>\n<li><a\nhref=\"https://github.com/peter-evans/create-pull-request/commit/25b6871a4ebe4c3585f47c7a687ac6fd0ec0e32d\"><code>25b6871</code></a>\ndocs: update scopes for push-to-fork</li>\n<li>Additional commits viewable in <a\nhref=\"https://github.com/peter-evans/create-pull-request/compare/5e914681df9dc83aa4e4905692ca88beb2f9e91f...67ccf781d68cd99b580ae25a5c18a1cc84ffff1f\">compare\nview</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `docker/setup-buildx-action` from 3.7.1 to 3.9.0\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a\nhref=\"https://github.com/docker/setup-buildx-action/releases\">docker/setup-buildx-action's\nreleases</a>.</em></p>\n<blockquote>\n<h2>v3.9.0</h2>\n<ul>\n<li>Bump <code>@​docker/actions-toolkit</code> from 0.48.0 to 0.54.0 in\n<a\nhref=\"https://redirect.github.com/docker/setup-buildx-action/pull/402\">docker/setup-buildx-action#402</a>\n<a\nhref=\"https://redirect.github.com/docker/setup-buildx-action/pull/404\">docker/setup-buildx-action#404</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a\nhref=\"https://github.com/docker/setup-buildx-action/compare/v3.8.0...v3.9.0\">https://github.com/docker/setup-buildx-action/compare/v3.8.0...v3.9.0</a></p>\n<h2>v3.8.0</h2>\n<ul>\n<li>Make cloud prefix optional to download buildx if driver is cloud by\n<a href=\"https://github.com/crazy-max\"><code>@​crazy-max</code></a> in\n<a\nhref=\"https://redirect.github.com/docker/setup-buildx-action/pull/390\">docker/setup-buildx-action#390</a></li>\n<li>Bump <code>@​actions/core</code> from 1.10.1 to 1.11.1 in <a\nhref=\"https://redirect.github.com/docker/setup-buildx-action/pull/370\">docker/setup-buildx-action#370</a></li>\n<li>Bump <code>@​docker/actions-toolkit</code> from 0.39.0 to 0.48.0 in\n<a\nhref=\"https://redirect.github.com/docker/setup-buildx-action/pull/389\">docker/setup-buildx-action#389</a></li>\n<li>Bump cross-spawn from 7.0.3 to 7.0.6 in <a\nhref=\"https://redirect.github.com/docker/setup-buildx-action/pull/382\">docker/setup-buildx-action#382</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a\nhref=\"https://github.com/docker/setup-buildx-action/compare/v3.7.1...v3.8.0\">https://github.com/docker/setup-buildx-action/compare/v3.7.1...v3.8.0</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a\nhref=\"https://github.com/docker/setup-buildx-action/commit/f7ce87c1d6bead3e36075b2ce75da1f6cc28aaca\"><code>f7ce87c</code></a>\nMerge pull request <a\nhref=\"https://redirect.github.com/docker/setup-buildx-action/issues/404\">#404</a>\nfrom docker/dependabot/npm_and_yarn/docker/actions-to...</li>\n<li><a\nhref=\"https://github.com/docker/setup-buildx-action/commit/aa1e2a0b496d6cd3474071c7b0ab0eea5948de3a\"><code>aa1e2a0</code></a>\nchore: update generated content</li>\n<li><a\nhref=\"https://github.com/docker/setup-buildx-action/commit/673e00877621ac201ca3084ec053b85e9b65063e\"><code>673e008</code></a>\nbuild(deps): bump <code>@​docker/actions-toolkit</code> from 0.53.0 to\n0.54.0</li>\n<li><a\nhref=\"https://github.com/docker/setup-buildx-action/commit/ba31df4664624f17e1b1ef1c9c85ed1ca9463a6d\"><code>ba31df4</code></a>\nMerge pull request <a\nhref=\"https://redirect.github.com/docker/setup-buildx-action/issues/402\">#402</a>\nfrom docker/dependabot/npm_and_yarn/docker/actions-to...</li>\n<li><a\nhref=\"https://github.com/docker/setup-buildx-action/commit/5475af18ec6f58d53e9452495e8db373e6dcb469\"><code>5475af1</code></a>\nchore: update generated content</li>\n<li><a\nhref=\"https://github.com/docker/setup-buildx-action/commit/acacad903e45f670c1e2d4638f4ee5f24b03e6b6\"><code>acacad9</code></a>\nbuild(deps): bump <code>@​docker/actions-toolkit</code> from 0.48.0 to\n0.53.0</li>\n<li><a\nhref=\"https://github.com/docker/setup-buildx-action/commit/6a25f988bdfa969e96a38fc9f843ea31e0b5df27\"><code>6a25f98</code></a>\nMerge pull request <a\nhref=\"https://redirect.github.com/docker/setup-buildx-action/issues/396\">#396</a>\nfrom crazy-max/bake-v6</li>\n<li><a\nhref=\"https://github.com/docker/setup-buildx-action/commit/ca1af179f5dc207dc723446d832eb3f77d3912dc\"><code>ca1af17</code></a>\nupdate bake-action to v6</li>\n<li><a\nhref=\"https://github.com/docker/setup-buildx-action/commit/6524bf65af31da8d45b59e8c27de4bd072b392f5\"><code>6524bf6</code></a>\nMerge pull request <a\nhref=\"https://redirect.github.com/docker/setup-buildx-action/issues/390\">#390</a>\nfrom crazy-max/buildx-cloud-latest</li>\n<li><a\nhref=\"https://github.com/docker/setup-buildx-action/commit/8d5e0747fc81adde3c75a11c4ab1cd6e831c45b5\"><code>8d5e074</code></a>\nchore: update generated content</li>\n<li>Additional commits viewable in <a\nhref=\"https://github.com/docker/setup-buildx-action/compare/c47758b77c9736f4b2ef4073d4d51994fabfe349...f7ce87c1d6bead3e36075b2ce75da1f6cc28aaca\">compare\nview</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `aws-actions/configure-aws-credentials` from 4.0.2 to 4.1.0\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/releases\">aws-actions/configure-aws-credentials's\nreleases</a>.</em></p>\n<blockquote>\n<h2>v4.1.0</h2>\n<h2><a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/compare/v4.0.3...v4.1.0\">4.1.0</a>\n(2025-02-08)</h2>\n<h3>Features</h3>\n<ul>\n<li>idempotent fetch (<a\nhref=\"https://redirect.github.com/aws-actions/configure-aws-credentials/issues/1289\">#1289</a>)\n(<a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/commit/eb70354fb423a380b6e4ab4b9f15d2ee9ffae911\">eb70354</a>)</li>\n</ul>\n<h3>Bug Fixes</h3>\n<ul>\n<li>build failure due to tests (<a\nhref=\"https://redirect.github.com/aws-actions/configure-aws-credentials/issues/1283\">#1283</a>)\n(<a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/commit/134d71efe0ecbe9ad6965f2f766c0cae63a7685f\">134d71e</a>)</li>\n<li>Dependabot autoapprove (<a\nhref=\"https://redirect.github.com/aws-actions/configure-aws-credentials/issues/1284\">#1284</a>)\n(<a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/commit/b9ee51dc600fe38c892e24f60ca26476e0e0b6de\">b9ee51d</a>)</li>\n<li>Dependabot autoapprove id-token write permission (<a\nhref=\"https://redirect.github.com/aws-actions/configure-aws-credentials/issues/1285\">#1285</a>)\n(<a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/commit/f0af89b102390dcf10ce402195d74a98f24861f3\">f0af89b</a>)</li>\n<li>typo (<a\nhref=\"https://redirect.github.com/aws-actions/configure-aws-credentials/issues/1281\">#1281</a>)\n(<a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/commit/39fd91c08ed8bf770034de4e62662503e8007d76\">39fd91c</a>)</li>\n</ul>\n<h2>v4.0.3</h2>\n<h2><a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/compare/v4.0.2...v4.0.3\">4.0.3</a>\n(2025-01-27)</h2>\n<h3>Features</h3>\n<ul>\n<li>added release-please action config (<a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/commit/0f88004d9c27e0bdbbc254b3f7c8053cb38f04d7\">0f88004</a>)</li>\n</ul>\n<h3>Bug Fixes</h3>\n<ul>\n<li>add id-token permission to automerge (<a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/commit/97834a484a5ab3c40fa9e2eb40fcf8041105a573\">97834a4</a>)</li>\n<li>cpy syntax on npm package (<a\nhref=\"https://redirect.github.com/aws-actions/configure-aws-credentials/issues/1195\">#1195</a>)\n(<a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/commit/83b5a565471214aec459e234bef606339fe07111\">83b5a56</a>)</li>\n<li>force push packaged files to main (<a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/commit/bfd218503eb87938c29603a551e19c6b594f5fe5\">bfd2185</a>)</li>\n</ul>\n<h3>Miscellaneous Chores</h3>\n<ul>\n<li>release 4.0.3 (<a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/commit/ca00fd4d3842ad58c3c21ebfe69defa1f0e7bdc4\">ca00fd4</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/blob/main/CHANGELOG.md\">aws-actions/configure-aws-credentials's\nchangelog</a>.</em></p>\n<blockquote>\n<h1>Changelog</h1>\n<p>All notable changes to this project will be documented in this file.\nSee <a\nhref=\"https://github.com/conventional-changelog/standard-version\">standard-version</a>\nfor commit guidelines.</p>\n<h2><a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/compare/v4.0.3...v4.1.0\">4.1.0</a>\n(2025-02-08)</h2>\n<h3>Features</h3>\n<ul>\n<li>idempotent fetch (<a\nhref=\"https://redirect.github.com/aws-actions/configure-aws-credentials/issues/1289\">#1289</a>)\n(<a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/commit/eb70354fb423a380b6e4ab4b9f15d2ee9ffae911\">eb70354</a>)</li>\n</ul>\n<h3>Bug Fixes</h3>\n<ul>\n<li>build failure due to tests (<a\nhref=\"https://redirect.github.com/aws-actions/configure-aws-credentials/issues/1283\">#1283</a>)\n(<a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/commit/134d71efe0ecbe9ad6965f2f766c0cae63a7685f\">134d71e</a>)</li>\n<li>Dependabot autoapprove (<a\nhref=\"https://redirect.github.com/aws-actions/configure-aws-credentials/issues/1284\">#1284</a>)\n(<a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/commit/b9ee51dc600fe38c892e24f60ca26476e0e0b6de\">b9ee51d</a>)</li>\n<li>Dependabot autoapprove id-token write permission (<a\nhref=\"https://redirect.github.com/aws-actions/configure-aws-credentials/issues/1285\">#1285</a>)\n(<a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/commit/f0af89b102390dcf10ce402195d74a98f24861f3\">f0af89b</a>)</li>\n<li>typo (<a\nhref=\"https://redirect.github.com/aws-actions/configure-aws-credentials/issues/1281\">#1281</a>)\n(<a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/commit/39fd91c08ed8bf770034de4e62662503e8007d76\">39fd91c</a>)</li>\n</ul>\n<h2><a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/compare/v4.0.2...v4.0.3\">4.0.3</a>\n(2025-01-27)</h2>\n<h3>Features</h3>\n<ul>\n<li>added release-please action config (<a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/commit/0f88004d9c27e0bdbbc254b3f7c8053cb38f04d7\">0f88004</a>)</li>\n</ul>\n<h3>Bug Fixes</h3>\n<ul>\n<li>add id-token permission to automerge (<a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/commit/97834a484a5ab3c40fa9e2eb40fcf8041105a573\">97834a4</a>)</li>\n<li>cpy syntax on npm package (<a\nhref=\"https://redirect.github.com/aws-actions/configure-aws-credentials/issues/1195\">#1195</a>)\n(<a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/commit/83b5a565471214aec459e234bef606339fe07111\">83b5a56</a>)</li>\n<li>force push packaged files to main (<a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/commit/bfd218503eb87938c29603a551e19c6b594f5fe5\">bfd2185</a>)</li>\n</ul>\n<h3>Miscellaneous Chores</h3>\n<ul>\n<li>release 4.0.3 (<a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/commit/ca00fd4d3842ad58c3c21ebfe69defa1f0e7bdc4\">ca00fd4</a>)</li>\n</ul>\n<h2><a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/compare/v4.0.1...v4.0.2\">4.0.2</a>\n(2024-02-09)</h2>\n<ul>\n<li>Revert 4.0.1 to remove warning</li>\n</ul>\n<h2><a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/compare/v4.0.0...v4.0.1\">4.0.1</a>\n(2023-10-03)</h2>\n<h3>Documentation</h3>\n<ul>\n<li>Throw a warning when customers use long-term credentials.</li>\n</ul>\n<h2><a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/compare/v3.0.2...v4.0.0\">4.0.0</a>\n(2023-09-11)</h2>\n<ul>\n<li>Upgraded runtime to <code>node20</code> from\n<code>node16</code></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/commit/ececac1a45f3b08a01d2dd070d28d111c5fe6722\"><code>ececac1</code></a>\nchore(main): release 4.1.0 (<a\nhref=\"https://redirect.github.com/aws-actions/configure-aws-credentials/issues/1282\">#1282</a>)</li>\n<li><a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/commit/16fec6080fdb89d4b237dee411b7bf8f3658ec97\"><code>16fec60</code></a>\nchore: Update dist</li>\n<li><a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/commit/eb70354fb423a380b6e4ab4b9f15d2ee9ffae911\"><code>eb70354</code></a>\nfeat: idempotent fetch (<a\nhref=\"https://redirect.github.com/aws-actions/configure-aws-credentials/issues/1289\">#1289</a>)</li>\n<li><a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/commit/3478c15aa1cf2543c22efcbbd3e483d49c3a31d7\"><code>3478c15</code></a>\nchore(deps-dev): bump memfs from 4.14.0 to 4.17.0 (<a\nhref=\"https://redirect.github.com/aws-actions/configure-aws-credentials/issues/1250\">#1250</a>)</li>\n<li><a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/commit/a69d38c39d4e4ef6ebd2825ae1bf38948c4a63fa\"><code>a69d38c</code></a>\nchore: Update dist</li>\n<li><a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/commit/6b1d0f829dbf80f581d095620da2a3d26e7f3b81\"><code>6b1d0f8</code></a>\nchore(deps-dev): bump <code>@​smithy/property-provider</code> from 3.1.8\nto 4.0.1 (<a\nhref=\"https://redirect.github.com/aws-actions/configure-aws-credentials/issues/1246\">#1246</a>)</li>\n<li><a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/commit/f021516513c128da882cdc5b42712935bb1f89fc\"><code>f021516</code></a>\nchore: remove role session name</li>\n<li><a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/commit/1c8dbbcc0280c0f2662d0842550c5c63ef1572a4\"><code>1c8dbbc</code></a>\nchore(deps-dev): bump <code>@​vercel/ncc</code> from 0.38.2 to 0.38.3\n(<a\nhref=\"https://redirect.github.com/aws-actions/configure-aws-credentials/issues/1204\">#1204</a>)</li>\n<li><a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/commit/ce290d67fea24eb4c156f6207fa1d18c8ff6c891\"><code>ce290d6</code></a>\nchore: change dependabot role session name</li>\n<li><a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/commit/1780ebd97bfd07ffbef8765880395a9bfed87d09\"><code>1780ebd</code></a>\nchore: create one-off test for CAWSC</li>\n<li>Additional commits viewable in <a\nhref=\"https://github.com/aws-actions/configure-aws-credentials/compare/e3dd6a429d7300a6a4c196c26e071d42e0343502...ececac1a45f3b08a01d2dd070d28d111c5fe6722\">compare\nview</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `actions/attest-build-provenance` from 1.4.3 to 2.2.0\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a\nhref=\"https://github.com/actions/attest-build-provenance/releases\">actions/attest-build-provenance's\nreleases</a>.</em></p>\n<blockquote>\n<h2>v2.2.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Bump actions/attest from v2.1.0 to v2.2.0 by <a\nhref=\"https://github.com/bdehamer\"><code>@​bdehamer</code></a> in <a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/pull/449\">actions/attest-build-provenance#449</a>\n<ul>\n<li>Includes support for now <code>subject-checksums</code> input\nparameter</li>\n</ul>\n</li>\n</ul>\n<p><strong>Full Changelog</strong>: <a\nhref=\"https://github.com/actions/attest-build-provenance/compare/v2.1.0...v2.2.0\">https://github.com/actions/attest-build-provenance/compare/v2.1.0...v2.2.0</a></p>\n<h2>v2.1.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Update README w/ note about GH plans supporting attestations by <a\nhref=\"https://github.com/bdehamer\"><code>@​bdehamer</code></a> in <a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/pull/414\">actions/attest-build-provenance#414</a></li>\n<li>Add <code>attestation-id</code> and <code>attestation-url</code>\noutputs by <a\nhref=\"https://github.com/bdehamer\"><code>@​bdehamer</code></a> in <a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/pull/415\">actions/attest-build-provenance#415</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a\nhref=\"https://github.com/actions/attest-build-provenance/compare/v2.0.1...v2.1.0\">https://github.com/actions/attest-build-provenance/compare/v2.0.1...v2.1.0</a></p>\n<h2>v2.0.1</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Bump actions/attest from 2.0.0 to 2.0.1 by <a\nhref=\"https://github.com/bdehamer\"><code>@​bdehamer</code></a> in <a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/pull/406\">actions/attest-build-provenance#406</a>\n<ul>\n<li>Deduplicate subjects before adding to in-toto statement</li>\n</ul>\n</li>\n</ul>\n<p><strong>Full Changelog</strong>: <a\nhref=\"https://github.com/actions/attest-build-provenance/compare/v2.0.0...v2.0.1\">https://github.com/actions/attest-build-provenance/compare/v2.0.0...v2.0.1</a></p>\n<h2>v2.0.0</h2>\n<p>The <code>attest-build-provenance</code> action now supports\nattesting multiple subjects simultaneously. When identifying multiple\nsubjects with the <code>subject-path</code> input a single attestation\nis created with references to each of the supplied subjects, rather than\ngenerating separate attestations for each artifact. This reduces the\nnumber of attestations that you need to create and manage.</p>\n<h2>What's Changed</h2>\n<ul>\n<li>Bump cross-spawn from 7.0.3 to 7.0.6 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/pull/319\">actions/attest-build-provenance#319</a></li>\n<li>Prepare v2.0.0 release by <a\nhref=\"https://github.com/bdehamer\"><code>@​bdehamer</code></a> in <a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/pull/321\">actions/attest-build-provenance#321</a>\n<ul>\n<li>Bump <code>actions/attest</code> from 1.4.1 to 2.0.0 (w/\nmulti-subject attestation support)</li>\n</ul>\n</li>\n</ul>\n<p><strong>Full Changelog</strong>: <a\nhref=\"https://github.com/actions/attest-build-provenance/compare/v1.4.4...v2.0.0\">https://github.com/actions/attest-build-provenance/compare/v1.4.4...v2.0.0</a></p>\n<h2>v1.4.4</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Bump predicate action from 1.1.3 to 1.1.4 by <a\nhref=\"https://github.com/bdehamer\"><code>@​bdehamer</code></a> in <a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/pull/310\">actions/attest-build-provenance#310</a>\n<ul>\n<li>Bump <code>@​actions/core</code> from 1.10.1 to 1.11.1 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/pull/275\">actions/attest-build-provenance#275</a></li>\n<li>Bump <code>@​actions/attest</code> from 1.4.2 to 1.5.0 by <a\nhref=\"https://github.com/bdehamer\"><code>@​bdehamer</code></a> in <a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/pull/309\">actions/attest-build-provenance#309</a>\n<ul>\n<li>Fix SLSA provenance bug related to <code>workflow_ref</code> OIDC\ntoken claims containing the &quot;@&quot; symbol in the tag name (<a\nhref=\"https://redirect.github.com/actions/toolkit/pull/1863\">actions/toolkit#1863</a>)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>Full Changelog</strong>: <a\nhref=\"https://github.com/actions/attest-build-provenance/compare/v1.4.3...v1.4.4\">https://github.com/actions/attest-build-provenance/compare/v1.4.3...v1.4.4</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a\nhref=\"https://github.com/actions/attest-build-provenance/commit/520d128f165991a6c774bcb264f323e3d70747f4\"><code>520d128</code></a>\nbump actions/attest from v2.1.0 to v2.2.0 (<a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/issues/449\">#449</a>)</li>\n<li><a\nhref=\"https://github.com/actions/attest-build-provenance/commit/5d2ced98e37711f730ee81bf4f290e59f429cea9\"><code>5d2ced9</code></a>\nAdd example of upload-artifaction integration (<a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/issues/450\">#450</a>)</li>\n<li><a\nhref=\"https://github.com/actions/attest-build-provenance/commit/3c016c14be1000a987f5724861e76009e48945d1\"><code>3c016c1</code></a>\nbump actions/attest from v2.1.0 to v2.2.0 (<a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/issues/449\">#449</a>)</li>\n<li><a\nhref=\"https://github.com/actions/attest-build-provenance/commit/e06bbafba962e6346493c5fd57cfcfe0873b0474\"><code>e06bbaf</code></a>\nBump the npm-development group with 3 updates (<a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/issues/447\">#447</a>)</li>\n<li><a\nhref=\"https://github.com/actions/attest-build-provenance/commit/47c6e87ba15264d457c4b3aeeaca0aa4ef36cfc8\"><code>47c6e87</code></a>\nBump the npm-development group with 4 updates (<a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/issues/444\">#444</a>)</li>\n<li><a\nhref=\"https://github.com/actions/attest-build-provenance/commit/c083b467494a647632714fee9685ca81f12ca4d6\"><code>c083b46</code></a>\nBump the npm-development group with 2 updates (<a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/issues/438\">#438</a>)</li>\n<li><a\nhref=\"https://github.com/actions/attest-build-provenance/commit/1b4b366241fcfed280d0cc0db3d44132575a6a87\"><code>1b4b366</code></a>\nBump typescript-eslint in the npm-development group (<a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/issues/434\">#434</a>)</li>\n<li><a\nhref=\"https://github.com/actions/attest-build-provenance/commit/963f8a02f24ac90336362e63ca6730cf69ad102e\"><code>963f8a0</code></a>\nBump the npm-development group with 2 updates (<a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/issues/429\">#429</a>)</li>\n<li><a\nhref=\"https://github.com/actions/attest-build-provenance/commit/4ecada3c132a6497cc654fcac5c8644da6815ca6\"><code>4ecada3</code></a>\nBump the npm-development group across 1 directory with 3 updates (<a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/issues/422\">#422</a>)</li>\n<li><a\nhref=\"https://github.com/actions/attest-build-provenance/commit/f4b7552a127d7acf1bef22d5bc9f315117aebfcd\"><code>f4b7552</code></a>\nbump eslint from 8.57.1 to 9.16.0 (<a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/issues/418\">#418</a>)</li>\n<li>Additional commits viewable in <a\nhref=\"https://github.com/actions/attest-build-provenance/compare/v1.4.3...520d128f165991a6c774bcb264f323e3d70747f4\">compare\nview</a></li>\n</ul>\n</details>\n<br />\n\n\nDependabot will resolve any conflicts with this PR as long as you don't\nalter it yourself. You can also trigger a rebase manually by commenting\n`@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits\nthat have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after\nyour CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge\nand block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating\nit. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all\nof the ignore conditions of the specified dependency\n- `@dependabot ignore <dependency name> major version` will close this\ngroup update PR and stop Dependabot creating any more for the specific\ndependency's major version (unless you unignore this specific\ndependency's major version or upgrade to it yourself)\n- `@dependabot ignore <dependency name> minor version` will close this\ngroup update PR and stop Dependabot creating any more for the specific\ndependency's minor version (unless you unignore this specific\ndependency's minor version or upgrade to it yourself)\n- `@dependabot ignore <dependency name>` will close this group update PR\nand stop Dependabot creating any more for the specific dependency\n(unless you unignore this specific dependency or upgrade to it yourself)\n- `@dependabot unignore <dependency name>` will remove all of the ignore\nconditions of the specified dependency\n- `@dependabot unignore <dependency name> <ignore condition>` will\nremove the ignore condition of the specified dependency and ignore\nconditions\n\n\n</details>\n\nSigned-off-by: dependabot[bot] <support@github.com>\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
          "timestamp": "2025-02-14T17:59:16Z",
          "tree_id": "e101977371525922363acc15ae7489a52252200b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/8779c606a44ce4b93f2c900b1cfffa877071be23"
        },
        "date": 1739559197150,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17750979,
            "range": "± 166090",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17906627,
            "range": "± 81569",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19499197,
            "range": "± 71190",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22831998,
            "range": "± 229532",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51672180,
            "range": "± 707724",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 291240375,
            "range": "± 2225754",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2456218448,
            "range": "± 105587663",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14435943,
            "range": "± 141646",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14517998,
            "range": "± 80528",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14903597,
            "range": "± 161508",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18859041,
            "range": "± 159704",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 48473451,
            "range": "± 532064",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 284802016,
            "range": "± 2189933",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2337006516,
            "range": "± 17148681",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alexandre.balde@parity.io",
            "name": "Alexandre R. Baldé",
            "username": "rockbmb"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c1915afc48e8bd89fe2c44d6813a6e8b96013c29",
          "message": "Add minor improvements to `chill_other` test (#7553)\n\n# Description\n\nhttps://github.com/open-web3-stack/polkadot-ecosystem-tests/pull/174\nshowed the test for the `pallet_staking::chill_other` extrinsic could be\nmore exhaustive.\n\nThis PR adds those checks, and also a few more to another test related\nto `chill_other`,\n`pallet_staking::tests::change_of_absolute_max_nominations`.\n\n## Integration\n\nN/A\n\n## Review Notes\n\nN/A\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-02-14T20:23:50Z",
          "tree_id": "e466f9789e42817101d501e97c882910994cdc83",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c1915afc48e8bd89fe2c44d6813a6e8b96013c29"
        },
        "date": 1739567735907,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17723303,
            "range": "± 121044",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18015789,
            "range": "± 80574",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19374208,
            "range": "± 133968",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23214376,
            "range": "± 489628",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 52192218,
            "range": "± 2618663",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 289896785,
            "range": "± 4430164",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2301341297,
            "range": "± 82912440",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14273937,
            "range": "± 145198",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14247944,
            "range": "± 599070",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14758162,
            "range": "± 77441",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18659659,
            "range": "± 151975",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 48747562,
            "range": "± 664653",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 282841583,
            "range": "± 2243260",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2359074238,
            "range": "± 10410759",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "5588131+kianenigma@users.noreply.github.com",
            "name": "Kian Paimani",
            "username": "kianenigma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a025562b65f71dab8c2a16e027ba6efe4972818a",
          "message": "[AHM] Multi-block staking election pallet (#7282)\n\n## Multi Block Election Pallet\n\nThis PR adds the first iteration of the multi-block staking pallet. \n\nFrom this point onwards, the staking and its election provider pallets\nare being customized to work in AssetHub. While usage in solo-chains is\nstill possible, it is not longer the main focus of this pallet. For a\nsafer usage, please fork and user an older version of this pallet.\n\n---\n\n## Replaces\n\n- [x] https://github.com/paritytech/polkadot-sdk/pull/6034 \n- [x] https://github.com/paritytech/polkadot-sdk/pull/5272\n\n## Related PRs: \n\n- [x] https://github.com/paritytech/polkadot-sdk/pull/7483\n- [ ] https://github.com/paritytech/polkadot-sdk/pull/7357\n- [ ] https://github.com/paritytech/polkadot-sdk/pull/7424\n- [ ] https://github.com/paritytech/polkadot-staking-miner/pull/955\n\nThis branch can be periodically merged into\nhttps://github.com/paritytech/polkadot-sdk/pull/7358 ->\nhttps://github.com/paritytech/polkadot-sdk/pull/6996\n\n## TODOs: \n\n- [x] rebase to master \n- Benchmarking for staking critical path\n  - [x] snapshot\n  - [x] election result\n- Benchmarking for EPMB critical path\n  - [x] snapshot\n  - [x] verification\n  - [x] submission\n  - [x] unsigned submission\n  - [ ] election results fetching\n- [ ] Fix deletion weights. Either of\n  - [ ] Garbage collector + lazy removal of all paged storage items\n  - [ ] Confirm that deletion is small PoV footprint.\n- [ ] Move election prediction to be push based. @tdimitrov \n- [ ] integrity checks for bounds \n- [ ] Properly benchmark this as a part of CI -- for now I will remove\nthem as they are too slow\n- [x] add try-state to all pallets\n- [x] Staking to allow genesis dev accounts to be created internally\n- [x] Decouple miner config so @niklasad1 can work on the miner\n72841b731727e69db38f9bd616190aa8d50a56ba\n- [x] duplicate snapshot page reported by @niklasad1 \n- [ ] https://github.com/paritytech/polkadot-sdk/pull/6520 or equivalent\n-- during snapshot, `VoterList` must be locked\n- [ ] Move target snapshot to a separate block\n\n---------\n\nCo-authored-by: Gonçalo Pestana <g6pestana@gmail.com>\nCo-authored-by: Ankan <10196091+Ank4n@users.noreply.github.com>\nCo-authored-by: command-bot <>\nCo-authored-by: Guillaume Thiolliere <gui.thiolliere@gmail.com>\nCo-authored-by: Giuseppe Re <giuseppe.re@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-02-14T23:47:22Z",
          "tree_id": "e232f7cf4a9ef6b2814baa6e1328e4d6ceb810c3",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/a025562b65f71dab8c2a16e027ba6efe4972818a"
        },
        "date": 1739579721535,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17821944,
            "range": "± 86318",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18022056,
            "range": "± 89432",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19566622,
            "range": "± 304360",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23396634,
            "range": "± 734809",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53092672,
            "range": "± 643234",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 315359675,
            "range": "± 5022660",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2620828556,
            "range": "± 40253294",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14752468,
            "range": "± 160619",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14790340,
            "range": "± 113950",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15263427,
            "range": "± 130030",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19506079,
            "range": "± 165985",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50851699,
            "range": "± 500419",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 299031493,
            "range": "± 4526577",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2433377366,
            "range": "± 12623735",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "jose@blockdeep.io",
            "name": "José Molina Colmenero",
            "username": "Moliholy"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c578318b8f764f62e9a94fd343b79953f7129154",
          "message": "Add chain properties to chain-spec-builder (#7368)\n\nThis PR adds support for chain properties to `chain-spec-builder`. Now\nproperties can be specified as such:\n\n```sh\n$ chain-spec-builder create -r $RUNTIME_PATH --properties tokenSymbol=DUMMY,tokenDecimals=6,isEthereum=false\n```\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: Michal Kucharczyk <1728078+michalkucharczyk@users.noreply.github.com>",
          "timestamp": "2025-02-15T11:08:44Z",
          "tree_id": "4c1c8de3985a5c662c6ebec375c3598e6c2af8ac",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c578318b8f764f62e9a94fd343b79953f7129154"
        },
        "date": 1739620718805,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19415262,
            "range": "± 297329",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20053306,
            "range": "± 392720",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21429247,
            "range": "± 480586",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 27183393,
            "range": "± 1493314",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59271700,
            "range": "± 2442568",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 408040430,
            "range": "± 12776997",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2814187794,
            "range": "± 191217924",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14931048,
            "range": "± 243967",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15999354,
            "range": "± 116774",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16667934,
            "range": "± 341939",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21546754,
            "range": "± 355150",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 58655301,
            "range": "± 1534453",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 364371079,
            "range": "± 8874271",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2817511276,
            "range": "± 40804941",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "73991674+Nathy-bajo@users.noreply.github.com",
            "name": "Nathaniel Bajo",
            "username": "Nathy-bajo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "54deef92f86a16d413f98a6f68418d11c8142a25",
          "message": "Documentation update for weight. #7354 (#7376)\n\nresolves #7354\n\nPolkadot address: 121HJWZtD13GJQPD82oEj3gSeHqsRYm1mFgRALu4L96kfPD1\n\n---------\n\nCo-authored-by: Guillaume Thiolliere <guillaume.thiolliere@parity.io>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-02-15T12:48:15Z",
          "tree_id": "3de10e9a8fc43a6f814d3dea927f1f17952982a8",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/54deef92f86a16d413f98a6f68418d11c8142a25"
        },
        "date": 1739628863687,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17551905,
            "range": "± 230468",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18002798,
            "range": "± 116089",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19422880,
            "range": "± 180708",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23349319,
            "range": "± 241356",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53228189,
            "range": "± 1081260",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 330090509,
            "range": "± 3584776",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2468690475,
            "range": "± 99564322",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14513703,
            "range": "± 140482",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14673841,
            "range": "± 95257",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15130071,
            "range": "± 142490",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19723517,
            "range": "± 246803",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50762679,
            "range": "± 581112",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 293777376,
            "range": "± 4096333",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2419910079,
            "range": "± 13146306",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0f2024f5f33acc54d90fe209289d0195c8af9a70",
          "message": "Bump enumflags2 from 0.7.7 to 0.7.11 (#7426)\n\nBumps [enumflags2](https://github.com/meithecatte/enumflags2) from 0.7.7\nto 0.7.11.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a\nhref=\"https://github.com/meithecatte/enumflags2/releases\">enumflags2's\nreleases</a>.</em></p>\n<blockquote>\n<h2>Release 0.7.10</h2>\n<ul>\n<li>Fix a case where the <code>#[bitflags]</code> macro would access the\ncrate through <code>enumflags2::...</code> instead of\n<code>::enumflags2::...</code>. This makes the generated code more\nrobust and avoids triggering the <code>unused_qualifications</code>\nlint. (<a\nhref=\"https://redirect.github.com/meithecatte/enumflags2/issues/58\">#58</a>)</li>\n<li>Rework the proc-macro to use <code>syn</code> with the\n<code>derive</code> feature (as opposed to <code>full</code>). This\nreduces the <code>cargo build</code> time for <code>enumflags2</code> by\nabout 20%.</li>\n</ul>\n<h2>Release 0.7.9</h2>\n<ul>\n<li>The <code>BitFlag</code> trait now includes convenience re-exports\nfor the constructors of <code>BitFlags</code>. This lets you do\n<code>MyFlag::from_bits</code> instead\n<code>BitFlags::&lt;MyFlag&gt;::from_bits</code> where the type of the\nflag cannot be inferred from context (thanks <a\nhref=\"https://github.com/ronnodas\"><code>@​ronnodas</code></a>).</li>\n<li>The documentation now calls out the fact that the implementation of\n<code>PartialOrd</code> may not be what you expect (reported by <a\nhref=\"https://github.com/ronnodas\"><code>@​ronnodas</code></a>).</li>\n</ul>\n<h2>Release 0.7.8</h2>\n<ul>\n<li>New API: <code>BitFlags::set</code>. Sets the value of a specific\nflag to that of the <code>bool</code> passed as argument. (thanks, <a\nhref=\"https://github.com/m4dh0rs3\"><code>@​m4dh0rs3</code></a>)</li>\n<li><code>BitFlags</code> now implements <code>PartialOrd</code> and\n<code>Ord</code>, to make it possible to use it as a key in a\n<code>BTreeMap</code>.</li>\n<li>The bounds on the implementation of <code>Hash</code> got improved,\nso that it is possible to use it in code generic over <code>T:\nBitFlag</code>.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a\nhref=\"https://github.com/meithecatte/enumflags2/commit/cc09d89bc4ef20fbf4c8016a40e160fe47b2d042\"><code>cc09d89</code></a>\nRelease 0.7.11</li>\n<li><a\nhref=\"https://github.com/meithecatte/enumflags2/commit/24f03afbd0c23adaf0873a941600bd0b3b7ba302\"><code>24f03af</code></a>\nmake_bitflags: Allow omitting { } for singular flags</li>\n<li><a\nhref=\"https://github.com/meithecatte/enumflags2/commit/754a8de723c54c79b2a8ab6993adc59b478273b0\"><code>754a8de</code></a>\nExpand some aspects of the documentation</li>\n<li><a\nhref=\"https://github.com/meithecatte/enumflags2/commit/aec9558136a53a952f39b74a4a0688a31423b815\"><code>aec9558</code></a>\nUpdate ui tests for latest nightly</li>\n<li><a\nhref=\"https://github.com/meithecatte/enumflags2/commit/8205d5ba03ccc9ccb7407693440f8e47f8ceeeb4\"><code>8205d5b</code></a>\nRelease 0.7.10</li>\n<li><a\nhref=\"https://github.com/meithecatte/enumflags2/commit/1c78f097165436d043f48b9f6183501f84ff965f\"><code>1c78f09</code></a>\nRun clippy with only the declared syn features</li>\n<li><a\nhref=\"https://github.com/meithecatte/enumflags2/commit/561fe5eaf7ba6daeb267a41343f6def2a8b86ad7\"><code>561fe5e</code></a>\nEmit a proper error if bitflags enum is generic</li>\n<li><a\nhref=\"https://github.com/meithecatte/enumflags2/commit/f3bb174beb27a1d1ef28dcf03fb607a3bb7c6e55\"><code>f3bb174</code></a>\nAvoid depending on syn's <code>full</code> feature flag</li>\n<li><a\nhref=\"https://github.com/meithecatte/enumflags2/commit/e01808be0f151ac251121833d3225debd253ca3a\"><code>e01808b</code></a>\nAlways use absolute paths in generated proc macro code</li>\n<li><a\nhref=\"https://github.com/meithecatte/enumflags2/commit/f08cd33a18511608f4a881e53c4f4c1b951301e0\"><code>f08cd33</code></a>\nSpecify the Rust edition for the whole test package</li>\n<li>Additional commits viewable in <a\nhref=\"https://github.com/meithecatte/enumflags2/compare/v0.7.7...v0.7.11\">compare\nview</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility\nscore](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=enumflags2&package-manager=cargo&previous-version=0.7.7&new-version=0.7.11)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't\nalter it yourself. You can also trigger a rebase manually by commenting\n`@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits\nthat have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after\nyour CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge\nand block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating\nit. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all\nof the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop\nDependabot creating any more for this major version (unless you reopen\nthe PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop\nDependabot creating any more for this minor version (unless you reopen\nthe PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop\nDependabot creating any more for this dependency (unless you reopen the\nPR or upgrade to it yourself)\n\n\n</details>\n\nSigned-off-by: dependabot[bot] <support@github.com>\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-02-16T01:30:29Z",
          "tree_id": "6b36c37a53521f7ab1ba91044916764e13370e4d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/0f2024f5f33acc54d90fe209289d0195c8af9a70"
        },
        "date": 1739672822718,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18318802,
            "range": "± 182693",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18479077,
            "range": "± 154310",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20260062,
            "range": "± 237922",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23959746,
            "range": "± 200761",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54529269,
            "range": "± 837494",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 344108228,
            "range": "± 16224669",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2646116600,
            "range": "± 83214326",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15172854,
            "range": "± 170732",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14975298,
            "range": "± 206369",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15506905,
            "range": "± 136434",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19493968,
            "range": "± 248752",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51280472,
            "range": "± 919637",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 307572765,
            "range": "± 4508291",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2494232123,
            "range": "± 17938312",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "fedelia.cj@gmail.com",
            "name": "rainb0w-pr0mise",
            "username": "rainb0w-pr0mise"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ead8fbdfa727b707f988147dc1b92b9d46a92ce5",
          "message": "`pallet-utility: if_else` (#6321)\n\n# Utility Call Fallback\n\nThis introduces a new extrinsic: **`if_else`**\n\nWhich first attempts to dispatch the `main` call(s). If the `main`\ncall(s) fail, the `fallback` call(s) is dispatched instead. Both calls\nare executed with the same origin.\n\nIn the event of a fallback failure the whole call fails with the weights\nreturned.\n\n## Use Case\nSome use cases might involve submitting a `batch` type call in either\nmain, fallback or both.\n\nResolves #6000\n\nPolkadot Address: 1HbdqutFR8M535LpbLFT41w3j7v9ptEYGEJKmc6PKpqthZ8\n\n---------\n\nCo-authored-by: rainbow-promise <154476501+rainbow-promise@users.noreply.github.com>\nCo-authored-by: Guillaume Thiolliere <gui.thiolliere@gmail.com>\nCo-authored-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>",
          "timestamp": "2025-02-17T02:36:13Z",
          "tree_id": "37d789f1d5ff2dc93d3df79ac99d60e00054297e",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ead8fbdfa727b707f988147dc1b92b9d46a92ce5"
        },
        "date": 1739762728364,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18928396,
            "range": "± 288930",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19349950,
            "range": "± 221022",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20927520,
            "range": "± 133633",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25621123,
            "range": "± 240592",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 63229316,
            "range": "± 675777",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 370348783,
            "range": "± 5314566",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2477401536,
            "range": "± 252365187",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15532530,
            "range": "± 153839",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15575664,
            "range": "± 125925",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16301426,
            "range": "± 177311",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20832265,
            "range": "± 162584",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 55869816,
            "range": "± 1373054",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 345771403,
            "range": "± 7553315",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2684395339,
            "range": "± 10876058",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "hola@pablodorado.com",
            "name": "Pablo Andrés Dorado Suárez",
            "username": "pandres95"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "83db0474f4df9988b01c6125a49cc59aa1b90939",
          "message": "[Assets] Implement `pallet-assets-holder` (#4530)\n\nCloses #4315\n\n---------\n\nCo-authored-by: Guillaume Thiolliere <guillaume.thiolliere@parity.io>",
          "timestamp": "2025-02-17T03:51:31Z",
          "tree_id": "dff27a9cbe49e97bbc5536ece11c373c851206fa",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/83db0474f4df9988b01c6125a49cc59aa1b90939"
        },
        "date": 1739767648656,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19918645,
            "range": "± 222024",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20386516,
            "range": "± 127542",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21857736,
            "range": "± 304126",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25523087,
            "range": "± 245962",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59971269,
            "range": "± 1617722",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 395657556,
            "range": "± 7806780",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2856180132,
            "range": "± 130086321",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16065114,
            "range": "± 126638",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16210493,
            "range": "± 216630",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16629874,
            "range": "± 125471",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21965678,
            "range": "± 394633",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 56864703,
            "range": "± 946375",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 375498945,
            "range": "± 6953332",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2683309672,
            "range": "± 30937992",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8cca727fbda68b9d8678573ab1ade0c3d6c9f104",
          "message": "[pallet-revive] rpc add --earliest-receipt-block (#7589)\n\nAdd a cli option to skip searching receipts for blocks older than the\nspecified limit\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-02-17T11:25:02Z",
          "tree_id": "fee5fde1bd6253bed22bd8441c1f7acf3cb8e4a0",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/8cca727fbda68b9d8678573ab1ade0c3d6c9f104"
        },
        "date": 1739795803508,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17466453,
            "range": "± 134748",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17838624,
            "range": "± 95872",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19137231,
            "range": "± 191247",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22543583,
            "range": "± 251572",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51064037,
            "range": "± 433969",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 297922801,
            "range": "± 1946358",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2410482343,
            "range": "± 57037666",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14076682,
            "range": "± 64924",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14230628,
            "range": "± 92917",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14703105,
            "range": "± 81637",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18522638,
            "range": "± 171009",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 47864424,
            "range": "± 259090",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 281737581,
            "range": "± 1277124",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2292368482,
            "range": "± 14585018",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "daniel@olanod.com",
            "name": "Daniel Olano",
            "username": "olanod"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c078d2f41cf8ecd28ff5279fcebb22da418a14b9",
          "message": "Change pallet referenda TracksInfo::tracks to return an iterator (#2072)\n\nReturning an iterator in `TracksInfo::tracks()` instead of a static\nslice allows for more flexible implementations of `TracksInfo` that can\nuse the chain storage without compromising a lot on the\nperformance/memory penalty if we were to return an owned `Vec` instead.\n\n---------\n\nCo-authored-by: Pablo Andrés Dorado Suárez <hola@pablodorado.com>",
          "timestamp": "2025-02-17T12:18:01Z",
          "tree_id": "3d28fc6fe791ad9e1007ba5083be3815f513318b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c078d2f41cf8ecd28ff5279fcebb22da418a14b9"
        },
        "date": 1739797878272,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17762006,
            "range": "± 155612",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18007453,
            "range": "± 195796",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19615023,
            "range": "± 317750",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23540016,
            "range": "± 324084",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55213964,
            "range": "± 947430",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 315474215,
            "range": "± 4948437",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2580512379,
            "range": "± 138523381",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14631214,
            "range": "± 133350",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14860182,
            "range": "± 186684",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15242219,
            "range": "± 171248",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19899268,
            "range": "± 220356",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50805305,
            "range": "± 699134",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 295791948,
            "range": "± 2891333",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2413979339,
            "range": "± 22728373",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "oliver.tale-yazdi@parity.io",
            "name": "Oliver Tale-Yazdi",
            "username": "ggwpez"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ca91d4b58c7af8c88f47c27ccac742d9d9f5c8a7",
          "message": "[AHM] Make pallet types public (#7579)\n\nPreparation for AHM and making stuff public.\n\n---------\n\nSigned-off-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Dónal Murray <donal.murray@parity.io>",
          "timestamp": "2025-02-17T14:27:14Z",
          "tree_id": "10fcd07c64098d39323121073c4fea7a9c248503",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ca91d4b58c7af8c88f47c27ccac742d9d9f5c8a7"
        },
        "date": 1739805645455,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18555970,
            "range": "± 126410",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18825057,
            "range": "± 151115",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20232268,
            "range": "± 134398",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23956893,
            "range": "± 184097",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 52873789,
            "range": "± 807619",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 323412574,
            "range": "± 8520912",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2444211926,
            "range": "± 148037234",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15132020,
            "range": "± 153776",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14990855,
            "range": "± 142442",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15403912,
            "range": "± 75852",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19755444,
            "range": "± 131441",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51397986,
            "range": "± 522773",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 309282396,
            "range": "± 2651472",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2455602211,
            "range": "± 7651424",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "60601340+lexnv@users.noreply.github.com",
            "name": "Alexandru Vasile",
            "username": "lexnv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "09d3754319cf67aea22595823ffbcb65b7b09165",
          "message": "libp2p: Enhance logging targets for granular control  (#7494)\n\nThis PR modifies the libp2p networking-specific log targets for granular\ncontrol (e.g., just enabling trace for req-resp).\n\nPreviously, all logs were outputted to `sub-libp2p` target, flooding the\nlog messages on busy validators.\n\n### Changes\n- Discover: `sub-libp2p::discovery`\n- Notification/behaviour: `sub-libp2p::notification::behaviour`\n- Notification/handler: `sub-libp2p::notification::handler`\n- Notification/service: `sub-libp2p::notification::service`\n- Notification/upgrade: `sub-libp2p::notification::upgrade`\n- Request response: `sub-libp2p::request-response`\n\ncc @paritytech/networking\n\n---------\n\nSigned-off-by: Alexandru Vasile <alexandru.vasile@parity.io>\nCo-authored-by: Dmitry Markin <dmitry@markin.tech>",
          "timestamp": "2025-02-17T15:27:14Z",
          "tree_id": "e8e50c2b988b76b07636b5f257112287bda76739",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/09d3754319cf67aea22595823ffbcb65b7b09165"
        },
        "date": 1739810081693,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18868194,
            "range": "± 196413",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19059094,
            "range": "± 163414",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20872169,
            "range": "± 224415",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24182334,
            "range": "± 338652",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57270049,
            "range": "± 1087066",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 371412590,
            "range": "± 6237006",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2499215856,
            "range": "± 126433353",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15218427,
            "range": "± 149966",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15222311,
            "range": "± 165870",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15651647,
            "range": "± 123401",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19939832,
            "range": "± 160038",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51678753,
            "range": "± 743588",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 323506705,
            "range": "± 3698218",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2555161726,
            "range": "± 23144084",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "adrian@parity.io",
            "name": "Adrian Catangiu",
            "username": "acatangiu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "430a016ced42fa9658a9b95cca7ef7af8458e007",
          "message": "integration tests: add more emulated bridge tests (#7576)\n\nAdd emulated e2e tests for following scenarios:\n\nExporting native asset to another ecosystem:\n- Sending WNDs from Penpal Westend to Penpal Rococo: PPW->AHW->AHR->PPR\n- Sending WNDs from Westend Relay to Penpal Rococo: W->AHW->AHR->PPR\n   Example: Westend Treasury funds something on Rococo Parachain.\n\nImporting native asset from another ecosystem to its native ecosystem:\n- Sending ROCs from Penpal Westend to Penpal Rococo: PPW->AHW->AHR->PPR\n- Sending ROCs from Penpal Westend to Rococo Relay: PPW->AHW->AHR->R\n   Example: Westend Parachain returns some funds to Rococo Treasury.\n\nSigned-off-by: Adrian Catangiu <adrian@parity.io>",
          "timestamp": "2025-02-17T17:09:31Z",
          "tree_id": "2d06cfe92cd79c034ef623ed7dd95161afa33b97",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/430a016ced42fa9658a9b95cca7ef7af8458e007"
        },
        "date": 1739815226247,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 20120619,
            "range": "± 184484",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20474900,
            "range": "± 199115",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22344716,
            "range": "± 173642",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26667805,
            "range": "± 833614",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 64715315,
            "range": "± 963445",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 407187909,
            "range": "± 6469955",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2828813340,
            "range": "± 182479346",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16262383,
            "range": "± 259361",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16116984,
            "range": "± 175517",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16900401,
            "range": "± 212387",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21560887,
            "range": "± 449700",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 57878770,
            "range": "± 1372184",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 390448081,
            "range": "± 10759645",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2817555452,
            "range": "± 25233744",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "nikola.djoric@parity.io",
            "name": "nprt",
            "username": "nprt"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d61032b977b18cc962cdb23e7a3df7386e503e09",
          "message": "implement web3_clientVersion (#7580)\n\nImplements the `web3_clientVersion` method. This is a common requirement\nfor external Ethereum libraries when querying a client.\n\nFixes paritytech/contract-issues#26.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-02-17T17:50:46Z",
          "tree_id": "26d38d57645767a30e5bae619bb71290ee780d15",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d61032b977b18cc962cdb23e7a3df7386e503e09"
        },
        "date": 1739817869781,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 21051769,
            "range": "± 889929",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 22672621,
            "range": "± 1010006",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 23384514,
            "range": "± 292820",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 28686931,
            "range": "± 1077770",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 69876841,
            "range": "± 1939583",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 419778338,
            "range": "± 18285944",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2952614730,
            "range": "± 71477564",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16526479,
            "range": "± 366328",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16740444,
            "range": "± 408626",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17279006,
            "range": "± 288389",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22126467,
            "range": "± 813993",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 60413513,
            "range": "± 1540944",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 389355463,
            "range": "± 9046930",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2924856578,
            "range": "± 54128266",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "10196091+Ank4n@users.noreply.github.com",
            "name": "Ankan",
            "username": "Ank4n"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dda2cb5969985ccbf67581e18eb7c579849e27bb",
          "message": "[Staking] Bounded Slashing: Paginated Offence Processing & Slash Application (#7424)\n\ncloses https://github.com/paritytech/polkadot-sdk/issues/3610.\n\nhelps https://github.com/paritytech/polkadot-sdk/issues/6344, but need\nto migrate storage `Offences::Reports` before we can remove exposure\ndependency in RC pallets.\n\nreplaces https://github.com/paritytech/polkadot-sdk/issues/6788.\n\n## Context  \nSlashing in staking is unbounded currently, which is a major blocker\nuntil staking can move to a parachain (AH).\n\n### Current Slashing Process (Unbounded)  \n\n1. **Offence Reported**  \n- Offences include multiple validators, each with potentially large\nexposure pages.\n- Slashes are **computed immediately** and scheduled for application\nafter **28 eras**.\n\n2. **Slash Applied**  \n- All unapplied slashes are executed in **one block** at the start of\nthe **28th era**. This is an **unbounded operation**.\n\n\n### Proposed Slashing Process (Bounded)  \n\n1. **Offence Queueing**  \n   - Offences are **queued** after basic sanity checks.  \n\n2. **Paged Offence Processing (Computing Slash)**  \n   - Slashes are **computed one validator exposure page at a time**.  \n   - **Unapplied slashes** are stored in a **double map**:  \n     - **Key 1 (k1):** `EraIndex`  \n- **Key 2 (k2):** `(Validator, SlashFraction, PageIndex)` — a unique\nidentifier for each slash page\n\n3. **Paged Slash Application**  \n- Slashes are **applied one page at a time** across multiple blocks.\n- Slash application starts at the **27th era** (one era earlier than\nbefore) to ensure all slashes are applied **before stakers can unbond**\n(which starts from era 28 onwards).\n\n---\n\n## Worst-Case Block Calculation for Slash Application  \n\n### Polkadot:  \n- **1 era = 24 hours**, **1 block = 6s** → **14,400 blocks/era**  \n- On parachains (**12s blocks**) → **7,200 blocks/era**  \n\n### Kusama:  \n- **1 era = 6 hours**, **1 block = 6s** → **3,600 blocks/era**  \n- On parachains (**12s blocks**) → **1,800 blocks/era**  \n\n### Worst-Case Assumptions:  \n- **Total stakers:** 40,000 nominators, 1000 validators. (Polkadot\ncurrently has ~23k nominators and 500 validators)\n- **Max slashed:** 50% so 20k nominators, 250 validators.  \n- **Page size:** Validators with multiple page: (512 + 1)/2 = 256 ,\nValidators with single page: 1\n\n### Calculation:  \nThere might be a more accurate way to calculate this worst-case number,\nand this estimate could be significantly higher than necessary, but it\nshouldn’t exceed this value.\n\nBlocks needed: 250 + 20k/256 = ~330 blocks.\n\n##  *Potential Improvement:*  \n- Consider adding an **Offchain Worker (OCW)** task to further optimize\nslash application in future updates.\n- Dynamically batch unapplied slashes based on number of nominators in\nthe page, or process until reserved weight limit is exhausted.\n\n----\n## Summary of Changes  \n\n### Storage  \n- **New:**  \n  - `OffenceQueue` *(StorageDoubleMap)*  \n    - **K1:** Era  \n    - **K2:** Offending validator account  \n    - **V:** `OffenceRecord`  \n  - `OffenceQueueEras` *(StorageValue)*  \n    - **V:** `BoundedVec<EraIndex, BoundingDuration>`  \n  - `ProcessingOffence` *(StorageValue)*  \n    - **V:** `(Era, offending validator account, OffenceRecord)`  \n\n- **Changed:**  \n  - `UnappliedSlashes`:  \n    - **Old:** `StorageMap<K -> Era, V -> Vec<UnappliedSlash>>`  \n- **New:** `StorageDoubleMap<K1 -> Era, K2 -> (validator_acc, perbill,\npage_index), V -> UnappliedSlash>`\n\n### Events  \n- **New:**  \n  - `SlashComputed { offence_era, slash_era, offender, page }`  \n  - `SlashCancelled { slash_era, slash_key, payout }`  \n\n### Error  \n- **Changed:**  \n  - `InvalidSlashIndex` → Renamed to `InvalidSlashRecord`  \n- **Removed:**  \n  - `NotSortedAndUnique`  \n- **Added:**  \n  - `EraNotStarted`  \n\n### Call  \n- **Changed:**  \n  - `cancel_deferred_slash(era, slash_indices: Vec<u32>)`  \n    → Now takes `Vec<(validator_acc, slash_fraction, page_index)>`  \n- **New:**  \n- `apply_slash(slash_era, slash_key: (validator_acc, slash_fraction,\npage_index))`\n\n### Runtime Config  \n- `FullIdentification` is now set to a unit type (`()`) / null identity,\nreplacing the previous exposure type for all runtimes using\n`pallet_session::historical`.\n\n## TODO\n- [x] Fixed broken `CancelDeferredSlashes`.\n- [x] Ensure on_offence called only with validator account for\nidentification everywhere.\n- [ ] Ensure we never need to read full exposure.\n- [x] Tests for multi block processing and application of slash.\n- [x] Migrate UnappliedSlashes \n- [x] Bench (crude, needs proper bench as followup)\n  - [x] on_offence()\n  - [x] process_offence()\n  - [x] apply_slash()\n \n \n## Followups (tracker\n[link](https://github.com/paritytech/polkadot-sdk/issues/7596))\n- [ ] OCW task to process offence + apply slashes.\n- [ ] Minimum time for governance to cancel deferred slash.\n- [ ] Allow root or staking admin to add a custom slash.\n- [ ] Test HistoricalSession proof works fine with eras before removing\nexposure as full identity.\n- [ ] Properly bench offence processing and slashing.\n- [ ] Handle Offences::Reports migration when removing validator\nexposure as identity.\n\n---------\n\nCo-authored-by: Gonçalo Pestana <g6pestana@gmail.com>\nCo-authored-by: command-bot <>\nCo-authored-by: Kian Paimani <5588131+kianenigma@users.noreply.github.com>\nCo-authored-by: Guillaume Thiolliere <gui.thiolliere@gmail.com>\nCo-authored-by: kianenigma <kian@parity.io>\nCo-authored-by: Giuseppe Re <giuseppe.re@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-02-17T23:07:09Z",
          "tree_id": "5efd5751e1737e0a7baed1e1acf129543a30f847",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/dda2cb5969985ccbf67581e18eb7c579849e27bb"
        },
        "date": 1739836768681,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18198527,
            "range": "± 167560",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18667269,
            "range": "± 247412",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20111131,
            "range": "± 115105",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24218832,
            "range": "± 476167",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55119859,
            "range": "± 813104",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 333778876,
            "range": "± 10321552",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2616691972,
            "range": "± 76786918",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14766822,
            "range": "± 150174",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14953658,
            "range": "± 100602",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15506332,
            "range": "± 85627",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19715246,
            "range": "± 422178",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50958768,
            "range": "± 1159096",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 316321158,
            "range": "± 4561296",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2475695231,
            "range": "± 16280920",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "10196091+Ank4n@users.noreply.github.com",
            "name": "Ankan",
            "username": "Ank4n"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "43ea306f6307dff908551cb91099ef6268502ee0",
          "message": "[AHM] Moves disabling logic into pallet-session (#7581)\n\ncloses https://github.com/paritytech/polkadot-sdk/issues/6508.\n\n## TODO\n- [x] Migrate storage `DisabledValidators` both in pallet-session and\npallet-staking.\n- [ ] Test that disabled validator resets at era change.\n- [ ] Add always sorted try-runtime test for `DisabledValidators`.\n- [ ] More test coverage for the disabling logic.\n\n---------\n\nCo-authored-by: Gonçalo Pestana <g6pestana@gmail.com>\nCo-authored-by: command-bot <>\nCo-authored-by: Kian Paimani <5588131+kianenigma@users.noreply.github.com>\nCo-authored-by: Guillaume Thiolliere <gui.thiolliere@gmail.com>\nCo-authored-by: kianenigma <kian@parity.io>\nCo-authored-by: Giuseppe Re <giuseppe.re@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-02-18T03:25:52Z",
          "tree_id": "ed5e254fe70d039f7ef437ac47a431dbf59763d1",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/43ea306f6307dff908551cb91099ef6268502ee0"
        },
        "date": 1739853174814,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18307229,
            "range": "± 239769",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18816970,
            "range": "± 209206",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20561667,
            "range": "± 191858",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24153666,
            "range": "± 345192",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 58910880,
            "range": "± 737202",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 362877619,
            "range": "± 4981129",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2803964386,
            "range": "± 230100345",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15231786,
            "range": "± 166820",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15382594,
            "range": "± 201163",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15817679,
            "range": "± 153025",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20565721,
            "range": "± 134562",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54504108,
            "range": "± 786524",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 327820430,
            "range": "± 4071570",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2577493121,
            "range": "± 23052575",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "gui.thiolliere@gmail.com",
            "name": "Guillaume Thiolliere",
            "username": "gui1117"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b6512be748e3dbf26d5ef56020b40bdb4772b1ab",
          "message": "Make all prdoc valid and add CI job to check prdoc with `prdoc check` (#7543)\n\nSome prdoc are invalid, `prdoc check` is failing for them. This also\nbroke usage of parity-publish.\n\nThis PR fixes the invalid prdoc, and add a ci job to check the prdoc are\nvalid. I don't think the check is unstable considering it is a simple\nyaml check, so I put the job as required.\n\n---------\n\nCo-authored-by: Alexander Samusev <41779041+alvicsam@users.noreply.github.com>",
          "timestamp": "2025-02-18T07:31:13Z",
          "tree_id": "9f755e7d479183da859e585388215f6e01dd5189",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/b6512be748e3dbf26d5ef56020b40bdb4772b1ab"
        },
        "date": 1739866905811,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 20856845,
            "range": "± 296099",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 21231460,
            "range": "± 666109",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 23574952,
            "range": "± 918800",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 27838315,
            "range": "± 740359",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 66538420,
            "range": "± 1861525",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 420985195,
            "range": "± 7478652",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2615098786,
            "range": "± 40552206",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17157069,
            "range": "± 297052",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17402123,
            "range": "± 313006",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17755278,
            "range": "± 391735",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22597692,
            "range": "± 614552",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 62619554,
            "range": "± 1744851",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 387211898,
            "range": "± 7017821",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2976592651,
            "range": "± 66115766",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "69342343+MrishoLukamba@users.noreply.github.com",
            "name": "Mrisho Lukamba",
            "username": "MrishoLukamba"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6a20c882bf3552c4c2c4ed1993ae52f8dc33a0c3",
          "message": "feat(integration test) test omni node dev mod work with dev_json file (#7511)\n\nCloses #7452 \n\nAdds new test for omni node on dev mode working correctly with\ndev_chain_spec.json\n\n@skunert\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-02-18T10:00:19Z",
          "tree_id": "3ced79ac588a8b9b1d514785da83bc411c1bfdab",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/6a20c882bf3552c4c2c4ed1993ae52f8dc33a0c3"
        },
        "date": 1739877268592,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 21121552,
            "range": "± 430590",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 22370614,
            "range": "± 519738",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 23605927,
            "range": "± 438785",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 28564220,
            "range": "± 636260",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 65188456,
            "range": "± 3399472",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 417219426,
            "range": "± 9215997",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2692192154,
            "range": "± 131483467",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16383645,
            "range": "± 405390",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17649645,
            "range": "± 353472",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18439765,
            "range": "± 597403",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23402818,
            "range": "± 1374955",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 60946102,
            "range": "± 1485590",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 405858315,
            "range": "± 6027179",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2879924870,
            "range": "± 104588332",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "fd72d58313c297a10600037ce1bb88ec958d722e",
          "message": "[pallet-revive] move exec tests (#7590)\n\nMoving exec tests into a new file\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>",
          "timestamp": "2025-02-18T10:40:15Z",
          "tree_id": "78cf5e093fb14a983806f031555e9656cb1a0ade",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/fd72d58313c297a10600037ce1bb88ec958d722e"
        },
        "date": 1739879355085,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18537770,
            "range": "± 206832",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18771817,
            "range": "± 268722",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21123429,
            "range": "± 233351",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25203639,
            "range": "± 386282",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57068698,
            "range": "± 1072404",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 369688887,
            "range": "± 6551531",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2644069253,
            "range": "± 20335165",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15157543,
            "range": "± 152584",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15540185,
            "range": "± 274462",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15912136,
            "range": "± 166935",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20164938,
            "range": "± 281490",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53594097,
            "range": "± 764017",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 336802603,
            "range": "± 5468713",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2558187819,
            "range": "± 24136082",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "egor@parity.io",
            "name": "Egor_P",
            "username": "EgorPopelyaev"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "413616788014b4539cb3b039dbffc29267fb6f3c",
          "message": "[Release/CI|CD] Fix for the branch-off pipeline (#7608)\n\nThis PR contains a tiny fix for the release branch-off pipeline, so that\nnode version bump works again.",
          "timestamp": "2025-02-18T16:54:37Z",
          "tree_id": "835fe0ed64c4f72cd7d6e2cceb6c9e0006a1ccbe",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/413616788014b4539cb3b039dbffc29267fb6f3c"
        },
        "date": 1739902436149,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19229227,
            "range": "± 486931",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19602038,
            "range": "± 157591",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21386332,
            "range": "± 239337",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25315705,
            "range": "± 222186",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56568256,
            "range": "± 826894",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 347496620,
            "range": "± 4867595",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2566208712,
            "range": "± 41835437",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15418206,
            "range": "± 297920",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15304646,
            "range": "± 95280",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15731196,
            "range": "± 185777",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20768081,
            "range": "± 325462",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54022462,
            "range": "± 1852341",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 324941296,
            "range": "± 3174791",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2545157219,
            "range": "± 23806799",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1728078+michalkucharczyk@users.noreply.github.com",
            "name": "Michal Kucharczyk",
            "username": "michalkucharczyk"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5f6c8e8fd20f19de0b592ef2413e934e97c9bc68",
          "message": "HashAndNumber: Ord, Eq, PartialOrd, PartialEq implemented (#7612)\n\nThis PR adds implementation of `Ord, Eq, PartialOrd, PartialEq` traits\nfor [`HashAndNumber`\n](https://github.com/paritytech/polkadot-sdk/blob/6e645915639ee0bf682de06a0306a4baf712c1d2/substrate/primitives/blockchain/src/header_metadata.rs#L149-L154)\nstruct.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-02-18T17:44:51Z",
          "tree_id": "ed2d391838a25109d392ea414cf46fd2c5e1a181",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/5f6c8e8fd20f19de0b592ef2413e934e97c9bc68"
        },
        "date": 1739903708200,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17886262,
            "range": "± 155500",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18289838,
            "range": "± 135059",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19818882,
            "range": "± 196693",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23105346,
            "range": "± 176856",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 52761916,
            "range": "± 1016726",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 338912259,
            "range": "± 9298488",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2625883546,
            "range": "± 131079634",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14422111,
            "range": "± 227305",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14308649,
            "range": "± 100160",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14947381,
            "range": "± 224813",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19576597,
            "range": "± 502767",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50114961,
            "range": "± 577201",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 297388436,
            "range": "± 5206169",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2415782459,
            "range": "± 17014196",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "hrishav@parity.io",
            "name": "castillax",
            "username": "castillax"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a48b38942f8910aeaee1fdaa7794d0416291ca4b",
          "message": "Add note for organization contributors about creating branches directly (#7611)\n\n# Description\n\n* This PR adds a note to the CONTRIBUTING.md file to inform contributors\nwho are part of the organization that they do not need to fork the\nrepository. Instead, they can create a branch directly in the repository\nto send a pull request.\n\n## Changes\n\nAdded a note under the \"What?\" section in CONTRIBUTING.md to clarify\nthat organization contributors can create branches directly in the\nrepository.",
          "timestamp": "2025-02-19T11:41:56Z",
          "tree_id": "686d343baa24fee7ca5369532fa3dbf0e015e899",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/a48b38942f8910aeaee1fdaa7794d0416291ca4b"
        },
        "date": 1739968802763,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19137830,
            "range": "± 179144",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19818001,
            "range": "± 184535",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21421468,
            "range": "± 190655",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25431505,
            "range": "± 367566",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57031091,
            "range": "± 1171155",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 388758336,
            "range": "± 4614170",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2699575876,
            "range": "± 34993521",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15532884,
            "range": "± 143597",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15330796,
            "range": "± 123866",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15934874,
            "range": "± 314162",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20004601,
            "range": "± 156245",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51587735,
            "range": "± 616430",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 331754779,
            "range": "± 4946774",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2558211680,
            "range": "± 22244363",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "serban@parity.io",
            "name": "Serban Iorga",
            "username": "serban300"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0c258c662d2d2117063455f2807d986c2cbd7de5",
          "message": "Derive `DecodeWithMemTracking` for bridge and xcm pallets (#7620)\n\nJust deriving `DecodeWithMemTracking` for the types used by the bridge,\nsnowbridge and xcm pallets",
          "timestamp": "2025-02-19T12:34:52Z",
          "tree_id": "4dfeff8b8b249ace581fc662b8aacad88aadfc1e",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/0c258c662d2d2117063455f2807d986c2cbd7de5"
        },
        "date": 1739972046807,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18008220,
            "range": "± 123367",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18305452,
            "range": "± 163682",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19602234,
            "range": "± 216080",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23557507,
            "range": "± 235081",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54081465,
            "range": "± 1083662",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 336798594,
            "range": "± 2940064",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2290929453,
            "range": "± 187758123",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14591025,
            "range": "± 181525",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14856752,
            "range": "± 122418",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15365593,
            "range": "± 107115",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20121210,
            "range": "± 317042",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50730952,
            "range": "± 621709",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 306295794,
            "range": "± 2692871",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2475929147,
            "range": "± 19234717",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1728078+michalkucharczyk@users.noreply.github.com",
            "name": "Michal Kucharczyk",
            "username": "michalkucharczyk"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8507e70f1a72cae2a4aecd6c377c197b2fbe7005",
          "message": "`fatxpool`: event streams moved to view domain (#7545)\n\n#### Overview\n\nThis pull request refactors the transaction pool `graph` module by\nrenaming components for better clarity. The `EventHandler` trait was\nintroduced to enhance flexibility in handling transaction lifecycle\nevents. Changes include renaming `graph::Listener` to\n`graph::EventDispatcher` and moving certain functionalities from `graph`\nto `view` module in order to decouple `graph` from `view`-related\nspecifics.\n\nThis PR does not introduce changes in the logic.\n\n#### Notes for Reviewers\nAll the changes looks dense at first, but in fact following was done:\n- The `graph::Listener` was renamed to\n[`graph::EventDispatcher`](https://github.com/paritytech/polkadot-sdk/blob/515cb4042d097581ed6b4195e57b04494e385a17/substrate/client/transaction-pool/src/graph/listener.rs#L74C12-L74C27),\nto better reflect its role in dispatching transaction-related events\nfrom `ValidatedPool`. The `EventDispatcher` now utilizes the `L:\nEventHandler` generic type to handle transaction status events.\n- The new\n[`EventHandler`](https://github.com/paritytech/polkadot-sdk/blob/515cb4042d097581ed6b4195e57b04494e385a17/substrate/client/transaction-pool/src/graph/listener.rs#L34)\ntrait was introduced to handle transaction lifecycle events, improving\nimplementation flexibility and providing clearer role descriptions\nwithin the system. Introduction of this trait allowed the removal of\n`View` related entities (e.g. streams) from the `ValidatedPool`'s event\ndispatcher (previously _listener_).\n- The _dropped monitoring_ and _aggregated events_ stream\n[functionalities](https://github.com/paritytech/polkadot-sdk/blob/515cb4042d097581ed6b4195e57b04494e385a17/substrate/client/transaction-pool/src/fork_aware_txpool/view.rs#L157-L188)\nand [related\ntypes](https://github.com/paritytech/polkadot-sdk/blob/515cb4042d097581ed6b4195e57b04494e385a17/substrate/client/transaction-pool/src/fork_aware_txpool/view.rs#L112-L121)\nwere moved from `graph::listener` to the `view` module. The\n[`ViewPoolObserver`](https://github.com/paritytech/polkadot-sdk/blob/515cb4042d097581ed6b4195e57b04494e385a17/substrate/client/transaction-pool/src/fork_aware_txpool/view.rs#L128C19-L128C35),\nwhich implements `EventHandler`, now provides the implementation of\nstreams feeding.\n- Fields, arguments, and variables previously named `listener` were\nrenamed to `event_dispatcher` to align with their purpose and type\nnaming.\n- Various structs such as `Pool` and `ValidatedPool` were updated to\ninclude a generic `L: EventHandler` across the codebase.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Iulian Barbu <14218860+iulianbarbu@users.noreply.github.com>",
          "timestamp": "2025-02-19T15:03:30Z",
          "tree_id": "6f80971806f7a7583d408ecbf4b09fc1b5317db8",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/8507e70f1a72cae2a4aecd6c377c197b2fbe7005"
        },
        "date": 1739981071522,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17951949,
            "range": "± 138177",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18178901,
            "range": "± 270773",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19869358,
            "range": "± 140643",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23729534,
            "range": "± 256352",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54797912,
            "range": "± 838528",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 360484179,
            "range": "± 5881010",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2675637376,
            "range": "± 71303516",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15140611,
            "range": "± 104158",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15339546,
            "range": "± 130800",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16122797,
            "range": "± 190390",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19994825,
            "range": "± 110477",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50231432,
            "range": "± 658647",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 303027920,
            "range": "± 3567544",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2447847511,
            "range": "± 28801346",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41779041+alvicsam@users.noreply.github.com",
            "name": "Alexander Samusev",
            "username": "alvicsam"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ecca5826937e3b2b1e6f3988b006890e088aac2d",
          "message": "ci: change gcs bucket for forklift (#7621)\n\ncc https://github.com/paritytech/ci_cd/issues/1095",
          "timestamp": "2025-02-19T17:03:11Z",
          "tree_id": "90c94215226f367b707048728a66dc63cb03659b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ecca5826937e3b2b1e6f3988b006890e088aac2d"
        },
        "date": 1739990787309,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17789515,
            "range": "± 230903",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18430606,
            "range": "± 195889",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19772651,
            "range": "± 210360",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23773167,
            "range": "± 287637",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55936363,
            "range": "± 1251390",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 339452731,
            "range": "± 4605790",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2778433550,
            "range": "± 88139407",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14749695,
            "range": "± 205718",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14856366,
            "range": "± 145414",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15398342,
            "range": "± 121644",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19722876,
            "range": "± 300047",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50853456,
            "range": "± 710569",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 309951685,
            "range": "± 5471822",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2490280417,
            "range": "± 34872788",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "jbrown@acuity.social",
            "name": "Jonathan Brown",
            "username": "ethernomad"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "959d91870d331852e20eae85e3e0186f2223a91d",
          "message": "[pallet-broker] add extrinsic to remove a lease (#7026)\n\n# Description\n\n#6929 requests more extrinsics for \"managing the network's coretime\nallocations without needing to dabble with migration+runtime upgrade or\nset/kill storage patterns\"\n\nThis pull request implements the remove_lease() extrinsic.\n\n\n## Integration\n\nDownstream projects need to benchmark the weight for the remove_lease()\nextrinsic.\n\n## Review Notes\n\nMentorship is requested to ensure this is implemented correctly.\n\nThe lease is removed from state using the TaskId as a key. Is this\nsufficient. Does the extrinsic need to do anything else?\n\n---------\n\nCo-authored-by: Jonathan Brown <jbrown@acuity.network>\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: command-bot <>\nCo-authored-by: Dónal Murray <donalm@seadanda.dev>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Dónal Murray <donal.murray@parity.io>",
          "timestamp": "2025-02-19T19:00:16Z",
          "tree_id": "3a52bfc1ee684f7251776837598cbe0b7939508f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/959d91870d331852e20eae85e3e0186f2223a91d"
        },
        "date": 1739995089954,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18411829,
            "range": "± 402122",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19131749,
            "range": "± 1038629",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20580810,
            "range": "± 286987",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24482999,
            "range": "± 344973",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57413219,
            "range": "± 1275056",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 382079304,
            "range": "± 5226519",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2660532139,
            "range": "± 139591175",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15165316,
            "range": "± 139127",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15637280,
            "range": "± 123748",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16106398,
            "range": "± 265728",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20440641,
            "range": "± 239899",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53426349,
            "range": "± 918815",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 335849539,
            "range": "± 6227763",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2553241895,
            "range": "± 16682854",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "jbrown@acuity.social",
            "name": "Jonathan Brown",
            "username": "ethernomad"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "bd41848788383f39410c326508b052f94afb3130",
          "message": "[pallet-broker] add extrinsic to remove an assignment (#7080)\n\n# Description\n\n#6929 requests more extrinsics for \"managing the network's coretime\nallocations without needing to dabble with migration+runtime upgrade or\nset/kill storage patterns\"\n\nThis pull request implements the remove_assignment() extrinsic.\n\n\n## Integration\n\nDownstream projects need to benchmark the weight for the\nremove_assignment() extrinsic.\n\n---------\n\nCo-authored-by: Jonathan Brown <jbrown@acuity.network>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Dónal Murray <donal.murray@parity.io>",
          "timestamp": "2025-02-19T22:17:52Z",
          "tree_id": "c2ce87e45839f35041990ecbba07b636332b3144",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/bd41848788383f39410c326508b052f94afb3130"
        },
        "date": 1740006549631,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 20532241,
            "range": "± 734985",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20297907,
            "range": "± 415471",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22106044,
            "range": "± 657572",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25999254,
            "range": "± 605240",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 60525214,
            "range": "± 1499264",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 412734329,
            "range": "± 9192577",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2814666369,
            "range": "± 96041938",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16094600,
            "range": "± 291565",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16047948,
            "range": "± 428020",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16628329,
            "range": "± 220527",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20941307,
            "range": "± 285132",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54277662,
            "range": "± 1398064",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 345276708,
            "range": "± 7641889",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2672747709,
            "range": "± 43860151",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "donal.murray@parity.io",
            "name": "Dónal Murray",
            "username": "seadanda"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ececb4cbd68d94d1f73b6ab8e5ad8afed1cc9456",
          "message": "Add sudo pallet to coretime-westend (#6960)\n\nAdd the sudo pallet to coretime-westend, allowing use in\ndevelopment/testing. Previously the coretime-rococo runtime was used in\nsituations like this, but since Rococo is now gone this can be used\ninstead.\n\nNo sudo key is added to Westend storage with this PR, since it's likely\nthat any updates will continue to be done over XCM. If this is something\nthat is wanted the key can be set via XCM.\n\n---------\n\nCo-authored-by: command-bot <>\nCo-authored-by: Maksym H <1177472+mordamax@users.noreply.github.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-02-19T23:48:44Z",
          "tree_id": "f4bd2fe94bb4a20383106951a6b513205c99d724",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ececb4cbd68d94d1f73b6ab8e5ad8afed1cc9456"
        },
        "date": 1740011931108,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 20218010,
            "range": "± 190026",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20450744,
            "range": "± 198203",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22379282,
            "range": "± 284498",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26230307,
            "range": "± 328569",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 61228659,
            "range": "± 1425275",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 399691986,
            "range": "± 16131864",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2433943160,
            "range": "± 201479124",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15832098,
            "range": "± 234172",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15669969,
            "range": "± 109161",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15987041,
            "range": "± 136457",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20661112,
            "range": "± 388462",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53522258,
            "range": "± 1146146",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 336451462,
            "range": "± 6352407",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2609772489,
            "range": "± 42122165",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "serban@parity.io",
            "name": "Serban Iorga",
            "username": "serban300"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e8d17cbec9b7ea739f32e2d5f7d183558ce8efc1",
          "message": "derive `DecodeWithMemTracking` for `RuntimeCall` (#7634)\n\nRelated to https://github.com/paritytech/polkadot-sdk/issues/7360",
          "timestamp": "2025-02-20T09:04:39Z",
          "tree_id": "45d7d9ecc46a0db307aacc8623d371a6c814b0b8",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e8d17cbec9b7ea739f32e2d5f7d183558ce8efc1"
        },
        "date": 1740046064150,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 20327422,
            "range": "± 1061650",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19900092,
            "range": "± 656155",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21899395,
            "range": "± 373420",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25775973,
            "range": "± 566701",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 61807129,
            "range": "± 1211248",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 346488403,
            "range": "± 4663397",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2512138534,
            "range": "± 122319625",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15959574,
            "range": "± 463627",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16429977,
            "range": "± 314677",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16900042,
            "range": "± 367997",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23613960,
            "range": "± 986052",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 60363913,
            "range": "± 2452661",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 365792255,
            "range": "± 6980393",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2906349557,
            "range": "± 84809814",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alex.theissen@me.com",
            "name": "Alexander Theißen",
            "username": "athei"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e2d3da6128bbd6a00e2036503fc2ed3e9c3c1b80",
          "message": "Update to Rust stable 1.84.1 (#7625)\n\nRef https://github.com/paritytech/ci_cd/issues/1107\n\nWe mainly need that so that we can finally compile the `pallet_revive`\nfixtures on stable. I did my best to keep the commits focused on one\nthing to make review easier.\n\nAll the changes are needed because rustc introduced more warnings or is\nmore strict about existing ones. Most of the stuff could just be fixed\nand the commits should be pretty self explanatory. However, there are a\nfew this that are notable:\n\n## `non_local_definitions `\n\nA lot of runtimes to write `impl` blocks inside functions. This makes\nsense to reduce the amount of conditional compilation. I guess I could\nhave moved them into a module instead. But I think allowing it here\nmakes sense to avoid the code churn.\n\n## `unexpected_cfgs`\n\nThe FRAME macros emit code that references various features like `std`,\n`runtime-benchmarks` or `try-runtime`. If a create that uses those\nmacros does not have those features we get this warning. Those were\nmostly when defining a `mock` runtime. I opted for silencing the warning\nin this case rather than adding not needed features.\n\nFor the benchmarking ui tests I opted for adding the `runtime-benchmark`\nfeature to the `Cargo.toml`.\n\n## Failing UI test\n\nI am bumping the `trybuild` version and regenerating the ui tests. The\nold version seems to be incompatible. This requires us to pass\n`deny_warnings` in `CARGO_ENCODED_RUSTFLAGS` as `RUSTFLAGS` is ignored\nin the new version.\n\n## Removing toolchain file from the pallet revive fixtures\n\nThis is no longer needed since the latest stable will compile them fine\nusing the `RUSTC_BOOTSTRAP=1`.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-02-20T10:14:16Z",
          "tree_id": "74c2650dc4ff5e22e6fed633ed2696cb5eb9bdd3",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e2d3da6128bbd6a00e2036503fc2ed3e9c3c1b80"
        },
        "date": 1740051114689,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17506284,
            "range": "± 88909",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17852331,
            "range": "± 248744",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19364300,
            "range": "± 116687",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22831636,
            "range": "± 151397",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 50545082,
            "range": "± 526721",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 282136316,
            "range": "± 2337726",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2145119878,
            "range": "± 77714471",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14294927,
            "range": "± 110095",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14357235,
            "range": "± 138563",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14810831,
            "range": "± 129578",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18839992,
            "range": "± 135347",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 47858968,
            "range": "± 315122",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 283100791,
            "range": "± 6961833",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2235147858,
            "range": "± 13800342",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "60601340+lexnv@users.noreply.github.com",
            "name": "Alexandru Vasile",
            "username": "lexnv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "42e9de7f4fdb191cd531b443c68cfe19886ec311",
          "message": "net/litep2p: Bring the latest compatibility fixes via v0.9.1 (#7640)\n\nThis PR updates litep2p to version 0.9.1. The yamux config is entirely\nremoved to mirror the libp2p yamux upstream version.\nWhile at it, I had to bump indexmap and URL as well. \n\n\n## [0.9.1] - 2025-01-19\n\nThis release enhances compatibility between litep2p and libp2p by using\nthe latest Yamux upstream version. Additionally, it includes various\nimprovements and fixes to boost the stability and performance of the\nWebSocket stream and the multistream-select protocol.\n\n### Changed\n\n- yamux: Switch to upstream implementation while keeping the controller\nAPI ([#320](https://github.com/paritytech/litep2p/pull/320))\n- req-resp: Replace SubstreamSet with FuturesStream\n([#321](https://github.com/paritytech/litep2p/pull/321))\n- cargo: Bring up to date multiple dependencies\n([#324](https://github.com/paritytech/litep2p/pull/324))\n- build(deps): bump hickory-proto from 0.24.1 to 0.24.3\n([#323](https://github.com/paritytech/litep2p/pull/323))\n- build(deps): bump openssl from 0.10.66 to 0.10.70\n([#322](https://github.com/paritytech/litep2p/pull/322))\n\n### Fixed\n\n- websocket/stream: Fix unexpected EOF on `Poll::Pending` state\npoisoning ([#327](https://github.com/paritytech/litep2p/pull/327))\n- websocket/stream: Avoid memory allocations on flushing\n([#325](https://github.com/paritytech/litep2p/pull/325))\n- multistream-select: Enforce `io::error` instead of empty protocols\n([#318](https://github.com/paritytech/litep2p/pull/318))\n- multistream: Do not wait for negotiation in poll_close\n([#319](https://github.com/paritytech/litep2p/pull/319))\n\ncc @paritytech/networking\n\n---------\n\nSigned-off-by: Alexandru Vasile <alexandru.vasile@parity.io>",
          "timestamp": "2025-02-20T13:51:42Z",
          "tree_id": "51adcdd45b526acda223f94f135f363a92dd4c79",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/42e9de7f4fdb191cd531b443c68cfe19886ec311"
        },
        "date": 1740062790373,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17670093,
            "range": "± 127464",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18099569,
            "range": "± 136746",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19390337,
            "range": "± 208082",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22904415,
            "range": "± 165931",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 52394775,
            "range": "± 931704",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 315373442,
            "range": "± 2533092",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2417275497,
            "range": "± 80638743",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14704850,
            "range": "± 189724",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14847028,
            "range": "± 151621",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15355897,
            "range": "± 144656",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19441298,
            "range": "± 98521",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49432473,
            "range": "± 2303866",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 286501058,
            "range": "± 2792066",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2324031853,
            "range": "± 10997729",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "claravanstaden64@gmail.com",
            "name": "Clara van Staden",
            "username": "claravanstaden"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dd7562ab5618d9c2a657ead42a0f92b3496ff80f",
          "message": "Snowbridge - Ethereum Electra Upgrade Support (#7075)\n\n# Description\n\nAdds support for the upcoming Ethereum Electra upgrade, while\nmaintaining backwards compatibility for the current Deneb fork.\n\n## Integration\n\nRelayers should be updated to send updated Electra consensus data\nstructures.\n\n## Review Notes\n\nThe [Ethereum Electra hard-fork\nconsensus](https://github.com/ethereum/consensus-specs/blob/dev/specs/electra/light-client/sync-protocol.md)\nchanges affecting the Ethereum light client are mainly isolated to the\n[Generalized\nIndexes](https://github.com/protolambda/eth2.0-ssz/blob/master/specs/navigation/generalized_indices.md)\nof data structures changing. Before Electra, these values were hardcoded\nin config. For Electra, these values change and needed to the updated.\nMethods were added to return the correct g-index for the current fork\nversion.\n\nData structures used by the Ethereum client did not change in this\nhard-fork. The BeaconState container has been updated with additional\nchanges, but because the on-chain code does not reference the\nBeaconState directly (only indirectly through merkle proofs), it is not\na concern. Off-chain relayers use the BeaconState to generate proofs,\nand so the relayer code has been updated accordingly.\n\n### Companion PR for off-chain relayers\nhttps://github.com/Snowfork/snowbridge/pull/1283\n\n---------\n\nCo-authored-by: claravanstaden <Cats 4 life!>\nCo-authored-by: Ron <yrong1997@gmail.com>\nCo-authored-by: Vincent Geddes <vincent@snowfork.com>\nCo-authored-by: Alistair Singh <alistair.singh7@gmail.com>\nCo-authored-by: Vincent Geddes <117534+vgeddes@users.noreply.github.com>",
          "timestamp": "2025-02-21T13:09:19Z",
          "tree_id": "dd4fa931332e83351cf60a6894efaf55f124106c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/dd7562ab5618d9c2a657ead42a0f92b3496ff80f"
        },
        "date": 1740147251712,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19779530,
            "range": "± 129860",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20797608,
            "range": "± 546406",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22730360,
            "range": "± 429889",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25670171,
            "range": "± 210262",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55508701,
            "range": "± 700447",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 361973447,
            "range": "± 4509066",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2432128027,
            "range": "± 122506141",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15694346,
            "range": "± 103799",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15802382,
            "range": "± 166644",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16316410,
            "range": "± 166422",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21027052,
            "range": "± 152038",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53775897,
            "range": "± 614000",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 318642250,
            "range": "± 3455265",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2511114087,
            "range": "± 12800097",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b65c0a3d0382ee423eebf8104d84cec4277b6a07",
          "message": "remove redundant 0016-approval-voting-parallel test (#7659)\n\nThe test was flaky and was disabled here\nhttps://github.com/paritytech/polkadot-sdk/issues/6345, looked at the\nflakiness\nhttps://github.com/paritytech/polkadot-sdk/issues/6345#issuecomment-2674063608\nand it wasn't because of some bug in our production code, but because of\nthe way the test interacts with the infrastructure.\n\nSince https://github.com/paritytech/polkadot-sdk/pull/7504 this test is\nnow testing redundant things that other tests like\n0009-approval-voting-coalescing.toml and 0006-parachains-max-tranche0\nalready cover, so instead of investing trying to fix it, just remove it.\n\nFixes: https://github.com/paritytech/polkadot-sdk/issues/6345\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>",
          "timestamp": "2025-02-21T14:42:39Z",
          "tree_id": "416939f43d7b82b5dac3947ac3020988ce543ab6",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/b65c0a3d0382ee423eebf8104d84cec4277b6a07"
        },
        "date": 1740152243852,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17355150,
            "range": "± 194882",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17697698,
            "range": "± 164600",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18967387,
            "range": "± 176500",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22441098,
            "range": "± 388428",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 49854819,
            "range": "± 335952",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 290658348,
            "range": "± 2451257",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2164697282,
            "range": "± 88265022",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14253129,
            "range": "± 139913",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14346069,
            "range": "± 112378",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14731478,
            "range": "± 153606",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18442614,
            "range": "± 113638",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 48219182,
            "range": "± 241958",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 278977027,
            "range": "± 2242343",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2247847515,
            "range": "± 31112229",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e915cad42a5b92e76642b45cc4c5259134c8df58",
          "message": "[pallet-revive] Remove js examples (#7660)\n\nRemove JS examples, they now belongs to the evm-test-suite repo\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-02-21T15:49:35Z",
          "tree_id": "622f46a52ec9d543e6028f0488f4c93103113d7f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e915cad42a5b92e76642b45cc4c5259134c8df58"
        },
        "date": 1740156114862,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17306574,
            "range": "± 155391",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17539276,
            "range": "± 166700",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18988693,
            "range": "± 224327",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22589771,
            "range": "± 319428",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 50936699,
            "range": "± 907537",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 298143980,
            "range": "± 3346870",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2271330098,
            "range": "± 122800669",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14494408,
            "range": "± 127714",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14633120,
            "range": "± 69732",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15011715,
            "range": "± 204075",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18638904,
            "range": "± 314914",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 48335352,
            "range": "± 451353",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 277436242,
            "range": "± 1779499",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2255278568,
            "range": "± 9355907",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ayevbeosa.j@gmail.com",
            "name": "Ayevbeosa Iyamu",
            "username": "ayevbeosa"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "934c091421af4be362839996bfaa441ba59bf12b",
          "message": "xcm-builder: added logging for xcm filters/helpers/matchers/types (#2408) (#7003)\n\n# Description\n\nAdded logs in pallet-xcm to help in debugging, fixes #2408, and in\ncontinuation of #4982\n\n# Checklist\n\n- [x]\nhttps://github.com/paritytech/polkadot-sdk/blob/master/polkadot/xcm/xcm-builder/src/\n- [x]\nhttps://github.com/paritytech/polkadot-sdk/tree/master/cumulus/parachains/runtimes/assets/common/src\n- [x] runtime-defined XCM filters/converters (just [one\nexample](https://github.com/paritytech/polkadot-sdk/blob/183b55aae21e97ef39192e5a358287e2b6b7043c/cumulus/parachains/runtimes/bridge-hubs/bridge-hub-westend/src/xcm_config.rs#L284))\n\nPolkadot Address: 1Gz5aLtEu2n4jsfA6XwtZnuaRymJrDDw4kEGdNHTdxrpzrc\n\n---------\n\nCo-authored-by: Ayevbeosa Iyamu <aiyamu@vatebra.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: Adrian Catangiu <adrian@parity.io>\nCo-authored-by: Raymond Cheung <178801527+raymondkfcheung@users.noreply.github.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-02-21T17:48:03Z",
          "tree_id": "ba8115916a9b7e7273228e7e729b2a4bacb81934",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/934c091421af4be362839996bfaa441ba59bf12b"
        },
        "date": 1740163178821,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17993043,
            "range": "± 117215",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18250360,
            "range": "± 280607",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19765580,
            "range": "± 126739",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23943208,
            "range": "± 353805",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53892516,
            "range": "± 602105",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 340448110,
            "range": "± 5422278",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2341040287,
            "range": "± 185881799",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15024401,
            "range": "± 111434",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15249587,
            "range": "± 113055",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15814698,
            "range": "± 106450",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19787763,
            "range": "± 334378",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50596487,
            "range": "± 524043",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 299950470,
            "range": "± 5389647",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2406008736,
            "range": "± 28129857",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "davxy@datawok.net",
            "name": "Davide Galassi",
            "username": "davxy"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "21f6f0705e53c15aa2b8a5706b208200447774a9",
          "message": "Bandersnatch hot fix (#7670)\n\nEssentially, this locks `bandersnatch_vrfs` to a specific branch of a\nrepository I control. This is a temporary workaround to avoid issues\nlike https://github.com/paritytech/polkadot-sdk/issues/7653 until\nhttps://github.com/paritytech/polkadot-sdk/pull/7669 is ready.\n\nCloses: https://github.com/paritytech/polkadot-sdk/issues/7653 \n\n@drskalman\n\n---------\n\nCo-authored-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>",
          "timestamp": "2025-02-23T14:10:33Z",
          "tree_id": "353ad3e11fb7e90512de387c16e3a1d3d020303a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/21f6f0705e53c15aa2b8a5706b208200447774a9"
        },
        "date": 1740323570871,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19560627,
            "range": "± 167688",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19991550,
            "range": "± 139820",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22034844,
            "range": "± 177951",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25672727,
            "range": "± 660275",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 58141887,
            "range": "± 1073745",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 402044574,
            "range": "± 7575189",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2900639740,
            "range": "± 110823994",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16140149,
            "range": "± 258278",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16098162,
            "range": "± 128358",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16638808,
            "range": "± 138903",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21342468,
            "range": "± 360692",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54217095,
            "range": "± 2047553",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 339857127,
            "range": "± 3738901",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2530773570,
            "range": "± 30016059",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "179002856+paritytech-cmd-bot-polkadot-sdk[bot]@users.noreply.github.com",
            "name": "paritytech-cmd-bot-polkadot-sdk[bot]",
            "username": "paritytech-cmd-bot-polkadot-sdk[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "16ed0296f7bf63e22b34e0e4b6c0bb2fc3c200f4",
          "message": "Auto-update of all weights for 2025-02-21-1740149841 (#7668)\n\nAuto-update of all weights for 2025-02-21-1740149841.\n\nSubweight results:\n- [now vs\nmaster](https://weights.tasty.limo/compare?repo=polkadot-sdk&threshold=5&path_pattern=.%2F**%2Fweights%2F**%2F*.rs%2C.%2F**%2Fweights.rs&method=asymptotic&ignore_errors=true&unit=time&old=master&new=update-weights-weekly-2025-02-21-1740149841)\n- [now vs polkadot-v1.15.6\n(2025-01-16)](https://weights.tasty.limo/compare?repo=polkadot-sdk&threshold=5&path_pattern=.%2F**%2Fweights%2F**%2F*.rs%2C.%2F**%2Fweights.rs&method=asymptotic&ignore_errors=true&unit=time&old=polkadot-v1.15.6&new=update-weights-weekly-2025-02-21-1740149841)\n- [now vs polkadot-v1.16.2\n(2024-11-14)](https://weights.tasty.limo/compare?repo=polkadot-sdk&threshold=5&path_pattern=.%2F**%2Fweights%2F**%2F*.rs%2C.%2F**%2Fweights.rs&method=asymptotic&ignore_errors=true&unit=time&old=polkadot-v1.16.2&new=update-weights-weekly-2025-02-21-1740149841)\n\nCo-authored-by: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-02-24T10:13:00+01:00",
          "tree_id": "14c3cd2d71cb21a40cf97edb00be5e970b0650a6",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/16ed0296f7bf63e22b34e0e4b6c0bb2fc3c200f4"
        },
        "date": 1740389414085,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17121174,
            "range": "± 119702",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17540480,
            "range": "± 105041",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18881659,
            "range": "± 167281",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22584146,
            "range": "± 464920",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 50771146,
            "range": "± 741332",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 301405787,
            "range": "± 4277081",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2064945612,
            "range": "± 45056873",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14427434,
            "range": "± 76827",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14553019,
            "range": "± 52605",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15024217,
            "range": "± 167144",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18778032,
            "range": "± 278312",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 48369265,
            "range": "± 406168",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 280644904,
            "range": "± 2224800",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2213714822,
            "range": "± 14674976",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "32275622+seemantaggarwal@users.noreply.github.com",
            "name": "seemantaggarwal",
            "username": "seemantaggarwal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cf52a0d960a17b4d023bb7c9351e159c60227c85",
          "message": "effort towards getting chainspecbuilder into omni-node fix 5567 (#7619)\n\nAdding chain-spec-builder as a subcommand into Polkadot omni node",
          "timestamp": "2025-02-24T11:48:11Z",
          "tree_id": "eb477c0320f902a4e9f5b5fadba40fa959927565",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/cf52a0d960a17b4d023bb7c9351e159c60227c85"
        },
        "date": 1740400804151,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18160924,
            "range": "± 194963",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18240857,
            "range": "± 227623",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19680594,
            "range": "± 134025",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23324357,
            "range": "± 157436",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51561262,
            "range": "± 417682",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 291742061,
            "range": "± 5702602",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2258766576,
            "range": "± 98479152",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14445251,
            "range": "± 106309",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14830233,
            "range": "± 156461",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15515368,
            "range": "± 98636",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19352481,
            "range": "± 172782",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49625821,
            "range": "± 476151",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 289440906,
            "range": "± 2181518",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2342788074,
            "range": "± 31721355",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "178801527+raymondkfcheung@users.noreply.github.com",
            "name": "Raymond Cheung",
            "username": "raymondkfcheung"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d189f9e771d937999db4ed17cf2c5d9e1a6a29e7",
          "message": "Enhance XCM Debugging with Log Capture in Unit Tests (#7594)\n\n# Description\n\nThis PR introduces a lightweight log-capturing mechanism for XCM unit\ntests, simplifying debugging by enabling structured log assertions. It\npartially addresses #6119 and #6125, offering an optional way to verify\nlogs in tests while remaining unobtrusive in normal execution.\n\n# Key Changes\n\n* [x] Introduces a log capture utility in `sp_tracing`.\n* [x] Adds XCM test examples demonstrating how and when to use log\ncapturing.\n\n# Review Notes:\n\n* The log capture mechanism is opt-in and does not affect existing tests\nunless explicitly used.\n* The implementation is minimal and does not add complexity to existing\ntest setups.\n* It provides a structured alternative to\n[`sp_tracing::init_for_tests()`](https://paritytech.github.io/polkadot-sdk/master/sp_tracing/fn.init_for_tests.html)\nfor log verification in automated tests.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-02-24T14:47:32Z",
          "tree_id": "b73f98e33533378e7f473f6178dc9ec8c99ff190",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d189f9e771d937999db4ed17cf2c5d9e1a6a29e7"
        },
        "date": 1740411694615,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17120500,
            "range": "± 107842",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17446298,
            "range": "± 97525",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18845422,
            "range": "± 83831",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22795044,
            "range": "± 762906",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 50815747,
            "range": "± 424543",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 286099435,
            "range": "± 4690915",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2236187248,
            "range": "± 62095121",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14908872,
            "range": "± 664640",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14428807,
            "range": "± 116539",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14982361,
            "range": "± 348397",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18738917,
            "range": "± 173157",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 47965462,
            "range": "± 450688",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 276254640,
            "range": "± 2200179",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2219707745,
            "range": "± 33082145",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cdc033945741d79ebc87a630558b4fc507a51df6",
          "message": "[pallet-revive] tracing should wrap around call stack execution (#7676)\n\nFix tracing should wrap around the entire call stack execution\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-02-24T16:56:21Z",
          "tree_id": "71da43008b21cdf21d6b1e2c9c81e61493d2d579",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/cdc033945741d79ebc87a630558b4fc507a51df6"
        },
        "date": 1740420652955,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17461607,
            "range": "± 120352",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17565845,
            "range": "± 339832",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19169846,
            "range": "± 127076",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22664140,
            "range": "± 113312",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 50285152,
            "range": "± 280743",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 301545803,
            "range": "± 2765932",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2234491601,
            "range": "± 81775945",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14412391,
            "range": "± 98986",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14540544,
            "range": "± 158726",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15108705,
            "range": "± 347492",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18731426,
            "range": "± 133514",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 48077070,
            "range": "± 219373",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 280358078,
            "range": "± 4119757",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2289689594,
            "range": "± 25678194",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "rohit.sarpotdar@parity.io",
            "name": "Rohit Sarpotdar",
            "username": "rosarp"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4a400dc1866f11707331fb6408df1055d0f42a70",
          "message": "updated substrate-relay to v1.8.0 (#7697)\n\nremoved run-relay references removed in PR #7549",
          "timestamp": "2025-02-25T06:44:06Z",
          "tree_id": "d1641ec80314a47328f32781d06b9ace847e26f7",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4a400dc1866f11707331fb6408df1055d0f42a70"
        },
        "date": 1740468785526,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19492793,
            "range": "± 265551",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20111373,
            "range": "± 401149",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21582589,
            "range": "± 483151",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26121281,
            "range": "± 270071",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 63382878,
            "range": "± 1434864",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 445449765,
            "range": "± 7125555",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2905134674,
            "range": "± 204102686",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16709669,
            "range": "± 266258",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16498331,
            "range": "± 224224",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17497475,
            "range": "± 264757",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22679341,
            "range": "± 312071",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 58117325,
            "range": "± 546089",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 375543338,
            "range": "± 6321936",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2723697653,
            "range": "± 60738569",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "vedhavyas.singareddi@gmail.com",
            "name": "CrabGopher",
            "username": "vedhavyas"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dd005c48e44053a84a5a5a7e63444064be49bf6e",
          "message": "Expose extension weights (#7637)\n\n# Description\nSeems like SubstrateWeights that used T::DBWeights was not public unlike\nthe frame_system's Call weights. PR just made those weights public\n\n## Integration\nInstead of using `()` impl which used RockDB weights, ExtensionWeights\ncan be used to to use the provided DBWeights to System config",
          "timestamp": "2025-02-25T11:06:07Z",
          "tree_id": "8cdce3e24be0f8728cd12863af168346e0e7a398",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/dd005c48e44053a84a5a5a7e63444064be49bf6e"
        },
        "date": 1740484582517,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 20132639,
            "range": "± 225837",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20378303,
            "range": "± 260004",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22516042,
            "range": "± 425130",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25897522,
            "range": "± 311312",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56811748,
            "range": "± 800310",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 362253895,
            "range": "± 13033776",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2856230372,
            "range": "± 68778583",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16188246,
            "range": "± 243927",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16755553,
            "range": "± 198602",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17324683,
            "range": "± 257198",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23225373,
            "range": "± 297584",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 57981842,
            "range": "± 1034334",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 375847098,
            "range": "± 6916593",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2754329783,
            "range": "± 90272033",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "giuseppe.re@parity.io",
            "name": "Giuseppe Re",
            "username": "re-gius"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3dc3a11cd68762c2e5feb0beba0b61f448c4fc92",
          "message": "Add Runtime Api version to metadata (#7607)\n\nThe runtime API implemented version is not explicitly shown in metadata,\nso here we add it to improve developer experience.\nWe need to bump `frame-metadata` and `merkleized-metadata` to allow this\nnew feature.\n\nThis closes #7352 .\n\n_Refactor_: also changing all the occurrences of `ViewFunctionMethod` to\njust `ViewFunction` for metadata types.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-02-25T13:29:22Z",
          "tree_id": "0ca0ec20c0c8001402b5b57e995c4dce59ff5f21",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/3dc3a11cd68762c2e5feb0beba0b61f448c4fc92"
        },
        "date": 1740493296814,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18210042,
            "range": "± 99493",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18613840,
            "range": "± 236049",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19970590,
            "range": "± 115537",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23527301,
            "range": "± 169544",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 52688129,
            "range": "± 362859",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 321303116,
            "range": "± 4460241",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2234058384,
            "range": "± 136182130",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14907193,
            "range": "± 147859",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15313498,
            "range": "± 161128",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15647651,
            "range": "± 95496",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19767787,
            "range": "± 144341",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50300695,
            "range": "± 202340",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 304117113,
            "range": "± 2368988",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2432947020,
            "range": "± 26034464",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "37865735+clangenb@users.noreply.github.com",
            "name": "clangenb",
            "username": "clangenb"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "51170495d0a8902bc20e650b17639773698cb0b1",
          "message": "remove leftovers of the contracts-rococo parachain (#7638)\n\nThere were already previous efforts to remove the contracts-rococo\nchain, see #5471, which was done as a response to this comment\nhttps://github.com/paritytech/polkadot-sdk/pull/5288#discussion_r1711157476.\n\nThis PR intends to fix the parts that were overlooked back then, and\nremove all traces of contracts-rococo as it is intended to be replaced\nby a new testnet including pallet-revive.",
          "timestamp": "2025-02-26T08:46:50Z",
          "tree_id": "414d1562c7533ba6f60dda15e1ec2ba86a11c2c3",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/51170495d0a8902bc20e650b17639773698cb0b1"
        },
        "date": 1740562764750,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18437828,
            "range": "± 236810",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18438155,
            "range": "± 172026",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20113958,
            "range": "± 255771",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23929952,
            "range": "± 188075",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56720152,
            "range": "± 952295",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 349811927,
            "range": "± 8189988",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2583622344,
            "range": "± 117765831",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15146445,
            "range": "± 225086",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15660852,
            "range": "± 191969",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16091296,
            "range": "± 563907",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20199308,
            "range": "± 227200",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53088850,
            "range": "± 679161",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 314225322,
            "range": "± 5036730",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2476743528,
            "range": "± 28055187",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "37865735+clangenb@users.noreply.github.com",
            "name": "clangenb",
            "username": "clangenb"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cbc9b90130fb346aad657fa5b08b66bdeeac01f1",
          "message": "add genesis presets for glutton westend (#7481)\n\nExtracted from #7473.\n\nPart of: https://github.com/paritytech/polkadot-sdk/issues/5704.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>",
          "timestamp": "2025-02-26T11:46:58Z",
          "tree_id": "e9c10a2274889da6bb31d328910e0894bdce5acc",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/cbc9b90130fb346aad657fa5b08b66bdeeac01f1"
        },
        "date": 1740574954514,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17372775,
            "range": "± 137266",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17748822,
            "range": "± 180266",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19308750,
            "range": "± 360046",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22705534,
            "range": "± 721961",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53545517,
            "range": "± 1002142",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 307519886,
            "range": "± 4196321",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2575358988,
            "range": "± 47242286",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14842719,
            "range": "± 180557",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14877891,
            "range": "± 162376",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15453920,
            "range": "± 388475",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19432317,
            "range": "± 147359",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50145911,
            "range": "± 682873",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 288350618,
            "range": "± 2912520",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2359520689,
            "range": "± 43571918",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ludovic.domingues96@gmail.com",
            "name": "Ludovic_Domingues",
            "username": "Krayt78"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "0c0d8929712ca7e306a001bcc214c81886dda386",
          "message": "Migrating polkadot-runtime-parachains paras_inherent benchmarking to V2 (#6606)\n\n# Description\n\nMigrating polkadot-runtime-parachains paras_inherent benchmarking to the\nnew benchmarking syntax v2.\nThis is part of #6202\n\n---------\n\nCo-authored-by: Giuseppe Re <giuseppe.re@parity.io>",
          "timestamp": "2025-02-26T15:23:47Z",
          "tree_id": "5a1da67a53d306e41dbead723fb45a720f62a445",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/0c0d8929712ca7e306a001bcc214c81886dda386"
        },
        "date": 1740587343961,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17444076,
            "range": "± 105564",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17832896,
            "range": "± 188857",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19245737,
            "range": "± 153319",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23031650,
            "range": "± 362632",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53163153,
            "range": "± 1866626",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 312058892,
            "range": "± 2397628",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2416730098,
            "range": "± 156344585",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14721442,
            "range": "± 123234",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14998875,
            "range": "± 153170",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15236410,
            "range": "± 67584",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19301482,
            "range": "± 198023",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50864849,
            "range": "± 2425975",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 291500159,
            "range": "± 2881238",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2337307576,
            "range": "± 10138454",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "86019edba891fee6b5c008f0f5d0b5d782e42d2d",
          "message": "[pallet-revive] ecrecover (#7652)\n\nAdd ECrecover 0x1 precompile and remove the unstable equivalent host\nfunction.\n\n- depend on https://github.com/paritytech/polkadot-sdk/pull/7676\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>",
          "timestamp": "2025-02-26T15:32:49Z",
          "tree_id": "d3998ba7bd1ddf4e07c5bf47b0588945a26bf579",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/86019edba891fee6b5c008f0f5d0b5d782e42d2d"
        },
        "date": 1740588523370,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17496590,
            "range": "± 155761",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17818579,
            "range": "± 81978",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19276997,
            "range": "± 86770",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23180355,
            "range": "± 286964",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 52436723,
            "range": "± 1143824",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 290367357,
            "range": "± 1887111",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2275063558,
            "range": "± 114085903",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14704580,
            "range": "± 374985",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14918818,
            "range": "± 175472",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15499366,
            "range": "± 215058",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19027594,
            "range": "± 254212",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49452489,
            "range": "± 438528",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 282497956,
            "range": "± 2818187",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2288726266,
            "range": "± 30739116",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "cyrill@parity.io",
            "name": "xermicus",
            "username": "xermicus"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c29e72a8628835e34deb6aa7db9a78a2e4eabcee",
          "message": "[pallet-revive] allow delegate calls to non-contract accounts (#7729)\n\nThis PR changes the behavior of delegate calls when the callee is not a\ncontract account: Instead of returning a `CodeNotFound` error, this is\nallowed and the caller observes a successful call with empty output.\n\nThe change makes for example the following contract behave the same as\non EVM:\n\n```Solidity\ncontract DelegateCall {\n    function delegateToLibrary() external returns (bool) {\n        address testAddress = 0x0000000000000000000000000000000000000000;\n        (bool success, ) = testAddress.delegatecall(\n            abi.encodeWithSignature(\"test()\")\n        );\n        return success;\n    }\n}\n```\n\nCloses https://github.com/paritytech/revive/issues/235\n\n---------\n\nSigned-off-by: xermicus <cyrill@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-02-26T16:39:41Z",
          "tree_id": "82e9c6e2a8ed749fce0e768036f08e185315f965",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c29e72a8628835e34deb6aa7db9a78a2e4eabcee"
        },
        "date": 1740591294123,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17201735,
            "range": "± 220609",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17568017,
            "range": "± 82570",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18819341,
            "range": "± 137287",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22500349,
            "range": "± 221681",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 50259456,
            "range": "± 504657",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 284953487,
            "range": "± 3575196",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2262343317,
            "range": "± 58889723",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14325401,
            "range": "± 99245",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14462661,
            "range": "± 116689",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15076213,
            "range": "± 118437",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18698467,
            "range": "± 72691",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 47953704,
            "range": "± 555952",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 280613208,
            "range": "± 10572705",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2261756781,
            "range": "± 12972838",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "10196091+Ank4n@users.noreply.github.com",
            "name": "Ankan",
            "username": "Ank4n"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f7e98b40cab7475898c99ea48809635ac069af3a",
          "message": "[Nomination Pool] Make staking restrictions configurable (#7685)\n\ncloses https://github.com/paritytech/polkadot-sdk/issues/5742\n\nNeed to be backported to stable2503 release.\n\nWith the migration of staking accounts to [fungible\ncurrency](https://github.com/paritytech/polkadot-sdk/pull/5501), we can\nnow allow pool users to stake directly and vice versa. This update\nintroduces a configurable filter mechanism to determine which accounts\ncan join a nomination pool.\n\n## Example Usage  \n\n### 1. Allow any account to join a pool  \nTo permit all accounts to join a nomination pool, use the `Nothing`\nfilter:\n\n```rust\nimpl pallet_nomination_pools::Config for Runtime {\n    ...\n    type Filter = Nothing;\n}\n```\n\n### 2. Restrict direct stakers from joining a pool\n\nTo prevent direct stakers from joining a nomination pool, use\n`pallet_staking::AllStakers`:\n```rust\nimpl pallet_nomination_pools::Config for Runtime {\n    ...\n    type Filter = pallet_staking::AllStakers<Runtime>;\n}\n```\n\n### 3. Define a custom filter\nFor more granular control, you can define a custom filter:\n```rust\nstruct MyCustomFilter<T: Config>(core::marker::PhantomData<T>);\n\nimpl<T: Config> Contains<T::AccountId> for MyCustomFilter<T> {\n    fn contains(account: &T::AccountId) -> bool {\n        todo!(\"Implement custom logic. Return `false` to allow the account to join a pool.\")\n    }\n}\n```\n\n---------\n\nCo-authored-by: Bastian Köcher <info@kchr.de>",
          "timestamp": "2025-02-26T21:12:57+01:00",
          "tree_id": "b9f372d3c4c7c4168149e548615d0a37f2342acd",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f7e98b40cab7475898c99ea48809635ac069af3a"
        },
        "date": 1740601856204,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18553121,
            "range": "± 146685",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19009860,
            "range": "± 182512",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20790472,
            "range": "± 275020",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25226215,
            "range": "± 315934",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57049693,
            "range": "± 1572956",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 374672039,
            "range": "± 5433670",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2685583156,
            "range": "± 109825302",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15844268,
            "range": "± 173378",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16079371,
            "range": "± 91368",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16823439,
            "range": "± 173809",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20922352,
            "range": "± 286655",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54228064,
            "range": "± 2924525",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 341420825,
            "range": "± 6736696",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2666830300,
            "range": "± 72203458",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "69342343+MrishoLukamba@users.noreply.github.com",
            "name": "Mrisho Lukamba",
            "username": "MrishoLukamba"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e64b53c2fff2daceafc453caeeee79756372a9e2",
          "message": "feat(collator) add export pov on slot base collator (#7585)\n\nCloses #7573\n\n@skunert  @bkchr\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Sebastian Kunert <skunert49@gmail.com>",
          "timestamp": "2025-02-27T08:12:09Z",
          "tree_id": "bfe3134446073d0c9ce4856d34263a4e9074c964",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e64b53c2fff2daceafc453caeeee79756372a9e2"
        },
        "date": 1740647021274,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17290113,
            "range": "± 179024",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17476852,
            "range": "± 118836",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19003631,
            "range": "± 118361",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22938232,
            "range": "± 203504",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 52089881,
            "range": "± 812787",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 319638084,
            "range": "± 4400290",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2355888861,
            "range": "± 52902254",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14635227,
            "range": "± 155443",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14701000,
            "range": "± 125406",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15129664,
            "range": "± 167913",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19015665,
            "range": "± 138746",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50094859,
            "range": "± 415511",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 285224872,
            "range": "± 3621991",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2275837026,
            "range": "± 18895081",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "60601340+lexnv@users.noreply.github.com",
            "name": "Alexandru Vasile",
            "username": "lexnv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e3e3f4814e183ea1a174e11232776374b66f1e26",
          "message": "notifications/tests: Check compatiblity between litep2p and libp2p  (#7484)\n\nThis PR ensures compatibility in terms of expectations between the\nlibp2p and litep2p network backends at the notification protocol level.\n\nThe libp2p node is tested with the `Notification` behavior that contains\nthe protocol controller, while litep2p is tested at the lowest level API\n(without substrate shim layers).\n\n## Notification Behavior\n\n(I) Libp2p protocol controller will eagerly reopen a closed substream,\neven if it is the one that closed it:\n- When a node (libp2p or litep2p) closes the substream with **libp2p**,\nthe **libp2p** controller will reopen the substream\n- When **libp2p** closes the substream with a node (either litep2p with\nno controller or libp2p), the **libp2p** controller will reopen the\nsubstream\n- However in this case, libp2p was the one closing the substream\nsignaling it is no longer interested in communicating with the other\nside\n\n(II) Notifications are lost and not reported to the higher level in the\nfollowing scenario:\n- T0: Node A opens a substream with Node B\n- T1: Node A closes the substream or the connection with Node B\n- T2: Node B sends a notification to Node A => *notification is lost*\nand never reported\n- T3: Node B detects the closed substream or connection\n\n\n## Testing\n\nThis PR effectively checks:\n- connectivity at the notification level\n- litep2p rejecting libp2p substream and keep-alive mechanism\nfunctionality\n- libp2p disconnecting libp2p and connection re-establishment (and all\nthe other permutations)\n- idling of connections with active substreams and keep-alive mechanism\nis not enforced\n\n\nPrior work:\n- https://github.com/paritytech/polkadot-sdk/pull/7361\n\ncc @paritytech/networking\n\n---------\n\nSigned-off-by: Alexandru Vasile <alexandru.vasile@parity.io>\nCo-authored-by: Dmitry Markin <dmitry@markin.tech>",
          "timestamp": "2025-02-27T09:53:01Z",
          "tree_id": "f930cb75f7dc768c45a71fbf13c28916d9d12766",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e3e3f4814e183ea1a174e11232776374b66f1e26"
        },
        "date": 1740652887988,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 20871365,
            "range": "± 191145",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 21329458,
            "range": "± 186662",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 23129198,
            "range": "± 304833",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 27392639,
            "range": "± 330928",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 65635399,
            "range": "± 2183034",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 451601676,
            "range": "± 6272999",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 3182986013,
            "range": "± 18647867",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16997605,
            "range": "± 129351",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17159355,
            "range": "± 212078",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17699020,
            "range": "± 253941",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22630895,
            "range": "± 274088",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 57151960,
            "range": "± 1075904",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 381771334,
            "range": "± 4308637",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2729068224,
            "range": "± 28898256",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "egor@parity.io",
            "name": "Egor_P",
            "username": "EgorPopelyaev"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "84b3ae9be5fdd52f99506c34a5f0e640023e3f04",
          "message": "[Backport] Version bumps form stable2412-2 (#7744)\n\nThis PR backports version bumps and prdocs reorg from the latest stable\nbranch back to master",
          "timestamp": "2025-02-27T12:18:33Z",
          "tree_id": "45ceb92c160fae3f5a1a412b49c89b4125f64546",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/84b3ae9be5fdd52f99506c34a5f0e640023e3f04"
        },
        "date": 1740662866014,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 20092531,
            "range": "± 731365",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20847041,
            "range": "± 592541",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22246072,
            "range": "± 825020",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26469431,
            "range": "± 534658",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 61647547,
            "range": "± 1539304",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 386835804,
            "range": "± 14795159",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2692398820,
            "range": "± 55472835",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16765249,
            "range": "± 366215",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 18263410,
            "range": "± 444861",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17762606,
            "range": "± 247854",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22725486,
            "range": "± 397204",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 61397185,
            "range": "± 3118101",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 402110916,
            "range": "± 9505621",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2615142447,
            "range": "± 238651469",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "lumosksm@gmail.com",
            "name": "huntbounty",
            "username": "huntbounty"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d734e79e17976fd7cabb7e5aa7179acb57d9846b",
          "message": "Add README.md to umbrella (#7600)\n\nResolves #7536\n\n---------\n\nSigned-off-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>\nCo-authored-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>",
          "timestamp": "2025-02-27T14:59:34Z",
          "tree_id": "1cec29bc19cf8a25a07aa2a48d1128fe20380e27",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d734e79e17976fd7cabb7e5aa7179acb57d9846b"
        },
        "date": 1740671322631,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19609087,
            "range": "± 247573",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20448361,
            "range": "± 246056",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22253768,
            "range": "± 547260",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 29517718,
            "range": "± 1028717",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 70207360,
            "range": "± 3763319",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 427671536,
            "range": "± 5736180",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2929613917,
            "range": "± 112777348",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16520015,
            "range": "± 235066",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17314602,
            "range": "± 223319",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17759592,
            "range": "± 182134",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23195499,
            "range": "± 651507",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 61847904,
            "range": "± 1477098",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 372121047,
            "range": "± 3593557",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2824241777,
            "range": "± 59133571",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ub2262000@gmail.com",
            "name": "Utkarsh Bhardwaj",
            "username": "UtkarshBhardwaj007"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cc83fba12f2b34415229240d47f4f6a7ea83b194",
          "message": "[AHM] Poke deposits: Multisig pallet (#7700)\n\n# Description\n\n* This PR adds a new extrinsic `poke_deposit` to `pallet-multisig`. This\nextrinsic will be used to re-adjust the deposits made in the pallet to\ncreate a multisig operation after AHM.\n* Part of #5591 \n\n## Review Notes\n\n* Added a new extrinsic `poke_deposit` in `pallet-multisig`.\n* Added a new event `DepositPoked` to be emitted upon a successful call\nof the extrinsic.\n* Although the immediate use of the extrinsic will be to give back some\nof the deposit after the AH-migration, the extrinsic is written such\nthat it can work if the deposit decreases or increases (both).\n* The call to the extrinsic would be `free` if an actual adjustment is\nmade to the deposit and `paid` otherwise.\n* Added tests to test all scenarios.\n\n## TO-DOs\n* [x] Add Benchmark\n* [x] Run CI cmd bot to benchmark\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Giuseppe Re <giuseppe.re@parity.io>",
          "timestamp": "2025-02-27T16:50:26Z",
          "tree_id": "d67c9c0e2d5360bb8c512a53324cf709c8ee6e25",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/cc83fba12f2b34415229240d47f4f6a7ea83b194"
        },
        "date": 1740678004924,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18979666,
            "range": "± 186796",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19338287,
            "range": "± 183893",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21053857,
            "range": "± 220529",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24871096,
            "range": "± 327429",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54232882,
            "range": "± 487424",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 330694947,
            "range": "± 5711130",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2432652164,
            "range": "± 15937057",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15348212,
            "range": "± 244372",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15710632,
            "range": "± 86686",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16092363,
            "range": "± 180192",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20183674,
            "range": "± 403892",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51778628,
            "range": "± 591055",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 316799550,
            "range": "± 3946423",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2485206246,
            "range": "± 31503029",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "178801527+raymondkfcheung@users.noreply.github.com",
            "name": "Raymond Cheung",
            "username": "raymondkfcheung"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6a3d10b3a8d9ae1162cd18779ec34c551c27d5d9",
          "message": "Simplify event assertion with predicate-based check (#7734)\n\nA follow-up PR to simplify event assertions by introducing\n`contains_event`, allowing event checks without needing exact field\nmatches. This reduces redundancy and makes tests more flexible.\n\nPartially addresses #6119 by providing an alternative way to assert\nevents.\n\nReference: [PR #7594 -\nDiscussion](https://github.com/paritytech/polkadot-sdk/pull/7594#discussion_r1965566349)\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-02-27T23:32:51Z",
          "tree_id": "da2e7fe7bcf7480253d5dd33f8e610bc5d7f7708",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/6a3d10b3a8d9ae1162cd18779ec34c551c27d5d9"
        },
        "date": 1740702067269,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17687022,
            "range": "± 205512",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18005732,
            "range": "± 155939",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19736445,
            "range": "± 161342",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23640322,
            "range": "± 192667",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54225811,
            "range": "± 1022692",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 322620871,
            "range": "± 6332800",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2467313928,
            "range": "± 161371812",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14886893,
            "range": "± 128400",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15011018,
            "range": "± 169102",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15731411,
            "range": "± 127033",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19616032,
            "range": "± 245153",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50925839,
            "range": "± 1092617",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 292689570,
            "range": "± 2479981",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2369941822,
            "range": "± 21441594",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "serban@parity.io",
            "name": "Serban Iorga",
            "username": "serban300"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c11b1f8526d704140f4329e68348c0b0965285de",
          "message": "Derive `DecodeWithMemTracking` for `Block` (#7655)\n\nRelated to https://github.com/paritytech/polkadot-sdk/issues/7360\n\nThis PR adds `DecodeWithMemTracking` as a trait bound for `Header`,\n`Block` and `TransactionExtension` and\nderives it for all the types that implement these traits in\n`polkadot-sdk`.",
          "timestamp": "2025-02-28T08:03:55Z",
          "tree_id": "5f42c79126e3554089f5e29edd355ab7f763492e",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c11b1f8526d704140f4329e68348c0b0965285de"
        },
        "date": 1740732804320,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17682306,
            "range": "± 112776",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17967914,
            "range": "± 122825",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19362085,
            "range": "± 201921",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23400246,
            "range": "± 250501",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 52578963,
            "range": "± 550847",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 329350544,
            "range": "± 4287339",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2439321775,
            "range": "± 85631352",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14564868,
            "range": "± 355267",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14611141,
            "range": "± 138882",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15110943,
            "range": "± 139540",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19332889,
            "range": "± 152856",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49269202,
            "range": "± 630268",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 290670350,
            "range": "± 4249462",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2316200076,
            "range": "± 24398720",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alex.theissen@me.com",
            "name": "Alexander Theißen",
            "username": "athei"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4087e2d96313539db8721aa5946f6ca0bc7a67b2",
          "message": "pallet_revive: Change address derivation to use hashing (#7662)\n\nFixes https://github.com/paritytech/polkadot-sdk/issues/6723\n\n## Motivation\n\nInternal auditors recommended to not truncate Polkadot Addresses when\nderiving Ethereum addresses from it. Reasoning is that they are raw\npublic keys where truncating could lead to collisions when weaknesses in\nthose curves are discovered in the future. Additionally, some pallets\ngenerate account addresses in a way where only the suffix we were\ntruncating contains any entropy. The changes in this PR act as a safe\nguard against those two points.\n\n## Changes made\n\nWe change the `to_address` function to first hash the AccountId32 and\nthen use trailing 20 bytes as `AccountId20`. If the `AccountId32` ends\nwith 12x 0xEE we keep our current behaviour of just truncating those\ntrailing bytes.\n\n## Security Discussion\n\nThis will allow us to still recover the original `AccountId20` because\nthose are constructed by just adding those 12 bytes. Please note that\ngenerating an ed25519 key pair where the trailing 12 bytes are 0xEE is\ntheoretically possible as 96bits is not a huge search space. However,\nthis cannot be used as an attack vector. It will merely allow this\naddress to interact with `pallet_revive` without registering as the\nfallback account is the same as the actual address. The ultimate vanity\naddress. In practice, this is not relevant since the 0xEE addresses are\nnot valid public keys for sr25519 which is used almost everywhere.\n\ntl:dr: We keep truncating in case of an Ethereum address derived account\nid. This is safe as those are already derived via keccak. In every other\ncase where we have to assume that the account id might be a public key.\nTherefore we first hash and then take the trailing bytes.\n\n## Do we need a Migration for Westend\n\nNo. We changed the name of the mapping. This means the runtime will not\ntry to read the old data. Ethereum keys are unaffected by this change.\nWe just advise people to re-register their AccountId32 in case they need\nto use it as it is a very small circle of users (just 3 addresses\nregistered). This will not cause disturbance on Westend.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-02-28T13:17:16Z",
          "tree_id": "917b8c6a08bd8aad4e5cf98df9440e900063f28e",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4087e2d96313539db8721aa5946f6ca0bc7a67b2"
        },
        "date": 1740751474910,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17200514,
            "range": "± 111501",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17584171,
            "range": "± 82327",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19158315,
            "range": "± 166591",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22900213,
            "range": "± 105462",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 50591160,
            "range": "± 1192276",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 297218261,
            "range": "± 3102669",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2293782156,
            "range": "± 32861185",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14299722,
            "range": "± 137750",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14411506,
            "range": "± 93411",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14739176,
            "range": "± 149260",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18578696,
            "range": "± 223065",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 47859239,
            "range": "± 1029632",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 280050749,
            "range": "± 2139251",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2226264265,
            "range": "± 35471792",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "skunert49@gmail.com",
            "name": "Sebastian Kunert",
            "username": "skunert"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9adb8d28ab1f6744f1fb26db41f42361ac1254a0",
          "message": "Remove leftovers of leftovers of contracts-rococo (#7750)\n\nFollow-up of https://github.com/paritytech/polkadot-sdk/pull/7638, which\nattempted to remove contracts-rococo.\n\nBut there were some leftover weight files still chilling in the repo.",
          "timestamp": "2025-02-28T15:09:37Z",
          "tree_id": "491208a14ac9d7f53407dcf3111a392fce965e59",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/9adb8d28ab1f6744f1fb26db41f42361ac1254a0"
        },
        "date": 1740758145455,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19178791,
            "range": "± 256211",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19435559,
            "range": "± 346509",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21161932,
            "range": "± 324387",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24946734,
            "range": "± 566823",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57307024,
            "range": "± 1198841",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 359978947,
            "range": "± 9193436",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2676560605,
            "range": "± 57932961",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15733676,
            "range": "± 106648",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15955342,
            "range": "± 194182",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16398955,
            "range": "± 103867",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20709594,
            "range": "± 320387",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53372948,
            "range": "± 712852",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 333025076,
            "range": "± 6093872",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2499324268,
            "range": "± 18684191",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "60601340+lexnv@users.noreply.github.com",
            "name": "Alexandru Vasile",
            "username": "lexnv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1bc6ca606438a65c927f14be3f36634ca0e58e8f",
          "message": "notifications/libp2p: Terminate the outbound notification substream on `std::io::Errors` (#7724)\n\nThis PR handles a case where we called the `poll_next` on an outbound\nsubstream notification to check if the stream is closed. It is entirely\npossible that the `poll_next` would return an `io::error`, for example\nend of file.\n\nThis PR ensures that we make the distinction between unexpected incoming\ndata, and error originated from `poll_next`.\n\nWhile at it, the bulk of the PR change propagates the PeerID from the\nnetwork behavior, through the notification handler, to the notification\noutbound stream for logging purposes.\n\ncc @paritytech/networking \n\nPart of: https://github.com/paritytech/polkadot-sdk/issues/7722\n\n---------\n\nSigned-off-by: Alexandru Vasile <alexandru.vasile@parity.io>",
          "timestamp": "2025-02-28T17:05:16Z",
          "tree_id": "2f62c029b2e9a2c776165b90f05bb49fecad5a2c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/1bc6ca606438a65c927f14be3f36634ca0e58e8f"
        },
        "date": 1740765384846,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17570739,
            "range": "± 194954",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18142756,
            "range": "± 222528",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19632342,
            "range": "± 150580",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23752481,
            "range": "± 186348",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54088336,
            "range": "± 708176",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 327724939,
            "range": "± 3443457",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2517063125,
            "range": "± 82445486",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15049555,
            "range": "± 131386",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15117840,
            "range": "± 122206",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15607622,
            "range": "± 99597",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20006619,
            "range": "± 120319",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50419285,
            "range": "± 669015",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 295332665,
            "range": "± 6240569",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2406081800,
            "range": "± 18816434",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "56828990+muraca@users.noreply.github.com",
            "name": "Matteo Muraca",
            "username": "muraca"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3798ff7f5464348ec3cd05798081d4cc01728500",
          "message": "Remove `pallet::getter` usage from `pallet-nft-fractionalization` (#7124)\n\nDescription\nPart of #3326\nAs per title, `pallet::getter` usage has been removed from\n`pallet-nft-fractionalization`.\n\n---------\n\nCo-authored-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>",
          "timestamp": "2025-03-03T11:11:15Z",
          "tree_id": "f1ff5044c6c6b230f5eaa2ec12777452512e8fd7",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/3798ff7f5464348ec3cd05798081d4cc01728500"
        },
        "date": 1741003269984,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17829187,
            "range": "± 125486",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18580587,
            "range": "± 97117",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19499801,
            "range": "± 170559",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22943169,
            "range": "± 213782",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55349019,
            "range": "± 1851721",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 344535477,
            "range": "± 7808342",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2448595668,
            "range": "± 110334227",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15654053,
            "range": "± 153592",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16025121,
            "range": "± 143181",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16304523,
            "range": "± 127801",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20245978,
            "range": "± 309186",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53308988,
            "range": "± 718322",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 301323372,
            "range": "± 7267058",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2457833555,
            "range": "± 73745928",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alex.theissen@me.com",
            "name": "Alexander Theißen",
            "username": "athei"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4b39ff00b887039bc3e02a763a29deb09df56833",
          "message": "revive: Rework the instruction benchmark (#7721)\n\nFixes https://github.com/paritytech/polkadot-sdk/issues/6157\n\nThis fixes the last remaining benchmark that was not correct since it\nwas too low level to be written in Rust. Instead, we opted.\n\nThis PR changes the benchmark that determines the scaling from\n`ref_time` to PolkaVM `Gas` by benchmarking the absolute worst case of\nan instruction: One that causes two cache misses by touching two cache\nlines.\n\nThe Contract itself is designed to be as simple as possible. It does\nrandom unaligned reads in a loop until the `r` (repetition) number is\nreached. The randomness is fully generated by the host and written to\nthe guests memory before the benchmark is run. This allows the benchmark\nto determine the influence of one loop iteration via linear regression.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: xermicus <cyrill@parity.io>\nCo-authored-by: PG Herveou <pgherveou@gmail.com>",
          "timestamp": "2025-03-03T12:02:31Z",
          "tree_id": "49404d017d38c96c4061bc7feeeb3b35bfffa8b6",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4b39ff00b887039bc3e02a763a29deb09df56833"
        },
        "date": 1741006421740,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18430749,
            "range": "± 216617",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18480936,
            "range": "± 362427",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20286083,
            "range": "± 244438",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24726522,
            "range": "± 227520",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56154282,
            "range": "± 1556168",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 380382101,
            "range": "± 9227198",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2521654239,
            "range": "± 70770022",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15475271,
            "range": "± 238078",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15230269,
            "range": "± 103207",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15770066,
            "range": "± 163839",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20259771,
            "range": "± 157038",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50769061,
            "range": "± 575064",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 310015587,
            "range": "± 8221279",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2426003120,
            "range": "± 18921516",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "37865735+clangenb@users.noreply.github.com",
            "name": "clangenb",
            "username": "clangenb"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f9707b721fb5cbadb1f8e0df5fc7e3dd33b4f9f7",
          "message": "[kitchensink] migrate to use genesis presets (#7741)\n\nLast subtask from\nhttps://github.com/paritytech/polkadot-sdk/issues/5704.\n\nCloses #5704.\n\nThe substrate-node is not 100% free of the native runtime yet, but the\ncode has become less convoluted and better documented. The final cleanup\nneeds https://github.com/paritytech/polkadot-sdk/issues/7748.\n\n---------\n\nCo-authored-by: Michal Kucharczyk <1728078+michalkucharczyk@users.noreply.github.com>",
          "timestamp": "2025-03-03T17:12:43Z",
          "tree_id": "94b9cc643d83e9bea0b45ada0208117a54c23352",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f9707b721fb5cbadb1f8e0df5fc7e3dd33b4f9f7"
        },
        "date": 1741024923846,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17703932,
            "range": "± 189892",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18093854,
            "range": "± 267969",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19462878,
            "range": "± 295722",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23137639,
            "range": "± 214668",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57264766,
            "range": "± 991981",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 336534894,
            "range": "± 4002582",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2331077282,
            "range": "± 50995367",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15165169,
            "range": "± 260331",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15681365,
            "range": "± 136494",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15952844,
            "range": "± 201571",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20673947,
            "range": "± 241133",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 55114071,
            "range": "± 2707274",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 338489577,
            "range": "± 7909906",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2573866893,
            "range": "± 22561255",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "polkadotdom@gmail.com",
            "name": "polka.dom",
            "username": "PolkadotDom"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9d9ae348fc92e50004cb91c55a168a4cc30c0525",
          "message": "Add Serialize & Deserialize to umbrella crate derive module (#7764)\n\nWhen working with storage types that are to be set in the genesis block,\nderiving serde::Serialize & serde::Deserialize is necessary (to my\nknowledge). This PR introduces Serialize and Deserialize into the\numbrella crate derive (and indirectly prelude) module, allowing for\nsimilar access as the other storage value derives.\n\n---------\n\nCo-authored-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-03-03T21:28:05Z",
          "tree_id": "498cd08bc30d2c743b68175a45d36342cb8ef99c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/9d9ae348fc92e50004cb91c55a168a4cc30c0525"
        },
        "date": 1741040177106,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18746988,
            "range": "± 108084",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19083160,
            "range": "± 148274",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20460447,
            "range": "± 202490",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24165985,
            "range": "± 316805",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53128079,
            "range": "± 733140",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 324234095,
            "range": "± 7406671",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2421504373,
            "range": "± 27889736",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15138018,
            "range": "± 231783",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15309648,
            "range": "± 114191",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15722885,
            "range": "± 278861",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19574955,
            "range": "± 232893",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51011846,
            "range": "± 3341282",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 299182259,
            "range": "± 3204254",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2374926883,
            "range": "± 17477218",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b07abeeaa611f07f3a799b1f30cbe7279d67dfe9",
          "message": "[pallet-revive] block.timestamps should return seconds (#7784)\n\nIn solidity `block.timestamp` should be expressed in seconds\nsee\nhttps://docs.soliditylang.org/en/latest/units-and-global-variables.html#block-and-transaction-properties\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>",
          "timestamp": "2025-03-04T09:34:01Z",
          "tree_id": "9ba94cea05f6eeaaa867977d30d39bbf99f84996",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/b07abeeaa611f07f3a799b1f30cbe7279d67dfe9"
        },
        "date": 1741083773727,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18918972,
            "range": "± 231695",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19758268,
            "range": "± 338001",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20669708,
            "range": "± 163094",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24632896,
            "range": "± 247610",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53638925,
            "range": "± 560193",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 319626005,
            "range": "± 7993630",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2417824687,
            "range": "± 101490268",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15743160,
            "range": "± 104790",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15737209,
            "range": "± 120230",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16390685,
            "range": "± 89274",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19935487,
            "range": "± 184277",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52344059,
            "range": "± 575929",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 316382958,
            "range": "± 4319394",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2404396443,
            "range": "± 19462689",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "lumosksm@gmail.com",
            "name": "huntbounty",
            "username": "huntbounty"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "22879e13cb404d99deee341c6d64f7c098b5614b",
          "message": "pallet-bridge-relayers - migrate benchmarks to v2 (#7531)\n\nresolves #7491",
          "timestamp": "2025-03-05T11:15:06Z",
          "tree_id": "be0b936e156abf3858829f98ca763c8d5796cc32",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/22879e13cb404d99deee341c6d64f7c098b5614b"
        },
        "date": 1741176333945,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18785582,
            "range": "± 343926",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19061119,
            "range": "± 319588",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20883077,
            "range": "± 185636",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24683448,
            "range": "± 276557",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57382178,
            "range": "± 570607",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 360478879,
            "range": "± 4377331",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2737652512,
            "range": "± 57049145",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15461720,
            "range": "± 122581",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15832882,
            "range": "± 178748",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16213546,
            "range": "± 179119",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20318000,
            "range": "± 185684",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53383162,
            "range": "± 970103",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 318227385,
            "range": "± 6379821",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2486241394,
            "range": "± 22487899",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "oliver.tale-yazdi@parity.io",
            "name": "Oliver Tale-Yazdi",
            "username": "ggwpez"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "9100d249ae8f5f3f5d377629989b5dcfd9bce3fa",
          "message": "pallet revive: rpc build script should not panic (#7786)\n\nThis can error when you use `cargo remote` and probably also with `cargo\nvendor`.\nStill seeing two more build errors, but at least this one is fixed.\n\nOther one:\n```pre\nerror: set `DATABASE_URL` to use query macros online, or run `cargo sqlx prepare` to update the query cache\n   --> substrate/frame/revive/rpc/src/receipt_provider/db.rs:123:17\n    |\n123 |               let result = query!(\n    |  __________________________^\n124 | |                 r#\"\n125 | |                 INSERT OR REPLACE INTO transaction_hashes (transaction_hash, block_hash, transaction_index)\n126 | |                 VALUES ($1, $2, $3)\n...   |\n130 | |                 transaction_index\n131 | |             )\n```\n\nand (maybe Rust version related, this is 1.84.1)\n```pre\nerror[E0282]: type annotations needed\n   --> substrate/frame/revive/rpc/src/receipt_provider/db.rs:102:34\n    |\n102 |         let (tx_result, logs_result) = tokio::join!(delete_transaction_hashes, delete_logs);\n    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type\n    |\n    = note: this error originates in the macro `$crate::join` which comes from the expansion of the macro `tokio::join` (in Nightly builds, run with -Z macro-backtrace for more info)\n```\n\n---------\n\nSigned-off-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-03-05T12:38:47Z",
          "tree_id": "1da1269c36adef0213ab604c6d9e3fa25c581c8c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/9100d249ae8f5f3f5d377629989b5dcfd9bce3fa"
        },
        "date": 1741182265572,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18425113,
            "range": "± 88768",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18599110,
            "range": "± 200968",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20576823,
            "range": "± 612569",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24418043,
            "range": "± 436265",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56397803,
            "range": "± 946239",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 335533392,
            "range": "± 4009118",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2576543999,
            "range": "± 198577229",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15762027,
            "range": "± 350498",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16028877,
            "range": "± 211246",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16649250,
            "range": "± 193493",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21607074,
            "range": "± 240867",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 57187057,
            "range": "± 1012657",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 338702643,
            "range": "± 5461804",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2641766317,
            "range": "± 43595993",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "dmitry@markin.tech",
            "name": "Dmitry Markin",
            "username": "dmitry-markin"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9a8061e6efc6607383160249319573696270d672",
          "message": "Support adding extra request-response protocols to the node (#7708)\n\nAllow adding extra request-response protocols during polkadot service\ninitialization. This is required to add a request-response protocol\ndescribed in\n[RFC-0008](https://polkadot-fellows.github.io/RFCs/approved/0008-parachain-bootnodes-dht.html)\nto the relay chain side of the parachain node.\n\n### Review notes\nThe PR might look scary due to a lot of code being moved. It is easier\nto review it on a per-commit basis. The commits do not containing\nchanges to the code logic are named accordingly.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-03-05T13:27:30Z",
          "tree_id": "67016f9bcc56ec9a021507edf9af3744789ce4d5",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/9a8061e6efc6607383160249319573696270d672"
        },
        "date": 1741184423792,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18345930,
            "range": "± 226855",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18637551,
            "range": "± 152489",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20045805,
            "range": "± 239612",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23589268,
            "range": "± 380961",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54908547,
            "range": "± 1259777",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 349694315,
            "range": "± 8344328",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2590125059,
            "range": "± 166652820",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14836277,
            "range": "± 152181",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15218675,
            "range": "± 131780",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15612395,
            "range": "± 237647",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19557956,
            "range": "± 173351",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52137002,
            "range": "± 1286900",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 302204956,
            "range": "± 3529176",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2467211727,
            "range": "± 36542711",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "oliver.tale-yazdi@parity.io",
            "name": "Oliver Tale-Yazdi",
            "username": "ggwpez"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a814f55716fb53318bd0ba41706c2bc756369c06",
          "message": "[AHM] Make more stuff public (#7802)\n\nMake some more stuff public that will be useful for AHM to reduce code\nduplication.\n\n---------\n\nSigned-off-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-03-05T14:35:48Z",
          "tree_id": "6dea991386113b30f22368a426125ad8faa8a250",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/a814f55716fb53318bd0ba41706c2bc756369c06"
        },
        "date": 1741188508730,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19355920,
            "range": "± 893825",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19713314,
            "range": "± 243363",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21617114,
            "range": "± 821720",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26822530,
            "range": "± 353306",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 60642017,
            "range": "± 1560503",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 398604525,
            "range": "± 16664224",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2506129383,
            "range": "± 132439778",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15979190,
            "range": "± 215497",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15936125,
            "range": "± 300963",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16303916,
            "range": "± 127435",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20805592,
            "range": "± 152860",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52592522,
            "range": "± 694052",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 307159248,
            "range": "± 7798172",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2415594507,
            "range": "± 46477435",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "73991674+Nathy-bajo@users.noreply.github.com",
            "name": "Nathaniel Bajo",
            "username": "Nathy-bajo"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1dbaeba9044ef491847a8204da98cd9e74534cdb",
          "message": "[XCM] add generic location to account converter that also works with external ecosystems (#7313)\n\nI added a new `ExternalConsensusLocationsConverterFor` struct to handle\nexternal global consensus locations and their child locations.\nThis struct extends the functionality of existing converters\n(`GlobalConsensusParachainConvertsFor` and\n`EthereumLocationsConverterFor`) while maintaining backward\ncompatibility.\n\nFixes https://github.com/paritytech/polkadot-sdk/issues/7129\n\nPolkadot address: 121HJWZtD13GJQPD82oEj3gSeHqsRYm1mFgRALu4L96kfPD1\n\n---------\n\nCo-authored-by: Adrian Catangiu <adrian@parity.io>\nCo-authored-by: ndk <ndk@parity.io>",
          "timestamp": "2025-03-05T15:53:44Z",
          "tree_id": "ff2008f297c50b1659f3dcd4aa0707a7b655ac19",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/1dbaeba9044ef491847a8204da98cd9e74534cdb"
        },
        "date": 1741193170942,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18264047,
            "range": "± 129025",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18570806,
            "range": "± 119665",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20146806,
            "range": "± 144292",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24234495,
            "range": "± 525753",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54389336,
            "range": "± 847447",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 342279749,
            "range": "± 5110321",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2660166997,
            "range": "± 154434963",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14975972,
            "range": "± 127190",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15116523,
            "range": "± 115713",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15601160,
            "range": "± 101776",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19751839,
            "range": "± 149314",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51222419,
            "range": "± 749831",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 305323693,
            "range": "± 3017131",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2420764233,
            "range": "± 19138037",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41779041+alvicsam@users.noreply.github.com",
            "name": "Alexander Samusev",
            "username": "alvicsam"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "945e5fe8874eb8b9abdbd54de7441d75bb1ad4b5",
          "message": "ci: update credentials for command-backport (#7798)\n\nclose https://github.com/paritytech/ci_cd/issues/1114",
          "timestamp": "2025-03-05T20:15:15Z",
          "tree_id": "96c508cf48c275e7f51372b483e5fca9328c37e3",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/945e5fe8874eb8b9abdbd54de7441d75bb1ad4b5"
        },
        "date": 1741208688813,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17156162,
            "range": "± 159933",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17366423,
            "range": "± 79986",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18747651,
            "range": "± 138322",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22105984,
            "range": "± 294576",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 49886778,
            "range": "± 513546",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 288007777,
            "range": "± 2798205",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2207525722,
            "range": "± 42228475",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14343213,
            "range": "± 107283",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14595136,
            "range": "± 82183",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14976220,
            "range": "± 116605",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18788922,
            "range": "± 246203",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 48163741,
            "range": "± 226163",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 278585345,
            "range": "± 2433247",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2295994050,
            "range": "± 15715379",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "00d8eea8d2f6fccbc709ae759192684472cf92e5",
          "message": "pallet-scheduler: Put back postponed tasks into the agenda (#7790)\n\nRight now `pallet-scheduler` is not putting back postponed tasks into\nthe agenda when the early weight check is failing. This pull request\nensures that these tasks are put back into the agenda and are not just\n\"lost\".\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Guillaume Thiolliere <gui.thiolliere@gmail.com>\nCo-authored-by: Alexandre R. Baldé <alexandre.balde@parity.io>",
          "timestamp": "2025-03-05T23:10:19Z",
          "tree_id": "c83654f6ee883ce8e82a23375eb7f307fe1982b1",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/00d8eea8d2f6fccbc709ae759192684472cf92e5"
        },
        "date": 1741219124291,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17295244,
            "range": "± 312933",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17702513,
            "range": "± 128778",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19039169,
            "range": "± 79019",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23173045,
            "range": "± 355607",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53622804,
            "range": "± 874107",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 338757730,
            "range": "± 5668097",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2576237268,
            "range": "± 45478908",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14565773,
            "range": "± 95078",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14956616,
            "range": "± 94552",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15382712,
            "range": "± 87726",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19459886,
            "range": "± 103418",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49936863,
            "range": "± 677432",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 293295742,
            "range": "± 3823982",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2376752572,
            "range": "± 18738215",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "54316454+sandreim@users.noreply.github.com",
            "name": "Andrei Sandu",
            "username": "sandreim"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f02134c84c20612d5091494ed59cec547e784a2a",
          "message": "Dynamic uncompressed code size limit (#7760)\n\nFixes https://github.com/paritytech/polkadot-sdk/issues/7664\n\nThe discussion in https://github.com/paritytech/polkadot-sdk/pull/7710\nshould provide the context for why this solution was picked.\n\n---------\n\nSigned-off-by: Andrei Sandu <andrei-mihail@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-03-06T12:17:55Z",
          "tree_id": "e501d53b3ca21b2d5343079a3485a6e54fa2510d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f02134c84c20612d5091494ed59cec547e784a2a"
        },
        "date": 1741266416402,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18139540,
            "range": "± 284776",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18516810,
            "range": "± 193475",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20208110,
            "range": "± 261907",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24551757,
            "range": "± 242279",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59618785,
            "range": "± 1062396",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 358203692,
            "range": "± 7732318",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2734636355,
            "range": "± 101941878",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15808096,
            "range": "± 160488",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15947500,
            "range": "± 148409",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16028391,
            "range": "± 223347",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20795253,
            "range": "± 179031",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54182106,
            "range": "± 1199672",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 332074358,
            "range": "± 6835012",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2501753605,
            "range": "± 31521244",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "178801527+raymondkfcheung@users.noreply.github.com",
            "name": "Raymond Cheung",
            "username": "raymondkfcheung"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ce5f89c6986256e898123dd37ccc7d12de512317",
          "message": "Ensure Logs Are Captured for Assertions and Printed During Tests (#7769)\n\nThis PR enhances **`test_log_capture`**, ensuring logs are **captured\nfor assertions** and **printed to the console** during test execution.\n\n## **Motivation**  \n\n- Partially addresses #6119 and #6125, to improves developer **tracing\nand debugging** in XCM-related tests.\n- Builds on #7594, improving **log visibility** while maintaining test\n**log capture capabilities**.\n- While writing tests for #7234, I noticed this function was missing.\nThis PR adds it to streamline log handling in unit tests.\n\n## **Changes**  \n\n- Ensures logs up to `TRACE` level are **captured** (for assertions) and\n**printed** (for visibility).\n- Refines documentation to clearly specify **when to use** each\nfunction.\n- **Removes ANSI escape codes** from captured logs to ensure clean,\nreadable assertions.\n\n## **When to Use?**  \n\n| Usage | Captures Logs? | Prints Logs? | Example |\n\n|----------------------------------------------|-----------------|--------------|-----------------------------------------------|\n| `init_log_capture(LevelFilter::INFO, false)` | ✅ Yes | ❌ No | Capture\nlogs for assertions without printing. |\n| `init_log_capture(LevelFilter::TRACE, true)` | ✅ Yes | ✅ Yes | Capture\nlogs and print them in test output. |\n| `sp_tracing::init_for_tests()` | ❌ No | ✅ Yes | Print logs to the\nconsole without capturing. |\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-03-06T12:42:54Z",
          "tree_id": "adeb01eaf8d5fa75164e08f3db66ee8ff16fbb5c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ce5f89c6986256e898123dd37ccc7d12de512317"
        },
        "date": 1741268613997,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18681303,
            "range": "± 332527",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19255294,
            "range": "± 182239",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20690636,
            "range": "± 186329",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24395890,
            "range": "± 259858",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56150813,
            "range": "± 1099046",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 359921172,
            "range": "± 5961853",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2614726511,
            "range": "± 171560471",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15305754,
            "range": "± 87203",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15546978,
            "range": "± 216892",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15636025,
            "range": "± 536159",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19981394,
            "range": "± 192448",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51257496,
            "range": "± 597572",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 310572385,
            "range": "± 5761003",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2437922740,
            "range": "± 16677236",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "donal.murray@parity.io",
            "name": "Dónal Murray",
            "username": "seadanda"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6893fb2291a537e96de81ad92165ed9b44ce2366",
          "message": "Add westend system chains as a trusted teleporters (#7787)\n\nAsset Hub Next has been deployed on Westend as parachain 1100, but it's\nnot yet a trusted teleporter.\nThis minimal PR adds it in stable2412 so that it can be deployed right\naway without waiting for the rest of the release to be finalised and\ndeployed.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-03-06T14:38:37Z",
          "tree_id": "489bfa1a2a6e4549c3f8b1511e1f51405694a465",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/6893fb2291a537e96de81ad92165ed9b44ce2366"
        },
        "date": 1741275243045,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17828000,
            "range": "± 214745",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18058626,
            "range": "± 145401",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19558071,
            "range": "± 279646",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24023502,
            "range": "± 474878",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57181330,
            "range": "± 867621",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 320893383,
            "range": "± 5752587",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2588949536,
            "range": "± 136031751",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15317669,
            "range": "± 260456",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15730212,
            "range": "± 291101",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16086250,
            "range": "± 185531",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20458470,
            "range": "± 240855",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53084774,
            "range": "± 913467",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 310034407,
            "range": "± 3432780",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2433743798,
            "range": "± 22160050",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "37865735+clangenb@users.noreply.github.com",
            "name": "clangenb",
            "username": "clangenb"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a377caec8319c5fef0ee6f61da84bf1b0204e866",
          "message": "[glutton-westend] and add sudo key to genesis config (#7794)\n\nI discovered in https://github.com/paritytech/polkadot-sdk/pull/7459,\nthat the overhead benchmark is not working for glutton-westend, as the\nclient can't send `system.remark` extrinsics. This was due to 2 issues:\n\n1. Alice was not set as sudo. Hence, the `CheckOnlySudoAccount` deemed\nthe extrinsic as invalid.\n2. The `CheckNonce` TxExtension also marked the extrinsic as invalid, as\nthe account doesn't exist (because glutton has no balances pallet).\n\nThis PR fixes the 1.) for now. I wanted to simply remove the\n`CheckNonce` in the TxExtension to fix 2., but it turns out that this is\nnot possible, as the tx-pool needs the nonce tag to identify the\ntransaction. https://github.com/paritytech/polkadot-sdk/pull/6884 will\nfix sending extrinsics on glutton.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: s0me0ne-unkn0wn <48632512+s0me0ne-unkn0wn@users.noreply.github.com>",
          "timestamp": "2025-03-06T15:11:00Z",
          "tree_id": "a1c792e932354f1045f12686a33922a7c994d62f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/a377caec8319c5fef0ee6f61da84bf1b0204e866"
        },
        "date": 1741276875754,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17549507,
            "range": "± 173372",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18114316,
            "range": "± 121044",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19345524,
            "range": "± 98234",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23238867,
            "range": "± 214623",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51761757,
            "range": "± 998452",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 308186067,
            "range": "± 5061815",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2538874988,
            "range": "± 64974417",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14641716,
            "range": "± 93017",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14848763,
            "range": "± 158042",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15447875,
            "range": "± 180654",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19347349,
            "range": "± 285801",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49418878,
            "range": "± 407407",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 289306080,
            "range": "± 3770335",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2394743800,
            "range": "± 41672783",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ndk@parity.io",
            "name": "Andrii",
            "username": "x3c41a"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "d5bd15b2389ae86e4b2ed1fa10dd4303208b22ab",
          "message": "[XCM] Add generic location to account converter that also works with external ecosystems for bridge hubs (#7809)\n\nThat's the continuation of\n[PR#7313](https://github.com/paritytech/polkadot-sdk/pull/7313)",
          "timestamp": "2025-03-06T17:42:54Z",
          "tree_id": "e381ef5ebc1a436cef931a6f321ff51275af944e",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d5bd15b2389ae86e4b2ed1fa10dd4303208b22ab"
        },
        "date": 1741286243839,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 24160680,
            "range": "± 1315679",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 24946068,
            "range": "± 974502",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 26004756,
            "range": "± 1349166",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 31501191,
            "range": "± 1292229",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 82905852,
            "range": "± 4185610",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 489662222,
            "range": "± 7412414",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 3050532191,
            "range": "± 185784097",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 18306626,
            "range": "± 585651",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 19037174,
            "range": "± 834591",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 19135306,
            "range": "± 315937",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 24457477,
            "range": "± 666481",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 64201414,
            "range": "± 1778965",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 409931533,
            "range": "± 26553055",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2947583066,
            "range": "± 82674456",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "32275622+seemantaggarwal@users.noreply.github.com",
            "name": "seemantaggarwal",
            "username": "seemantaggarwal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f32153f589d5e9c3d450ff6ee8c73898824d335a",
          "message": "adding verbose rustdoc to diff between build-spec and chain-spec-builder (#7698)\n\nFollow up from #7619 \nAdding a more verbose rustdoc for guidance and difference between\nchain-spec-builder and build-spec commands under polkadot-omni-node\n\n---------\n\nCo-authored-by: Iulian Barbu <14218860+iulianbarbu@users.noreply.github.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-03-06T18:16:11Z",
          "tree_id": "9396ec7648c2cc2bfdde7243d865a174ebc22b1f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f32153f589d5e9c3d450ff6ee8c73898824d335a"
        },
        "date": 1741287885224,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18544443,
            "range": "± 118558",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18968054,
            "range": "± 194516",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20396491,
            "range": "± 193183",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24333727,
            "range": "± 249468",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54328418,
            "range": "± 978442",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 335257075,
            "range": "± 11019919",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2457208144,
            "range": "± 22538230",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15184914,
            "range": "± 112318",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15407826,
            "range": "± 147006",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15823159,
            "range": "± 110318",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19758217,
            "range": "± 209605",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50584664,
            "range": "± 591600",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 299640623,
            "range": "± 4623371",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2631939102,
            "range": "± 343706588",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41779041+alvicsam@users.noreply.github.com",
            "name": "Alexander Samusev",
            "username": "alvicsam"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "312b5b40a0e52b02a1a94b3a05161506a6a2311b",
          "message": "cmd-bot: divide workflow into 2 steps (#7711)\n\nMore details\n[here](https://github.com/paritytech/security/issues/103#issuecomment-2682362253)\n\ncc https://github.com/paritytech/security/issues/103",
          "timestamp": "2025-03-06T19:08:16Z",
          "tree_id": "7d9e376ce1259d8f16e2f22fb2da35ce6109a9d7",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/312b5b40a0e52b02a1a94b3a05161506a6a2311b"
        },
        "date": 1741291058630,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17277470,
            "range": "± 161339",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17768257,
            "range": "± 91389",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19342066,
            "range": "± 148992",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23023295,
            "range": "± 263840",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51148744,
            "range": "± 440312",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 301813041,
            "range": "± 3876789",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2272893148,
            "range": "± 61185125",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14613847,
            "range": "± 151782",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14610685,
            "range": "± 116568",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15143277,
            "range": "± 147145",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18800216,
            "range": "± 129317",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 48630876,
            "range": "± 340556",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 284657187,
            "range": "± 2059604",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2277889423,
            "range": "± 8904373",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "gui.thiolliere@gmail.com",
            "name": "Guillaume Thiolliere",
            "username": "gui1117"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9dbcc0e4620380c11d2efb91bfb942927dcd6eb5",
          "message": "Improve metadata for `SkipCheckIfFeeless` (#7813)\n\nIf the inner transaction extension used inside `SkipCheckIfFeeless` are\nmultiples then the metadata is not correct, it is now fixed.\n\nE.g. if the transaction extension is `SkipCheckIfFeeless::<Runtime,\n(Payment1, Payment2)>` then the metadata was wrong.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-03-06T21:09:27Z",
          "tree_id": "a27e72f1268d6922ba600c9c811cfb381e6463c6",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/9dbcc0e4620380c11d2efb91bfb942927dcd6eb5"
        },
        "date": 1741298640314,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 23968810,
            "range": "± 390259",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 24646905,
            "range": "± 785928",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 26002084,
            "range": "± 807537",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 30514032,
            "range": "± 597525",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 72949013,
            "range": "± 1457169",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 469723770,
            "range": "± 8817657",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 3032460566,
            "range": "± 167834298",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 18835842,
            "range": "± 367255",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 18059022,
            "range": "± 456162",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 19386376,
            "range": "± 333336",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 25518699,
            "range": "± 428701",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 64138509,
            "range": "± 3494300",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 407773190,
            "range": "± 9434387",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2961296781,
            "range": "± 33284890",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6ce9948eb62f2e2e9b9ecf4273854b80ec13dfcb",
          "message": "`apply_authorized_upgrade`: Remote authorization if the version check fails (#7812)\n\nThis pr ensures that we remove the `authorization` for a runtime upgrade\nif the version check failed. If that check is failing, it means that the\nruntime upgrade is invalid and the check will never succeed.\n\nBesides that the pr is doing some clean ups.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-03-07T10:35:24Z",
          "tree_id": "07c536a597117f70c15935d2bf4a470d1ea3e105",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/6ce9948eb62f2e2e9b9ecf4273854b80ec13dfcb"
        },
        "date": 1741346708995,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18089403,
            "range": "± 174002",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18397982,
            "range": "± 226649",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19876560,
            "range": "± 111980",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23875104,
            "range": "± 365186",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 58031801,
            "range": "± 1954693",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 349123895,
            "range": "± 7648348",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2321705100,
            "range": "± 219527676",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15682424,
            "range": "± 166665",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15960157,
            "range": "± 203045",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16465552,
            "range": "± 233044",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21003124,
            "range": "± 261552",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 55321576,
            "range": "± 1519591",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 333964159,
            "range": "± 8103915",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2562213103,
            "range": "± 19797352",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1728078+michalkucharczyk@users.noreply.github.com",
            "name": "Michal Kucharczyk",
            "username": "michalkucharczyk"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "24a4b55efc067c7d382aeda03f58e20e0b106523",
          "message": "`fatxpool`: improved handling of finality stalls (#7639)\n\n#### PR Description\n\nThis pull request introduces measures to handle finality stalls by :\n- notifying outdated transactions with a\n[`FinalityTimeout`](https://github.com/paritytech/polkadot-sdk/blob/d821c84d61b8040d979178b2355be7dd1da83388/substrate/client/transaction-pool/api/src/lib.rs#L145-L147)\nevent.\n- removing outdated views from the `view_store`\n\nAn item is considered _outdated_ when the difference between its\nassociated block and the current block exceeds a pre-defined threshold.\n\n#### Note for Reviewers\nThe core logic is provided in the following small commits:\n- `ViewStore`: new method\n[`finality_stall_view_cleanup`](https://github.com/paritytech/polkadot-sdk/blob/d821c84d61b8040d979178b2355be7dd1da83388/substrate/client/transaction-pool/src/fork_aware_txpool/view_store.rs#L869-L903)\nfor removing stale views was added: 64267000db\n- `ForkAwareTransactionPool`: core logic for tracking finality stalls\nadded here: 7b37ea6f0b. Entry point in\n[`finality_stall_cleanup`](https://github.com/paritytech/polkadot-sdk/blob/d821c84d61b8040d979178b2355be7dd1da83388/substrate/client/transaction-pool/src/fork_aware_txpool/fork_aware_txpool.rs#L1096-L1136)\n- Some related renaming was made to better reflect purpose/shorten the\nnames: 1a3a1284b4, a511601fe9. Also new method\n[`transactions_finality_timeout`](https://github.com/paritytech/polkadot-sdk/blob/a511601fe9f0febba43d223f12e23ee33e0606b1/substrate/client/transaction-pool/src/fork_aware_txpool/multi_view_listener.rs#L771-L790)\nfor triggering external events was added for `MultiViewListener`.\n- `included_transactions` which basically is mapping `block hash ->\nincluded transactions hashes`, is also used to find to included\ntransactions.\n\nI also sneaked in some minor improvements:\n- fixed per-transaction logging: 1572f721e4\n- `handle_pre_finalized` method was removed, it was some old leftover\nwhich is no longer needed: a6f84ad019,\n\ncloses: #5482\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Sebastian Kunert <skunert49@gmail.com>\nCo-authored-by: Iulian Barbu <14218860+iulianbarbu@users.noreply.github.com>",
          "timestamp": "2025-03-07T13:06:40Z",
          "tree_id": "ae27d68cadf4d3ebc44a5514a65501668c838e18",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/24a4b55efc067c7d382aeda03f58e20e0b106523"
        },
        "date": 1741355773375,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18974781,
            "range": "± 304332",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18618123,
            "range": "± 191783",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20106785,
            "range": "± 295678",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23658407,
            "range": "± 316652",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54164203,
            "range": "± 1605168",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 327910674,
            "range": "± 8563122",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2700399131,
            "range": "± 140510518",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14920411,
            "range": "± 182995",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15226857,
            "range": "± 280374",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15478204,
            "range": "± 158771",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19585455,
            "range": "± 108659",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50180628,
            "range": "± 659469",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 300247222,
            "range": "± 9618564",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2407145464,
            "range": "± 16791489",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d532437abacd3e4445b39cfcfbe9230044e91363",
          "message": "Bump trie-db to latest version (#7847)\n\nBumping trie-db to latest version to pick up\nhttps://github.com/paritytech/trie/pull/216\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>",
          "timestamp": "2025-03-07T21:13:56Z",
          "tree_id": "e5a2ca875322673bbabe1794715e520d75bebeb5",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d532437abacd3e4445b39cfcfbe9230044e91363"
        },
        "date": 1741385822234,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17896614,
            "range": "± 163631",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18369967,
            "range": "± 264748",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19789349,
            "range": "± 118804",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23640905,
            "range": "± 321772",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57262679,
            "range": "± 1126600",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 335961713,
            "range": "± 4670724",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2541796348,
            "range": "± 191694025",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15143819,
            "range": "± 188923",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15487901,
            "range": "± 261912",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15812982,
            "range": "± 217109",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19905240,
            "range": "± 416968",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54181777,
            "range": "± 895363",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 306888603,
            "range": "± 5791317",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2438146368,
            "range": "± 17522617",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "gorka.irazoki@gmail.com",
            "name": "girazoki",
            "username": "girazoki"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6b980646920a1268b491b3b37c266aa486d66eb2",
          "message": "Make pallet-transaction-payment-benchmark work with ed 0 (#7820)\n\n# Description\n\nChains like moonbeam work with an ED deposit of 0 (insecure-ed-0) which\nis unsable with the current pallet-transaction-payment benchmark. This\nPR adds an if-else case in case the existential deposit found is 0.",
          "timestamp": "2025-03-07T22:13:25Z",
          "tree_id": "2fec3362e776f9a50b201d31af5f61dd7c84b62b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/6b980646920a1268b491b3b37c266aa486d66eb2"
        },
        "date": 1741389553999,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18322508,
            "range": "± 596514",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18256885,
            "range": "± 138461",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19691336,
            "range": "± 191611",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23852926,
            "range": "± 266854",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55024955,
            "range": "± 832826",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 342855991,
            "range": "± 4075822",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2725071556,
            "range": "± 58661687",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14848024,
            "range": "± 102752",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15046402,
            "range": "± 318488",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15933292,
            "range": "± 188097",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19966280,
            "range": "± 177001",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51259642,
            "range": "± 490734",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 313016113,
            "range": "± 3969098",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2435003869,
            "range": "± 25012775",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4ada34bda078989db156e6f4ef30f56654592030",
          "message": "`CheckOnlySudoAccount`: Provide some tags (#7838)\n\nClose: https://github.com/paritytech/polkadot-sdk/issues/7816\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-03-10T08:20:57Z",
          "tree_id": "d8d214c824afe2b4267739b69f4d6a7e0b6d32c7",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4ada34bda078989db156e6f4ef30f56654592030"
        },
        "date": 1741598034822,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18208611,
            "range": "± 310154",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18582444,
            "range": "± 237013",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19987309,
            "range": "± 221377",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24050538,
            "range": "± 361364",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55677884,
            "range": "± 886840",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 344579930,
            "range": "± 4628211",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2523665671,
            "range": "± 88533669",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14892709,
            "range": "± 214992",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15086275,
            "range": "± 216476",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15682738,
            "range": "± 253367",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19894198,
            "range": "± 314518",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50702398,
            "range": "± 1159009",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 307712193,
            "range": "± 4438894",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2397837875,
            "range": "± 26292178",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "35823283+jpserrat@users.noreply.github.com",
            "name": "jpserrat",
            "username": "jpserrat"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ea8783b168db558691d735f67ac3474ed5c738f3",
          "message": "Add EventEmitter to XCM Executor (#7234)\n\nCloses #6851 \n\nThis PR adds an `EventEmitter` trait to the XCM Executor configuration,\nenabling event emission for XCM handling. The implementation introduces\nthree dedicated functions to emit relevant events:\n\n- `emit_sent_event`: Emits a `Sent` event when an XCM is successfully\nsent.\n- `emit_send_failure_event`: Emits a `SendFailed` event when an XCM\nfails to send.\n- `emit_process_failure_event`: Emits a `ProcessXcmError` event when an\nXCM fails during processing.\n\nKusama address: FkB6QEo8VnV3oifugNj5NeVG3Mvq1zFbrUu4P5YwRoe5mQN\n\n---------\n\nCo-authored-by: Raymond Cheung <178801527+raymondkfcheung@users.noreply.github.com>\nCo-authored-by: Adrian Catangiu <adrian@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-03-10T13:47:31Z",
          "tree_id": "e97f1dd417fb574a851389504151aca44f671c91",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ea8783b168db558691d735f67ac3474ed5c738f3"
        },
        "date": 1741617469998,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18145828,
            "range": "± 179152",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18238883,
            "range": "± 193073",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20000410,
            "range": "± 405022",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24948984,
            "range": "± 394631",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55630675,
            "range": "± 2144611",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 334203566,
            "range": "± 7492162",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2255117929,
            "range": "± 80749453",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14770333,
            "range": "± 147501",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14839140,
            "range": "± 68263",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15373773,
            "range": "± 94687",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19600738,
            "range": "± 225725",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50885326,
            "range": "± 433841",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 297949523,
            "range": "± 3777187",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2367712810,
            "range": "± 29105701",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "0bea374d7d68624ebb0393fc3541c7669aa26a23",
          "message": "Do some more checks for `authorized_upgrade`. (#7864)\n\nAs proposed by Gui :)",
          "timestamp": "2025-03-10T15:26:55Z",
          "tree_id": "b205bc5f0f789c17ff8a3f64b14c4e173493e4e3",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/0bea374d7d68624ebb0393fc3541c7669aa26a23"
        },
        "date": 1741623814699,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17773725,
            "range": "± 139958",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18009438,
            "range": "± 103913",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19413850,
            "range": "± 159214",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23034365,
            "range": "± 206314",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51297722,
            "range": "± 984765",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 317706046,
            "range": "± 4234922",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2100536530,
            "range": "± 52085399",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14135428,
            "range": "± 85220",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14406714,
            "range": "± 122391",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14754898,
            "range": "± 100625",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18915835,
            "range": "± 107692",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 48102572,
            "range": "± 693462",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 276334208,
            "range": "± 1669505",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2251744171,
            "range": "± 40247558",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "skunert49@gmail.com",
            "name": "Sebastian Kunert",
            "username": "skunert"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fb19de2bd40de3f3b09009e4fa9237886c1cf3cc",
          "message": "Remove gitlab zombienet tests for cumulus/substrate (#7870)\n\nFollow up of : #7217, #7529 \n\nWhen the zombienet tests were integrated into github, it seems like the\ngitlab ones remained active. But they look a lot more unstable. This\ncauses confusion when the same tests fail and pass at the same time\n(aside from extra costs). This PR attempts to get rid of the gitlab\nones.",
          "timestamp": "2025-03-10T17:16:12Z",
          "tree_id": "a1f836ddeb898256e2cc56cfbf2a831d29401b4c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/fb19de2bd40de3f3b09009e4fa9237886c1cf3cc"
        },
        "date": 1741629964524,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17951095,
            "range": "± 70213",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18457639,
            "range": "± 187040",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19888386,
            "range": "± 127635",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23478712,
            "range": "± 287441",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53747956,
            "range": "± 1234504",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 329569708,
            "range": "± 4208342",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2423510355,
            "range": "± 201857356",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15194845,
            "range": "± 392544",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15229453,
            "range": "± 140925",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16020978,
            "range": "± 335386",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20514362,
            "range": "± 305890",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52471493,
            "range": "± 711109",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 307058721,
            "range": "± 5962448",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2463155069,
            "range": "± 22855883",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "egor@parity.io",
            "name": "Egor_P",
            "username": "EgorPopelyaev"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9a15dce993a62c65a89dcb54158bc2ff181f5b9",
          "message": "[Release|Ci/CD] Update path to `ci-unfied` Dockerfile to grab a right Rust version (#7869)",
          "timestamp": "2025-03-11T11:37:01Z",
          "tree_id": "47dcf4cb85807c0d52cc94a40af415ee10c5be88",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e9a15dce993a62c65a89dcb54158bc2ff181f5b9"
        },
        "date": 1741696501807,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17473084,
            "range": "± 161958",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17716477,
            "range": "± 129653",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19103806,
            "range": "± 135466",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22926135,
            "range": "± 118737",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 50602139,
            "range": "± 329844",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 285117484,
            "range": "± 2677737",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2127763380,
            "range": "± 140683099",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14386917,
            "range": "± 118700",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14590320,
            "range": "± 155225",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14990670,
            "range": "± 148108",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18741160,
            "range": "± 164028",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 48277653,
            "range": "± 280456",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 278653364,
            "range": "± 2135995",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2266513836,
            "range": "± 20700252",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "egor@parity.io",
            "name": "Egor_P",
            "username": "EgorPopelyaev"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "544fefac0117851f08b2c2a177e0a6e4a4eb2a0d",
          "message": "[Release|CI/CD] Fixes for the promote rc to final flow (#7877)\n\nThis PR contains few fixes for the Promote RC to final flow:\n- Now the `polkadot-preapre-worker` and `polkadot-execute-worker`\nartefacts will be uploaded alongside with the `polakdot` artefact (it\nwas missing before)\n- Added missing upload of the deb package \n- Few typos fixed\n\nCloses: https://github.com/paritytech/release-engineering/issues/241",
          "timestamp": "2025-03-11T12:53:48Z",
          "tree_id": "597bb010b290d6e4df33121a68f31044b216389f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/544fefac0117851f08b2c2a177e0a6e4a4eb2a0d"
        },
        "date": 1741700436172,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 16991699,
            "range": "± 143802",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17236310,
            "range": "± 84287",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18684820,
            "range": "± 162633",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22261082,
            "range": "± 183643",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 49545020,
            "range": "± 376774",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 275404191,
            "range": "± 4044724",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2220883635,
            "range": "± 65761475",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14212375,
            "range": "± 64882",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14193406,
            "range": "± 433319",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14790504,
            "range": "± 89649",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18933895,
            "range": "± 47026",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 48383921,
            "range": "± 583567",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 274066630,
            "range": "± 2572073",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2176583235,
            "range": "± 25987637",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "60601340+lexnv@users.noreply.github.com",
            "name": "Alexandru Vasile",
            "username": "lexnv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "bcc272a1058f5b7cf9688a23b27d45349b66cb6a",
          "message": "network: Make litep2p the default backend in Kusama (#7866)\n\nThis PR makes the litep2p backend the default network backend in Kusama.\n\nWe performed a gradual rollout in Kusama by asking validators to\nmanually switch to litep2p. The rollout went smoothly, with 250\nvalidators running litep2p without issues. This PR represents the next\nstep in testing the backend at scale.\n\nThanks to everyone who contributed to making this happen! A special\nshoutout to the validators for their prompt support and cooperation 🙏\n\nWhile at it, the litep2p release is bumped to the latest 0.9.2, which\ndowngrades a spamming log to debug.\n\n\n### CLI Testing Done\n\n\n```\n### Kusama without network backend specified\nRUST_LOG=info ./target/release/polkadot --chain kusama --pruning=1000 --in-peers 50 --out-peers 50 --sync=warp --detailed-log-output\n2025-03-10 14:24:18.503  INFO main sub-libp2p: Running litep2p network backend\n\n### Kusama with libp2p\nRUST_LOG=info ./target/release/polkadot --chain kusama --pruning=1000 --in-peers 50 --out-peers 50 --sync=warp --detailed-log-output --network-backend libp2p\nINFO main sub-libp2p: Running libp2p network backend\n\n### Kusama with litep2p\nRUST_LOG=info ./target/release/polkadot --chain kusama --pruning=1000 --in-peers 50 --out-peers 50 --sync=warp --detailed-log-output --network-backend litep2p\nINFO main sub-libp2p: Running litep2p network backend\n\n### Polkadot without network backend specified\nRUST_LOG=info ./target/release/polkadot --chain polkadot --pruning=1000 --in-peers 50 --out-peers 50 --sync=warp --detailed-log-output\n2025-03-10 14:27:03.762  INFO main sub-libp2p: Running libp2p network backend \n\n ```\n\ncc @paritytech/networking\n\n---------\n\nSigned-off-by: Alexandru Vasile <alexandru.vasile@parity.io>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-03-11T13:32:38Z",
          "tree_id": "9caa7f4f2b6395e852bdcdf309a80dc8b7d730d6",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/bcc272a1058f5b7cf9688a23b27d45349b66cb6a"
        },
        "date": 1741703155547,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 16977459,
            "range": "± 271496",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17153606,
            "range": "± 81511",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18537937,
            "range": "± 87886",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 21832743,
            "range": "± 153994",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 49776588,
            "range": "± 690053",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 278719219,
            "range": "± 1731386",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2033211672,
            "range": "± 20330662",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14374920,
            "range": "± 120935",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14406970,
            "range": "± 120107",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14846797,
            "range": "± 96272",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18468752,
            "range": "± 96644",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 47713921,
            "range": "± 302918",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 274435513,
            "range": "± 1925002",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2197649082,
            "range": "± 42691940",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "10196091+Ank4n@users.noreply.github.com",
            "name": "Ankan",
            "username": "Ank4n"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f540d2b3d26d24a952e792cdae05bb89c43e5173",
          "message": "[staking] Currency Migration and Overstake fix (#7763)\n\n## Summary\nThe existing fungible migration code has an issue when handling\npartially unbonding accounts, leaving them in an inconsistent state.\nThese changes fix it by properly withdrawing overstake from unlock\nchunks.\n\nThis PR also removes the `withdraw_overstake` extrinsic from\npallet-staking, as this scenario could only occur before the fungible\nmigration. With fungibles, over-staking is no longer possible.\n\n## TODO\n- [ ] Backport to stable2503.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-03-12T21:14:17Z",
          "tree_id": "36ad96073ed93e96c753686d4196d08aeb1f6070",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f540d2b3d26d24a952e792cdae05bb89c43e5173"
        },
        "date": 1741818384801,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17638103,
            "range": "± 165239",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17879584,
            "range": "± 244680",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19155795,
            "range": "± 118952",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22925458,
            "range": "± 136501",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51877290,
            "range": "± 611661",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 315221983,
            "range": "± 5441500",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2396948178,
            "range": "± 128690976",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14503469,
            "range": "± 106400",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14759260,
            "range": "± 118418",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15582387,
            "range": "± 147303",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19214282,
            "range": "± 295267",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 48848423,
            "range": "± 386795",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 285836270,
            "range": "± 4659692",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2406381941,
            "range": "± 98652825",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "write@reusable.software",
            "name": "ordian",
            "username": "ordian"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f8c90b2a01ec77579bccd21ae17bd6ff2eeffd6a",
          "message": "staking: add `manual_slash` extrinsic (#7805)\n\nThis PR adds a convenience extrinsic `manual_slash` for the governance\nto slash a validator manually.\n\n## Changes\n\n* The `on_offence` implementation for the Staking pallet accepts a slice\nof `OffenceDetails` including the full validator exposure, however, it\nsimply\n[ignores](https://github.com/paritytech/polkadot-sdk/blob/c8d33396345237c1864dfc0a9b2172b7dfe7ac8f/substrate/frame/staking/src/pallet/impls.rs#L1864)\nthat part. I've extracted the functionality into an inherent\n`on_offence` method that takes `OffenceDetails` without the full\nexposure and this is called directly in `manual_slash`\n* `manual_slash` creates an offence for a validator with a given slash\npercentange\n\n## Questions\n\n- [x] should `manual_slash` accept session instead of an era when the\nvalidator was in the active set? staking thinks in terms of eras and we\ncan check out of bounds this way, which is why it was chosen for this\nimplementation, but if there are arguments against, happy to change to\nsession index\n- [X] should the accepted origin be something more than just root?\nChanged to `T::AdminOrigin` to align with `cancel_deferred_slash`\n- [X] should I adapt this PR also against\nhttps://github.com/paritytech/polkadot-sdk/pull/6996? looking at the\nchanges, it should apply mostly without conflicts\n\n---------\n\nCo-authored-by: Tsvetomir Dimitrov <tsvetomir@parity.io>\nCo-authored-by: Ankan <10196091+Ank4n@users.noreply.github.com>",
          "timestamp": "2025-03-13T03:39:41Z",
          "tree_id": "bcbca66880e3f7f7e700e2384d6346e125ae2057",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f8c90b2a01ec77579bccd21ae17bd6ff2eeffd6a"
        },
        "date": 1741840155865,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18625958,
            "range": "± 122577",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19018140,
            "range": "± 130875",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20648838,
            "range": "± 276075",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24703738,
            "range": "± 299202",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57002970,
            "range": "± 638695",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 361933374,
            "range": "± 3756687",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2621464668,
            "range": "± 136431846",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15672861,
            "range": "± 124128",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15774239,
            "range": "± 162808",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16371559,
            "range": "± 117829",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20658534,
            "range": "± 214731",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52208504,
            "range": "± 576764",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 323146850,
            "range": "± 6271320",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2498554466,
            "range": "± 18205451",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "gui.thiolliere@gmail.com",
            "name": "Guillaume Thiolliere",
            "username": "gui1117"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a71a701ce8ad20e46acc1881a9aa25982f5ae04c",
          "message": "Improve error message in benchmark macro (#7873)\n\ngiving the wrong origin in `extrinsic_call` would result in:\n```\n   |\n43 | #[benchmarks]\n   | ^^^^^^^^^^^^^\n   | |\n   | expected associated type, found `Result<RawOrigin<...>, ...>`\n   | arguments to this function are incorrect\n   |\n   = note: expected associated type `<T as frame_system::Config>::RuntimeOrigin`\n                         found enum `Result<RawOrigin<<T as frame_system::Config>::AccountId>, <T as frame_system::Config>::RuntimeOrigin>`\nnote: method defined here\n  --> $WORKSPACE/substrate/frame/support/src/traits/dispatch.rs\n   |\n   |     fn dispatch_bypass_filter(self, origin: Self::RuntimeOrigin) -> DispatchResultWithPostInfo;\n   |        ^^^^^^^^^^^^^^^^^^^^^^\n   = note: this error originates in the attribute macro `benchmarks` (in Nightly builds, run with -Z macro-backtrace for more info)\n```\n\nNow it results in an error message with good span.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-03-13T08:54:34Z",
          "tree_id": "eab4cc22e5765ab06661ea1fa2cdfd4ac838d6f3",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/a71a701ce8ad20e46acc1881a9aa25982f5ae04c"
        },
        "date": 1741859168892,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17246019,
            "range": "± 168688",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17606753,
            "range": "± 110126",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19048531,
            "range": "± 163676",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23034626,
            "range": "± 242297",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 52606437,
            "range": "± 783406",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 329456871,
            "range": "± 9725259",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2295468802,
            "range": "± 159364190",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14889682,
            "range": "± 136496",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15232069,
            "range": "± 92060",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15601197,
            "range": "± 657346",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19835944,
            "range": "± 275978",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50139044,
            "range": "± 842790",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 338223942,
            "range": "± 10486632",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2583005648,
            "range": "± 58886962",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ab7c6080273593fc286c884bce6761197ba38be5",
          "message": "[pallet-revive] Support blocktag in eth_getLogs RPC (#7879)\n\nSupport \"latest\" blocktag in ethGetLogs from_block and to_block\nparameters\nThis is not in specs\n(https://github.com/ethereum/execution-apis/blob/main/src/schemas/filter.yaml#L17)\n\nbut defined and used by 3rd parties and in some other reference docs \n\nSee \n\nhttps://docs.metamask.io/services/reference/ethereum/json-rpc-methods/eth_getlogs/\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-03-13T09:11:09Z",
          "tree_id": "4f283806ca8a551addc824b440f141f23a0c48bf",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ab7c6080273593fc286c884bce6761197ba38be5"
        },
        "date": 1741861265210,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17331708,
            "range": "± 122464",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17654307,
            "range": "± 187420",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19261693,
            "range": "± 249337",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22480073,
            "range": "± 157852",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51982120,
            "range": "± 578384",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 313758603,
            "range": "± 6288896",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2307339108,
            "range": "± 170735139",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14682651,
            "range": "± 104214",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14936845,
            "range": "± 228732",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15449114,
            "range": "± 201994",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19346180,
            "range": "± 194219",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50114978,
            "range": "± 264459",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 289352218,
            "range": "± 3052186",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2366943705,
            "range": "± 23325971",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "egor@parity.io",
            "name": "Egor_P",
            "username": "EgorPopelyaev"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "64dc0effc3fe7565667c93d9a797bb31c5c6bfc9",
          "message": "[Release|CI/CD] Update version of the cache action in the Publish docker ci (#7892)",
          "timestamp": "2025-03-13T10:42:01Z",
          "tree_id": "45bfa64996733cb1a26679e217e13e615b1e780f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/64dc0effc3fe7565667c93d9a797bb31c5c6bfc9"
        },
        "date": 1741866335679,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17268573,
            "range": "± 190235",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17567528,
            "range": "± 96364",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19244368,
            "range": "± 163147",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22769459,
            "range": "± 138823",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 50328848,
            "range": "± 322119",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 302468500,
            "range": "± 4684168",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2421023781,
            "range": "± 137175093",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14567594,
            "range": "± 287909",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14695449,
            "range": "± 101779",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15237602,
            "range": "± 85179",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18878359,
            "range": "± 144460",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 48806909,
            "range": "± 356110",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 281764114,
            "range": "± 2413809",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2288128629,
            "range": "± 26725601",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "363911+pepoviola@users.noreply.github.com",
            "name": "Javier Viola",
            "username": "pepoviola"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "425d61889b04f490f01163cbda978b2a8893f0c2",
          "message": "[CI] bump timeout wait for build in zombienet workflows. (#7871)\n\nSet timeout to 60mins. Prevent failures like this one\nhttps://github.com/paritytech/polkadot-sdk/actions/runs/13651327605/job/38160444244?pr=7790\n\n\nThanks!\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-03-13T14:30:32Z",
          "tree_id": "4f6c337ee19e8682c8f62d511c1957c39c312b19",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/425d61889b04f490f01163cbda978b2a8893f0c2"
        },
        "date": 1741879891635,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 23507169,
            "range": "± 466786",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 23973382,
            "range": "± 562188",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 25263362,
            "range": "± 328034",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 31020363,
            "range": "± 851641",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 73432617,
            "range": "± 1400430",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 481657400,
            "range": "± 9195223",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 3088439861,
            "range": "± 236516886",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17905509,
            "range": "± 320537",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 18283298,
            "range": "± 358712",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18971456,
            "range": "± 386301",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 25023920,
            "range": "± 551467",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 66262017,
            "range": "± 2563070",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 437620252,
            "range": "± 12396816",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 3101683154,
            "range": "± 134498231",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "franciscoaguirreperez@gmail.com",
            "name": "Francisco Aguirre",
            "username": "franciscoaguirre"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c4b8ec123afcef596fbc4ea3239ff9e392bcaf36",
          "message": "Use non-native token to benchmark xcm on asset hub (#7893)\n\nAsset Hub was using the native token for benchmarking xcm instructions.\nThis is not the best since it's cheaper than using something in\n`pallet-assets` for example.\nHad to remove some restrictive checks from `pallet-xcm-benchmarks`.\n\nI'll bring back the checks with a better framework in the future that\nallows for handling multiple assets (`fungibles::*` traits).\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-03-13T17:06:11Z",
          "tree_id": "b70a6351d832786ee8779d4624b63ed95a8e648c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c4b8ec123afcef596fbc4ea3239ff9e392bcaf36"
        },
        "date": 1741889484830,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17411512,
            "range": "± 142272",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17617734,
            "range": "± 124647",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19340991,
            "range": "± 186875",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23037384,
            "range": "± 241645",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53140351,
            "range": "± 710531",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 328519105,
            "range": "± 4818486",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2461699051,
            "range": "± 87814495",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14632803,
            "range": "± 144900",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14783498,
            "range": "± 166408",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15379534,
            "range": "± 119730",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19352357,
            "range": "± 190106",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49915121,
            "range": "± 706586",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 290956457,
            "range": "± 4071331",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2374679391,
            "range": "± 28817793",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "44604217+tmpolaczyk@users.noreply.github.com",
            "name": "tmpolaczyk",
            "username": "tmpolaczyk"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "363bd6bd5679594441499fce5916d3d47270865e",
          "message": "Remove clones from block seal function (#7917)\n\nShouldn't matter much, but this is run on every produced block so free\nperformance",
          "timestamp": "2025-03-13T20:19:33Z",
          "tree_id": "12b56d3ea966e736c799d7100d75bdd10d824293",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/363bd6bd5679594441499fce5916d3d47270865e"
        },
        "date": 1741900524623,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17485721,
            "range": "± 156344",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17787168,
            "range": "± 147855",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19241135,
            "range": "± 74421",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22781450,
            "range": "± 133439",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51253234,
            "range": "± 635409",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 299743915,
            "range": "± 2928323",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2317011032,
            "range": "± 9113877",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14381786,
            "range": "± 98699",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14518500,
            "range": "± 114891",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14994323,
            "range": "± 112206",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19355905,
            "range": "± 165768",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49071652,
            "range": "± 1660714",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 278406594,
            "range": "± 1224158",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2269031217,
            "range": "± 13480915",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "d5327157c882bb5482967fd703782b61da3db199",
          "message": "sp-api: Support `mut` in `impl_runtime_apis!` (#7924)\n\nThis brings support for declaring variables in parameters as `mut`\ninside of `impl_runtime_apis!`.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-03-14T12:03:29Z",
          "tree_id": "da3991fef8025a7d34e126c440f3f0aefc01eeb4",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d5327157c882bb5482967fd703782b61da3db199"
        },
        "date": 1741956863120,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17762546,
            "range": "± 111629",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18128493,
            "range": "± 193459",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19751231,
            "range": "± 187552",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23644351,
            "range": "± 254484",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55627620,
            "range": "± 1113265",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 347001538,
            "range": "± 5896805",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2697701439,
            "range": "± 128587574",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15146802,
            "range": "± 200753",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15359403,
            "range": "± 267075",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15991069,
            "range": "± 216384",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20320002,
            "range": "± 339450",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51804158,
            "range": "± 798152",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 305366706,
            "range": "± 7248995",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2406981720,
            "range": "± 15390668",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "54316454+sandreim@users.noreply.github.com",
            "name": "Andrei Sandu",
            "username": "sandreim"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c7d7a3ef5e5d1f903bc1804835c344568e1ab7b9",
          "message": "cumulus: fix pov exporter format (#7923)\n\nChanges the POV format used by pov exporter and validator. The\n`pov-validator` will now work with PoVs recovered from relay chain DA\nand created by the collator pov exporter.\n\n---------\n\nSigned-off-by: Andrei Sandu <andrei-mihail@parity.io>\nCo-authored-by: ordian <write@reusable.software>",
          "timestamp": "2025-03-14T12:24:46Z",
          "tree_id": "33cda48323ea390b1f8fb3c42215dc595e952c08",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c7d7a3ef5e5d1f903bc1804835c344568e1ab7b9"
        },
        "date": 1741958314027,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18984316,
            "range": "± 346321",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19917809,
            "range": "± 165206",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20696731,
            "range": "± 630039",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24623628,
            "range": "± 319257",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54968429,
            "range": "± 770829",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 370488660,
            "range": "± 6172942",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2437446071,
            "range": "± 190415517",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15777287,
            "range": "± 171837",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16120877,
            "range": "± 87711",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16973625,
            "range": "± 164364",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20945894,
            "range": "± 276776",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52989965,
            "range": "± 737928",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 320225097,
            "range": "± 5116241",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2484239945,
            "range": "± 20269577",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "24193167+kevin-valerio@users.noreply.github.com",
            "name": "kvalerio",
            "username": "kevin-valerio"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "762f902397a585175a6dae26f021e52a20328138",
          "message": "Fixing token-economics dead link (#5302)\n\nThe page\n[2-token-economics](https://research.web3.foundation/en/latest/polkadot/overview/2-token-economics.html)\nis a dead link, replacing it with\n[token-economics](https://research.web3.foundation/Polkadot/overview/token-economics).\n\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-03-14T21:43:08Z",
          "tree_id": "e0fe144b3f7c71b759e66527e6aac740272e3bea",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/762f902397a585175a6dae26f021e52a20328138"
        },
        "date": 1741991652977,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19002254,
            "range": "± 187002",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19724124,
            "range": "± 233488",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21108692,
            "range": "± 275167",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25100984,
            "range": "± 209981",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56765440,
            "range": "± 1168882",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 375466725,
            "range": "± 7154122",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2493049668,
            "range": "± 162632620",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15626496,
            "range": "± 291713",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15510715,
            "range": "± 147052",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16307020,
            "range": "± 185255",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20455506,
            "range": "± 460449",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52461930,
            "range": "± 994859",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 323820552,
            "range": "± 4584910",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2501411992,
            "range": "± 32299854",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "evgeny@parity.io",
            "name": "Evgeny Snitko",
            "username": "AndWeHaveAPlan"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d3f68513aaf633707d39ad04fbcd10e3a4737704",
          "message": "remove compromised action (#7934)\n\nremove compromised tj-actions/changed-files\nset all related vars to 'true' for now\nhttps://news.ycombinator.com/item?id=43368870",
          "timestamp": "2025-03-15T17:17:47Z",
          "tree_id": "cd4f0df62904cea2995661e9aa9b20f88b79b985",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d3f68513aaf633707d39ad04fbcd10e3a4737704"
        },
        "date": 1742061937106,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18617805,
            "range": "± 71411",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19065191,
            "range": "± 161939",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20532216,
            "range": "± 101897",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24517209,
            "range": "± 234130",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55943482,
            "range": "± 1048860",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 365355490,
            "range": "± 9133405",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2805615547,
            "range": "± 22430779",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15525683,
            "range": "± 73878",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15631815,
            "range": "± 93590",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16155169,
            "range": "± 209321",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20338499,
            "range": "± 194233",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52788720,
            "range": "± 888272",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 320936988,
            "range": "± 5132379",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2512926297,
            "range": "± 40001977",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "88a31f2d55cafc0a73ef65b309a06f3824854910",
          "message": "Bump the ci_dependencies group across 1 directory with 4 updates (#7855)\n\nBumps the ci_dependencies group with 4 updates in the / directory:\n[actions-rust-lang/setup-rust-toolchain](https://github.com/actions-rust-lang/setup-rust-toolchain),\n[peter-evans/create-pull-request](https://github.com/peter-evans/create-pull-request),\n[docker/setup-buildx-action](https://github.com/docker/setup-buildx-action)\nand\n[actions/attest-build-provenance](https://github.com/actions/attest-build-provenance).\n\nUpdates `actions-rust-lang/setup-rust-toolchain` from 1.10.1 to 1.11.0\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a\nhref=\"https://github.com/actions-rust-lang/setup-rust-toolchain/releases\">actions-rust-lang/setup-rust-toolchain's\nreleases</a>.</em></p>\n<blockquote>\n<h2>v1.11.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>feat: add shared-cache-key to inputs by <a\nhref=\"https://github.com/skanehira\"><code>@​skanehira</code></a> in <a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/pull/52\">actions-rust-lang/setup-rust-toolchain#52</a></li>\n<li>fix: add cache-bin input with true as default value by <a\nhref=\"https://github.com/enkhjile\"><code>@​enkhjile</code></a> in <a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/pull/51\">actions-rust-lang/setup-rust-toolchain#51</a></li>\n<li>chore: prepare release 1.11.0 by <a\nhref=\"https://github.com/robjtede\"><code>@​robjtede</code></a> in <a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/pull/53\">actions-rust-lang/setup-rust-toolchain#53</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/skanehira\"><code>@​skanehira</code></a>\nmade their first contribution in <a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/pull/52\">actions-rust-lang/setup-rust-toolchain#52</a></li>\n<li><a href=\"https://github.com/enkhjile\"><code>@​enkhjile</code></a>\nmade their first contribution in <a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/pull/51\">actions-rust-lang/setup-rust-toolchain#51</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a\nhref=\"https://github.com/actions-rust-lang/setup-rust-toolchain/compare/v1...v1.11.0\">https://github.com/actions-rust-lang/setup-rust-toolchain/compare/v1...v1.11.0</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a\nhref=\"https://github.com/actions-rust-lang/setup-rust-toolchain/blob/main/CHANGELOG.md\">actions-rust-lang/setup-rust-toolchain's\nchangelog</a>.</em></p>\n<blockquote>\n<h1>Changelog</h1>\n<p>All notable changes to this project will be documented in this\nfile.</p>\n<p>The format is based on <a\nhref=\"https://keepachangelog.com/en/1.0.0/\">Keep a Changelog</a>,\nand this project adheres to <a\nhref=\"https://semver.org/spec/v2.0.0.html\">Semantic Versioning</a>.</p>\n<h2>[Unreleased]</h2>\n<h2>[1.11.0] - 2025-02-24</h2>\n<ul>\n<li>Add new parameter <code>cache-bin</code> that is propagated to\n<code>Swatinem/rust-cache</code> as <code>cache-bin</code> (<a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/issues/51\">#51</a>\nby <a\nhref=\"https://github.com/enkhjile\"><code>@​enkhjile</code></a>)</li>\n<li>Add new parameter <code>cache-shared-key</code> that is propagated\nto <code>Swatinem/rust-cache</code> as <code>shared-key</code> (<a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/issues/52\">#52</a>\nby <a\nhref=\"https://github.com/skanehira\"><code>@​skanehira</code></a>)</li>\n</ul>\n<h2>[1.10.1] - 2024-10-01</h2>\n<ul>\n<li>Fix problem matcher for rustfmt output.\nThe format has changed since <a\nhref=\"https://redirect.github.com/rust-lang/rustfmt/pull/5971\">rust-lang/rustfmt#5971</a>\nand now follows the form &quot;filename:line&quot;.\nThanks to <a\nhref=\"https://github.com/0xcypher02\"><code>@​0xcypher02</code></a> for\npointing out the problem.</li>\n</ul>\n<h2>[1.10.0] - 2024-09-23</h2>\n<ul>\n<li>Add new parameter <code>cache-directories</code> that is propagated\nto <code>Swatinem/rust-cache</code> (<a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/issues/44\">#44</a>\nby <a\nhref=\"https://github.com/pranc1ngpegasus\"><code>@​pranc1ngpegasus</code></a>)</li>\n<li>Add new parameter <code>cache-key</code> that is propagated to\n<code>Swatinem/rust-cache</code> as <code>key</code> (<a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/issues/41\">#41</a>\nby <a\nhref=\"https://github.com/iainlane\"><code>@​iainlane</code></a>)</li>\n<li>Make rustup toolchain installation more robust in light of planned\nchanges <a\nhref=\"https://redirect.github.com/rust-lang/rustup/issues/3635\">rust-lang/rustup#3635</a>\nand <a\nhref=\"https://redirect.github.com/rust-lang/rustup/pull/3985\">rust-lang/rustup#3985</a></li>\n<li>Allow installing multiple Rust toolchains by specifying multiple\nversions in the <code>toolchain</code> input parameter.</li>\n<li>Configure the <code>rustup override</code> behavior via the new\n<code>override</code> input. (<a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/issues/38\">#38</a>)</li>\n</ul>\n<h2>[1.9.0] - 2024-06-08</h2>\n<ul>\n<li>Add extra argument <code>cache-on-failure</code> and forward it to\n<code>Swatinem/rust-cache</code>. (<a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/issues/39\">#39</a>\nby <a\nhref=\"https://github.com/samuelhnrq\"><code>@​samuelhnrq</code></a>)<br\n/>\nSet the default the value to true.\nThis will result in more caching than previously.\nThis helps when large dependencies are compiled only for testing to\nfail.</li>\n</ul>\n<h2>[1.8.0] - 2024-01-13</h2>\n<ul>\n<li>Allow specifying subdirectories for cache.</li>\n<li>Fix toolchain file overriding.</li>\n</ul>\n<h2>[1.7.0] - 2024-01-11</h2>\n<ul>\n<li>Allow overriding the toolchain file with explicit\n<code>toolchain</code> input. (<a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/issues/26\">#26</a>)</li>\n</ul>\n<h2>[1.6.0] - 2023-12-04</h2>\n<h3>Added</h3>\n<ul>\n<li>Allow disabling problem matchers (<a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/issues/27\">#27</a>)\nThis can be useful when having a matrix of jobs, that produce the same\nerrors.</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a\nhref=\"https://github.com/actions-rust-lang/setup-rust-toolchain/commit/9399c7bb15d4c7d47b27263d024f0a4978346ba4\"><code>9399c7b</code></a>\nMerge pull request <a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/issues/53\">#53</a>\nfrom actions-rust-lang/rel-1110</li>\n<li><a\nhref=\"https://github.com/actions-rust-lang/setup-rust-toolchain/commit/3c7cfa82dce6b98e8759adf3e77a4a6da317505e\"><code>3c7cfa8</code></a>\nMerge branch 'main' into rel-1110</li>\n<li><a\nhref=\"https://github.com/actions-rust-lang/setup-rust-toolchain/commit/b38f618be2096d3fc834d239085766ecdc8f4b62\"><code>b38f618</code></a>\nMerge pull request <a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/issues/51\">#51</a>\nfrom enkhjile/main</li>\n<li><a\nhref=\"https://github.com/actions-rust-lang/setup-rust-toolchain/commit/6cbea1a7947962ed471795015128faa83769af2d\"><code>6cbea1a</code></a>\nchore: prepare release 1.11.0</li>\n<li><a\nhref=\"https://github.com/actions-rust-lang/setup-rust-toolchain/commit/6f9a9da9f9383fbd8dc2dd0963f5d436a8288ff0\"><code>6f9a9da</code></a>\nMerge branch 'main' into main</li>\n<li><a\nhref=\"https://github.com/actions-rust-lang/setup-rust-toolchain/commit/2ad14f9ee2ec38c91546181e5760932ab73676ee\"><code>2ad14f9</code></a>\nMerge pull request <a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/issues/52\">#52</a>\nfrom skanehira/main</li>\n<li><a\nhref=\"https://github.com/actions-rust-lang/setup-rust-toolchain/commit/30081c4da55e5f2a707c228afc2c7d6f422a676c\"><code>30081c4</code></a>\nfix: add cache-bin input with true as default value</li>\n<li><a\nhref=\"https://github.com/actions-rust-lang/setup-rust-toolchain/commit/f8efd60d2dea71cf378cafb3f494ecf103ae1179\"><code>f8efd60</code></a>\nfeat: add shared-cache-key to inputs</li>\n<li><a\nhref=\"https://github.com/actions-rust-lang/setup-rust-toolchain/commit/97db979bf844c838b06022f305ca480d01b4d5fe\"><code>97db979</code></a>\nSpecify dependencies in README</li>\n<li>See full diff in <a\nhref=\"https://github.com/actions-rust-lang/setup-rust-toolchain/compare/11df97af8e8102fd60b60a77dfbf58d40cd843b8...9399c7bb15d4c7d47b27263d024f0a4978346ba4\">compare\nview</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `peter-evans/create-pull-request` from 7.0.6 to 7.0.8\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a\nhref=\"https://github.com/peter-evans/create-pull-request/releases\">peter-evans/create-pull-request's\nreleases</a>.</em></p>\n<blockquote>\n<h2>Create Pull Request v7.0.8</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>build(deps-dev): bump ts-jest from 29.2.5 to 29.2.6 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3751\">peter-evans/create-pull-request#3751</a></li>\n<li>build(deps-dev): bump eslint-import-resolver-typescript from 3.8.1\nto 3.8.3 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3752\">peter-evans/create-pull-request#3752</a></li>\n<li>build(deps): bump <code>@​octokit/plugin-paginate-rest</code> from\n11.4.2 to 11.4.3 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3753\">peter-evans/create-pull-request#3753</a></li>\n<li>build(deps-dev): bump prettier from 3.5.1 to 3.5.2 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3754\">peter-evans/create-pull-request#3754</a></li>\n<li>fix: suppress output for some git operations by <a\nhref=\"https://github.com/peter-evans\"><code>@​peter-evans</code></a> in\n<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3776\">peter-evans/create-pull-request#3776</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a\nhref=\"https://github.com/peter-evans/create-pull-request/compare/v7.0.7...v7.0.8\">https://github.com/peter-evans/create-pull-request/compare/v7.0.7...v7.0.8</a></p>\n<h2>Create Pull Request v7.0.7</h2>\n<p>⚙️ Fixes an issue with commit signing where modifications to the same\nfile in multiple commits squash into the first commit.</p>\n<h2>What's Changed</h2>\n<ul>\n<li>build(deps): bump <code>@​octokit/core</code> from 6.1.2 to 6.1.3 by\n<a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in\n<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3593\">peter-evans/create-pull-request#3593</a></li>\n<li>build(deps-dev): bump <code>@​types/node</code> from 18.19.68 to\n18.19.70 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3594\">peter-evans/create-pull-request#3594</a></li>\n<li>Update distribution by <a\nhref=\"https://github.com/actions-bot\"><code>@​actions-bot</code></a> in\n<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3603\">peter-evans/create-pull-request#3603</a></li>\n<li>build(deps-dev): bump typescript from 5.7.2 to 5.7.3 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3610\">peter-evans/create-pull-request#3610</a></li>\n<li>build(deps): bump octokit dependencies by <a\nhref=\"https://github.com/peter-evans\"><code>@​peter-evans</code></a> in\n<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3618\">peter-evans/create-pull-request#3618</a></li>\n<li>docs: add workflow tip for showing message via workflow command by\n<a href=\"https://github.com/ybiquitous\"><code>@​ybiquitous</code></a> in\n<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3626\">peter-evans/create-pull-request#3626</a></li>\n<li>build(deps-dev): bump eslint-plugin-prettier from 5.2.1 to 5.2.3 by\n<a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in\n<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3628\">peter-evans/create-pull-request#3628</a></li>\n<li>build(deps): bump node-fetch-native from 1.6.4 to 1.6.6 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3627\">peter-evans/create-pull-request#3627</a></li>\n<li>build(deps-dev): bump undici from 6.21.0 to 6.21.1 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3630\">peter-evans/create-pull-request#3630</a></li>\n<li>build(deps-dev): bump <code>@​types/node</code> from 18.19.70 to\n18.19.71 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3629\">peter-evans/create-pull-request#3629</a></li>\n<li>Update distribution by <a\nhref=\"https://github.com/actions-bot\"><code>@​actions-bot</code></a> in\n<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3647\">peter-evans/create-pull-request#3647</a></li>\n<li>build(deps-dev): bump <code>@​types/node</code> from 18.19.71 to\n18.19.74 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3657\">peter-evans/create-pull-request#3657</a></li>\n<li>build(deps-dev): bump <code>@​types/node</code> from 18.19.74 to\n18.19.75 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3663\">peter-evans/create-pull-request#3663</a></li>\n<li>build(deps): bump\n<code>@​octokit/plugin-rest-endpoint-methods</code> from 13.3.0 to\n13.3.1 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3670\">peter-evans/create-pull-request#3670</a></li>\n<li>build(deps-dev): bump prettier from 3.4.2 to 3.5.0 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3671\">peter-evans/create-pull-request#3671</a></li>\n<li>Update distribution by <a\nhref=\"https://github.com/actions-bot\"><code>@​actions-bot</code></a> in\n<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3680\">peter-evans/create-pull-request#3680</a></li>\n<li>build(deps): bump <code>@​octokit/request-error</code> from 6.1.6 to\n6.1.7 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3685\">peter-evans/create-pull-request#3685</a></li>\n<li>build(deps): bump <code>@​octokit/plugin-paginate-rest</code> from\n11.4.0 to 11.4.1 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3688\">peter-evans/create-pull-request#3688</a></li>\n<li>build(deps): bump <code>@​octokit/endpoint</code> from 10.1.2 to\n10.1.3 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3700\">peter-evans/create-pull-request#3700</a></li>\n<li>Update distribution by <a\nhref=\"https://github.com/actions-bot\"><code>@​actions-bot</code></a> in\n<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3691\">peter-evans/create-pull-request#3691</a></li>\n<li>build(deps-dev): bump prettier from 3.5.0 to 3.5.1 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3709\">peter-evans/create-pull-request#3709</a></li>\n<li>build(deps-dev): bump eslint-import-resolver-typescript from 3.7.0\nto 3.8.1 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3710\">peter-evans/create-pull-request#3710</a></li>\n<li>build(deps): bump <code>@​octokit/plugin-paginate-rest</code> from\n11.4.1 to 11.4.2 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3713\">peter-evans/create-pull-request#3713</a></li>\n<li>build(deps-dev): bump <code>@​types/node</code> from 18.19.75 to\n18.19.76 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3712\">peter-evans/create-pull-request#3712</a></li>\n<li>build(deps): bump <code>@​octokit/core</code> from 6.1.3 to 6.1.4 by\n<a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in\n<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3711\">peter-evans/create-pull-request#3711</a></li>\n<li>Update distribution by <a\nhref=\"https://github.com/actions-bot\"><code>@​actions-bot</code></a> in\n<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3736\">peter-evans/create-pull-request#3736</a></li>\n<li>Use showFileAtRefBase64 to read per-commit file contents by <a\nhref=\"https://github.com/grahamc\"><code>@​grahamc</code></a> in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3744\">peter-evans/create-pull-request#3744</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a\nhref=\"https://github.com/ybiquitous\"><code>@​ybiquitous</code></a> made\ntheir first contribution in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3626\">peter-evans/create-pull-request#3626</a></li>\n<li><a href=\"https://github.com/grahamc\"><code>@​grahamc</code></a> made\ntheir first contribution in <a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/pull/3744\">peter-evans/create-pull-request#3744</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a\nhref=\"https://github.com/peter-evans/create-pull-request/compare/v7.0.6...v7.0.7\">https://github.com/peter-evans/create-pull-request/compare/v7.0.6...v7.0.7</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a\nhref=\"https://github.com/peter-evans/create-pull-request/commit/271a8d0340265f705b14b6d32b9829c1cb33d45e\"><code>271a8d0</code></a>\nfix: suppress output for some git operations (<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/issues/3776\">#3776</a>)</li>\n<li><a\nhref=\"https://github.com/peter-evans/create-pull-request/commit/6f7efd1c24d02e0d947dd3f6f9618019afb36781\"><code>6f7efd1</code></a>\ntest: update cpr-example-command</li>\n<li><a\nhref=\"https://github.com/peter-evans/create-pull-request/commit/13c47c574799c8eb0a033eba252619135e70f392\"><code>13c47c5</code></a>\nbuild(deps-dev): bump prettier from 3.5.1 to 3.5.2 (<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/issues/3754\">#3754</a>)</li>\n<li><a\nhref=\"https://github.com/peter-evans/create-pull-request/commit/63e58290d72e889603c931363c5169ba1bbe3fed\"><code>63e5829</code></a>\nbuild(deps): bump <code>@​octokit/plugin-paginate-rest</code> from\n11.4.2 to 11.4.3 (<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/issues/3753\">#3753</a>)</li>\n<li><a\nhref=\"https://github.com/peter-evans/create-pull-request/commit/a92c90fcab983421cc9bc736a06daea58c68d0db\"><code>a92c90f</code></a>\nbuild(deps-dev): bump eslint-import-resolver-typescript (<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/issues/3752\">#3752</a>)</li>\n<li><a\nhref=\"https://github.com/peter-evans/create-pull-request/commit/b23b62d48799ec46790610dd74b29cb9ba2eef30\"><code>b23b62d</code></a>\nbuild(deps-dev): bump ts-jest from 29.2.5 to 29.2.6 (<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/issues/3751\">#3751</a>)</li>\n<li><a\nhref=\"https://github.com/peter-evans/create-pull-request/commit/dd2324fc52d5d43c699a5636bcf19fceaa70c284\"><code>dd2324f</code></a>\nfix: use showFileAtRefBase64 to read per-commit file contents (<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/issues/3744\">#3744</a>)</li>\n<li><a\nhref=\"https://github.com/peter-evans/create-pull-request/commit/367180cbdfa0448fc1ca9136e4adb020658cf4e5\"><code>367180c</code></a>\nci: remove testv5 cmd</li>\n<li><a\nhref=\"https://github.com/peter-evans/create-pull-request/commit/25575a12f382fb9c68692ffce1174138b61417d7\"><code>25575a1</code></a>\nbuild: update distribution (<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/issues/3736\">#3736</a>)</li>\n<li><a\nhref=\"https://github.com/peter-evans/create-pull-request/commit/a56e7a56e9186132269996d8937494f12ff51f77\"><code>a56e7a5</code></a>\nbuild(deps): bump <code>@​octokit/core</code> from 6.1.3 to 6.1.4 (<a\nhref=\"https://redirect.github.com/peter-evans/create-pull-request/issues/3711\">#3711</a>)</li>\n<li>Additional commits viewable in <a\nhref=\"https://github.com/peter-evans/create-pull-request/compare/67ccf781d68cd99b580ae25a5c18a1cc84ffff1f...271a8d0340265f705b14b6d32b9829c1cb33d45e\">compare\nview</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `docker/setup-buildx-action` from 3.9.0 to 3.10.0\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a\nhref=\"https://github.com/docker/setup-buildx-action/releases\">docker/setup-buildx-action's\nreleases</a>.</em></p>\n<blockquote>\n<h2>v3.10.0</h2>\n<ul>\n<li>Bump <code>@​docker/actions-toolkit</code> from 0.54.0 to 0.56.0 in\n<a\nhref=\"https://redirect.github.com/docker/setup-buildx-action/pull/408\">docker/setup-buildx-action#408</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a\nhref=\"https://github.com/docker/setup-buildx-action/compare/v3.9.0...v3.10.0\">https://github.com/docker/setup-buildx-action/compare/v3.9.0...v3.10.0</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a\nhref=\"https://github.com/docker/setup-buildx-action/commit/b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2\"><code>b5ca514</code></a>\nMerge pull request <a\nhref=\"https://redirect.github.com/docker/setup-buildx-action/issues/408\">#408</a>\nfrom docker/dependabot/npm_and_yarn/docker/actions-to...</li>\n<li><a\nhref=\"https://github.com/docker/setup-buildx-action/commit/1418a4ef330cff3d80e8707b47780be815fb20db\"><code>1418a4e</code></a>\nchore: update generated content</li>\n<li><a\nhref=\"https://github.com/docker/setup-buildx-action/commit/93acf831ce48bc806b62b1e892b89fca8bf213e0\"><code>93acf83</code></a>\nbuild(deps): bump <code>@​docker/actions-toolkit</code> from 0.54.0 to\n0.56.0</li>\n<li>See full diff in <a\nhref=\"https://github.com/docker/setup-buildx-action/compare/f7ce87c1d6bead3e36075b2ce75da1f6cc28aaca...b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2\">compare\nview</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `actions/attest-build-provenance` from 2.2.0 to 2.2.3\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a\nhref=\"https://github.com/actions/attest-build-provenance/releases\">actions/attest-build-provenance's\nreleases</a>.</em></p>\n<blockquote>\n<h2>v2.2.3</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Pin actions/attest reference by commit SHA by <a\nhref=\"https://github.com/bdehamer\"><code>@​bdehamer</code></a> in <a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/pull/493\">actions/attest-build-provenance#493</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a\nhref=\"https://github.com/actions/attest-build-provenance/compare/v2.2.2...v2.2.3\">https://github.com/actions/attest-build-provenance/compare/v2.2.2...v2.2.3</a></p>\n<h2>v2.2.2</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Bump predicate action from 1.1.4 to 1.1.5 by <a\nhref=\"https://github.com/bdehamer\"><code>@​bdehamer</code></a> in <a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/pull/485\">actions/attest-build-provenance#485</a>\n<ul>\n<li>Bump <code>@​actions/attest</code> from 1.5.0 to 1.6.0 by <a\nhref=\"https://github.com/bdehamer\"><code>@​bdehamer</code></a> in <a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/pull/484\">actions/attest-build-provenance#484</a>\n<ul>\n<li>Update buildSLSAProvenancePredicate to populate\n<code>workflow.ref</code> field from the <code>ref</code> claim in the\nOIDC token (<a\nhref=\"https://redirect.github.com/actions/toolkit/pull/1969\">actions/toolkit#1969</a>)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>Full Changelog</strong>: <a\nhref=\"https://github.com/actions/attest-build-provenance/compare/v2.2.1...v2.2.2\">https://github.com/actions/attest-build-provenance/compare/v2.2.1...v2.2.2</a></p>\n<h2>v2.2.1</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Bump undici from 5.28.4 to 5.28.5 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/pull/457\">actions/attest-build-provenance#457</a></li>\n<li>Bump <code>@​octokit/request-error</code> from 5.0.1 to 5.1.1 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/pull/469\">actions/attest-build-provenance#469</a></li>\n<li>Bump <code>@​octokit/request</code> from 8.2.0 to 8.4.1 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/pull/478\">actions/attest-build-provenance#478</a></li>\n<li>Bump actions/attest from 2.2.0 to 2.2.1 by <a\nhref=\"https://github.com/bdehamer\"><code>@​bdehamer</code></a> in <a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/pull/481\">actions/attest-build-provenance#481</a>\n<ul>\n<li>Includes <code>@actions/attest</code> <a\nhref=\"https://github.com/actions/toolkit/blob/main/packages/attest/RELEASES.md#160\">v1.6.0</a></li>\n</ul>\n</li>\n</ul>\n<p><strong>Full Changelog</strong>: <a\nhref=\"https://github.com/actions/attest-build-provenance/compare/v2.2.0...v2.2.1\">https://github.com/actions/attest-build-provenance/compare/v2.2.0...v2.2.1</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a\nhref=\"https://github.com/actions/attest-build-provenance/commit/c074443f1aee8d4aeeae555aebba3282517141b2\"><code>c074443</code></a>\npin actions/attest reference by commit sha (<a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/issues/493\">#493</a>)</li>\n<li><a\nhref=\"https://github.com/actions/attest-build-provenance/commit/bd77c077858b8d561b7a36cbe48ef4cc642ca39d\"><code>bd77c07</code></a>\nbump predicate from 1.1.4 to 1.1.5 (<a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/issues/485\">#485</a>)</li>\n<li><a\nhref=\"https://github.com/actions/attest-build-provenance/commit/1176ef556905f349f669722abf30bce1a6e16e01\"><code>1176ef5</code></a>\nbump <code>@​actions/attest</code> from 1.5.0 to 1.6.0 (<a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/issues/484\">#484</a>)</li>\n<li><a\nhref=\"https://github.com/actions/attest-build-provenance/commit/f9eaf234fc1c2e333c1eca18177db0f44fa6ba52\"><code>f9eaf23</code></a>\nBump actions/attest from 2.2.0 to 2.2.1 (<a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/issues/481\">#481</a>)</li>\n<li><a\nhref=\"https://github.com/actions/attest-build-provenance/commit/f1321eccb7f66405fe3db013137d2d645e6bc45a\"><code>f1321ec</code></a>\nBump <code>@​octokit/request</code> from 8.2.0 to 8.4.1 (<a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/issues/478\">#478</a>)</li>\n<li><a\nhref=\"https://github.com/actions/attest-build-provenance/commit/d8181f545adc18f9aedfb731c23660cb00dc737d\"><code>d8181f5</code></a>\nBump the npm-development group with 6 updates (<a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/issues/476\">#476</a>)</li>\n<li><a\nhref=\"https://github.com/actions/attest-build-provenance/commit/1f22f30822a16ae9e0becf164e213808ab322d24\"><code>1f22f30</code></a>\nBump <code>@​octokit/request-error</code> from 5.0.1 to 5.1.1 (<a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/issues/469\">#469</a>)</li>\n<li><a\nhref=\"https://github.com/actions/attest-build-provenance/commit/6e5e68c5f71bfc58cbaa918885e585e490479796\"><code>6e5e68c</code></a>\nBump the npm-development group with 4 updates (<a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/issues/471\">#471</a>)</li>\n<li><a\nhref=\"https://github.com/actions/attest-build-provenance/commit/555f5b7e366d4d3179de3d1e8859906f6883b2d4\"><code>555f5b7</code></a>\nBump the npm-development group with 6 updates (<a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/issues/465\">#465</a>)</li>\n<li><a\nhref=\"https://github.com/actions/attest-build-provenance/commit/2d4fa84118ec070aeab0f526278616ad48b05f47\"><code>2d4fa84</code></a>\nBump the npm-development group with 2 updates (<a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/issues/461\">#461</a>)</li>\n<li>Additional commits viewable in <a\nhref=\"https://github.com/actions/attest-build-provenance/compare/520d128f165991a6c774bcb264f323e3d70747f4...c074443f1aee8d4aeeae555aebba3282517141b2\">compare\nview</a></li>\n</ul>\n</details>\n<br />\n\n\nDependabot will resolve any conflicts with this PR as long as you don't\nalter it yourself. You can also trigger a rebase manually by commenting\n`@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits\nthat have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after\nyour CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge\nand block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating\nit. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all\nof the ignore conditions of the specified dependency\n- `@dependabot ignore <dependency name> major version` will close this\ngroup update PR and stop Dependabot creating any more for the specific\ndependency's major version (unless you unignore this specific\ndependency's major version or upgrade to it yourself)\n- `@dependabot ignore <dependency name> minor version` will close this\ngroup update PR and stop Dependabot creating any more for the specific\ndependency's minor version (unless you unignore this specific\ndependency's minor version or upgrade to it yourself)\n- `@dependabot ignore <dependency name>` will close this group update PR\nand stop Dependabot creating any more for the specific dependency\n(unless you unignore this specific dependency or upgrade to it yourself)\n- `@dependabot unignore <dependency name>` will remove all of the ignore\nconditions of the specified dependency\n- `@dependabot unignore <dependency name> <ignore condition>` will\nremove the ignore condition of the specified dependency and ignore\nconditions\n\n\n</details>\n\nSigned-off-by: dependabot[bot] <support@github.com>\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
          "timestamp": "2025-03-15T21:30:42Z",
          "tree_id": "bf8d7d29b212d1846a4865d2b6b2ed3bdbea2e4a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/88a31f2d55cafc0a73ef65b309a06f3824854910"
        },
        "date": 1742077089851,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18105908,
            "range": "± 216717",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18279873,
            "range": "± 133424",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19814035,
            "range": "± 104081",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23632630,
            "range": "± 210740",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53251218,
            "range": "± 631523",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 310898581,
            "range": "± 5461482",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2388610505,
            "range": "± 89604664",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14962000,
            "range": "± 82058",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15229554,
            "range": "± 188278",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15614052,
            "range": "± 176163",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19548818,
            "range": "± 113207",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49690107,
            "range": "± 594140",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 297613226,
            "range": "± 2294790",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2408167203,
            "range": "± 29367185",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "jose@blockdeep.io",
            "name": "José Molina Colmenero",
            "username": "Moliholy"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "38d2fa859861005157ccb249dca1378f015e0b06",
          "message": "Add an extra_constant to pallet-treasury (#7918)\n\nAligned with #7206, this PR exposes `pallet-treasury`'s pot account as\nan extra constant. Users can this way for instance donate to the chain's\ntreasury account, or founders can easily spot it in case they require to\nfund it.\n\nIn any case this greatly reduces errors and headaches trying to figure\nout what's the pot's address.\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: Guillaume Thiolliere <gui.thiolliere@gmail.com>",
          "timestamp": "2025-03-17T02:30:50Z",
          "tree_id": "1207d313132c68f57279000c481d34f12b826a9b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/38d2fa859861005157ccb249dca1378f015e0b06"
        },
        "date": 1742181539142,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17872872,
            "range": "± 252936",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18304134,
            "range": "± 236895",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19545882,
            "range": "± 153540",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23140861,
            "range": "± 218856",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54323095,
            "range": "± 1802583",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 353175235,
            "range": "± 4746386",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2426359724,
            "range": "± 156938408",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14747184,
            "range": "± 159740",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15123164,
            "range": "± 374333",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15647826,
            "range": "± 155912",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20156635,
            "range": "± 165940",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51236052,
            "range": "± 523630",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 297548977,
            "range": "± 4075212",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2378648895,
            "range": "± 22488290",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "32275622+seemantaggarwal@users.noreply.github.com",
            "name": "seemantaggarwal",
            "username": "seemantaggarwal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5f44a778d05ec7e1a8a63534a7de6b78fad3d01c",
          "message": "Follow up for: Use the umbrella crate for the parachain template #5993 (#7464)\n\nResolving sc-tracing not being resolved when imported through the\npolkadot sdk\n\n---------\n\nSigned-off-by: Iulian Barbu <iulian.barbu@parity.io>\nCo-authored-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>\nCo-authored-by: Serban Iorga <serban@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Iulian Barbu <iulian.barbu@parity.io>\nCo-authored-by: Sebastian Kunert <skunert49@gmail.com>",
          "timestamp": "2025-03-17T12:37:10Z",
          "tree_id": "499c038c1f77f2be961b88753ac0f6994d1cd93f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/5f44a778d05ec7e1a8a63534a7de6b78fad3d01c"
        },
        "date": 1742218065668,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19326193,
            "range": "± 527089",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18912727,
            "range": "± 301066",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20407298,
            "range": "± 441204",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24972070,
            "range": "± 371792",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53877518,
            "range": "± 640344",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 320086656,
            "range": "± 4288176",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2396788390,
            "range": "± 71502217",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15410361,
            "range": "± 119971",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15564609,
            "range": "± 256855",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16080118,
            "range": "± 185802",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20222587,
            "range": "± 264029",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51456393,
            "range": "± 727658",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 312871993,
            "range": "± 5390835",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2464832676,
            "range": "± 39604694",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ismailov.m.h@gmail.com",
            "name": "muharem",
            "username": "muharem"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d1cf73a321caa5ee35c975694ae0d78e405185b1",
          "message": "FRAME: Meta Transaction (#6428)\n\nMeta transactions implementation.\n\nThe meta transaction follows a layout similar to that of a regular\ntransaction and can leverage the same extensions implementing the\n`TransactionExtension` trait. Once signed and shared by the signer, the\nrelayer may submit a regular transaction with the\n`pallet_meta_tx::dispatch` call, passing the signed meta transaction as\nan argument.\n\nTo see an example, refer to the mock setup and the\n`sign_and_execute_meta_tx` test case in\n`substrate/frame/meta-tx/src/tests.rs` file.\n\nRFC: https://github.com/paritytech/polkadot-sdk/issues/4123\n\n---------\n\nCo-authored-by: Shawn Tabrizi <shawntabrizi@gmail.com>\nCo-authored-by: command-bot <>\nCo-authored-by: Guillaume Thiolliere <gui.thiolliere@gmail.com>",
          "timestamp": "2025-03-17T15:50:17Z",
          "tree_id": "77caa6dae9246cd347f50b984a990cefb2a571c6",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d1cf73a321caa5ee35c975694ae0d78e405185b1"
        },
        "date": 1742229649922,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17415276,
            "range": "± 180588",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17796187,
            "range": "± 77449",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19014545,
            "range": "± 138270",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23335166,
            "range": "± 161719",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53257307,
            "range": "± 592025",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 339360722,
            "range": "± 6827903",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2311504860,
            "range": "± 123237113",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14385093,
            "range": "± 127506",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14501132,
            "range": "± 104852",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14897588,
            "range": "± 153975",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19179862,
            "range": "± 359837",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 48397771,
            "range": "± 321020",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 288788317,
            "range": "± 3696253",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2343536002,
            "range": "± 11848270",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "86818441+DrW3RK@users.noreply.github.com",
            "name": "Radha",
            "username": "DrW3RK"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "13575cc239d52f4e04bac0749e9ac4bc9f89120c",
          "message": "Update README.md for Cumulus (#7930)\n\nRemove references to Rococo. Add relevant information for Paseo and\nWestend testnets\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-03-17T19:34:59Z",
          "tree_id": "7d84bc90a89ada07672bd20a549537846be31055",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/13575cc239d52f4e04bac0749e9ac4bc9f89120c"
        },
        "date": 1742243135528,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18060972,
            "range": "± 95450",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18252449,
            "range": "± 221693",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19575103,
            "range": "± 106640",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24128279,
            "range": "± 283681",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56860754,
            "range": "± 1346613",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 350317844,
            "range": "± 3016528",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2253606470,
            "range": "± 121053620",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15167552,
            "range": "± 94586",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15665114,
            "range": "± 160671",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16277490,
            "range": "± 165616",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20187867,
            "range": "± 335031",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52432709,
            "range": "± 1108113",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 318406586,
            "range": "± 5227075",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2497448489,
            "range": "± 30001016",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "37865735+clangenb@users.noreply.github.com",
            "name": "clangenb",
            "username": "clangenb"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "35e6befc5dd61deb154ff0eb7c180a038e626d66",
          "message": "run frame-omni-bencher overhead command in CI for all runtimes in the runtime matrix (#7459)\n\nAs defined in https://github.com/paritytech/polkadot-sdk/issues/6347, we\nwant to run the omni-benchers overhead command in the CI to be sure that\nit keeps working.\n\nCloses https://github.com/paritytech/polkadot-sdk/issues/6347",
          "timestamp": "2025-03-17T22:03:57Z",
          "tree_id": "1bb182da78816e7df3395eadb9af564cc11bdd38",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/35e6befc5dd61deb154ff0eb7c180a038e626d66"
        },
        "date": 1742251906135,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17076124,
            "range": "± 113253",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17313535,
            "range": "± 136957",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18706866,
            "range": "± 332034",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22659323,
            "range": "± 189984",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 50270050,
            "range": "± 429051",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 294780986,
            "range": "± 3325377",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2107614074,
            "range": "± 12304760",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14230789,
            "range": "± 100977",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14248491,
            "range": "± 292111",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14802053,
            "range": "± 210092",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19156344,
            "range": "± 544143",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50461733,
            "range": "± 1499134",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 289285764,
            "range": "± 6631014",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2216516253,
            "range": "± 74740140",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "15aa3ae9f5bef7828cc422dbeac2d9c6257cf0a6",
          "message": "Cumulus: Remove some old scripts (#7946)",
          "timestamp": "2025-03-18T13:18:43Z",
          "tree_id": "b779dffdeab91b1beef7acb6e26d7b87e309dd48",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/15aa3ae9f5bef7828cc422dbeac2d9c6257cf0a6"
        },
        "date": 1742306797201,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19125451,
            "range": "± 188583",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18949406,
            "range": "± 191711",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20655479,
            "range": "± 162911",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25499827,
            "range": "± 254258",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59333748,
            "range": "± 795503",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 374018648,
            "range": "± 9769604",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2503785936,
            "range": "± 222238154",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15256747,
            "range": "± 119710",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15460976,
            "range": "± 176881",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16042757,
            "range": "± 165147",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20611159,
            "range": "± 256364",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 55181128,
            "range": "± 1145630",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 319785295,
            "range": "± 5025578",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2581898425,
            "range": "± 60757022",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "32275622+seemantaggarwal@users.noreply.github.com",
            "name": "seemantaggarwal",
            "username": "seemantaggarwal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "28a7ae71cc0eac747bf346804279217a68f700da",
          "message": "Updating readmes (#7950)\n\nREADME for all templates still points to polkadot.network.\nupdate them to:\n\n1. point to [docs.polkadot.com](http://docs.polkadot.com/)\n2. point to official polkadot discord and @substratedevs in TG for\nsupport",
          "timestamp": "2025-03-18T13:45:50Z",
          "tree_id": "7d369abdb1d2266696d2d8353becc14708bb3dca",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/28a7ae71cc0eac747bf346804279217a68f700da"
        },
        "date": 1742308516404,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17888915,
            "range": "± 105690",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18344293,
            "range": "± 122105",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19797685,
            "range": "± 299159",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24325539,
            "range": "± 270914",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59116431,
            "range": "± 1106697",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 334591119,
            "range": "± 4652364",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2448262095,
            "range": "± 75621922",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14888731,
            "range": "± 179522",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15231897,
            "range": "± 176967",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15800489,
            "range": "± 241918",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20312557,
            "range": "± 156423",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53646262,
            "range": "± 1401608",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 316496693,
            "range": "± 5622415",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2513038937,
            "range": "± 24564340",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "skunert49@gmail.com",
            "name": "Sebastian Kunert",
            "username": "skunert"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1abdb7f39cada4840d795b9b721631a3cfe53174",
          "message": "Upgrade link-checker cache to v4 (#7874)\n\nLink-checker broke once more.\n\nTo get it green, cache action needs to upgrade to v4",
          "timestamp": "2025-03-18T18:01:06Z",
          "tree_id": "81d01b24ef03c7ec9ffc099edafeb6bd265c88db",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/1abdb7f39cada4840d795b9b721631a3cfe53174"
        },
        "date": 1742323809793,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17370420,
            "range": "± 159624",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18360501,
            "range": "± 496719",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19330253,
            "range": "± 189959",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23736312,
            "range": "± 379972",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56586062,
            "range": "± 1009914",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 354602655,
            "range": "± 4100943",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2343939728,
            "range": "± 93482611",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14973951,
            "range": "± 133852",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15078601,
            "range": "± 228391",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15644692,
            "range": "± 198743",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20234492,
            "range": "± 137251",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52910137,
            "range": "± 1589256",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 303039884,
            "range": "± 4897307",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2427185934,
            "range": "± 34796584",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "59443568+sw10pa@users.noreply.github.com",
            "name": "Stephane Gurgenidze",
            "username": "sw10pa"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "45492e39e6c9a833445a781345343b53eec1f428",
          "message": "runtime-api: remove redundant version checks (#7610)\n\n## Issue\n- [[#1940] Cleanup boilerplate code when DisabledValidators runtime api\ncall is\nreleased](https://github.com/paritytech/polkadot-sdk/issues/1940)\n- Includes other runtime APIs, such as `MinimumBackingVotes` and\n`NodeFeatures`, that are already supported by Polkadot.\n\n## Description\nThis PR removes unnecessary runtime API version checks from\n`subsystem-util/src/runtime` for APIs supported by Polkadot (the most\nrecent network to upgrade). Specifically, it applies to the\n`DisabledValidators`, `MinimumBackingVotes` and `NodeFeatures` APIs.\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-03-19T07:34:53Z",
          "tree_id": "bcebedb14ac51ec20d29f5ab86987184272ab917",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/45492e39e6c9a833445a781345343b53eec1f428"
        },
        "date": 1742372715717,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 20142327,
            "range": "± 140108",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20573529,
            "range": "± 212854",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21881908,
            "range": "± 214667",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25986769,
            "range": "± 678964",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 60668725,
            "range": "± 918765",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 397373884,
            "range": "± 12701705",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2696397617,
            "range": "± 211200277",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16518508,
            "range": "± 152266",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16442863,
            "range": "± 229329",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17066239,
            "range": "± 243587",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21877122,
            "range": "± 442164",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 55821006,
            "range": "± 912349",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 345822316,
            "range": "± 6787457",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2642802570,
            "range": "± 50900862",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d1dcd161faec28002762b7dc06fdb7689c200f3b",
          "message": "Bump openssl from 0.10.64 to 0.10.70 (#7442)\n\nBumps [openssl](https://github.com/sfackler/rust-openssl) from 0.10.64\nto 0.10.70.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a\nhref=\"https://github.com/sfackler/rust-openssl/releases\">openssl's\nreleases</a>.</em></p>\n<blockquote>\n<h2>openssl v0.10.70</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Attempt to fix CI by pinning to the Ubuntu 22.04 image by <a\nhref=\"https://github.com/alex\"><code>@​alex</code></a> in <a\nhref=\"https://redirect.github.com/sfackler/rust-openssl/pull/2357\">sfackler/rust-openssl#2357</a></li>\n<li>Remove EC_METHOD and EC_GROUP_new for LibreSSL 4.1 by <a\nhref=\"https://github.com/botovq\"><code>@​botovq</code></a> in <a\nhref=\"https://redirect.github.com/sfackler/rust-openssl/pull/2356\">sfackler/rust-openssl#2356</a></li>\n<li>Test against 3.4.0 final release by <a\nhref=\"https://github.com/alex\"><code>@​alex</code></a> in <a\nhref=\"https://redirect.github.com/sfackler/rust-openssl/pull/2359\">sfackler/rust-openssl#2359</a></li>\n<li>Expose <code>SslMethod::{dtls_client,dtls_server}</code> by <a\nhref=\"https://github.com/alex\"><code>@​alex</code></a> in <a\nhref=\"https://redirect.github.com/sfackler/rust-openssl/pull/2358\">sfackler/rust-openssl#2358</a></li>\n<li>Fix lifetimes in ssl::select_next_proto by <a\nhref=\"https://github.com/sfackler\"><code>@​sfackler</code></a> in <a\nhref=\"https://redirect.github.com/sfackler/rust-openssl/pull/2360\">sfackler/rust-openssl#2360</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a\nhref=\"https://github.com/sfackler/rust-openssl/compare/openssl-v0.10.69...openssl-v0.10.70\">https://github.com/sfackler/rust-openssl/compare/openssl-v0.10.69...openssl-v0.10.70</a></p>\n<h2>openssl v0.10.69</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>build(deps): Update <code>openssl-macro</code> to version\n<code>0.1.1</code> by <a\nhref=\"https://github.com/caspermeijn\"><code>@​caspermeijn</code></a> in\n<a\nhref=\"https://redirect.github.com/sfackler/rust-openssl/pull/2324\">sfackler/rust-openssl#2324</a></li>\n<li>Enable set_alpn_select_callback for BoringSSL by <a\nhref=\"https://github.com/ViktoriiaKovalova\"><code>@​ViktoriiaKovalova</code></a>\nin <a\nhref=\"https://redirect.github.com/sfackler/rust-openssl/pull/2327\">sfackler/rust-openssl#2327</a></li>\n<li>Switch the test to use prime256v1 based key by <a\nhref=\"https://github.com/dcermak\"><code>@​dcermak</code></a> in <a\nhref=\"https://redirect.github.com/sfackler/rust-openssl/pull/2330\">sfackler/rust-openssl#2330</a></li>\n<li>Expose EVP_DigestSqueeze from Hasher by <a\nhref=\"https://github.com/initsecret\"><code>@​initsecret</code></a> in <a\nhref=\"https://redirect.github.com/sfackler/rust-openssl/pull/2275\">sfackler/rust-openssl#2275</a></li>\n<li>Expose SSL_CTX_load_verify_locations by <a\nhref=\"https://github.com/sfackler\"><code>@​sfackler</code></a> in <a\nhref=\"https://redirect.github.com/sfackler/rust-openssl/pull/2353\">sfackler/rust-openssl#2353</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a\nhref=\"https://github.com/caspermeijn\"><code>@​caspermeijn</code></a>\nmade their first contribution in <a\nhref=\"https://redirect.github.com/sfackler/rust-openssl/pull/2324\">sfackler/rust-openssl#2324</a></li>\n<li><a\nhref=\"https://github.com/ViktoriiaKovalova\"><code>@​ViktoriiaKovalova</code></a>\nmade their first contribution in <a\nhref=\"https://redirect.github.com/sfackler/rust-openssl/pull/2327\">sfackler/rust-openssl#2327</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a\nhref=\"https://github.com/sfackler/rust-openssl/compare/openssl-v0.10.68...openssl-v0.10.69\">https://github.com/sfackler/rust-openssl/compare/openssl-v0.10.68...openssl-v0.10.69</a></p>\n<h2>openssl-v0.10.68</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>fixes <a\nhref=\"https://redirect.github.com/sfackler/rust-openssl/issues/2317\">#2317</a>\n-- restore compatibility with our MSRV and release openssl 0.9.68 by <a\nhref=\"https://github.com/alex\"><code>@​alex</code></a> in <a\nhref=\"https://redirect.github.com/sfackler/rust-openssl/pull/2318\">sfackler/rust-openssl#2318</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a\nhref=\"https://github.com/sfackler/rust-openssl/compare/openssl-v0.10.67...openssl-v0.10.68\">https://github.com/sfackler/rust-openssl/compare/openssl-v0.10.67...openssl-v0.10.68</a></p>\n<h2>openssl-v0.10.67</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Added a utility function to ensure we never have an issue with\n0-length slices from pointers again by <a\nhref=\"https://github.com/alex\"><code>@​alex</code></a> in <a\nhref=\"https://redirect.github.com/sfackler/rust-openssl/pull/2268\">sfackler/rust-openssl#2268</a></li>\n<li>Fix CI for the latest rustc by <a\nhref=\"https://github.com/alex\"><code>@​alex</code></a> in <a\nhref=\"https://redirect.github.com/sfackler/rust-openssl/pull/2271\">sfackler/rust-openssl#2271</a></li>\n<li>Add binding for EVP_DigestSqueeze by <a\nhref=\"https://github.com/initsecret\"><code>@​initsecret</code></a> in <a\nhref=\"https://redirect.github.com/sfackler/rust-openssl/pull/2270\">sfackler/rust-openssl#2270</a></li>\n<li>libressl 4.0: const correctness for X509_LOOKUP_METHOD by <a\nhref=\"https://github.com/botovq\"><code>@​botovq</code></a> in <a\nhref=\"https://redirect.github.com/sfackler/rust-openssl/pull/2276\">sfackler/rust-openssl#2276</a></li>\n<li>Bump hex dev-dependency version by <a\nhref=\"https://github.com/alex\"><code>@​alex</code></a> in <a\nhref=\"https://redirect.github.com/sfackler/rust-openssl/pull/2277\">sfackler/rust-openssl#2277</a></li>\n<li>Raise bindgen version by <a\nhref=\"https://github.com/alex\"><code>@​alex</code></a> in <a\nhref=\"https://redirect.github.com/sfackler/rust-openssl/pull/2278\">sfackler/rust-openssl#2278</a></li>\n<li>Ensure Rsa::check_key doesn't leave errors on the stack by <a\nhref=\"https://github.com/alex\"><code>@​alex</code></a> in <a\nhref=\"https://redirect.github.com/sfackler/rust-openssl/pull/2279\">sfackler/rust-openssl#2279</a></li>\n<li>Update some docs to use the corresponds macro by <a\nhref=\"https://github.com/rushilmehra\"><code>@​rushilmehra</code></a> in\n<a\nhref=\"https://redirect.github.com/sfackler/rust-openssl/pull/2282\">sfackler/rust-openssl#2282</a></li>\n<li>Don't leave errors on the stack in\n<code>MdCtxRef::digest_verify_final</code> by <a\nhref=\"https://github.com/alex\"><code>@​alex</code></a> in <a\nhref=\"https://redirect.github.com/sfackler/rust-openssl/pull/2283\">sfackler/rust-openssl#2283</a></li>\n<li>Adjustments for LibreSSL 4 by <a\nhref=\"https://github.com/botovq\"><code>@​botovq</code></a> in <a\nhref=\"https://redirect.github.com/sfackler/rust-openssl/pull/2287\">sfackler/rust-openssl#2287</a></li>\n<li>Explicit rustfmt config by <a\nhref=\"https://github.com/kornelski\"><code>@​kornelski</code></a> in <a\nhref=\"https://redirect.github.com/sfackler/rust-openssl/pull/2285\">sfackler/rust-openssl#2285</a></li>\n<li>add basic EVP_KDF bindings by <a\nhref=\"https://github.com/reaperhulk\"><code>@​reaperhulk</code></a> in <a\nhref=\"https://redirect.github.com/sfackler/rust-openssl/pull/2289\">sfackler/rust-openssl#2289</a></li>\n<li>add ossl3 thread pool bindings by <a\nhref=\"https://github.com/reaperhulk\"><code>@​reaperhulk</code></a> in <a\nhref=\"https://redirect.github.com/sfackler/rust-openssl/pull/2293\">sfackler/rust-openssl#2293</a></li>\n<li>add argon2id support for ossl 3.2+ by <a\nhref=\"https://github.com/reaperhulk\"><code>@​reaperhulk</code></a> in <a\nhref=\"https://redirect.github.com/sfackler/rust-openssl/pull/2290\">sfackler/rust-openssl#2290</a></li>\n<li>fix 3.2.0 thread support and simplify by <a\nhref=\"https://github.com/reaperhulk\"><code>@​reaperhulk</code></a> in <a\nhref=\"https://redirect.github.com/sfackler/rust-openssl/pull/2294\">sfackler/rust-openssl#2294</a></li>\n<li>add libctx arg to argon2id by <a\nhref=\"https://github.com/reaperhulk\"><code>@​reaperhulk</code></a> in <a\nhref=\"https://redirect.github.com/sfackler/rust-openssl/pull/2295\">sfackler/rust-openssl#2295</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a\nhref=\"https://github.com/sfackler/rust-openssl/commit/a4d399b0f1a3694cb2d1728edf74d318a3cac890\"><code>a4d399b</code></a>\nRelease openssl v0.10.70</li>\n<li><a\nhref=\"https://github.com/sfackler/rust-openssl/commit/c9a33e286023f92b869c5f157b349be15985a799\"><code>c9a33e2</code></a>\nRelease openssl-sys v0.9.105</li>\n<li><a\nhref=\"https://github.com/sfackler/rust-openssl/commit/f014afb230de4d77bc79dea60e7e58c2f47b60f2\"><code>f014afb</code></a>\nMerge pull request <a\nhref=\"https://redirect.github.com/sfackler/rust-openssl/issues/2360\">#2360</a>\nfrom sfackler/fix-alpn-lifetimes</li>\n<li><a\nhref=\"https://github.com/sfackler/rust-openssl/commit/8e6e30bbf7e7627845b801f83a3810d6ffc1f157\"><code>8e6e30b</code></a>\nFix lifetimes in ssl::select_next_proto</li>\n<li><a\nhref=\"https://github.com/sfackler/rust-openssl/commit/1aff2801ca1dd756a0566a4d4fa9a00967280114\"><code>1aff280</code></a>\nMerge pull request <a\nhref=\"https://redirect.github.com/sfackler/rust-openssl/issues/2358\">#2358</a>\nfrom alex/expose-dlts</li>\n<li><a\nhref=\"https://github.com/sfackler/rust-openssl/commit/16ca5b278b99bb667321b4d88da230ee8f820e08\"><code>16ca5b2</code></a>\nMerge pull request <a\nhref=\"https://redirect.github.com/sfackler/rust-openssl/issues/2359\">#2359</a>\nfrom sfackler/alex-patch-1</li>\n<li><a\nhref=\"https://github.com/sfackler/rust-openssl/commit/4c9fbb0c18e8a3ac1de9671d7828862b49c1cb87\"><code>4c9fbb0</code></a>\nTest against 3.4.0 final release</li>\n<li><a\nhref=\"https://github.com/sfackler/rust-openssl/commit/5ecb31d3fd252c54dbae5e0b5b7ad495b26ac339\"><code>5ecb31d</code></a>\nUpdate openssl/src/ssl/mod.rs</li>\n<li><a\nhref=\"https://github.com/sfackler/rust-openssl/commit/4830f5bb93dafeeeddf32bf41dda83e2560f3d49\"><code>4830f5b</code></a>\nExpose <code>SslMethod::{dtls_client,dtls_server}</code></li>\n<li><a\nhref=\"https://github.com/sfackler/rust-openssl/commit/bab03c4093ef626c9564354ae7c2484f4f9ad6a9\"><code>bab03c4</code></a>\nMerge pull request <a\nhref=\"https://redirect.github.com/sfackler/rust-openssl/issues/2356\">#2356</a>\nfrom botovq/rm-ec-method</li>\n<li>Additional commits viewable in <a\nhref=\"https://github.com/sfackler/rust-openssl/compare/openssl-v0.10.64...openssl-v0.10.70\">compare\nview</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility\nscore](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=openssl&package-manager=cargo&previous-version=0.10.64&new-version=0.10.70)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits\nthat have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after\nyour CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge\nand block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating\nit. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all\nof the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop\nDependabot creating any more for this major version (unless you reopen\nthe PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop\nDependabot creating any more for this minor version (unless you reopen\nthe PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop\nDependabot creating any more for this dependency (unless you reopen the\nPR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the\n[Security Alerts\npage](https://github.com/paritytech/polkadot-sdk/network/alerts).\n\n</details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has\nbeen open for over 30 days.\n\nSigned-off-by: dependabot[bot] <support@github.com>\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-03-19T08:06:52Z",
          "tree_id": "8909d85e0b4f4afab0945b532c5d46a53211cbe4",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d1dcd161faec28002762b7dc06fdb7689c200f3b"
        },
        "date": 1742374488915,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18424750,
            "range": "± 213112",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18804041,
            "range": "± 138296",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19730895,
            "range": "± 185355",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24376572,
            "range": "± 6339735",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57181224,
            "range": "± 760632",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 352849019,
            "range": "± 7133722",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2697526890,
            "range": "± 204112267",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15074422,
            "range": "± 206483",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15244707,
            "range": "± 314821",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16063105,
            "range": "± 127227",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20433607,
            "range": "± 391257",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53567153,
            "range": "± 661651",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 316662746,
            "range": "± 8051056",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2459564649,
            "range": "± 23992865",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "178801527+raymondkfcheung@users.noreply.github.com",
            "name": "Raymond Cheung",
            "username": "raymondkfcheung"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "21927dd4a5384c7cbb09c8ad0ceac483be787dd1",
          "message": "Fix XCM Barrier Rejection Handling to Return Incomplete with Weight (#7843)\n\nThis PR addresses an issue with the handling of message execution when\nblocked by the barrier. Instead of returning an `Outcome::Error`, we\nmodify the behaviour to return `Outcome::Incomplete`, which includes the\nweight consumed up to the point of rejection and the error that caused\nthe blockage.\n\nThis change ensures more accurate weight tracking during message\nexecution, even when interrupted. It improves resource management and\naligns the XCM executor’s behaviour with better error handling\npractices.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-03-19T10:46:06Z",
          "tree_id": "83fc00cea410080b3682e2c50c7153c75dcb6094",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/21927dd4a5384c7cbb09c8ad0ceac483be787dd1"
        },
        "date": 1742384102489,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19089778,
            "range": "± 183671",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19502385,
            "range": "± 110229",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21202205,
            "range": "± 338198",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24888386,
            "range": "± 328493",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 58454232,
            "range": "± 918200",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 397659250,
            "range": "± 7107484",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2681670796,
            "range": "± 169568441",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15768963,
            "range": "± 138916",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15760790,
            "range": "± 146950",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16599874,
            "range": "± 223021",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21182888,
            "range": "± 517985",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54035433,
            "range": "± 695333",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 338213828,
            "range": "± 6308654",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2605207674,
            "range": "± 52389809",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1728078+michalkucharczyk@users.noreply.github.com",
            "name": "Michal Kucharczyk",
            "username": "michalkucharczyk"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "954d8571df26b5cc0d342c6c05d414bd6912f1cd",
          "message": "`fatxpool`: report_invalid: do not ban Future/Stale txs from re-entering the view (#7777)\n\n#### Description\n\nAvoid banning future/stale transactions reported as invalid by the\nauthorship module.\n\n#### Note for reviewers\nWhen re-org is handled by transaction pool, the view for new fork\n(`Bn'`) is cloned from the tip of the other existing fork (`Bn`). The\nnew view is not entirely re-validated during the maintain process (it\nwill be revalidated in the background), so it may happen that it\ncontains transactions that are ready on (`Bn`) but actually are not\nready on (`Bn'`). All required (which are expected to be in retracted\nset) transactions are submitted to the new view, but order of txs in\nready iterator is not updated.\n\nThe proper fix would require to re-build the the iterator - which is not\ntrivial as we do not have tags for transactions for block `Bn'` yet. We\ncould force retracted txs to be before ready transactions but it also\ndoes not feel to be a good solution - it still would be best effort\ntrial.\n\nFor now allowing future transactions to re-enter the view immediately is\nin my opinion a good compromise. This PR is a quick fix and actually\nbrings back behavior of txpool from before merging #6008. The bad thing\nis that incorrect transactions are detected during block authorship, but\nthis situation to happen requires some specific pre-conditions which\nshould be rare.\n\nIf this PR is not merged, some transaction will get included into\nblocks, only after\n[`DEFAULT_BAN_TIME_SECS`](https://github.com/paritytech/polkadot-sdk/blob/4b39ff00b887039bc3e02a763a29deb09df56833/substrate/client/transaction-pool/src/graph/rotator.rs#L37),\nwhich is pretty bad.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-03-19T16:20:25Z",
          "tree_id": "1de422e3985f413c3a4cd2e3600fb1cf6ffe5e55",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/954d8571df26b5cc0d342c6c05d414bd6912f1cd"
        },
        "date": 1742405338616,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17743458,
            "range": "± 136817",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18103113,
            "range": "± 120621",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19752011,
            "range": "± 317082",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23695894,
            "range": "± 310232",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 52745912,
            "range": "± 699352",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 341800089,
            "range": "± 6221839",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2638018405,
            "range": "± 217123090",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14697197,
            "range": "± 320788",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14721548,
            "range": "± 112426",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15332329,
            "range": "± 165748",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19581665,
            "range": "± 155417",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49800067,
            "range": "± 750776",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 292034951,
            "range": "± 2590217",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2350609351,
            "range": "± 34383588",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "jm.sobrepere@gmail.com",
            "name": "Josep M Sobrepere",
            "username": "josepot"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "dbebf539e6ae2c796fb1026be0740fdeec247f85",
          "message": "Treasury: update expire date on payout (#7958) (#7959)\n\nCloses #7958 \n\nResets the `payout.expire_at` field with the `PayoutPeriod` every time\nthat there is a valid Payout attempt.\n\n---------\n\nCo-authored-by: Victor Oliva <olivarra1@gmail.com>",
          "timestamp": "2025-03-20T11:05:52Z",
          "tree_id": "cc0a41c27628f9f9a1e478920b85499993d12c66",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/dbebf539e6ae2c796fb1026be0740fdeec247f85"
        },
        "date": 1742471911888,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19366149,
            "range": "± 134595",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19542374,
            "range": "± 249123",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20773482,
            "range": "± 189705",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25454855,
            "range": "± 235175",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 58478432,
            "range": "± 641490",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 362256226,
            "range": "± 6373920",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2457020345,
            "range": "± 245760294",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15670926,
            "range": "± 185945",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15790421,
            "range": "± 106703",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16355677,
            "range": "± 122597",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21184322,
            "range": "± 242575",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53558693,
            "range": "± 675095",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 332755398,
            "range": "± 2736914",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2517923634,
            "range": "± 26593390",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "egor@parity.io",
            "name": "Egor_P",
            "username": "EgorPopelyaev"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "628bdd90012bdd58b894b4d0f811c7bd899c3cae",
          "message": "[CI/CD] Refactor backports flow so that it can determine automatically where to do a backport based on labels (#7976)\n\nThis PR changes the command-backport.yml flow so that the branch names\nare not hardcoded in the pipeline file but will be parsed from the\nlabels.\nThe idea is that there are going to be a label representing each stable\nbranch:\n- A4-backport-stable2407 \n- A4-backport-stable2409 \n- A4-backport-stable2412 \n- A4-backport-stable2503\n\nIf the backport is needed to any of those branches or to all of them,\nthe corresponding label can be set on the PR and the branch name will be\nparsed from it.\nThe labels need to be created in the repo and adjusted as soon as there\nis a new release appears or an old one disappears.",
          "timestamp": "2025-03-20T11:50:34Z",
          "tree_id": "02f9d3601bbd2afec811696b389b8c51e4b16977",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/628bdd90012bdd58b894b4d0f811c7bd899c3cae"
        },
        "date": 1742474348299,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17489692,
            "range": "± 70493",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17832004,
            "range": "± 93501",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18934631,
            "range": "± 115910",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23297002,
            "range": "± 143513",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51864899,
            "range": "± 619456",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 314722278,
            "range": "± 7901085",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2281711109,
            "range": "± 68813563",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14491870,
            "range": "± 128309",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14547714,
            "range": "± 90138",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15117636,
            "range": "± 96419",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19073378,
            "range": "± 206555",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 48726342,
            "range": "± 444816",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 278586405,
            "range": "± 2572338",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2268572226,
            "range": "± 23880773",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "54316454+sandreim@users.noreply.github.com",
            "name": "Andrei Sandu",
            "username": "sandreim"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ad4396ffa363d3bd93bfa90567da6b54d7302dc2",
          "message": "Bump parachains runtime api to 13 (#7981)\n\nWe need to bump 2 runtime APIs to 13, because we are\n[backporting](https://github.com/paritytech/polkadot-sdk/pull/7824)\nvalidation code bomb API to 2412-4 patch which is supposed to be\nincluded in next fellowship release.\n\nDetails here:\nhttps://github.com/paritytech/polkadot-sdk/pull/7824#discussion_r2004824416\n\nShould only be merged if\nhttps://github.com/paritytech/polkadot-sdk/pull/7824 is merged in 2412-4\npatch.\n\nImportant note: on Westend, runtime needs to be upgraded first, then\nvalidators.\n\n---------\n\nSigned-off-by: Andrei Sandu <andrei-mihail@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-03-21T04:24:25Z",
          "tree_id": "3169d9186508871f815f11dc5f3ed583f5977116",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ad4396ffa363d3bd93bfa90567da6b54d7302dc2"
        },
        "date": 1742534016595,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18731723,
            "range": "± 146600",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19015833,
            "range": "± 124622",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20270354,
            "range": "± 197633",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25064110,
            "range": "± 288036",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 58651988,
            "range": "± 1440112",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 372314154,
            "range": "± 11018396",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2649666091,
            "range": "± 83847400",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15479411,
            "range": "± 129304",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15737366,
            "range": "± 180321",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16335194,
            "range": "± 154587",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20930803,
            "range": "± 338199",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53054246,
            "range": "± 830982",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 332943389,
            "range": "± 12659101",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2521134494,
            "range": "± 18026408",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "60601340+lexnv@users.noreply.github.com",
            "name": "Alexandru Vasile",
            "username": "lexnv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e1a1e4d88d80cd3883de008378ba5a6d043be362",
          "message": "rpc-v2/archive: Rename archive call method result to value (#7885)\n\nThis PR modifies the archive_call method result to align with the rpc-v2\nspec:\n-\nhttps://github.com/paritytech/json-rpc-interface-spec/blob/main/src/api/archive_unstable_call.md\n\nPreviously, the method result was encoded to a json containing a\n\"result\" field, however the spec specifies a \"value\" field. This aims to\nrectify that.\n\ncc @paritytech/subxt-team\n\n---------\n\nSigned-off-by: Alexandru Vasile <alexandru.vasile@parity.io>\nCo-authored-by: Niklas Adolfsson <niklasadolfsson1@gmail.com>",
          "timestamp": "2025-03-21T08:50:54Z",
          "tree_id": "815497e59867997c739f8dff40d41a5c9c770821",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e1a1e4d88d80cd3883de008378ba5a6d043be362"
        },
        "date": 1742550303311,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 34380751,
            "range": "± 2705911",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 39452711,
            "range": "± 2012269",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 39948486,
            "range": "± 1160822",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 55517363,
            "range": "± 2495116",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 128891174,
            "range": "± 8055244",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 638017139,
            "range": "± 28572604",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 3769079520,
            "range": "± 180401112",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 27596279,
            "range": "± 2263354",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 28602595,
            "range": "± 1514926",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 30188187,
            "range": "± 1673363",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 38924150,
            "range": "± 978747",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 112845066,
            "range": "± 1670350",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 605507423,
            "range": "± 17011738",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 4443845935,
            "range": "± 272345875",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "363911+pepoviola@users.noreply.github.com",
            "name": "Javier Viola",
            "username": "pepoviola"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "470bada9507981d7b95384a3e62af7797554cfb6",
          "message": "bump version of zombienet-sdk (#7964)\n\nBump zombienet-sdk version, including fixes for issues with init\ncontainers.\nThx!",
          "timestamp": "2025-03-21T10:54:35Z",
          "tree_id": "047ec9fcec63cdab945716d8e33d78dc77d2f23e",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/470bada9507981d7b95384a3e62af7797554cfb6"
        },
        "date": 1742557307903,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17118614,
            "range": "± 45900",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17424991,
            "range": "± 93990",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19433461,
            "range": "± 334489",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24065716,
            "range": "± 371315",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57844436,
            "range": "± 1544066",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 348091380,
            "range": "± 7823056",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2652893340,
            "range": "± 73662094",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15269811,
            "range": "± 283884",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15588188,
            "range": "± 220723",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16067434,
            "range": "± 166354",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20342626,
            "range": "± 169073",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52597580,
            "range": "± 557034",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 317232275,
            "range": "± 5901433",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2492007213,
            "range": "± 40848811",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "gorka.irazoki@gmail.com",
            "name": "girazoki",
            "username": "girazoki"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1a514f6d3753189c21a6b68d38cc6289999de047",
          "message": "Add digest processor xcm emulator (#7915)\n\nCurrently parachains are injecting through the xcm-emulator the default\ndigests in each block, something that can prevent testing certain\nconsensus aspects.\n\nWe propose to add the type `DigestProvider`, which needs to implement\nthe trait `Convert<blockNumber, Digest>`. The idea is that we can call\nthe implementation of this trait before initializing every block, and\nthus, allowing us to inject custom digests provided by this trait.\n\nObviously the default behavior persists if you set this type to `().`\n\nThe utilization of the `Convert` trait was arbitrary, as it was the\neasiest to accomplish the solution. I am not against using a custom\ntrait defined for this purpose if that is preferred.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-03-21T12:38:10Z",
          "tree_id": "78e2ca8681b711c0fc851bde1f674792eb9527c6",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/1a514f6d3753189c21a6b68d38cc6289999de047"
        },
        "date": 1742563782082,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18537052,
            "range": "± 183617",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18849373,
            "range": "± 116579",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20480175,
            "range": "± 195733",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24890344,
            "range": "± 407213",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59547202,
            "range": "± 1060472",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 358778177,
            "range": "± 4992180",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2655266520,
            "range": "± 94330090",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15183781,
            "range": "± 91905",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15543814,
            "range": "± 114715",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16195972,
            "range": "± 171828",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21017612,
            "range": "± 377635",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53895289,
            "range": "± 643405",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 320470662,
            "range": "± 7631257",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2511268907,
            "range": "± 30807093",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "jasl9187@hotmail.com",
            "name": "Jun Jiang",
            "username": "jasl"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ec32daa772b3ce106b1e1b5e451304d6ca23e7cd",
          "message": "Upgrade deps to eliminate ancient dependencies (#7999)\n\nUpgrading these crates would help to remove tons of outdated (and\nobsoleted) dependencies.\n\nIn addition, a small group of crates do not use workspace deps, I\ncorrect these.\n\n---------\n\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>",
          "timestamp": "2025-03-24T10:14:19Z",
          "tree_id": "aaa473325d18937d4554433f517d16d5cb8c10f1",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ec32daa772b3ce106b1e1b5e451304d6ca23e7cd"
        },
        "date": 1742816327053,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17481237,
            "range": "± 201473",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17724390,
            "range": "± 86827",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19029085,
            "range": "± 152240",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22917016,
            "range": "± 176308",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 50116634,
            "range": "± 516377",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 286491875,
            "range": "± 2787005",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2431918773,
            "range": "± 74076311",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14635426,
            "range": "± 270841",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14866336,
            "range": "± 128747",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15378343,
            "range": "± 277841",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18858421,
            "range": "± 164335",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 48472244,
            "range": "± 413894",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 285084002,
            "range": "± 4239549",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2286859933,
            "range": "± 30902814",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41779041+alvicsam@users.noreply.github.com",
            "name": "Alexander Samusev",
            "username": "alvicsam"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b2526906f389c86a6a581c6bcf8fb86fabc65192",
          "message": "docs: update local ci execution instruction (#8003)\n\nPR updates the contributor docs and adds commands to execute CI locally.\n\ncc https://github.com/paritytech/ci_cd/issues/965",
          "timestamp": "2025-03-24T13:09:57Z",
          "tree_id": "20572f80e04865981a32e39536b55e0bcdaa346b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/b2526906f389c86a6a581c6bcf8fb86fabc65192"
        },
        "date": 1742824640394,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18784553,
            "range": "± 157986",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19175182,
            "range": "± 202814",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20236777,
            "range": "± 191739",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24552152,
            "range": "± 228614",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53032431,
            "range": "± 2027958",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 312074634,
            "range": "± 10892738",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2316245330,
            "range": "± 114123558",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15177666,
            "range": "± 225630",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15121635,
            "range": "± 211277",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15831419,
            "range": "± 224076",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19558488,
            "range": "± 195599",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50618505,
            "range": "± 511972",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 299476471,
            "range": "± 3316516",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2335055590,
            "range": "± 16439255",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "10196091+Ank4n@users.noreply.github.com",
            "name": "Ankan",
            "username": "Ank4n"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b82ef548cfa4ca2107967e114cac7c3006c0780c",
          "message": "[AHM] Revert multi-block election, slashing and staking client pallets (#7939)\n\nRevert the following PRs which we are pulling from release stable2503:\n- https://github.com/paritytech/polkadot-sdk/pull/7582\n- https://github.com/paritytech/polkadot-sdk/pull/7424\n- https://github.com/paritytech/polkadot-sdk/pull/7282\n\nand leave pallet-staking in its pre-AHM state.\n\n## Context\n\nWe are forking pallet-staking into `pallet-staking` (also referred as\nstaking-classic, this is the version that will stay on RC) and\n`pallet-staking-next` which will live on AH post AHM.\n\nAdditional context:\nhttps://github.com/paritytech/polkadot-sdk/issues/7858#issuecomment-2711276767\n\nThese changes in crate `pallet-staking` will become the staking classic.\nThe staking next version is worked in the PR #7601.\n\n## For AHM migration\nThe `UnappliedSlashes` storage will need to be translated from\n`rc::staking-classic` to `ah::staking-next`.\n[Bookmarking](https://github.com/paritytech/polkadot-sdk/blob/master/substrate/frame/staking/src/migrations.rs#L91)\nthe code that can be referred for this.\n\n## Follow ups\n(cc: @tdimitrov and @seadanda )\n1) Revert pallet-staking v17 migration in westend.\n- Update `in code storage version` of pallet-staking storage from 17 to\n16 (separate PR).\n- Update `on chain storage version` of pallet-staking storage from 17 to\n16. The storage key for pallet-staking on chain version is\n`0x5f3e4907f716ac89b6347d15ececedca4e7b9012096b41c4eb3aaf947f6ea429`\nwhich should be set currently to `0x1100`, and needs to be updated to\n`0x1000`.\n- After the runtime upgrade with the code from this PR is deployed on\nWestend, kill the following storage prefixes under the Pallet prefix\n`Staking`:\n  - OffenceQueue\n  - OffenceQueueEras\n  - ProcessingOffence\n- UnappliedSlashes: This also exists in staking-classic as a storage map\n(one key) and in pre-revert code as double storage map (two keys).\nKilling with prefix `UnappliedSlashes` may kill the ones created post\nupgrade (but that's okay for westend).\n  - VoterSnapshotStatus\n  - NextElectionPage\n  - ElectableStashes\n\n2) Remove exposure dependency\nWorked in the PR: https://github.com/paritytech/polkadot-sdk/pull/7936.\n\n---------\n\nCo-authored-by: Tsvetomir Dimitrov <tsvetomir@parity.io>\nCo-authored-by: Maciej <maciej.zyszkiewicz@parity.io>",
          "timestamp": "2025-03-24T13:24:36Z",
          "tree_id": "c2aea0f86f1857f2122be4434168b5811275490a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/b82ef548cfa4ca2107967e114cac7c3006c0780c"
        },
        "date": 1742825748700,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18878296,
            "range": "± 217473",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19011012,
            "range": "± 110608",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20543942,
            "range": "± 154063",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24420562,
            "range": "± 255916",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53812399,
            "range": "± 548287",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 310848285,
            "range": "± 7255336",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2322286086,
            "range": "± 106193974",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15167216,
            "range": "± 161438",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15442276,
            "range": "± 129663",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15762726,
            "range": "± 202668",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19582405,
            "range": "± 116036",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49718762,
            "range": "± 234844",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 299179166,
            "range": "± 6162615",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2395173165,
            "range": "± 40518902",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "117534+vgeddes@users.noreply.github.com",
            "name": "Vincent Geddes",
            "username": "vgeddes"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "98c6ffcea6794d338514cf9bd84446d2f276cb63",
          "message": "Snowbridge V2 (#7402)\n\nImplementation of the Snowbridge V2\n[specification](https://github.com/paritytech/polkadot-sdk/blob/master/bridges/snowbridge/docs/v2.md).\n\nCompanion PR for changes on the Ethereum side:\nhttps://github.com/Snowfork/snowbridge/pull/1371\n\n# High-level overview\n\nThe implementation of V2 is additive and does not affect the V1 protocol\nin any manner.\n\n## BridgeHub\n\n* Adds pallet `snowbridge-pallet-inbound-queue-v2` which is responsible\nfor:\n  * Receiving and verifying messages from Ethereum\n  * Converting those messages to XCM\n  * Forwarding the XCMs to AssetHub\n* Adds pallet `snowbridge-pallet-outbound-queue-v2` which is responsible\nfor:\n* Receiving XCMs from AH or governance messages from\n`snowbridge-pallet-system-v2`\n* Converting those XCMs to messages that can be interpreted on Ethereum\n(our Gateway contract specifically)\n* Adds pallet `snowbridge-pallet-system-v2` which is the governance\ncontrolplane for V2\n* The primitives crates for V1 and V2 have been refactored and\nconsolidated:\n* Added pallet `snowbridge-inbound-queue-primitives` with all primitives\nfor the inbound path for V1 and V2.\n* Added pallet `snowbridge-outbound-queue-primitives` with all\nprimitives for the outbound path for V1 and V2.\n\nNote that much of the code for the inbound-queue and outbound-queue\npallets is derived from the original V1 pallets.\n\n## AssetHub\n\n* Adds pallet `snowbridge-pallet-system-frontend`. This pallet acts as a\nproxy for `snowbridge-pallet-system-v2` on BH, and allows any AH account\nto interface with the V2 controlplane without having to interact with BH\nin any manner.\n\n## Supported messaging functionality\n\n### Ethereum->Polkadot\n\n* Users can transfer up to 8 ERC20 tokens, as well as native ether\n* Users can provide an arbitrary xcm message\n\nThe assets will placed into holding on AH, and the user-supplied XCM is\nresponsible\nfor handling those assets in holding.\n\nFor reference, see the inbound message [format](\nhttps://github.com/vgeddes/polkadot-sdk/blob/387c72546be38763a2d3c9b52c0f6cc1d8ac707e/bridges/snowbridge/primitives/inbound-queue/src/v2/message.rs#L101).\n\n### Polkadot->Ethereum\n\nUsers can provide an XCM that includes:\n* Transfers for up to 7 Polkadot-native or Ethereum-native assets\nregistered on AH.\n* A single `Transact` instruction to call an Ethereum mainnet contract\n\nThese XCM instructions are converted to a batch of commands that are\nexecuted on the Ethereum side. For reference, see the outbound message\n[format](https://github.com/vgeddes/polkadot-sdk/blob/387c72546be38763a2d3c9b52c0f6cc1d8ac707e/bridges/snowbridge/primitives/outbound-queue/src/v2/message.rs#L122)\n\n## Relayer Incentivization\n\nBH holds wrapped ether that will be used to reward relayers for both the\ninbound and outbound directions. When a reward is marked as claimable,\nit can be minted on AH when the beneficiary desires to do so.\n\n### Ethereum->Polkadot\n\nUsers supply an an arbitrary reward in ether on Ethereum. This is\nincluded in the message sent to BH, where it added as a reward for the\nrelayer. The relayer can claim these rewards on AH at a later point\nusing the `pallet-bridge-relayers` API.\n\n### Polkadot->Ethereum \n\nUsers supply an an arbitrary reward in wrapped ether using their funds\non AH. When the message is committed for delivery on BH, this reward is\ntracked in `outbound_queue_v2::PendingOrders[MessageNonce]`\n\nAfter a relayer has delivered the message to Ethereum and forwarded the\ndelivery receipt back to `outbound-queue-v2`, the reward will be\nrendered claimable, and the relayer can claim these rewards on AH at a\nlater point using the `pallet-bridge-relayers` API.\n\n---------\n\nSigned-off-by: Adrian Catangiu <adrian@parity.io>\nCo-authored-by: claravanstaden <claravanstaden64@gmail.com>\nCo-authored-by: ron <yrong1997@gmail.com>\nCo-authored-by: Adrian Catangiu <adrian@parity.io>",
          "timestamp": "2025-03-24T16:43:26Z",
          "tree_id": "918228ca8aba1ec7e999bc3a2a5152db964cbc5a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/98c6ffcea6794d338514cf9bd84446d2f276cb63"
        },
        "date": 1742837876429,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17348822,
            "range": "± 171298",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17513782,
            "range": "± 126141",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18692706,
            "range": "± 128086",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22643065,
            "range": "± 101195",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 50380043,
            "range": "± 554055",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 289190322,
            "range": "± 5321737",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2127876188,
            "range": "± 44386028",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14262727,
            "range": "± 163440",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14218379,
            "range": "± 62423",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14682241,
            "range": "± 105676",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18611876,
            "range": "± 152284",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 47836380,
            "range": "± 389559",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 273381344,
            "range": "± 2060817",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2255011543,
            "range": "± 29202983",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "egor@parity.io",
            "name": "Egor_P",
            "username": "EgorPopelyaev"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e8698299f6ec5bd16b6958de60931d082bf6a7bc",
          "message": "Update RELEASE.md (#7903)\n\nThis PR updates outdated RELEASE.md file\n\nAddresses: #7188\n\n---------\n\nCo-authored-by: Michal Kucharczyk <1728078+michalkucharczyk@users.noreply.github.com>\nCo-authored-by: Iulian Barbu <14218860+iulianbarbu@users.noreply.github.com>\nCo-authored-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>",
          "timestamp": "2025-03-25T14:16:49Z",
          "tree_id": "4eecf2e738a51840fd6077dca62158b6fceea3a2",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e8698299f6ec5bd16b6958de60931d082bf6a7bc"
        },
        "date": 1742916684951,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17973828,
            "range": "± 141275",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18164982,
            "range": "± 102269",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19468294,
            "range": "± 189046",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23598959,
            "range": "± 181010",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 52597642,
            "range": "± 856295",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 332983242,
            "range": "± 6540338",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2628048595,
            "range": "± 157589633",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14898103,
            "range": "± 163571",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15025368,
            "range": "± 71265",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15341597,
            "range": "± 103321",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19192099,
            "range": "± 116667",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49676169,
            "range": "± 396275",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 288804823,
            "range": "± 3036403",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2361847837,
            "range": "± 11813894",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "yrong1997@gmail.com",
            "name": "Ron",
            "username": "yrong"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8b87a0e246385a9deceff6d7515295cad0e35083",
          "message": "Snowbridge - Change the hash of the outbound queue PendingOrders storage item (#8024)\n\nSigned-off-by: Adrian Catangiu <adrian@parity.io>\nCo-authored-by: claravanstaden <claravanstaden64@gmail.com>\nCo-authored-by: Vincent Geddes <117534+vgeddes@users.noreply.github.com>\nCo-authored-by: Adrian Catangiu <adrian@parity.io>",
          "timestamp": "2025-03-25T17:13:11Z",
          "tree_id": "72ceb3a4049ed05934c220e820c6a77d2a6df48d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/8b87a0e246385a9deceff6d7515295cad0e35083"
        },
        "date": 1742925973785,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18458873,
            "range": "± 184028",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18348424,
            "range": "± 157613",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19561134,
            "range": "± 219053",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23264351,
            "range": "± 226279",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 52086694,
            "range": "± 1507949",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 314162735,
            "range": "± 6005963",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2375185876,
            "range": "± 122636737",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14645997,
            "range": "± 122771",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14898955,
            "range": "± 141734",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15506397,
            "range": "± 46286",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19287973,
            "range": "± 386183",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49235839,
            "range": "± 579372",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 279369509,
            "range": "± 1787752",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2298099103,
            "range": "± 12226841",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eresav@me.com",
            "name": "Andrei Eres",
            "username": "AndreiEres"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1d5d8aac07d41f3c2aa57a80562af7955dcc8af3",
          "message": "Rewrite zombienet-polkadot-functional-0012-spam-statement-distribution-requests (#7657)\n\nFixes https://github.com/paritytech/polkadot-sdk/issues/5973\n\n---------\n\nCo-authored-by: Javier Viola <363911+pepoviola@users.noreply.github.com>\nCo-authored-by: Javier Viola <javier@parity.io>\nCo-authored-by: Stephane Gurgenidze <59443568+sw10pa@users.noreply.github.com>",
          "timestamp": "2025-03-26T06:54:15Z",
          "tree_id": "854a11f7e27bc49ee643adf7864f1c48b6a56676",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/1d5d8aac07d41f3c2aa57a80562af7955dcc8af3"
        },
        "date": 1742975120435,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18081470,
            "range": "± 457202",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17842817,
            "range": "± 199368",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19340831,
            "range": "± 223111",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23765094,
            "range": "± 416895",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56311279,
            "range": "± 1569993",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 337141021,
            "range": "± 9837642",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2792551874,
            "range": "± 62240456",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15327289,
            "range": "± 221706",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15366449,
            "range": "± 386186",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16149432,
            "range": "± 148456",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20470289,
            "range": "± 313160",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53342224,
            "range": "± 1174485",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 297210124,
            "range": "± 4083590",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2400063155,
            "range": "± 33403640",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "lazam@users.noreply.github.com",
            "name": "Anthony Lazam",
            "username": "lazam"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4d3354f2c63f0897a5f73b73c383dae4af73088c",
          "message": "CI: Update the pushgateway url for zombienet (#8025)\n\nUpdated the new pushgateway url for zombienet due to the restructuring\nof the zombienet infra\n\nhttps://github.com/paritytech/devops/issues/3857",
          "timestamp": "2025-03-26T08:44:28Z",
          "tree_id": "8dbb754d3268ca69faf44c23205732d3df8729b4",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4d3354f2c63f0897a5f73b73c383dae4af73088c"
        },
        "date": 1742981566039,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17734720,
            "range": "± 129194",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17810107,
            "range": "± 149485",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19149680,
            "range": "± 122388",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23752226,
            "range": "± 254649",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53528584,
            "range": "± 748784",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 321799846,
            "range": "± 8353865",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2474613501,
            "range": "± 143648636",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14799965,
            "range": "± 76056",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15082888,
            "range": "± 170219",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15724049,
            "range": "± 117615",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19651889,
            "range": "± 363949",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50586461,
            "range": "± 677763",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 289063120,
            "range": "± 3182188",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2370674736,
            "range": "± 17629131",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "e.svirsky@tut.by",
            "name": "Evgeny Svirsky",
            "username": "evgeny-s"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a5aff9e55530dcc70cf22d5dbb70385d4ed566f3",
          "message": "Expose rpc_rate_limit* cli options to parachains (#7994)\n\nExpose rpc_rate_limit* cli options to parachains\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-03-26T11:12:17Z",
          "tree_id": "0c97ba5c751c64583710f51c6c4b1d4d42b1266f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/a5aff9e55530dcc70cf22d5dbb70385d4ed566f3"
        },
        "date": 1742993438004,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18113504,
            "range": "± 165700",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18387088,
            "range": "± 152621",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20183129,
            "range": "± 188913",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24616580,
            "range": "± 239648",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59068778,
            "range": "± 1713899",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 369239674,
            "range": "± 3714634",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2560681564,
            "range": "± 167192504",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15374415,
            "range": "± 226338",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15565024,
            "range": "± 310786",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16203278,
            "range": "± 186101",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20669956,
            "range": "± 185280",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53186996,
            "range": "± 740474",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 314333220,
            "range": "± 5813772",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2571428747,
            "range": "± 40724022",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "32168055+antkve@users.noreply.github.com",
            "name": "Anthony Kveder",
            "username": "antkve"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c31ab2a246af0318a989ce6486f0bf8d7d385243",
          "message": "Updated readme and shell script bash version (#8045)\n\n# Description\n\nReplaced the NPM instructions to install @polkadot/api-cli with Yarn\ninstructions, and added MacOS instructions for bash and JQ install. Also\nchanged the shell scripts to use the environment's default version of\nbash instead of /bin/bash.\n\n## Integration\n\nNone needed\n\n## Review Notes\n\nTrying to run run-test.sh with the old api-cli causes an obtuse\ndivide-by-zero error in the setup of the bridge.\nThe shell scripts were changed to allow more flexibility with the bash\nversion; Mac's official version of bash does not support certain\ncommands used in the scripts, so the user must install a new version of\nbash (e.g. with Brew) whose path will not be /bin/bash.",
          "timestamp": "2025-03-26T13:44:16Z",
          "tree_id": "f98f82514274a5397dbf095d50e61cad879848af",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c31ab2a246af0318a989ce6486f0bf8d7d385243"
        },
        "date": 1743001770809,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18475441,
            "range": "± 97983",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18817987,
            "range": "± 128415",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20209605,
            "range": "± 151307",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24575462,
            "range": "± 235278",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57850262,
            "range": "± 972994",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 363573156,
            "range": "± 9588186",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2384671794,
            "range": "± 90865065",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15367952,
            "range": "± 116167",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15413220,
            "range": "± 169639",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15995908,
            "range": "± 106445",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20729161,
            "range": "± 153047",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52822919,
            "range": "± 770419",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 316873354,
            "range": "± 3927535",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2479056228,
            "range": "± 29708584",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "10196091+Ank4n@users.noreply.github.com",
            "name": "Ankan",
            "username": "Ank4n"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "10d15dd1219b6124a265b8f9069916023e58b7ed",
          "message": "[AHM] Revert v17 migration of pallet-staking in Westend (#8059)\n\ncloses part of https://github.com/paritytech/polkadot-sdk/issues/8061.\n\n++ remove all epmb files.\n\nNote: Polkadot and Kusama are below this version (v15) and would not be\naffected.",
          "timestamp": "2025-03-27T21:06:28+01:00",
          "tree_id": "ba599faee07fbab292993b41aa8787d91b7bdc48",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/10d15dd1219b6124a265b8f9069916023e58b7ed"
        },
        "date": 1743109874683,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19128866,
            "range": "± 377647",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20097970,
            "range": "± 240270",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21636348,
            "range": "± 365851",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25151769,
            "range": "± 329904",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 61618363,
            "range": "± 1028554",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 396201199,
            "range": "± 14583622",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2735082796,
            "range": "± 197661805",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16040998,
            "range": "± 193532",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16162968,
            "range": "± 150299",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16740623,
            "range": "± 768608",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21596531,
            "range": "± 485174",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54889994,
            "range": "± 1405884",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 332442178,
            "range": "± 4075232",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2696733712,
            "range": "± 41650583",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "178801527+raymondkfcheung@users.noreply.github.com",
            "name": "Raymond Cheung",
            "username": "raymondkfcheung"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "972e95732bc9828093a344d40952c19729a33331",
          "message": "Add expensive scenario for asset exchange (#7952)\n\nThis PR introduces a proper implementation for\n`worst_case_asset_exchange()` in the `AssetHubWestend` benchmarking\nsetup, ensuring accurate weight calculations and preparing for\nintegration tests. It addresses #7943 partially.\n\n### **Key Changes**  \n- **Implemented `worst_case_asset_exchange()`** with a realistic\nhigh-cost asset exchange scenario.\n- **Generated accurate weight benchmarks** for `exchange_asset`.  \n- **Replaced placeholder weight implementation** (`Weight::MAX`) with\nreal benchmarked values.\n- **Added integration tests** to validate correctness and performance.  \n\n### **Integration Notes**  \n- These changes ensure the benchmarking pipeline correctly reflects real\nexecution costs.\n- The next steps involve verifying benchmark results, backporting to\n`stable2503`, and deploying on `AssetHubWestend`.\n\n### **Review Notes**  \n- [x] **Check `worst_case_asset_exchange()` logic**—does it properly\nmodel the most expensive execution path?\n- [x] **Verify weight integration**—are the benchmarked weights\ncorrectly applied?\n- [x] **Ensure tests cover edge cases**—do the\n[tests](https://github.com/paritytech/polkadot-sdk/issues/7943#issuecomment-2731941120)\nproperly handle all edge cases?\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>\nCo-authored-by: Francisco Aguirre <franciscoaguirreperez@gmail.com>",
          "timestamp": "2025-03-28T07:48:52Z",
          "tree_id": "972670393c0d6a8ba524adf60ab75545a7c6cb07",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/972e95732bc9828093a344d40952c19729a33331"
        },
        "date": 1743158054386,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19281251,
            "range": "± 488205",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20336258,
            "range": "± 527231",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21529759,
            "range": "± 367138",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25626421,
            "range": "± 437291",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 61297611,
            "range": "± 1082141",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 417229936,
            "range": "± 10722357",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2856503979,
            "range": "± 245363502",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15350814,
            "range": "± 813593",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15827324,
            "range": "± 340385",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16165680,
            "range": "± 261225",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21733760,
            "range": "± 687394",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53290806,
            "range": "± 1045727",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 324899277,
            "range": "± 8079646",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2498101097,
            "range": "± 46753633",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "adrian@parity.io",
            "name": "Adrian Catangiu",
            "username": "acatangiu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d243659ece7b700a78af415f71f1b05094d30839",
          "message": "[XCM] allow signed account to be aliased between system chains (#7983)\n\nFixes https://github.com/polkadot-fellows/runtimes/issues/635\n\n# New alias filter defined\n\nThe PR introduces a new Alias filter that allows account `X` on a system\nchain to alias itself on another chain where the filter is installed.\n\nThis allows UX improvements like configuring other chains to allow\nsigned account on AH to operate over XCM on another chain using the same\nsigned account on the remote chain (rather than use a sovereign\naccount).\n\nE.g. ALICE sets her identity on People chain directly from AH (where her\nfunds are). Sets identity for account ALICE on People using a\ncross-chain action initiated from AH using account ALICE (on AH).\n\n# Aliasing configuration for system chains\n\n- Asset Hub: does not allow same account aliasing: there is no real\nworld demand for it, the direction is usually reversed, users already\nhave accounts on AH and want to use them cross-chain on other chains.\nWithout real world demand, it's better to keep AH permissions as tight\nas possible.\n- Bridge Hub: does not allow same account aliasing: there is no real\nworld demand for it, only low-level power users (like relayers) directly\ninteract with Bridge Hub. They don't need aliasing to operate\ncross-chain they can operate locally.\n- Collectives: allows account A on a sibling system chain to alias into\nthe local account A.\n- Coretime: allows account A on a sibling system chain to alias into the\nlocal account A.\n- People: allows account A on a sibling system chain to alias into the\nlocal account A.\n\n# Practical example showcased\n\n`Alice` on AssetHub can set identity for `Alice` on People over XCM.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-03-28T10:24:56Z",
          "tree_id": "f145b16e5e52006861f8231fc7c77b2be868dab7",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d243659ece7b700a78af415f71f1b05094d30839"
        },
        "date": 1743162139723,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17435305,
            "range": "± 94659",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17707580,
            "range": "± 102150",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18738025,
            "range": "± 96715",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22736925,
            "range": "± 121072",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 50783748,
            "range": "± 522568",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 282491158,
            "range": "± 3003403",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2200417688,
            "range": "± 23097658",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14252640,
            "range": "± 42236",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14389650,
            "range": "± 114192",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14878298,
            "range": "± 34331",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19147152,
            "range": "± 163429",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49264169,
            "range": "± 276423",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 285535507,
            "range": "± 1784635",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2306339231,
            "range": "± 26740548",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "rohit.sarpotdar@parity.io",
            "name": "Rohit Sarpotdar",
            "username": "rosarp"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "82827221b774e24b98cd7f2306c1f2c1ea281c40",
          "message": "Bridges: Add initial primitives for AssetHub bridging (#8063)\n\nThis resolves TODO no. 1:\nhttps://github.com/paritytech/parity-bridges-common/issues/3136#issue-2913441160\n\nTo add cli support to substrate-relay as described in above issue, \nnecessary changes from\n[this](https://github.com/paritytech/polkadot-sdk/pull/6675) PR are\nadded by this PR.\n\nSpecifically below changes and any other supportive changes.\n\n```\n// bridges/chains/chain-asset-hub-rococo/src/lib.rs\nimpl Chain for AssetHubRococo {..}\nimpl Parachain for AssetHubRococo {..}\n```\n\n```\n// bridges/chains/chain-asset-hub-westend/src/lib.rs\nimpl Chain for AssetHubWestend {..}\nimpl Parachain for AssetHubWestend {..}\n```\n\n---------\n\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-03-28T11:23:57Z",
          "tree_id": "d647d32e745a87a78649f2d189b1969c981823e2",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/82827221b774e24b98cd7f2306c1f2c1ea281c40"
        },
        "date": 1743164079818,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17764918,
            "range": "± 130336",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18099831,
            "range": "± 158343",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19241278,
            "range": "± 179137",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23711451,
            "range": "± 184640",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55210627,
            "range": "± 2090988",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 338518582,
            "range": "± 4775372",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2540732576,
            "range": "± 138670987",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14770595,
            "range": "± 107408",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14922242,
            "range": "± 183409",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15422847,
            "range": "± 162708",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19433852,
            "range": "± 263772",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49680149,
            "range": "± 540314",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 293539660,
            "range": "± 6860508",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2376899901,
            "range": "± 20139870",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "32168055+antkve@users.noreply.github.com",
            "name": "Anthony Kveder",
            "username": "antkve"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9be43c0abf0a02a28d8fd4bbe9cfaed17dfcf18c",
          "message": "Remove primitives (#8057)\n\n# Description\n\nRemoves the bridge-related primitives for Polkadot and Kusama from\n/bridges/chains, to be moved into parity-bridges-common and\npolkadot-fellows/runtimes, per [this\nissue](https://github.com/polkadot-fellows/runtimes/pull/627). Also\ntweaks the readme and scripts to be more platform-agnostic.\n**NB**: This will require those who run the bridge zombienet tests to\nrename the zombienet binary from `zombienet-linux-x64` to just\n`zombienet`.\n\n## Integration\n\nThis update breaks parity-bridges-common's dependency on these\nprimitives, which are re-added to parity-bridge-common in [this\nPR](https://github.com/paritytech/parity-bridges-common/pull/3145).",
          "timestamp": "2025-03-28T17:47:49Z",
          "tree_id": "a53a44a33317ca5ddb366168e2966493df933f7b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/9be43c0abf0a02a28d8fd4bbe9cfaed17dfcf18c"
        },
        "date": 1743186980975,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17147198,
            "range": "± 189626",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17603653,
            "range": "± 225973",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18811321,
            "range": "± 142243",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22910709,
            "range": "± 165755",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51337108,
            "range": "± 647045",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 282592829,
            "range": "± 2134452",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2326103462,
            "range": "± 105101260",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14209744,
            "range": "± 135999",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14337544,
            "range": "± 111342",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14909610,
            "range": "± 116059",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18689501,
            "range": "± 143885",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 48819004,
            "range": "± 844057",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 279913542,
            "range": "± 5940867",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2328986203,
            "range": "± 81831499",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "33208377+ndkazu@users.noreply.github.com",
            "name": "Kazunobu Ndong",
            "username": "ndkazu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "342f46a4e37749a749a405e6cacece9687f2a9f2",
          "message": "Voting hook (#7703)\n\n# Description\nThis is a continuation of the following\n[PR](https://github.com/paritytech/polkadot-sdk/pull/5735#discussion_r1967297490)\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-03-28T22:42:25Z",
          "tree_id": "99209c1f1a774c68263f43200b8d1e567bf6a5cc",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/342f46a4e37749a749a405e6cacece9687f2a9f2"
        },
        "date": 1743204973224,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18146377,
            "range": "± 138043",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18306357,
            "range": "± 197497",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19242028,
            "range": "± 172027",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23287659,
            "range": "± 529392",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51075151,
            "range": "± 1704886",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 309635014,
            "range": "± 4282958",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2254949687,
            "range": "± 153995571",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14451981,
            "range": "± 170659",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14604252,
            "range": "± 103211",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15110158,
            "range": "± 162662",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18817676,
            "range": "± 184921",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49824533,
            "range": "± 507648",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 299227120,
            "range": "± 4352945",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2253606551,
            "range": "± 15215021",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f1d1d9c5c8d0effe4c60b81f6eaaa112ddc14658",
          "message": "frame-system: Don't underflow the sufficients (#8062)\n\nCloses: https://github.com/paritytech/polkadot-sdk/issues/8044\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-03-28T22:49:42Z",
          "tree_id": "32c8f90781429db7681e0377d5d77fac012d012c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f1d1d9c5c8d0effe4c60b81f6eaaa112ddc14658"
        },
        "date": 1743206272028,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17786927,
            "range": "± 123112",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17973539,
            "range": "± 109804",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19355121,
            "range": "± 106801",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23154102,
            "range": "± 248576",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53494475,
            "range": "± 909369",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 324422711,
            "range": "± 7520266",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2671606221,
            "range": "± 97171686",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14698380,
            "range": "± 206069",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14950700,
            "range": "± 117275",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15519374,
            "range": "± 115947",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19702641,
            "range": "± 307525",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50148793,
            "range": "± 1256662",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 294445128,
            "range": "± 4897234",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2355154195,
            "range": "± 18413435",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "10196091+Ank4n@users.noreply.github.com",
            "name": "Ankan",
            "username": "Ank4n"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6a3bcf86ced6723f9d3ef2c05fb0e550e935b046",
          "message": "[Staking] Extrinsic `migrate_currency` handles any scenario where an old staking lock exists (#7933)\n\ncloses #7931.\n\n## Context\nThe `Currency::lock` to `fungible::hold` migration for pallet-staking is\nasync. This means a staker can interact with their stake before\nmigration occurs. In such cases, only the new hold amount gets updated,\nwhile the old lock remains in place without any change. To fully migrate\nand release the old lock, the permissionless `migrate_currency`\nextrinsic can be used.\n\n## The bug\nBecause the migration is async, the ledger amount and the old lock can\nbecome out of sync. The current implementation only allows the extrinsic\nto execute when `lock_amount == ledger.total`, which is too restrictive\nand blocks valid migrations.\n\n## The fix\n`Staking::migrate_currency` is updated to handle any scenario where an\nold staking lock still exists. If a lock is found, it will be cleared,\nand the corresponding hold amount will be properly updated to reflect\nthe total staked balance.\n\n\n## Migration stats from rerunning all migration as a remote test: \nWestend: `success: 73023, err: 0, total force withdrawn stake:\n340726297547707, no_migration_needed: 53`\nKusama: `success: 26096, err: 0, total force withdrawn stake:\n893395700711867, no_migration_needed: 0`\nPolkadot: `success: 56044, err: 0, total force withdrawn stake:\n157489603546239, no_migration_needed: 0`\n\n---------\n\nCo-authored-by: kianenigma <kian@parity.io>",
          "timestamp": "2025-03-30T17:36:17Z",
          "tree_id": "beb060283532082aaa9c20b33fb4317b9df6d0ec",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/6a3bcf86ced6723f9d3ef2c05fb0e550e935b046"
        },
        "date": 1743359018357,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17360827,
            "range": "± 88817",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17813121,
            "range": "± 120920",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18874326,
            "range": "± 67527",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23280215,
            "range": "± 135133",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 52724120,
            "range": "± 2192644",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 329001422,
            "range": "± 2502112",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2574291742,
            "range": "± 159552319",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14455645,
            "range": "± 123228",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14502937,
            "range": "± 79609",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14990497,
            "range": "± 96199",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19116433,
            "range": "± 145988",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 48543659,
            "range": "± 870516",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 283797827,
            "range": "± 3331073",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2315012292,
            "range": "± 11043244",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "gui.thiolliere@gmail.com",
            "name": "Guillaume Thiolliere",
            "username": "gui1117"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f9fac6c2af47576b73b5e1f092a2283d56eb5d72",
          "message": "Optimize origin checks (#8000)\n\nOptimize origin checks, avoid cloning and conversion when not needed.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-03-30T21:58:22Z",
          "tree_id": "093e6f391b5ac553622ca261156a5dd98e618139",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f9fac6c2af47576b73b5e1f092a2283d56eb5d72"
        },
        "date": 1743375950224,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18789658,
            "range": "± 180662",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19131378,
            "range": "± 267087",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20559650,
            "range": "± 233021",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25044415,
            "range": "± 290446",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55673807,
            "range": "± 468669",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 345147774,
            "range": "± 7449623",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2741304486,
            "range": "± 70997811",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15481056,
            "range": "± 131833",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15743411,
            "range": "± 236436",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16063482,
            "range": "± 135113",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20541506,
            "range": "± 228768",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51511719,
            "range": "± 670942",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 319776145,
            "range": "± 5302452",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2507902950,
            "range": "± 51964236",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "claravanstaden64@gmail.com",
            "name": "Clara van Staden",
            "username": "claravanstaden"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "0f3f611ed8b58be9e6c1d96694719b6c6fda3a62",
          "message": "Snowbridge - Various minor improvements (#8020)\n\n- **Renames event in the Outbound Queue v2**: Resolves\n[SNO-1430](https://linear.app/snowfork/issue/SNO-1430)\n- **Remove unnecessary PaidFees event in Inbound Queue:** Resolves\n[SNO-1437](https://linear.app/snowfork/issue/SNO-1437)\n- **Remove unused types from Inbound Queue v2 pallet config:** Resolves\n[SNO-1436](http://linear.app/snowfork/issue/SNO-1436)\n- **Zero relayer reward in Inbound Queue should not be registered for a\nreward:** Resolves\n[SNO-1435](https://linear.app/snowfork/issue/SNO-1435)\n- **Moves Snowbridge System Frontend Pallet index from `80` to `36` on\nAH**:\nhttps://github.com/paritytech/polkadot-sdk/pull/7402#discussion_r2012104826\n- **Add message rejected event to outbound queue:** Resolves\n[SNO-1428](https://linear.app/snowfork/issue/SNO-1428) Closes\nhttps://github.com/paritytech/polkadot-sdk/issues/7972\n- **Removes unused method from Outbound Queue v2:** Resolves\n[SNO-1431](https://linear.app/snowfork/issue/SNO-1431)\n- **Fixes bug introduced in V2 related to commands on Ethereum's\nindexes:** Introduced in\nhttps://github.com/paritytech/polkadot-sdk/pull/7402, the command IDs\nneed to match on the [contract\nside](https://github.com/Snowfork/snowbridge/blob/b2eb7a4e0e8f9ef6182ff378733453a9513cb76b/contracts/src/Types.sol#L78).\nThis ensures that when we upgrade BH with the new code, it will remain\ncompatible with the existing contracts on Ethereum that don't know\nanything about V2.\n- **Benchmarks `submit_delivery_receipt` in the Outbound Queue v2**\n- **Allow transact without transfer of any asset**\n\n---------\n\nCo-authored-by: Ron <yrong1997@gmail.com>",
          "timestamp": "2025-03-31T08:31:42Z",
          "tree_id": "ba2b2548de81cd3e3504ddd6dbe3722b9c462f52",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/0f3f611ed8b58be9e6c1d96694719b6c6fda3a62"
        },
        "date": 1743414762353,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17432067,
            "range": "± 248531",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17814779,
            "range": "± 103089",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18998067,
            "range": "± 213497",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23383638,
            "range": "± 178771",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53943197,
            "range": "± 1220286",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 324921766,
            "range": "± 4303368",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2466679028,
            "range": "± 104495575",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14673339,
            "range": "± 83148",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14797241,
            "range": "± 254406",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15653004,
            "range": "± 144638",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20199851,
            "range": "± 317617",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51563117,
            "range": "± 809910",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 297804780,
            "range": "± 8652480",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2394963971,
            "range": "± 27620537",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "luizcmpc@gmail.com",
            "name": "Luiz Carvalho",
            "username": "saiintbrisson"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "9a901f3f9c42a4bf82434cedefa1ae6d8721dcc5",
          "message": "fix(substrate/client): cast `MAJOR_SYNC_BLOCKS` to usize (#8094)\n\nRustc started complaining from some versions onward when calling `into`\non `MAJOR_SYNC_BLOCKS`.\n\nNot sure what's the version from which it fails, but it does. I'm on\n1.85.1, it did fail on 1.82 as well.\n\n---------\n\nCo-authored-by: Iulian Barbu <14218860+iulianbarbu@users.noreply.github.com>",
          "timestamp": "2025-03-31T09:38:19Z",
          "tree_id": "7fd56209cb8717bb8db64d715a5ac4b51f59f487",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/9a901f3f9c42a4bf82434cedefa1ae6d8721dcc5"
        },
        "date": 1743417029244,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18492415,
            "range": "± 102670",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18839721,
            "range": "± 202493",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20229631,
            "range": "± 164769",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24612768,
            "range": "± 131830",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56005051,
            "range": "± 407733",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 354599501,
            "range": "± 5711893",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2731198842,
            "range": "± 116489750",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15201121,
            "range": "± 189903",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15257054,
            "range": "± 339655",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16075555,
            "range": "± 158194",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20148428,
            "range": "± 246661",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50909331,
            "range": "± 240170",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 308846300,
            "range": "± 4279553",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2471165916,
            "range": "± 54060608",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "jasl9187@hotmail.com",
            "name": "Jun Jiang",
            "username": "jasl"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "73157903c53f0b022c7f04f2968e60f19b2317df",
          "message": "Cleanup unused crates (#8006)\n\nFollow up to #7999\n\nRustRover warns several dependencies are unused.\nI tried to remove them, and it can pass compile and tests on my local\nmachine (macOS and Ubuntu 24.04), but `udeps` doesn't find these.\n\nI've no confidence. Let's see what CI says.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-03-31T12:36:50Z",
          "tree_id": "f19769d41ca10f17d27a1477a8a8f53bcb08035f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/73157903c53f0b022c7f04f2968e60f19b2317df"
        },
        "date": 1743427721457,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18008416,
            "range": "± 81186",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18218053,
            "range": "± 197873",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19541682,
            "range": "± 128550",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23753742,
            "range": "± 217819",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54098809,
            "range": "± 787112",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 316973028,
            "range": "± 5754850",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2514622157,
            "range": "± 62104870",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14650492,
            "range": "± 181728",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14862651,
            "range": "± 85614",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15405276,
            "range": "± 205539",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19285752,
            "range": "± 167874",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49762267,
            "range": "± 328099",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 285733950,
            "range": "± 2951928",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2337688847,
            "range": "± 27195124",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "bennethxyz@proton.me",
            "name": "bennethxyz",
            "username": "bennethxyz"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e7ba9a2f6b09d558d6af67328c3696b6e783c7ab",
          "message": "Migrate `pallet-tx-pause` to umbrella crate (#6630)\n\nPart of https://github.com/paritytech/polkadot-sdk/issues/6504\n\npolkadot address: 15rM9idTv1izwNFqPabfcT4jkqHDsEvHSa5fASAUZwZcS4Yw\n\n---------\n\nCo-authored-by: bennethxyz <bennethsotonye543@gmail.com>\nCo-authored-by: Giuseppe Re <giuseppe.re@parity.io>",
          "timestamp": "2025-03-31T13:23:59Z",
          "tree_id": "278dcb157507dc2ff0d0a7f67ecac71b6d7da00a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e7ba9a2f6b09d558d6af67328c3696b6e783c7ab"
        },
        "date": 1743432227999,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18048060,
            "range": "± 86389",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18389778,
            "range": "± 115242",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20078084,
            "range": "± 138699",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24364596,
            "range": "± 247622",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54840098,
            "range": "± 847409",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 348936285,
            "range": "± 6158893",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2740245287,
            "range": "± 124074396",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15090014,
            "range": "± 251119",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15145142,
            "range": "± 163883",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15543061,
            "range": "± 219922",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19889100,
            "range": "± 177733",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52010099,
            "range": "± 1501100",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 312772495,
            "range": "± 8291283",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2430759693,
            "range": "± 16824557",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "james@jsdw.me",
            "name": "James Wilson",
            "username": "jsdw"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c6249dca5928c12c35c577b971277d4211c928b7",
          "message": "Stabilize V2 archive RPC methods (#8104)\n\n# Description\n\nThis PR Stabilizes the V2 archive RPCs, and should merge following the\n[correpsonding\nPR](https://github.com/paritytech/json-rpc-interface-spec/pull/167) in\nthe spec repository merging.\n\n## Integration\n\nDownstream projects can now rely on the `archive_*` RPC methods on being\nstable. Anybody using the prior `archive_unstable_*` RPCs in recent\ntimes should be able to upgrade by simply renaming `archive_unstable` to\n`archive_v1` for any RPC calls, given that the actual interface hasn't\nchanged since December 2024.\n\n<!--\n\n* [ ] My PR follows the [labeling requirements](\n\nhttps://github.com/paritytech/polkadot-sdk/blob/master/docs/contributor/CONTRIBUTING.md#Process\n) of this project (at minimum one label for `T` required)\n* External contributors: ask maintainers to put the right label on your\nPR.\n* [ ] I have made corresponding changes to the documentation (if\napplicable)\n* [ ] I have added tests that prove my fix is effective or that my\nfeature works (if applicable)\n\nYou can remove the \"Checklist\" section once all have been checked. Thank\nyou for your contribution!\n\n-->",
          "timestamp": "2025-03-31T14:01:47Z",
          "tree_id": "4dc4b087cbeb0df1f6265b7ed2698bfc9389f8ef",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c6249dca5928c12c35c577b971277d4211c928b7"
        },
        "date": 1743433993085,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18082583,
            "range": "± 286582",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18357626,
            "range": "± 196414",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19988741,
            "range": "± 184625",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24734776,
            "range": "± 452553",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56702921,
            "range": "± 1420089",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 362713351,
            "range": "± 6763213",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2365964270,
            "range": "± 15764394",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15049883,
            "range": "± 196516",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15111623,
            "range": "± 212781",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15727381,
            "range": "± 203737",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20364349,
            "range": "± 129477",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51159842,
            "range": "± 950468",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 312458962,
            "range": "± 9352904",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2436842646,
            "range": "± 21319227",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alin@parity.io",
            "name": "Alin Dima",
            "username": "alindima"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ec700de9cdca84cdf5d9f501e66164454c2e3b7d",
          "message": "runtime: assume elastic scaling MVP is always enabled (#7986)\n\nThe runtime part of\nhttps://github.com/paritytech/polkadot-sdk/issues/6352.\n\nThe node-side part is handled by\nhttps://github.com/paritytech/polkadot-sdk/pull/7286 (which should be\nmerged first)",
          "timestamp": "2025-04-01T07:41:16Z",
          "tree_id": "cccc4c018d2265fa1a7e80052734f8ac57332b59",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ec700de9cdca84cdf5d9f501e66164454c2e3b7d"
        },
        "date": 1743496473799,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19118177,
            "range": "± 268803",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19720429,
            "range": "± 247923",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21020397,
            "range": "± 187480",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25405878,
            "range": "± 199520",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59512633,
            "range": "± 1027371",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 366460115,
            "range": "± 3960706",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2415250870,
            "range": "± 91558738",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15929764,
            "range": "± 212791",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16101260,
            "range": "± 187009",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16783586,
            "range": "± 223616",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21242528,
            "range": "± 271809",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53314991,
            "range": "± 1245037",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 332778335,
            "range": "± 6647255",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2508598070,
            "range": "± 41102897",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "niklasadolfsson1@gmail.com",
            "name": "Niklas Adolfsson",
            "username": "niklasad1"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3b31d8aa0cd8ef190cc8cea77df69a29ff685f5a",
          "message": "rpc v2 archive: more verbose error types in API (#8109)\n\nBuilds on #8104\n\n---------\n\nCo-authored-by: James Wilson <james@jsdw.me>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-04-01T14:56:46Z",
          "tree_id": "41ced9a73f3c734cc6bbd7bcd5c0bef17cbbc430",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/3b31d8aa0cd8ef190cc8cea77df69a29ff685f5a"
        },
        "date": 1743522432848,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19244091,
            "range": "± 145113",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19562560,
            "range": "± 318397",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21044496,
            "range": "± 280869",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25780987,
            "range": "± 249519",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 58003092,
            "range": "± 913384",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 355630271,
            "range": "± 6649831",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2380572878,
            "range": "± 192650426",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15811325,
            "range": "± 255284",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15647130,
            "range": "± 144290",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16447102,
            "range": "± 289075",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20744772,
            "range": "± 412048",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53540177,
            "range": "± 820340",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 325336466,
            "range": "± 3240304",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2532832944,
            "range": "± 23801111",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "davxy@datawok.net",
            "name": "Davide Galassi",
            "username": "davxy"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5d47972fad149da688f096d25ba643bd783f3604",
          "message": "Introduce ark-vrf (#7669)\n\nSuperseeds `bandersnatch_vrfs` with\n[ark-vrf](https://crates.io/crates/ark-vrf)\n\n- Same crypto as JAM\n- With a spec: github.com/davxy/bandersnatch-vrf-spec\n- Published on crates.io\n\nhttps://github.com/paritytech/polkadot-sdk/pull/7670 follow up\n\nNOTE: this crypto is under experimental feat\n\n---------\n\nSigned-off-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>\nCo-authored-by: Sebastian Kunert <skunert49@gmail.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>",
          "timestamp": "2025-04-01T20:06:20Z",
          "tree_id": "35a13e17c3522556111d45f23481d6c6f14e7e81",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/5d47972fad149da688f096d25ba643bd783f3604"
        },
        "date": 1743541081540,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18739134,
            "range": "± 209379",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18871906,
            "range": "± 122984",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20200349,
            "range": "± 230890",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23978151,
            "range": "± 295302",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56675342,
            "range": "± 938290",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 349303535,
            "range": "± 5576576",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2770502037,
            "range": "± 91035952",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15304016,
            "range": "± 187882",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15480868,
            "range": "± 281520",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15864816,
            "range": "± 67174",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20393591,
            "range": "± 207463",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52163030,
            "range": "± 821796",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 323389910,
            "range": "± 11274505",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2466372800,
            "range": "± 17221843",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "adrian@parity.io",
            "name": "Adrian Catangiu",
            "username": "acatangiu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3766467f5adc670ff4f71e2ec9f27185fdcf97ca",
          "message": "pallet-xcm: add support to authorize aliases (#6336)\n\nAdd calls to pallet-xcm for adding and removing authorization for a\ncertain `aliaser` location to alias into the caller `origin`.\n\n`pallet-xcm` also exposes an `AuthorizedAliases` filter implementation\nusable with `xcm_executor::Config::Aliasers` filter to easily allow\nruntimes to plug in the explicitly authorized aliases using the calls\nabove.\n\nUsually useful to allow your local account to be aliased into from a\nremote location also under your control (like your account on another\nchain).\n\nFor example, `Alice` on `Para42` can do _something_ on Asset Hub without\nhaving to transfer fees from `Para42`, but instead use her local Asset\nHub account:\n```rust\n// called by Alice on Para42\npallet_xcm::send(\n\tLocation::new(1, Parachain(1000)),\n\tXcm(vec![\n\t\tAliasOrigin(AliceOnAH),\n\t\tWithdrawAsset(fees),\n\t\tPayFees(fees),\n\t\tDoWhatever\n\t])\n);\n```\n\nPart of [Empowered cross-chain\norigins](https://github.com/paritytech/polkadot-sdk/issues/6054).\n\nFixes [XCM: Arbitrary Origin Aliases\n#722](https://github.com/paritytech/polkadot-sdk/issues/722)\n\n---------\n\nCo-authored-by: command-bot <>\nCo-authored-by: Francisco Aguirre <franciscoaguirreperez@gmail.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-04-02T11:37:32Z",
          "tree_id": "ea8ba5955d28d3a7a545797fd358679c614812c3",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/3766467f5adc670ff4f71e2ec9f27185fdcf97ca"
        },
        "date": 1743597617798,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18310002,
            "range": "± 162708",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18671578,
            "range": "± 219897",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19969712,
            "range": "± 223413",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24708252,
            "range": "± 120810",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59488578,
            "range": "± 935144",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 384570367,
            "range": "± 7187257",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2878041133,
            "range": "± 21763527",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15530385,
            "range": "± 146721",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15599743,
            "range": "± 121977",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16248818,
            "range": "± 210702",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20583400,
            "range": "± 319565",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53382390,
            "range": "± 762635",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 329751404,
            "range": "± 5495937",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2564037537,
            "range": "± 40192373",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48632512+s0me0ne-unkn0wn@users.noreply.github.com",
            "name": "s0me0ne-unkn0wn",
            "username": "s0me0ne-unkn0wn"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "875437c4aecf99e1f0ffeb8278a3b0b0017acbc2",
          "message": "Set PoV size limit to 10 Mb (#5884)\n\nOkay, enough theory, let's kick it off. Closes #5334.\n\n**UPDATE: All the concerns below are irrelevant now as 10 Mb PoVs have\nbeen enacted on Polkadot.**\n\nWhat are the implications from my point of view right now:\n\n### After this PR is merged\n\nAll the new chains (including test ones) started from genesis will\nsupport 10 Mb PoVs.\n\nIf some parachain updates to the SDK version containing this value and\nthen upgrades its runtime, the runtime will allow for 10 Mb PoVs while\nthe relay chain still has a 5 Mb limit. I don't think it's a problem\nbecause the collator building a block will be limited by the PoV size\nlimit stored in the persistent validation data (or even half of that\nlimit if the `full-pov-size` feature is not enabled). That may lead to\novershooting some per-dispatch-class limits but not the absolute PoV\nsize limits, which is safe. Still, a malicious collator can build a\nblock that the relay chain will reject. I'm not 100% sure if we need to\ntake care of such a thing as a \"malicious collator\". If that's a\nconcern, the possibility of temporarily using another constant for\nparachains is discussible.\n\n### After this change is propagated to the fellowship runtimes\n\nAfter a new relay chain runtime version with this value is released and\nthe runtime upgrade is performed, it will theoretically allow for a 10\nMb PoV size, but the on-chain limit will still remain at 5 Mb.\n\n### After governance changes the `max_pov_size` config value\n\nEverything supports 10 Mb PoVs now.\n\n@acatangiu please comment on implications for bridges, I see it's used\nin bridges code, but not sure if any special treatment is needed.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-04-02T18:59:33Z",
          "tree_id": "c42f64763d759d9d9344e2072f31548304773362",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/875437c4aecf99e1f0ffeb8278a3b0b0017acbc2"
        },
        "date": 1743623247431,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18399087,
            "range": "± 268368",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18425523,
            "range": "± 210004",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19438139,
            "range": "± 119124",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24043054,
            "range": "± 276068",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56570393,
            "range": "± 1005617",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 358033282,
            "range": "± 8408523",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2503701897,
            "range": "± 208176528",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14929575,
            "range": "± 460676",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15160510,
            "range": "± 359660",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15823720,
            "range": "± 299224",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20121995,
            "range": "± 196298",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53264869,
            "range": "± 1166154",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 303745462,
            "range": "± 11392476",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2428553471,
            "range": "± 21051137",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "laboon@users.noreply.github.com",
            "name": "Bill Laboon",
            "username": "laboon"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "2acf9e5017495ac5a4fb85eebf9d86b46c2b9405",
          "message": "Add chat channels to README (#8105)\n\nThis adds links to the Telegram, Discord and Matrix Polkadot SDK Dev\nchat channels to the README\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-04-02T20:40:13Z",
          "tree_id": "35a5dcb67fa67ba71dfef0336595edc1c0673efd",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/2acf9e5017495ac5a4fb85eebf9d86b46c2b9405"
        },
        "date": 1743629169311,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17508021,
            "range": "± 164319",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17767976,
            "range": "± 134590",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18966437,
            "range": "± 195499",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23070342,
            "range": "± 214513",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51823475,
            "range": "± 693398",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 324600175,
            "range": "± 3111274",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2429993500,
            "range": "± 167102859",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14407302,
            "range": "± 113940",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14644722,
            "range": "± 157625",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15025509,
            "range": "± 57542",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19121852,
            "range": "± 130336",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 48264480,
            "range": "± 578765",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 289848945,
            "range": "± 5178345",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2357053065,
            "range": "± 45084138",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a3be2d74b80b21b5d534c9b07d04bcec6517d753",
          "message": "`pallet-xmcp-queue`: Fix broken and ignored test (#8011)\n\nNow it works with debug asserts as well, by simply catching the panic ;)\nThis way the test will run by CI and not get outdated anymore.\n\nCo-authored-by: Adrian Catangiu <adrian@parity.io>",
          "timestamp": "2025-04-02T21:41:45Z",
          "tree_id": "a077f124e959c1f91cb79712e67580c204e0e9c2",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/a3be2d74b80b21b5d534c9b07d04bcec6517d753"
        },
        "date": 1743632969783,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 16918252,
            "range": "± 335292",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17277663,
            "range": "± 146830",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18553476,
            "range": "± 232190",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22539124,
            "range": "± 107879",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 52143705,
            "range": "± 907586",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 331339073,
            "range": "± 4037037",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2438620805,
            "range": "± 167417006",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14082192,
            "range": "± 80555",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14139812,
            "range": "± 75611",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14656384,
            "range": "± 121695",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18620742,
            "range": "± 219013",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 48070659,
            "range": "± 479712",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 280570413,
            "range": "± 4232016",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2280071424,
            "range": "± 12217590",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "oliver.tale-yazdi@parity.io",
            "name": "Oliver Tale-Yazdi",
            "username": "ggwpez"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f238dceaca40c7a01b433f8d23c1f411d63c1689",
          "message": "Add missing prdocs (#8140)\n\nPrdocs for:\n- #7598\n- #7620 \n- #7627\n- more?\n\n---------\n\nSigned-off-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>",
          "timestamp": "2025-04-03T10:02:39Z",
          "tree_id": "00df53a39eb078c6d838fc3db96e2e601751deae",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f238dceaca40c7a01b433f8d23c1f411d63c1689"
        },
        "date": 1743677274982,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17183722,
            "range": "± 74700",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17478585,
            "range": "± 141119",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18758451,
            "range": "± 185427",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22602327,
            "range": "± 104950",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 50435885,
            "range": "± 447062",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 285434027,
            "range": "± 1631827",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2179952125,
            "range": "± 107736778",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14256964,
            "range": "± 151866",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14329205,
            "range": "± 76440",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14806842,
            "range": "± 83368",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18671615,
            "range": "± 148153",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 47882161,
            "range": "± 188717",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 276950034,
            "range": "± 1506639",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2230019962,
            "range": "± 44001948",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "paolo.lacamera@pm.me",
            "name": "Paolo La Camera",
            "username": "sigurpol"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7605ace3799faaeb48be8a09aecb9ba1bce42e6e",
          "message": "Improve documentation around development environment configuration (#8143)\n\nUpdate the development environment configuration:\n- fixing the configuration for `neovim` around `cargo-remote`, where\n`check` override was incorrectly set under `cargo`\n- adding a note about  `neovim`/ `rustaceanvim` vs `rust-analyzer`\n- adding a  basoc configuration for `Zed`\n- adding a note for `Cursor`",
          "timestamp": "2025-04-03T13:31:02Z",
          "tree_id": "3d1338a568b943127ca71d3114dc6de97a864018",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/7605ace3799faaeb48be8a09aecb9ba1bce42e6e"
        },
        "date": 1743690584249,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18883921,
            "range": "± 378342",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19843869,
            "range": "± 502911",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21196374,
            "range": "± 322863",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25545319,
            "range": "± 474097",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 61170580,
            "range": "± 1354697",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 418521167,
            "range": "± 11291580",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2844781608,
            "range": "± 116655305",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15860894,
            "range": "± 242830",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16162960,
            "range": "± 190498",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16906974,
            "range": "± 305748",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21667957,
            "range": "± 338685",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 55049393,
            "range": "± 1405995",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 348713305,
            "range": "± 7887580",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2751407289,
            "range": "± 53672180",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "rohit.sarpotdar@parity.io",
            "name": "Rohit Sarpotdar",
            "username": "rosarp"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9601363f6a8b88510cb38782dd77f08778da5fb7",
          "message": "Bridges: Add missing initial primitives for AssetHub bridging (#8138)\n\nThis adds missing initial primitives to add CLI support for AssetHub\nBridging\nearlier PR - https://github.com/paritytech/polkadot-sdk/pull/8063\nsource PR - https://github.com/paritytech/polkadot-sdk/pull/6675\n\nIt adds constants required to make this\n[PR](https://github.com/paritytech/parity-bridges-common/issues/3136#issue-2913441160)\nbuild.\n\n- [x] Make\n[PR](https://github.com/paritytech/parity-bridges-common/issues/3136)\nbuild successful with these changes before merging\n\n---------\n\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-04-04T06:41:16Z",
          "tree_id": "78c118e677eeee8ff4011a805e79fdf73985634f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/9601363f6a8b88510cb38782dd77f08778da5fb7"
        },
        "date": 1743751955278,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18318455,
            "range": "± 147138",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18709125,
            "range": "± 75866",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20165132,
            "range": "± 90644",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24475144,
            "range": "± 333042",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54292007,
            "range": "± 489066",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 328439530,
            "range": "± 9399817",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2657705519,
            "range": "± 91411629",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15093869,
            "range": "± 187096",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15253901,
            "range": "± 420636",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16051680,
            "range": "± 161118",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20027175,
            "range": "± 241896",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51016061,
            "range": "± 560516",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 302737386,
            "range": "± 5063557",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2387249710,
            "range": "± 23141958",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "610ea007aa46a5b12aaef202092ed5a26f699c84",
          "message": "Introduce `SelectCore` digest in Cumulus (#8153)\n\nRight now the select core information are only send as an `UMPSignal` to\nthe relay chain. For a node to calculate the core of a block, it is\nfirst required execute the block to call `selected_core` runtime api.\n\nThis pull requests solves this by putting the selected core into a\ndigest. Thus, the node can directly fetch it from the header.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-04-04T14:19:52Z",
          "tree_id": "4b8dda6eafd62fc5158072e245ba6b1ae12917e6",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/610ea007aa46a5b12aaef202092ed5a26f699c84"
        },
        "date": 1743780465141,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18956151,
            "range": "± 204900",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19124333,
            "range": "± 291246",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20581457,
            "range": "± 262211",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24883492,
            "range": "± 369391",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 60490155,
            "range": "± 1965844",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 370207605,
            "range": "± 5565265",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2373813418,
            "range": "± 153307280",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15541254,
            "range": "± 140917",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15420555,
            "range": "± 262827",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15972999,
            "range": "± 233885",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20353598,
            "range": "± 245791",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52280594,
            "range": "± 1164746",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 318238831,
            "range": "± 4845190",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2494363603,
            "range": "± 31425683",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "59443568+sw10pa@users.noreply.github.com",
            "name": "Stephane Gurgenidze",
            "username": "sw10pa"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3b4c48e7e3bba96091024643407994938607e3b9",
          "message": "refactor: separate validation and collation protocols (#8134)\n\n## Details\nIn the previous PR #7449, I removed the handling of validation protocol\nversions 1 and 2. However, I did not remove the message definitions\nthemselves, as both the validation and collation protocols were using\nthe common enum `Versioned<V1, V2, V3 = V2>`, which prevented me from\nremoving the message definitions for validation protocol versions 1 and\n2.\n\nThe goal of this PR is to separate validation from collation by no\nlonger using a common `Versioned` enum and to remove validation protocol\nmessages that are no longer used.\n\n## TODO\n- [X] Separate versioned enums for Validation and Collation;\n- [X] Update all occurrences where these enums are used;\n- [X] Remove `StatementFetchingRequest/Response`, as it was part of the\nalready removed legacy StatementDistribution protocol;\n- [X] Add PRdoc.",
          "timestamp": "2025-04-04T15:02:11Z",
          "tree_id": "9df1325406b54f6ff181df9f9c60de2911c2acb9",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/3b4c48e7e3bba96091024643407994938607e3b9"
        },
        "date": 1743781981158,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18043466,
            "range": "± 147683",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18320697,
            "range": "± 155927",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19542045,
            "range": "± 144003",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24092828,
            "range": "± 314232",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54924293,
            "range": "± 840786",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 348335180,
            "range": "± 4161068",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2327977622,
            "range": "± 106850987",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14559703,
            "range": "± 118637",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14540998,
            "range": "± 181997",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15292904,
            "range": "± 170183",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19195400,
            "range": "± 186390",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49917655,
            "range": "± 796201",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 290476324,
            "range": "± 6904598",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2442576881,
            "range": "± 24460722",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "bkontur@gmail.com",
            "name": "Branislav Kontur",
            "username": "bkontur"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4962d65afe498b7f55dacf43db06420ff419dcba",
          "message": "`xcm-emulator` improved callback triggering (`on_initialize`, `on_finalize`, `on_idle`, `OnSystemEvent`). (#8083)\n\nThis PR fixes several issues related to `xcm-emulator`:  \n- Corrects parent head propagation to the `PersistedValidationData` and\n`OnSystemEvent` callback.\n- Triggers `on_initialize` for all pallets, not just `ParachainSystem`.\n- Triggers `on_finalize` for all pallets, not just `ParachainSystem`.  \n- Triggers `on_idle` for all parachain pallets.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-04-07T10:53:24Z",
          "tree_id": "3e3feea7c145c5e27f64717cd974a5da4335905d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4962d65afe498b7f55dacf43db06420ff419dcba"
        },
        "date": 1744026207650,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17515002,
            "range": "± 104165",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17703272,
            "range": "± 161991",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19129857,
            "range": "± 208029",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23293891,
            "range": "± 101567",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55154337,
            "range": "± 1071427",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 329998438,
            "range": "± 4989105",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2415575085,
            "range": "± 143096958",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14660774,
            "range": "± 133244",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14706341,
            "range": "± 120523",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15162694,
            "range": "± 116011",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19303398,
            "range": "± 261480",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50291129,
            "range": "± 786747",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 294262514,
            "range": "± 4016465",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2330857587,
            "range": "± 36216752",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "jasl9187@hotmail.com",
            "name": "Jun Jiang",
            "username": "jasl"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "05121d8936295999c98a349d0ae43f6aa179ffd5",
          "message": "Cleanup unused deps (#8161)\n\nFollowing\nhttps://github.com/paritytech/polkadot-sdk/issues/6906#issuecomment-2773919424\n\nI had to examine it manually, and the result was half true.\n\nRecent changes have also prevented me from running CI steps on my local\nmachine, so let's see what CI says.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>",
          "timestamp": "2025-04-07T21:00:59Z",
          "tree_id": "b1264941f39afe0f3bb7e6d1267cee58762c846f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/05121d8936295999c98a349d0ae43f6aa179ffd5"
        },
        "date": 1744063693789,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18800164,
            "range": "± 281298",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18879579,
            "range": "± 284817",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20612034,
            "range": "± 160367",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24896640,
            "range": "± 667335",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59352910,
            "range": "± 1308260",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 384102108,
            "range": "± 10136794",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2492554876,
            "range": "± 174750363",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15317969,
            "range": "± 150727",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15287998,
            "range": "± 107772",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15834984,
            "range": "± 256366",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20138889,
            "range": "± 181172",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51644850,
            "range": "± 1726529",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 322348676,
            "range": "± 3703321",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2463478365,
            "range": "± 16468476",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "64910adf74d14925ba49ead74a32e52f01185d0d",
          "message": "benchmark: storage: Make read/write benchmarks more accurate (#7867)\n\nThere are a few problems with these read/write benchmarks which makes\nthem produce misleading results, especially when we enable the\ntrie-cache.\n\nThe problems are:\n- Both benchmarks run without PoV recorder enabled, that is not accurate\nfor parachains because without the PoV recorder, you can directly access\nthe key from the value cache, while with the PoV recorder you still need\nto do the walk through which uses the Node cache, e.g:\nhttps://github.com/paritytech/trie/blob/master/trie-db/src/lookup.rs#L446.\nTo fix this I added I parameter enable-pov-recorder which is meant to be\nused when generating the weights for parachains.\n- Every write measures both the time to update the key and to compute\nthe storage root and commit all the changes, which is not accurate\nbecause the storage root is computed only once at the end of the block.\nFor this I added a new argument --batch-size, which is used to determine\nhow many keys to update and performs the storage root computation only\nonce, it then calculate the per key write cost as `durations /\nbatch-size`.\n- For reads when you run with the PoV recorder, there is also a benefit\nfrom running with the same recorder rather than creating a different\nrecorder every read, so we again use the `batch-size` for than to obtain\nthe amortised cost of a read.\n- bench warmup seemed to not warmup child keys even when\n`include-child-trees`, so I fixed that as well\n\n## Results on reference hardware, asset-hub-westend state\n| Setup | Batch size| Amortized cost of a key write(**ns**) | Amortized\ncost of a key read(**ns**)|\n|--------|--------|--------|--------|\n|Without TrieCache, Without PoV Recorder|1|88_521|46_981|\n|Without TrieCache, With PoV Recorder|1|95_161|48_711|\n|With TrieCache, Without PoV Recorder|1|66_008|528|\n|With TrieCache, With PoV Recorder|1|73_145|12_142|\n|Without TrieCache, Without PoV Recorder|1000|52_646|72_434|\n|Without TrieCache, With PoV Recorder|1000|54_896|50_267|\n|With TrieCache, Without PoV Recorder|1000|30_585|497|\n|With TrieCache, With PoV Recorder|1000|33_765|6_928|\n|Without TrieCache, Without PoV Recorder|10_000|48_945|52_730|\n|Without TrieCache, With PoV Recorder|10_000|50_285|49_860|\n|With TrieCache, Without PoV Recorder|10_000|25_903|484|\n|With TrieCache, With PoV Recorder|10_000|28_417|7_153|\n|Without TrieCache, Without PoV Recorder|100_000|31_359|45_839|\n|Without TrieCache, With PoV Recorder|100_000|32_932|48_393|\n|With TrieCache, Without PoV Recorder|100_000|20_255|493|\n|*With TrieCache, With PoV Recorder*, to be used|100_000|21_998|6_908|\n\n## Results on reference hardware asset-hub-polkadot state\n| Setup | Batch size| Amortized cost of a key write(**ns**) | Amortized\ncost of a key read(**ns**)|\n|--------|--------|--------|--------|\n|Without TrieCache, Without PoV Recorder|1|102_239|56_209|\n|Without TrieCache, With PoV Recorder|1|106_659|54_256|\n|With TrieCache, Without PoV Recorder|1|85_419|608|\n|With TrieCache, With PoV Recorder|1|95_221|13_567|\n|Without TrieCache, Without PoV Recorder|1000|61_574|53_767|\n|Without TrieCache, With PoV Recorder|1000|64_770|66_162|\n|With TrieCache, Without PoV Recorder|1000|35_879|597|\n|With TrieCache, With PoV Recorder|1000|39_464|8_482|\n|Without TrieCache, Without PoV Recorder|10_000|62_465|58_236|\n|Without TrieCache, With PoV Recorder|10_000|65_082|95_118|\n|With TrieCache, Without PoV Recorder|10_000|32_259|601|\n|With TrieCache, With PoV Recorder|10_000|34_620|8_810|\n|Without TrieCache, Without PoV Recorder|100_000|43_794|69_157|\n|Without TrieCache, With PoV Recorder|100_000|45_060|66_343|\n|With TrieCache, Without PoV Recorder|100_000|25_327|596|\n|*With TrieCache, With PoV Recorder*, to be used|100_000|27_622|8_598|\n\n## Results on my local machine with westend-assethub state.\n| Setup | Batch size| Amortized cost of a key write(**ns**) | Amortized\ncost of a key read(**ns**)|\n|--------|--------|--------|--------|\n|Without TrieCache, Without PoV Recorder|1| 55_443|27_510|\n|Without TrieCache, With PoV Recorder|1|143_189|105_103|\n|With TrieCache, Without PoV Recorder|1|37_519|370|\n|With TrieCache, With PoV Recorder|1|42_569|7_309|\n|Without TrieCache, Without PoV Recorder|1000| 29_364|25_150|\n|Without TrieCache, With PoV Recorder|1000|33_221|107_349|\n|With TrieCache, Without PoV Recorder|1000|18_355|370|\n|With TrieCache, With PoV Recorder|1000|19_883|4_063|\n|Without TrieCache, Without PoV Recorder|10_000| 28_336|27_765|\n|Without TrieCache, With PoV Recorder|10_000|29_673|62_392|\n|With TrieCache, Without PoV Recorder|10_000|15_102|370|\n|With TrieCache, With PoV Recorder|10_000|16_461|4_124|\n|Without TrieCache, Without PoV Recorder|100_000| 18_935|27_151|\n|Without TrieCache, With PoV Recorder|100_000|19_681|48_393|\n|With TrieCache, Without PoV Recorder|100_000|12_569|362|\n|*With TrieCache, With PoV Recorder*, to be used|100_000|13_469|3_895|\n\n\nFixes: https://github.com/paritytech/polkadot-sdk/issues/7535\n\n## Todo:\n- [x] Run this benchmarks on reference hardware on configuration variant\nclosest to the production environment.\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-04-08T10:23:53Z",
          "tree_id": "60b7e77c7372cf37eec83f8a0b3615ca97f05e5e",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/64910adf74d14925ba49ead74a32e52f01185d0d"
        },
        "date": 1744111034643,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19791430,
            "range": "± 388993",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20609849,
            "range": "± 386587",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21829352,
            "range": "± 339243",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26365877,
            "range": "± 293185",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 63664540,
            "range": "± 1280557",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 411124386,
            "range": "± 3981900",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2502503192,
            "range": "± 229323049",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16614045,
            "range": "± 327457",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16787439,
            "range": "± 231292",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17397960,
            "range": "± 762868",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22033320,
            "range": "± 241562",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 58093553,
            "range": "± 1071888",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 349274549,
            "range": "± 4810070",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2702972734,
            "range": "± 34618152",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "james@jsdw.me",
            "name": "James Wilson",
            "username": "jsdw"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8c6dd1d0fa38fc437014cd48dacaac13b65d5173",
          "message": "Update to frame-metadata 21.0 (#8122)\n\nThis PR will update polkadot-sdk to use frame-metadata 21.0.0, for the\nlatest iteration of unstable V16 metadata. Hopefully this is the final\nchange before we do a PR to stabilize v16 metadata at the end of April.\n\nAlso updates to `merkelized-metadata` 0.5.0 which supports this version.",
          "timestamp": "2025-04-08T14:54:47Z",
          "tree_id": "7535d431ffb252da129f03253fc1e94e9ceae782",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/8c6dd1d0fa38fc437014cd48dacaac13b65d5173"
        },
        "date": 1744127319153,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18716487,
            "range": "± 198167",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19132206,
            "range": "± 278390",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20443785,
            "range": "± 180326",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24935335,
            "range": "± 234460",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 58444598,
            "range": "± 1079762",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 342913106,
            "range": "± 3617252",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2790268977,
            "range": "± 103985420",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15742189,
            "range": "± 199775",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15903002,
            "range": "± 170229",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16359221,
            "range": "± 160342",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21237065,
            "range": "± 183653",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53766300,
            "range": "± 817345",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 312224682,
            "range": "± 2951387",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2500444829,
            "range": "± 42676558",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "95745674+todortodorovic@users.noreply.github.com",
            "name": "todortodorovic",
            "username": "todortodorovic"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cb3ede64eeefa64a5f0e79df28272eb9814c2604",
          "message": "chore: idiomatic rust cleanup (#8163)\n\nDescription\n\nThis PR performs a series of non-functional refactors across multiple\nfiles to improve code readability and consistency.\n\nKey changes include:\n• Replacing verbose pattern matches with shorter .ok(), .err(), or\n.ok_or()? alternatives.\n• Using div_ceil() instead of manual (x + 1) / 2 calculations for better\nclarity.\n\t•\tRemoving redundant .clone().take() patterns to simplify logic.\n• Applying consistent and idiomatic Rust expressions throughout the\ncodebase.\n\nThese changes do not affect runtime functionality, but improve\nmaintainability and align the code with modern Rust practices.\n\nIntegration\n\nNo integration steps are required. These are non-functional refactors\nthat do not alter the runtime behavior or public APIs. Downstream\nprojects should experience no impact.\n\nReview Notes\n\nAll changes are cosmetic or idiomatic improvements:\n\t•\tEach change was tested to ensure it preserves the original behavior.\n\t•\tFocus was on readability, simplicity, and reducing redundancy.\n\t•\tNo logic paths were altered; only how those paths are expressed.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>\nCo-authored-by: Dónal Murray <donal.murray@parity.io>",
          "timestamp": "2025-04-08T16:13:39Z",
          "tree_id": "ae7c2fd440ee0dd5c9519cc600b01c88cf84a280",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/cb3ede64eeefa64a5f0e79df28272eb9814c2604"
        },
        "date": 1744131690463,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18625447,
            "range": "± 137414",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19359456,
            "range": "± 463826",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20887971,
            "range": "± 555343",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26110030,
            "range": "± 724679",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59571098,
            "range": "± 1793130",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 345016033,
            "range": "± 9057799",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2832196495,
            "range": "± 131470671",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16022682,
            "range": "± 208987",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16031588,
            "range": "± 158972",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16692441,
            "range": "± 187535",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21472219,
            "range": "± 146563",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 55039252,
            "range": "± 512589",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 336678049,
            "range": "± 8522816",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2522190435,
            "range": "± 16960677",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "45178695+pkhry@users.noreply.github.com",
            "name": "Pavlo Khrystenko",
            "username": "pkhry"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "627b3e86cb0d456a3b1948a041c99a2fc556bcac",
          "message": "`DeprecationInfo` propagate `#[allow(deprecated)]` attribute into the generated code. (#6312)\n\n# Description\n\nPropagate `#[allow(deprecated)]` attribute into the generated code, so\nthat code is not littered with useless warnings while `DeprecationInfo`\nis still propagated in `MetadataIR`\n\nsee an example of warnings being too noisy: #6169\n\n## Review Notes\n\nThe change itself is just propagating attribute code after specific\nsteps during macro expansion.\n\n---------\n\nCo-authored-by: command-bot <>\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: Guillaume Thiolliere <gui.thiolliere@gmail.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-04-09T10:16:03Z",
          "tree_id": "70cd95735189b2e76062b3e341a65aea8a731a57",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/627b3e86cb0d456a3b1948a041c99a2fc556bcac"
        },
        "date": 1744197626646,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17122536,
            "range": "± 90980",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17390585,
            "range": "± 106576",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18478824,
            "range": "± 87184",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22642568,
            "range": "± 163405",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 50309594,
            "range": "± 285415",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 297563196,
            "range": "± 2106672",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2170502913,
            "range": "± 64678242",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14133066,
            "range": "± 82829",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14357007,
            "range": "± 74159",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14760046,
            "range": "± 56602",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18594188,
            "range": "± 78438",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 47849480,
            "range": "± 411140",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 280681227,
            "range": "± 687713",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2217765744,
            "range": "± 19201100",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41779041+alvicsam@users.noreply.github.com",
            "name": "Alexander Samusev",
            "username": "alvicsam"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "65441c8199ba8c9c1fe75ba4d432352109e87d43",
          "message": "ci: mark build jobs as required (#8193)\n\nPR creates a final build jobs that checks other build jobs to pass.\nAfter the PR is merged I'll mark the `All builds passed` job as\n`Required` and remove `Required` from gitlab jobs.\n\ncc https://github.com/paritytech/ci_cd/issues/1041",
          "timestamp": "2025-04-09T11:39:13Z",
          "tree_id": "a25fee2e5b52efd0825e00fc33386d0bc4f6f216",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/65441c8199ba8c9c1fe75ba4d432352109e87d43"
        },
        "date": 1744201738323,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17897431,
            "range": "± 225104",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18407775,
            "range": "± 266145",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19162210,
            "range": "± 125636",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23597004,
            "range": "± 389942",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53430446,
            "range": "± 1151942",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 312827610,
            "range": "± 11050391",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2486611419,
            "range": "± 168891919",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15059668,
            "range": "± 241321",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14991261,
            "range": "± 208059",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15431413,
            "range": "± 364547",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19539623,
            "range": "± 378482",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51378538,
            "range": "± 408897",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 298106787,
            "range": "± 7789949",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2415158817,
            "range": "± 33514800",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "32168055+antkve@users.noreply.github.com",
            "name": "Anthony Kveder",
            "username": "antkve"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e19edf0281df2b7606e918804b9548c7635dfb80",
          "message": "Moved chain-bridge-hub-cumulus to chain-cumulus (#8107)\n\n# Description\n\nMoved the internal folder of bp-bridge-hub-cumulus as per the last task\nof [this\nissue](https://github.com/paritytech/parity-bridges-common/issues/2950)\nand refactored some constants into parachains-common. No implementation\nchanges (external package name remains bp-bridge-hub-cumulus).\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-04-09T14:21:04Z",
          "tree_id": "dcf5b970c6b86df1523737c44588972dd960b265",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e19edf0281df2b7606e918804b9548c7635dfb80"
        },
        "date": 1744213065572,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18797566,
            "range": "± 225240",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18739049,
            "range": "± 149324",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20225467,
            "range": "± 223090",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24851549,
            "range": "± 411153",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57688033,
            "range": "± 756705",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 374149595,
            "range": "± 6661993",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2604452695,
            "range": "± 119614529",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15300913,
            "range": "± 142372",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15596833,
            "range": "± 180041",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16250165,
            "range": "± 322663",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20814247,
            "range": "± 396517",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52923440,
            "range": "± 928507",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 332542446,
            "range": "± 7725749",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2482805529,
            "range": "± 18803548",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "32168055+antkve@users.noreply.github.com",
            "name": "Anthony Kveder",
            "username": "antkve"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "87ebb18e8c1c0b80c0df49f8f6ff3b377d7efd67",
          "message": "Moved Rococo and Westend primitives (#8177)\n\n# Description\n\nMoved the Rococo and Westend bridge- and asset- hub bridge primitives\ninto cumulus/parachains/runtimes/rococo(westend)/bridge-primitives, as\nwell as chain-rococo and chain-westend into polkadot/runtime as per the\nthird task of [this\nissue](https://github.com/paritytech/parity-bridges-common/issues/2950)\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-04-09T19:41:22Z",
          "tree_id": "f0e25dcc13d9fe96c668c2796b33f8df8c113419",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/87ebb18e8c1c0b80c0df49f8f6ff3b377d7efd67"
        },
        "date": 1744230475674,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17588126,
            "range": "± 99999",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17865360,
            "range": "± 180947",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19108107,
            "range": "± 185405",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23577219,
            "range": "± 170786",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53445062,
            "range": "± 930696",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 340715435,
            "range": "± 2706143",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2537740405,
            "range": "± 17998031",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14631409,
            "range": "± 154297",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14711020,
            "range": "± 123347",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15279590,
            "range": "± 75591",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19574989,
            "range": "± 204864",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49997495,
            "range": "± 551248",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 297806405,
            "range": "± 3611576",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2415597630,
            "range": "± 32673630",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "32168055+antkve@users.noreply.github.com",
            "name": "Anthony Kveder",
            "username": "antkve"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "187cddde3799b5761c8036aaf137b93ba09fa526",
          "message": "Moved Rococo and Westend primitives (#8177)\n\n# Description\n\nMoved the Rococo and Westend bridge- and asset- hub bridge primitives\ninto cumulus/parachains/runtimes/rococo(westend)/bridge-primitives, as\nwell as chain-rococo and chain-westend into polkadot/runtime as per the\nthird task of [this\nissue](https://github.com/paritytech/parity-bridges-common/issues/2950)\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-04-10T02:19:57Z",
          "tree_id": "405b7824fcac509cd5e593f4346dbf707bc0db08",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/187cddde3799b5761c8036aaf137b93ba09fa526"
        },
        "date": 1744256196946,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19582700,
            "range": "± 125237",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20182766,
            "range": "± 115934",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21486381,
            "range": "± 164809",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26105050,
            "range": "± 212417",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 61111234,
            "range": "± 1322936",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 416468041,
            "range": "± 6852832",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2420601072,
            "range": "± 180838014",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16339392,
            "range": "± 122662",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16429930,
            "range": "± 139008",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17230983,
            "range": "± 134844",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22036291,
            "range": "± 232503",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 56479656,
            "range": "± 1532988",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 344948049,
            "range": "± 5465930",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2598931367,
            "range": "± 17745274",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "27fbb06d4b17178da50cc043ef5ec60b0cdfead8",
          "message": "Omni Node: Enable OCW http (#8208)\n\nThis enables the HTTP support for the OCW.\n\n\nCloses: https://github.com/paritytech/polkadot-sdk/issues/8203\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-04-10T09:41:51Z",
          "tree_id": "7a8f3569f0fa4779f4299cc681c7903c8ffe7a94",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/27fbb06d4b17178da50cc043ef5ec60b0cdfead8"
        },
        "date": 1744280932863,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17450208,
            "range": "± 120601",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17680793,
            "range": "± 173564",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18834565,
            "range": "± 190198",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22973035,
            "range": "± 285757",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54402647,
            "range": "± 813873",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 333806251,
            "range": "± 3161059",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2457336793,
            "range": "± 173088092",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14636330,
            "range": "± 219251",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14951614,
            "range": "± 250620",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15467577,
            "range": "± 172957",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19793050,
            "range": "± 270309",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51042173,
            "range": "± 696511",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 292229906,
            "range": "± 3469973",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2342789030,
            "range": "± 43377443",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alin@parity.io",
            "name": "Alin Dima",
            "username": "alindima"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "017cd2a0687438cfd802af9e3703d9f69bcc03c6",
          "message": "impl ApprovedPeer UMP signal (#7955)\n\nhttps://github.com/paritytech/polkadot-sdk/issues/7731\n\nTODO:\n- [x] Merge [this](https://github.com/paritytech/polkadot-sdk/pull/7986)\nbeforehand. It'll add some simplifications in the runtime (especially\nfor tests)\n- [x] add more runtime tests\n- [x] PRDoc",
          "timestamp": "2025-04-10T13:30:12Z",
          "tree_id": "9da27b31e57bdc525ee67de2b56031414a305446",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/017cd2a0687438cfd802af9e3703d9f69bcc03c6"
        },
        "date": 1744296816426,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17645269,
            "range": "± 90945",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17835265,
            "range": "± 96423",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18927877,
            "range": "± 121814",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23617403,
            "range": "± 402454",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 52562080,
            "range": "± 928190",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 309957996,
            "range": "± 3599794",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2220609642,
            "range": "± 72502020",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14638389,
            "range": "± 118899",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14609512,
            "range": "± 62545",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15233875,
            "range": "± 111029",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19110451,
            "range": "± 158563",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49191363,
            "range": "± 445543",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 290173918,
            "range": "± 2903567",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2330663503,
            "range": "± 16674609",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "60601340+lexnv@users.noreply.github.com",
            "name": "Alexandru Vasile",
            "username": "lexnv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "899ac75049d3e1b35e5b6faf2c6f7dd0850ec423",
          "message": "tx/broadcast: Use client info for fetching the best block (#8162)\n\nThis PR modifies the tx broadcast logic. Previously, we relied on the\nimport notification stream to fetch the latest available block. In this\nrevision, we use the available information of the `client.info()` to\nprefix the import notification stream.\n\nThe change is needed because chains could be started with `InstantSeal`,\nwhich would not produce blocks until they encounter transactions.\n\nCloses: https://github.com/paritytech/polkadot-sdk/issues/8157\n\ncc @paritytech/subxt-team\n\n---------\n\nSigned-off-by: Alexandru Vasile <alexandru.vasile@parity.io>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-04-10T16:21:48Z",
          "tree_id": "5a1834823764ff5b0071d28974fe80514c5ff38d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/899ac75049d3e1b35e5b6faf2c6f7dd0850ec423"
        },
        "date": 1744305126119,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17788807,
            "range": "± 107525",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17896575,
            "range": "± 134510",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19165610,
            "range": "± 128162",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23334539,
            "range": "± 231022",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 52170016,
            "range": "± 457527",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 295401242,
            "range": "± 2505196",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2393186122,
            "range": "± 91771813",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14591048,
            "range": "± 167372",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14704658,
            "range": "± 170269",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15167864,
            "range": "± 98860",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19125823,
            "range": "± 152518",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49111617,
            "range": "± 590174",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 288936346,
            "range": "± 2607226",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2314728175,
            "range": "± 29938746",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "46a656f82c5494a37567f0f4308d3665c6e480df",
          "message": "[pallet-revive] fix bn128 benchmark (#8212)\n\nUpdate bn128 benchmarks\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-04-10T17:35:40Z",
          "tree_id": "0246b5d0e4afcb03f057d2462d9b11e967269dc8",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/46a656f82c5494a37567f0f4308d3665c6e480df"
        },
        "date": 1744309433851,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17967870,
            "range": "± 150614",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18175237,
            "range": "± 94916",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19593730,
            "range": "± 95250",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23839057,
            "range": "± 122946",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56620099,
            "range": "± 1402888",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 333931159,
            "range": "± 5107233",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2706700365,
            "range": "± 97392840",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15010377,
            "range": "± 111056",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15124034,
            "range": "± 180771",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15639276,
            "range": "± 115695",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19860770,
            "range": "± 439415",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51173889,
            "range": "± 500893",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 306267496,
            "range": "± 3570665",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2451492759,
            "range": "± 26419439",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "363911+pepoviola@users.noreply.github.com",
            "name": "Javier Viola",
            "username": "pepoviola"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6eac16cf5011fdfebb12def6882b0f8d5c7d87bb",
          "message": "Migrate pipeline to gha (#8068)\n\nMigrate pipeline from gitlab to gha.\n\n---------\n\nCo-authored-by: Alexander Samusev <41779041+alvicsam@users.noreply.github.com>",
          "timestamp": "2025-04-10T18:51:15Z",
          "tree_id": "db39bde376a417b4d7edd7de6a21a05c82ff508a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/6eac16cf5011fdfebb12def6882b0f8d5c7d87bb"
        },
        "date": 1744314026247,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17698768,
            "range": "± 236182",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17999344,
            "range": "± 195508",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19757727,
            "range": "± 229610",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24151544,
            "range": "± 402050",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59313378,
            "range": "± 1598363",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 356536482,
            "range": "± 4417905",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2522899158,
            "range": "± 86965505",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14914897,
            "range": "± 172601",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15044096,
            "range": "± 692807",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15658507,
            "range": "± 210667",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20184115,
            "range": "± 390554",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52453171,
            "range": "± 985554",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 309155941,
            "range": "± 3227552",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2554626753,
            "range": "± 38122152",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "evgeny@parity.io",
            "name": "Evgeny Snitko",
            "username": "AndWeHaveAPlan"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "38e93b570f156068786150700e741b85af82cedb",
          "message": "Allow /cmd run with --clean flag (#8220)\n\n/cmd with the `--clean` flag should clean up the old comments but still\nrun the job",
          "timestamp": "2025-04-11T12:43:12Z",
          "tree_id": "d8fe52900ed5d5fcbc6b658dc3d7fafe114dd090",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/38e93b570f156068786150700e741b85af82cedb"
        },
        "date": 1744378875488,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18071944,
            "range": "± 123851",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18135187,
            "range": "± 240139",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19684059,
            "range": "± 253509",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23580835,
            "range": "± 257506",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53527029,
            "range": "± 753496",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 323925800,
            "range": "± 4247764",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2213635383,
            "range": "± 104798968",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14621186,
            "range": "± 123912",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14843191,
            "range": "± 219921",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15363815,
            "range": "± 112782",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19299887,
            "range": "± 318534",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50422477,
            "range": "± 532736",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 298520951,
            "range": "± 4584630",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2351290234,
            "range": "± 27241013",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "14218860+iulianbarbu@users.noreply.github.com",
            "name": "Iulian Barbu",
            "username": "iulianbarbu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fc0fcbaecab7dc7e0c3a0ff380c8a81af8b7c48b",
          "message": "Use `TryFrom` impls instead of `as` operator in `polkadot-runtime-parachains` (#8118)\n\n# Description\n\n- changed conversions based on `as` operator to `usize::try_from` in\n`polkadot-runtime-parachains`\n\n## Integration\n\nN/A\n\n## Review Notes\n\nN/A\n\n---------\n\nSigned-off-by: Iulian Barbu <iulian.barbu@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <info@kchr.de>\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: teor <teor@riseup.net>\nCo-authored-by: Guillaume Thiolliere <guillaume.thiolliere@parity.io>",
          "timestamp": "2025-04-11T17:06:48Z",
          "tree_id": "8573c97f57de68a1dc3ba52529f5d48b6b78bcc1",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/fc0fcbaecab7dc7e0c3a0ff380c8a81af8b7c48b"
        },
        "date": 1744394056127,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17938869,
            "range": "± 78782",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18010033,
            "range": "± 88843",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19255476,
            "range": "± 123901",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23599636,
            "range": "± 140430",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53462940,
            "range": "± 1066973",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 323838189,
            "range": "± 3355561",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2291141408,
            "range": "± 180461391",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15021258,
            "range": "± 122389",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15238964,
            "range": "± 187361",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15525229,
            "range": "± 152649",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19327897,
            "range": "± 214179",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49652474,
            "range": "± 325995",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 302192154,
            "range": "± 6096649",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2373366523,
            "range": "± 35093269",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ludovic.domingues96@gmail.com",
            "name": "Ludovic_Domingues",
            "username": "Krayt78"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f3be5315d2bb93b7a91e8aba0bad0a79add8ae82",
          "message": "Added locked flag to readmes that were missing it (#8187)\n\n# Description\nFrom issue #8028 \n\nAdd --locked flag to cargo install occurrences in README files across\nthe repository. This change helps prevent dependency resolution issues\nthat can occur when using cargo install without version locking,\nensuring more consistent and predictable builds for users.\n\nThe --locked flag ensures cargo uses the exact dependency versions from\nCargo.lock rather than recalculating dependencies, which can sometimes\nresult in breaking changes if a minor update occurs in a dependency.\nThis PR adds the flag to multiple READMEs that become public-facing for\ncrates published on crates.io.\n\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-04-11T18:14:28Z",
          "tree_id": "4b598320ad0bfe0f2f59826cec9c0b38d90a298a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f3be5315d2bb93b7a91e8aba0bad0a79add8ae82"
        },
        "date": 1744399559289,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18789700,
            "range": "± 196155",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19097785,
            "range": "± 263952",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20531921,
            "range": "± 203976",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25262619,
            "range": "± 391045",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 58682811,
            "range": "± 1711459",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 372470483,
            "range": "± 7060036",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2390032172,
            "range": "± 130337365",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15927353,
            "range": "± 302856",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15921044,
            "range": "± 101047",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16551892,
            "range": "± 69032",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20929208,
            "range": "± 146495",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54152886,
            "range": "± 1223767",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 334036742,
            "range": "± 4454337",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2491510383,
            "range": "± 31560977",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "5588131+kianenigma@users.noreply.github.com",
            "name": "Kian Paimani",
            "username": "kianenigma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c36d3066c082b769f20c31dfdbae77d8fd027a0d",
          "message": "silent nomination-pools try-state check (#8246)\n\nAdding this for now to unblock the CI. I will investigate if it is a\nreal issue or not after or during\nhttps://github.com/paritytech/polkadot-sdk/pull/8127",
          "timestamp": "2025-04-15T09:50:35Z",
          "tree_id": "a57b04ac995bea9a479c251c299b8691f2bb8059",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c36d3066c082b769f20c31dfdbae77d8fd027a0d"
        },
        "date": 1744713611711,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17596397,
            "range": "± 131380",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17716373,
            "range": "± 85576",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19213537,
            "range": "± 257458",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23466484,
            "range": "± 340039",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56032174,
            "range": "± 1859538",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 342006672,
            "range": "± 7057146",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2655437617,
            "range": "± 262008533",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14860311,
            "range": "± 501564",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15915329,
            "range": "± 137622",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15504884,
            "range": "± 158625",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21137118,
            "range": "± 387501",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 55369404,
            "range": "± 639351",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 304762802,
            "range": "± 25861602",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2645640305,
            "range": "± 36456485",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "jesse.chejieh@gmail.com",
            "name": "Doordashcon",
            "username": "Doordashcon"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4bbcf4211bceaa10feb6ee69bb4ae8137bb0e51c",
          "message": "Clamp benchmark ranks to respect MaxRank (#7720)\n\nresolves #7517 \n\n### Issues\n\n#### 1. Compile-Time vs Runtime Rank Mismatch\n- **`promote_fast` Benchmark** uses mock runtime's `MaxRank` during\nbenchmark generation while allowing runtime overrides. Creating\npotential parameter mismatch between benchmark metadata(i.e. generated\n`r` values) and runtime configuration(i.e. `T::MaxRank`).\n\n\n#### 2. Static Rank Assumptions\n- **`bump_demote` Benchmark** initialized members at rank 2, making it\nincompatible with `MaxRank=1` configurations\n- **`promote` Benchmark** contained hardcoded rank values (1 → 2) which\nfails for `MaxRank=1`\n\n\n## Changes\n\n#### Dynamic Rank Clamping\n```rust\n// promote_fast\n// Get target rank for promotion.\nlet max_rank = T::MaxRank::get();\nlet target_rank = (r as u16).min(max_rank);\n\n// promote\n// Set `to_rank` dynamically based on `max_rank`.\nlet to_rank = (current_rank + 1).min(max_rank);\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>",
          "timestamp": "2025-04-15T12:13:36Z",
          "tree_id": "ea843acd3defd1ef554e96887b1d56931089e78d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4bbcf4211bceaa10feb6ee69bb4ae8137bb0e51c"
        },
        "date": 1744722159308,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17953909,
            "range": "± 259197",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18250880,
            "range": "± 93085",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19535097,
            "range": "± 133010",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23738319,
            "range": "± 247775",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 52205194,
            "range": "± 423002",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 310703345,
            "range": "± 4051692",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2270156784,
            "range": "± 104908614",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14842065,
            "range": "± 501074",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15053361,
            "range": "± 118586",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15523847,
            "range": "± 97857",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19245059,
            "range": "± 168605",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49312005,
            "range": "± 324077",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 286773131,
            "range": "± 1645384",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2340469965,
            "range": "± 39512782",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "44604217+tmpolaczyk@users.noreply.github.com",
            "name": "tmpolaczyk",
            "username": "tmpolaczyk"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4f95d677ec9e4c8d2b185e90e26e00b09a04f891",
          "message": "Make min_peers_to_start_warp_sync configurable (#8102)\n\n# Description\n\nClose #496\n\nMake min_peers_to_start_warp_sync configurable.\n\nIn our project we want to use this to allow warp syncing a parachain\nusing only 1 trusted bootnode. Currently we are overriding the\n`MIN_PEERS_TO_START_WARP_SYNC` variable directly, but that also changes\nthe value when warp syncing the relaychain, and that doesn't look safe.\n\n## Integration\n\nThis PR keeps the old behavior by default, but parachain configs that\nuse `prepare_node_config` function from cumulus will use 1 peer.\n\n## Review Notes\n\nIntentionally not adding this to the CLI because I don't need it to be\nconfigurable by users, only by project developers.\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-04-15T14:23:32Z",
          "tree_id": "4b7a029af79664e97c98f67e7bebea1ecc973a4c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4f95d677ec9e4c8d2b185e90e26e00b09a04f891"
        },
        "date": 1744729961991,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18268833,
            "range": "± 244422",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18526424,
            "range": "± 279269",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20029987,
            "range": "± 187433",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24015893,
            "range": "± 204872",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57036828,
            "range": "± 1009847",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 342311205,
            "range": "± 4603623",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2594661168,
            "range": "± 60066716",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14983254,
            "range": "± 158860",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15687023,
            "range": "± 238876",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15968559,
            "range": "± 132032",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20067428,
            "range": "± 233049",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53021933,
            "range": "± 513389",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 305499311,
            "range": "± 4581467",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2435030325,
            "range": "± 22225509",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48632512+s0me0ne-unkn0wn@users.noreply.github.com",
            "name": "s0me0ne-unkn0wn",
            "username": "s0me0ne-unkn0wn"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "def2273e17ce065f0874ddf66630b8cb1291c707",
          "message": "YAP NG FTW! (#7220)\n\nYet Another Parachain ported onto the latest master branch.\n\n---------\n\nSigned-off-by: georgepisaltu <george.pisaltu@parity.io>\nSigned-off-by: Alexandru Vasile <alexandru.vasile@parity.io>\nCo-authored-by: command-bot <>\nCo-authored-by: georgepisaltu <george.pisaltu@parity.io>\nCo-authored-by: Alexandru Vasile <alexandru.vasile@parity.io>\nCo-authored-by: ordian <noreply@reusable.software>\nCo-authored-by: Michal Kucharczyk <1728078+michalkucharczyk@users.noreply.github.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: ordian <write@reusable.software>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-04-16T08:56:59Z",
          "tree_id": "4d6aabe44c25a2b6d9dd4493e5e1816145a1313f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/def2273e17ce065f0874ddf66630b8cb1291c707"
        },
        "date": 1744797805096,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18406349,
            "range": "± 285894",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19081023,
            "range": "± 450844",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20366360,
            "range": "± 169936",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24502138,
            "range": "± 469056",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59739896,
            "range": "± 1323229",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 357849009,
            "range": "± 4669324",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2365726834,
            "range": "± 275620845",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15411991,
            "range": "± 201299",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15474857,
            "range": "± 162396",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16305027,
            "range": "± 207832",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20843343,
            "range": "± 325413",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52318098,
            "range": "± 900568",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 323520023,
            "range": "± 5248673",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2482358529,
            "range": "± 42352676",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e5bb4f9fc8b1528cd15efb0c20497bdefa194e0d",
          "message": "Frame: Authorize pallet::error int discriminant (#8248)\n\nAuthorize int discriminants for pallet::error\n\nWhy?\nThe raw hex value shows up in tools like polkadotjs, being able to\nquiclkly scan the src code to find out what error was triggered can be\nvery useful, especially when the enum is large like in pallet-revive\n\ne.g:\n\n```rust\n\n#[pallet::error]\n#[repr(u8)]\npub enum Error<T> {\n    /// Invalid schedule supplied, e.g. with zero weight of a basic operation.\n    InvalidSchedule = 0x01,\n    /// Invalid combination of flags supplied to `seal_call` or `seal_delegate_call`.\n    InvalidCallFlags = 0x02,\n    /// The executed contract exhausted its gas limit.\n    OutOfGas = 0x03,\n    /// ...\n}\n```\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-04-16T09:59:13Z",
          "tree_id": "65ceee141dd9869e97aa3e405805b2ddb3d9c462",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e5bb4f9fc8b1528cd15efb0c20497bdefa194e0d"
        },
        "date": 1744801187308,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18474654,
            "range": "± 192061",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18731262,
            "range": "± 205060",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20230176,
            "range": "± 176760",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25147275,
            "range": "± 295309",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 61084737,
            "range": "± 726299",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 378012027,
            "range": "± 5765495",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2607631742,
            "range": "± 167448985",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15244561,
            "range": "± 254521",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15298120,
            "range": "± 154302",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16050378,
            "range": "± 563055",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20672276,
            "range": "± 194055",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54586429,
            "range": "± 1115192",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 324127268,
            "range": "± 4285190",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2586203514,
            "range": "± 33365670",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alistair.singh7@gmail.com",
            "name": "Alistair Singh",
            "username": "alistair-singh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "13cb4a31f77a14ea1bec880a7369a59432afaec9",
          "message": "Update transfer token gas and fee (#7947)\n\nUpdate the gas allowance of the `TransferToken` related commands. This\nalso means that the default fee needs to be increased as well as a\nmigration.\n\n# Migration\nIn production mainnet to ensure no downtime, instead of increasing the\nfee to account for the new gas fee, we will instead decrease the gas\ncost so that it will not require a fee increase.\n\nThe pre remote fee in Wei:\n```python\n(185_000 + 100_000) * 10_000_000_000 + 250_000_000_000_000\n> 3100000000000000\n```\nWe are increasing the gas to 200k. \n\nThe post remote fee Wei:\n```python\n(185_000 + 200_000) * 10_000_000_000 + 250_000_000_000_000\n> 4100000000000000\n```\n\nThis effectively increases the price for the end users transaction by\n32%. Taking the inverse of 32 percent means we can decrease the gas cost\nby ~74%. The migration script plays it safe and decreases it to 70%. The\npost migration `try-runtime` check asserts that the new fee calculated\nwith the increased gas can is less than or equal to the old fee pre the\ngas change.\n\n# TODO\n- [x] Add migration to half fee on bridge on start-up\n- [x] Test in prod with chopsticks\n\n# Testing\nTested with chopsticks on westend.\n\n```console\n$ npx @acala-network/chopsticks try-runtime \\\n  --endpoint wss://westend-bridge-hub-rpc-tn.dwellir.com \\\n  --runtime bridge_hub_westend_runtime.compact.wasm \\\n  --checks PreAndPost \\\n  --db westend-cache.sqllite \\\n  --disable-spec-check\n```\n\nOutput\n```console\n$ cat output.log | grep ethereum_system\n  ethereum_system::migration   INFO: Agents and channels are initialized. Initialization will not run.\n  ethereum_system::migration   INFO: Ethereum system already initialized. Skipping.\n  ethereum_system::migration   INFO: Pre fee per gas migration: pricing parameters = PricingParameters { exchange_rate: , rewards: Rewards { local: 1000000000000, remote: 1000000000000000 }, fee_per_gas: 20000000000, multiplier:  }, remote_fee_v1 = 8700000000000000, remote_fee_v2 = 5000000000000000\n  ethereum_system::migration   INFO: Fee per gas migrated from 20000000000 to 14000000000.\n  ethereum_system::migration   INFO: Post fee per gas migration: pricing parameters = PricingParameters { exchange_rate: , rewards: Rewards { local: 1000000000000, remote: 1000000000000000 }, fee_per_gas: 14000000000, multiplier:  } remote_fee_v1 = 6390000000000000 remote_fee_v2 = 3800000000000000\n```\n\n---------\n\nCo-authored-by: Adrian Catangiu <adrian@parity.io>\nCo-authored-by: ron <yrong1997@gmail.com>",
          "timestamp": "2025-04-16T12:07:26Z",
          "tree_id": "b0b096bc2699bcc20742122e3fa2ad58aa196288",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/13cb4a31f77a14ea1bec880a7369a59432afaec9"
        },
        "date": 1744808279232,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 20635050,
            "range": "± 172611",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 21097602,
            "range": "± 218654",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22584564,
            "range": "± 272382",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26825754,
            "range": "± 452190",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 64712550,
            "range": "± 1302049",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 417405589,
            "range": "± 15302805",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2468041151,
            "range": "± 167239242",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16398318,
            "range": "± 174661",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16762190,
            "range": "± 153338",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17803403,
            "range": "± 631081",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22917848,
            "range": "± 461007",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 56587697,
            "range": "± 796857",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 360134411,
            "range": "± 6350443",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2684292070,
            "range": "± 37773903",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a910c7762d6e7408c44af6f517e03413d4d3dc14",
          "message": "[pallet-revive] Add genesis config (#8103)\n\n- Add gas_consumed in strace logs\n- Add genesis config\n- Mapped dev accounts in kitchensink genesis\n\nOne can test a local westend with endowed and mapped accounts with the\nfollowing approach\n\n```sh\ncargo build -p asset-hub-westend-runtime\nchain-spec-builder -c /tmp/ah-westend-spec.json \\\n  create \\\n  --para-id 1000 \\\n  --relay-chain dontcare \\\n  --runtime ./target/debug/wbuild/asset-hub-westend-runtime/asset_hub_westend_runtime.wasm \\\n  named-preset development\n\n# Endowed\n# Alith:\n# H160: 0xf24FF3a9CF04c71Dbc94D0b566f7A27B94566cac\n# SS58: 5CfCLa2N85aH2tUKT48LmRSGNx27DnJUayMXyiwqvvcU97VN2sk\n# Private key (ecdsa): 0x5fb92d6e98884f76de468fa3f6278f8807c48bebc13595d45af5bdc4da702133\n\n# Alice:  (subkey inspect //Alice)\n# SS58: 5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY\n# Private key (sr2259): 0xe5be9a5092b81bca64be81d212e7f2f9eba183bb7a90954f7b76361f6edb5c0a\n\njq '.genesis.runtimeGenesis.patch.balances.balances = [\n    [\"5CfCLa2N85aH2tUKT48LmRSGNx27DnJUayMXqvvcU97VN2sk\", 1000000001000000000],\n    [\"5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY\", 1000000001000000000]\n  ]\n| .genesis.runtimeGenesis.patch.revive.mappedAccounts = [ \n    \"5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY\"\n]\n' /tmp/ah-westend-spec.json >~/ah-westend-spec.json\n```\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-04-16T13:31:15Z",
          "tree_id": "691aed500d46381d70a5dc4d14e50a01ba1344f2",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/a910c7762d6e7408c44af6f517e03413d4d3dc14"
        },
        "date": 1744813337582,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17133977,
            "range": "± 137134",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17378182,
            "range": "± 146921",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18493538,
            "range": "± 105682",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22568525,
            "range": "± 228181",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 50300386,
            "range": "± 357154",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 289919173,
            "range": "± 2102359",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2210732310,
            "range": "± 11564649",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14050946,
            "range": "± 114919",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14232495,
            "range": "± 75546",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14666368,
            "range": "± 45600",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18413153,
            "range": "± 149467",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 47513197,
            "range": "± 296371",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 278553358,
            "range": "± 1916372",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2201103314,
            "range": "± 12383674",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "egor@parity.io",
            "name": "Egor_P",
            "username": "EgorPopelyaev"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "79b2faa6e474490ad79756261f0129ab01201a2a",
          "message": "[Release|CI/CD] Fix sha256 checksum for mac bins (#8241)\n\nThis PR fixes an issue with the sha256 checksums generated for the macOS\nbins, as after the bins renaming it needs to be re-generated.",
          "timestamp": "2025-04-16T13:56:33Z",
          "tree_id": "4e9af68b78d20c07d51d53e9cc4af47b390fda57",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/79b2faa6e474490ad79756261f0129ab01201a2a"
        },
        "date": 1744814775084,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 21445912,
            "range": "± 1199065",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 22837762,
            "range": "± 2512192",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 24752446,
            "range": "± 909223",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 29456931,
            "range": "± 2135294",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 76015856,
            "range": "± 5862931",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 475978983,
            "range": "± 14751242",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 3016563713,
            "range": "± 126735497",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 18401293,
            "range": "± 1521549",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 19017475,
            "range": "± 1090917",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18845672,
            "range": "± 1657315",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 26090582,
            "range": "± 1647822",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 69404754,
            "range": "± 7367331",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 466685535,
            "range": "± 44054918",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 3098418434,
            "range": "± 94809381",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "88332432+dastansam@users.noreply.github.com",
            "name": "Dastan",
            "username": "dastansam"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "44ae6a8bebd23a8ffac02d71c6e74ee889c3ab00",
          "message": "[FRAME] Simplify pallet config definition:  remove `RuntimeEvent` associated type (#7229)\n\npart of https://github.com/paritytech/polkadot-sdk/issues/3743\n\n## Motivation\n\nThis PR removes the need for defining `RuntimeEvent` in the `Config`\ntrait of a pallet. It uses associated type bound feature under the hood\nto make sure that `Event` of the pallet is convertible to the aggregated\nruntime event type `frame_system::RuntimeEvent`.\n\nThis is an initial PR for `RuntimeEvent` type and will be followed with\nother types, e.g `RuntimeCall`. As a demo, example pallets' config\ndefinition is updated to use this feature.\n\nWith this change, we can do this (and have support for events):\n\n```rs\n#[pallet::config]\npub trait Config: frame_system::Config {\n}\n```\n\ninstead of this:\n\n```rs\n#[pallet::config]\npub trait Config: frame_system::Config {\n        /// Overarching event type.\n       type RuntimeEvent: From<Event<Self>> + IsType<<Self as frame_system::Config>::RuntimeEvent>;\n}\n```\n\nThe latter will emit deprecation warnings and is redundant.\n\npolkadot address: 16FqwPZ8GRC5U5D4Fu7W33nA55ZXzXGWHwmbnE1eT6pxuqcT\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-04-16T20:15:50Z",
          "tree_id": "b373598df3adfaa0641cc6e29aa05caa527fdebd",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/44ae6a8bebd23a8ffac02d71c6e74ee889c3ab00"
        },
        "date": 1744838539281,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17177433,
            "range": "± 62663",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17432591,
            "range": "± 131570",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18573776,
            "range": "± 92195",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22802911,
            "range": "± 155065",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 50162158,
            "range": "± 450180",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 304948133,
            "range": "± 2076610",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2301480927,
            "range": "± 79219262",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14112685,
            "range": "± 556091",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14337314,
            "range": "± 109215",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14766833,
            "range": "± 94851",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18561941,
            "range": "± 102919",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 48093255,
            "range": "± 255476",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 278025601,
            "range": "± 2582820",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2244087406,
            "range": "± 17868820",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "giuseppe.re@parity.io",
            "name": "Giuseppe Re",
            "username": "re-gius"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "431e06839addf318d1c251ec50097c748d423073",
          "message": "Stabilize pallet view functions (#7960)\n\nPallet view functions are no longer marked as experimental, and their\nuse is suggested starting from this PR.\n\nYour feedback is more than welcome.\n\nSee\n[docs](https://paritytech.github.io/polkadot-sdk/master/frame_support/pallet_macros/attr.view_functions_experimental.html)\nfor a quick introduction. For more context, you can look at:\n\n- #4722 \n- #7412 \n- #7830 : discussion on possible changes to pallet view functions\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-04-17T09:31:42Z",
          "tree_id": "95b63e0184d2a4c1e57621e966206a8b09d0eab7",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/431e06839addf318d1c251ec50097c748d423073"
        },
        "date": 1744886383201,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19099225,
            "range": "± 123592",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19479776,
            "range": "± 208110",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20959086,
            "range": "± 155478",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25113838,
            "range": "± 169032",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 58742984,
            "range": "± 1088931",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 375793257,
            "range": "± 6674545",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2798959958,
            "range": "± 173261722",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15309896,
            "range": "± 67576",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15548730,
            "range": "± 59238",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16163485,
            "range": "± 147056",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20772326,
            "range": "± 153972",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54376201,
            "range": "± 1041945",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 338718887,
            "range": "± 5805571",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2569602946,
            "range": "± 34735760",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "developer@andrzej-sulkowski.com",
            "name": "Andrzej Sulkowski",
            "username": "andrzejSulkowski"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d3128dc679a089750a8569acc6e0834787a7b87c",
          "message": "Refactor: Remove unused variable assignments for fallible functions (#8247)\n\n# Description\nThis PR resolves issue #8236.\n\nI recently graduated from PBA, and during one of our sessions,\n[@shawntabrizi](https://github.com/shawntabrizi) pointed out an\nimportant issue related to error handling in Rust.\n\nWhen using let _ = some_fallible_function();, if the result is not\nfollowed by a ?, the error is silently swallowed without any warning or\ncompiler feedback.\n\nIn contrast, if we don’t use let _ = and forget to add a ?, the compiler\nwill correctly emit a warning or error — helping the developer catch the\nissue early.\n\nThis behavior can easily lead to bugs going unnoticed and makes error\nhandling less reliable, especially for beginners following examples.\n\n\n## Integration\nThis PR introduces no functional or logical changes, and therefore can\nsafely be integrated into existing downstream projects without\nadditional adjustments.\n\nFrom my point of view, this issue can be classified as something like\n`I4-Silent`.\n\n## Review Notes\n\nI went through all occurrences of `let _ =` with a fallible function.\nSome of them return values tagged as `#[must_use]`. In these cases, I\nretained the underscore operator intentionally _(see:\n`polkadot/node/core/av-store/src/lib.rs` lines: 1099 & 1108,\n`polkadot/xcm/xcm-builder/src/currency_adapter.rs` line: 217,\n`substrate/frame/contracts/src/wasm/mod.rs` line: 360,\n`substrate/frame/revive/src/wasm/mod.rs` line: 307)_.\n\nCo-authored-by: Shawn Tabrizi <shawntabrizi@gmail.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-04-17T19:10:46+02:00",
          "tree_id": "1cac47bf6245e6d4b1b2dc33973b29013316251f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d3128dc679a089750a8569acc6e0834787a7b87c"
        },
        "date": 1744911070296,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17855829,
            "range": "± 118294",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18237731,
            "range": "± 235208",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19404546,
            "range": "± 192041",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24155815,
            "range": "± 427437",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 58359642,
            "range": "± 971380",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 359467714,
            "range": "± 3659677",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2499239531,
            "range": "± 110382337",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15005982,
            "range": "± 158755",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15062109,
            "range": "± 190148",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15663775,
            "range": "± 148033",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20211781,
            "range": "± 254060",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52509905,
            "range": "± 912571",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 309676112,
            "range": "± 5289783",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2409988577,
            "range": "± 25075856",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alexandre.balde@parity.io",
            "name": "Alexandre R. Baldé",
            "username": "rockbmb"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e8e675cabafaefbb553d20e35be123ec769de650",
          "message": "Add missing vested transfer event (#8171)\n\n# Description\n\nDocumentation for `pallet::vesting::{vested_transfer,\nforce_vested_transfer}` mentions the emission of a `VestingCreated`\nevent, which did not exist. This PR adds it.\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: Dónal Murray <donal.murray@parity.io>",
          "timestamp": "2025-04-17T18:52:56Z",
          "tree_id": "fa0f272e5fe5cc5aa901475eacb048748fab6ac5",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e8e675cabafaefbb553d20e35be123ec769de650"
        },
        "date": 1744919195612,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17803336,
            "range": "± 77137",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18039917,
            "range": "± 71418",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19380623,
            "range": "± 136937",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23507441,
            "range": "± 165929",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54001253,
            "range": "± 563309",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 332588937,
            "range": "± 2840532",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2517409023,
            "range": "± 106194423",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14711114,
            "range": "± 121840",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14775842,
            "range": "± 120938",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15394552,
            "range": "± 158738",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19502191,
            "range": "± 194094",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49111883,
            "range": "± 421370",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 295431125,
            "range": "± 2859083",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2369211155,
            "range": "± 20131981",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b53f6c62df09e23e86ece728c96091fa5c0c7a4c",
          "message": "Fix defensive public repo link (#8277)",
          "timestamp": "2025-04-17T19:04:49Z",
          "tree_id": "c5efe8df21ca67a3613854e478c88bf05b5b5998",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/b53f6c62df09e23e86ece728c96091fa5c0c7a4c"
        },
        "date": 1744920681405,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18241452,
            "range": "± 115353",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18738614,
            "range": "± 233882",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19845932,
            "range": "± 150794",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24692459,
            "range": "± 154199",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55161599,
            "range": "± 1359798",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 343248238,
            "range": "± 7971869",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2537851976,
            "range": "± 204847761",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15109872,
            "range": "± 162323",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15180018,
            "range": "± 111311",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15632990,
            "range": "± 604569",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19865423,
            "range": "± 253060",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50625958,
            "range": "± 542024",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 309798664,
            "range": "± 6094077",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2474492009,
            "range": "± 37234307",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "10196091+Ank4n@users.noreply.github.com",
            "name": "Ankan",
            "username": "Ank4n"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f0aed8eed5d764b247d877fa8e952bb1e25f0a3d",
          "message": "Remove the redundant FRAME coders substrate rule (#8100)\n\nCore devs should be okay to review everything under `substrate/frame/*`?\ncc: @kianenigma\n\n---------\n\nCo-authored-by: Kian Paimani <5588131+kianenigma@users.noreply.github.com>",
          "timestamp": "2025-04-18T11:36:30Z",
          "tree_id": "96082b2b0d7d10fdf72a0b3f87cc98132875e890",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f0aed8eed5d764b247d877fa8e952bb1e25f0a3d"
        },
        "date": 1744979443158,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17075551,
            "range": "± 110463",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17340472,
            "range": "± 133181",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18722871,
            "range": "± 130879",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22587826,
            "range": "± 110153",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 50922654,
            "range": "± 800355",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 290961097,
            "range": "± 5167212",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2234751895,
            "range": "± 57658767",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14089814,
            "range": "± 136154",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14204315,
            "range": "± 68412",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14706653,
            "range": "± 86724",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18380752,
            "range": "± 158731",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 47762285,
            "range": "± 231901",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 279323618,
            "range": "± 7048083",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2251150500,
            "range": "± 18547452",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "hetterich.charles@gmail.com",
            "name": "charlesHetterich",
            "username": "charlesHetterich"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1b76f99e12e9751703417fdb58097a1860aa20b7",
          "message": "Added `checked_sqrt` to the `FixedPointNumber` trait (#8238)\n\nAdds `checked_sqrt` function to `FixedPointNumber` and renames `const fn\ntry_sqrt` in the `implement_fixed` macro to `const fn checked_sqrt`.\n\nCLOSES: #8214 \n\n## Integration\n\nAny projects that use the **const** function `try_sqrt` from `FixedI64`,\n`FixedU64`, `FixedI128`, `FixedU128` should now use `checked_sqrt`.\n\n## Review Notes\n\n- renamed the const `try_sqrt` with `checked_sqrt`\n- updated tests for new name\n- added `checked_sqrt` to impl of `FixedPointNumber`\n\nWe keep both the const version along with adding the non-const version\nof `checked_sqrt` so that we can now access `checked_sqrt` from\nassociated types that implement `FixedPointNumber` without breaking all\nof the uses of `sqrt` that rely on it being const.\n\n---------\n\nCo-authored-by: Shawn Tabrizi <shawntabrizi@gmail.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-04-18T22:18:01Z",
          "tree_id": "53335fb1e622014622254b4531633e37e9cb793b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/1b76f99e12e9751703417fdb58097a1860aa20b7"
        },
        "date": 1745017767355,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18284994,
            "range": "± 306880",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18426177,
            "range": "± 218104",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19690451,
            "range": "± 183242",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23961154,
            "range": "± 272407",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53503884,
            "range": "± 759507",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 353763384,
            "range": "± 5824926",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2517994300,
            "range": "± 58959219",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14719139,
            "range": "± 125342",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15146440,
            "range": "± 257382",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15231224,
            "range": "± 109563",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19562528,
            "range": "± 146747",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50344850,
            "range": "± 680127",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 297014385,
            "range": "± 5445885",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2389451931,
            "range": "± 30240317",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "dharjeezy@gmail.com",
            "name": "dharjeezy",
            "username": "dharjeezy"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fe46832890db51c06ecebeac6c60c3edcbaf85e9",
          "message": "Full Unbond in Staking (#3811)\n\ncloses https://github.com/paritytech/polkadot-sdk/issues/414\n\nPolkadot address: 12GyGD3QhT4i2JJpNzvMf96sxxBLWymz4RdGCxRH5Rj5agKW\n\n---------\n\nCo-authored-by: Ankan <10196091+Ank4n@users.noreply.github.com>\nCo-authored-by: command-bot <>\nCo-authored-by: Gonçalo Pestana <g6pestana@gmail.com>\nCo-authored-by: Ankan <ankan.anurag@gmail.com>",
          "timestamp": "2025-04-21T08:56:09Z",
          "tree_id": "22cb5016f88e095d1c6270c1959eb3d469e9e5eb",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/fe46832890db51c06ecebeac6c60c3edcbaf85e9"
        },
        "date": 1745228761650,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17888411,
            "range": "± 79346",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18336731,
            "range": "± 148931",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19326576,
            "range": "± 145944",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23336990,
            "range": "± 195953",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53048200,
            "range": "± 981520",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 312913766,
            "range": "± 3161444",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2557764239,
            "range": "± 106439940",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14713743,
            "range": "± 143920",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14640688,
            "range": "± 98646",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15193798,
            "range": "± 94676",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19293607,
            "range": "± 267989",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50056497,
            "range": "± 590836",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 298168273,
            "range": "± 6932523",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2412800910,
            "range": "± 34873217",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "10196091+Ank4n@users.noreply.github.com",
            "name": "Ankan",
            "username": "Ank4n"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3cf51f631da8eebbdaeff01a037c7be82b1a70ca",
          "message": "[AHM] Async Staking module across AH and RC (#8127)\n\nMoved from: #7601.\nFollow ups to: https://github.com/paritytech/polkadot-sdk/pull/7282.\nCloses: https://github.com/paritytech/polkadot-sdk/issues/8146\n\n---\n\nThis PR is the final outcome of a multi-month development period, with a\nlot of background work\nsince 2022. Its main aim is to make pallet-staking, alongside its `type\nElectionProvider`\ncompatible to be used in a parachain, and report back the validator set\nto a relay-chain.\n\nThis setup is intended to be used for Polkadot, Kusama and Westend\nrelay-chains, with the\ncorresponding AssetHubs hosting the staking system.\n\nWhile this PR is quite big, a lot of the diffs are due to adding a relay\nand parachain runtime\nfor testing. The following is a guide to help reviewers/auditors\ndistinguish what has actually\nchanged in this PR.\n\n> Additional reading: See\nhttps://github.com/polkadot-js/apps/issues/11401, and the hackmd shared\nin there, which contains more in-depth explanation of how RC <> AH\ncommunicate.\n\n## Added\n\n> [This shows the partial\ndiff](https://github.com/paritytech/polkadot-sdk/compare/ankn/diff-staking-async...ankn/diff-staking-async-1)\nintroduced in pallet-staking-async and election-provider-multi-block\nrelative to the existing (in master) pallet-staking and\nelection-provider-multi-phase.\n\nThis PR adds the following new pallets, all of which are not used\nanywhere yet, with the\nexception of one (see `westend-runtime` changes below).\n\n#### `pallet-election-provider-multi-block`\n\nThis is a set of 4 pallets, capable of implementing an async, multi-page\n`ElectionProvider`.\nThis pallet is not used in any real runtime yet, and is intended to be\nused in `AssetHub`, next\nto `pallet-staking-async`.\n\n#### `pallet-staking-async`\n\nA fork of the old `pallet-staking`, with a number of key differences,\nmaking it suitable to be\nused in a parachain:\n\n1. It no longer has access to a secure timestamp, previously used to\ncalculate the duration of an era.\n2. It no longer has access to a `pallet-session`. \n3. It no longer has access to a `pallet-authorship`. \n5. It is capable of working with a multi-page `ElectionProvider`, aka.\n`pallet-election-provider-multi-block`.\n\nTo compensate for the above, this pallet relies on XCM messages coming\nfrom the relay-chain,\ninforming the pallet of:\n\n* When a new era should be activated, and how long its duration was\n* When an offence has happened on the relay relay-chain\n* When a session ends on the relay-chain, and how many reward points\nwere accumulated for each\nvalidators during that period.\n\n#### `pallet-staking-async-ah-client` and\n`pallet-staking-async-rc-client`\n\nAre the two new pallets that facilitate the above communication.\n\n#### `pallet-ahm-test`\n\nA test-only crate that contains e2e rust-based unit test for all of the\nabove.\n\n#### `pallet-staking-async-rc-runtime` and\n`pallet-staking-async-parachain-runtime`\n\nForks of westend and westend-asset-hub, customized to be used for\ntesting all of the above with\nZombienet. It contains a lot of unrelated code as well.\n\n## Changed\n\n> [This shows the partial\ndiff](https://github.com/paritytech/polkadot-sdk/compare/ankn/8127-diff-changed-base...ankn/8127-diff-changed-compare)\nthat shows the changes to existing pallets used in prod runtimes as well\nas westend runtime changes.\n\n#### `Identification`\n\nThis mechanism, which lives on the relay-chain, is expressed by `type\nFullIdentification` and `type FullIdentificationOf` in runtimes. It is a\nway to identify the full data needed to slash a validator. Historically,\nit was pointing to a validator, and their `struct Exposure`. With the\nmove to Asset-Hub, this is no longer possible for two reasons:\n\n1. Relay chain no longer knows the full exposures\n2. Even if, the full exposures are getting bigger and bigger and relying\nthe entirety of it is not scalable.\n\nInstead, runtimes now move to a new `type FullIdentificationOf =\nDefaultExposureOf`, which will identify a validator with a\n`Exposure::default()`. This is suboptimal, as it forces us to still\nstore a number of bytes. Yet, it allows any old `FullIdentification`,\npertaining to an old slash, to be decoded. This compromise is only\nneeded to cater for slashes that happen around the time of AHM.\n\n#### `westend-runtime`\n\nThis runtime already has the `pallet-staking-async-ah-client`,\nintegrated into all the places such that:\n\n1. It handles the validator reward points\n2. It handles offences\n5. It is the `SessionManager`\n\nYet, it is delegating all of the above to its `type Fallback`, which is\nthe old `pallet-staking`. This is a preparatory step for AHM, and should\nnot be any logical change.\n\n#### `pallet-election-provider-multi-phase`\n\nThis is the old single-page `ElectionProvider`. It has been updated to\nwork with multi-page traits, yet it only supports `page-size = 1` for\nnow. It should not have seen any logical changes.\n\n\n#### `pallet-bags-list`\n\nNow has two new features. 1. It can be `Locked`, in which case all\nupdates to it fail with an\n`Err(_)`, even deletion of a node. This is needed because we cannot\nalter any nodes in this\npallet during a multi-page iteration, aka. multi-page snapshot. 2. To\ncombat this, the same\n`rebag` transaction can be also be used to remove a node from the list,\nor add a node to the\nlist. This is done through the `score_of` api.\n\nSee the file changes and tests under `./substrate/frame/bags-list` for\nmore info.\n\n#### RuntimeDebug -> Debug\n\nTo facilitate debugging, a number of types' `RuntimeDebug` impl has been\nchanged to `Debug`. See\nhttps://github.com/paritytech/polkadot-sdk/pull/3107\n\n\n## Weights \n\nBelow is a summary of the weights. These are generated using\n`staking-async/runtimes/parachain`, which assumes 22_500 nominators\ndivided by `32` pages for Polkadot, and 12_500 nominators divided by\n`16` pages in Kusama, both leading to ~700 nominators snapshotted and\nexported per page. Doubling these parameters would easily slash the PoV\nweights by half, but with 10MB PoV, these numbers should be good. Also\nnoting that with PoV clawback, we migth get even more proof_size weight\nback in the runtime. Although, afaik this reclaimed value does not take\ncompression into account.\n\n```\n#### new: polkadot/pallet_election_provider_multi_block.rs old: kusama\n+-----------------------------------------+--------------------------------------+---------+---------+-----------------+\n| File                                    | Extrinsic                            | Old     | New     | Change [%]      |\n+======================================================================================================================+\n| pallet_election_provider_multi_block.rs | on_initialize_into_snapshot_msp      | 2.41MiB | 2.41MiB | -0.03  |\n|-----------------------------------------+--------------------------------------+---------+---------+-----------------|\n| pallet_election_provider_multi_block.rs | on_initialize_into_snapshot_rest     | 3.24MiB | 3.06MiB | -5.53  |\n|-----------------------------------------+--------------------------------------+---------+---------+-----------------|\n| pallet_election_provider_multi_block.rs | on_initialize_into_signed            | 3.36MiB | 3.12MiB | -7.12  |\n|-----------------------------------------+--------------------------------------+---------+---------+-----------------|\n| pallet_election_provider_multi_block.rs | export_non_terminal                  | 2.12MiB | 1.32MiB | -37.60 |\n|-----------------------------------------+--------------------------------------+---------+---------+-----------------|\n| pallet_election_provider_multi_block.rs | export_terminal                      | 4.08MiB | 2.25MiB | -44.82 |\n|-----------------------------------------+--------------------------------------+---------+---------+-----------------|\n| pallet_election_provider_multi_block.rs | on_initialize_nothing                | 3.53KiB | 3.53KiB | Unchanged       |\n|-----------------------------------------+--------------------------------------+---------+---------+-----------------|\n| pallet_election_provider_multi_block.rs | on_initialize_into_unsigned          | 3.71KiB | 3.71KiB | Unchanged       |\n|-----------------------------------------+--------------------------------------+---------+---------+-----------------|\n| pallet_election_provider_multi_block.rs | on_initialize_into_signed_validation | 3.71KiB | 3.71KiB | Unchanged       |\n|-----------------------------------------+--------------------------------------+---------+---------+-----------------|\n| pallet_election_provider_multi_block.rs | manage                               | 0B      | 0B      | Unchanged       |\n+-----------------------------------------+--------------------------------------+---------+---------+-----------------+\n#### new: polkadot/pallet_election_provider_multi_block_signed.rs old: kusama\n+------------------------------------------------+----------------------+----------+----------+-----------------+\n| File                                           | Extrinsic            | Old      | New      | Change [%]      |\n+===============================================================================================================+\n| pallet_election_provider_multi_block_signed.rs | bail                 | 43.61KiB | 82.74KiB | +89.72 |\n|------------------------------------------------+----------------------+----------+----------+-----------------|\n| pallet_election_provider_multi_block_signed.rs | register_eject       | 46.54KiB | 85.80KiB | +84.35 |\n|------------------------------------------------+----------------------+----------+----------+-----------------|\n| pallet_election_provider_multi_block_signed.rs | clear_old_round_data | 85.23KiB | 85.17KiB | -0.06  |\n|------------------------------------------------+----------------------+----------+----------+-----------------|\n| pallet_election_provider_multi_block_signed.rs | submit_page          | 6.95KiB  | 6.90KiB  | -0.70  |\n|------------------------------------------------+----------------------+----------+----------+-----------------|\n| pallet_election_provider_multi_block_signed.rs | register_not_full    | 6.45KiB  | 6.39KiB  | -1.00  |\n|------------------------------------------------+----------------------+----------+----------+-----------------|\n| pallet_election_provider_multi_block_signed.rs | unset_page           | 20.76KiB | 18.55KiB | -10.67 |\n+------------------------------------------------+----------------------+----------+----------+-----------------+\n#### new: polkadot/pallet_election_provider_multi_block_unsigned.rs old: kusama\n+--------------------------------------------------+-------------------+----------+-----------+------------------+\n| File                                             | Extrinsic         | Old      | New       | Change [%]       |\n+================================================================================================================+\n| pallet_election_provider_multi_block_unsigned.rs | submit_unsigned   | 63.56KiB | 696.00KiB | +995.01 |\n|--------------------------------------------------+-------------------+----------+-----------+------------------|\n| pallet_election_provider_multi_block_unsigned.rs | validate_unsigned | 1.81KiB  | 3.66KiB   | +102.65 |\n+--------------------------------------------------+-------------------+----------+-----------+------------------+\n#### new: polkadot/pallet_election_provider_multi_block_verifier.rs old: kusama\n+--------------------------------------------------+------------------------------------+-----------+-----------+-----------------+\n| File                                             | Extrinsic                          | Old       | New       | Change [%]      |\n+=================================================================================================================================+\n| pallet_election_provider_multi_block_verifier.rs | on_initialize_invalid_terminal     | 1.18MiB   | 1.69MiB   | +42.87 |\n|--------------------------------------------------+------------------------------------+-----------+-----------+-----------------|\n| pallet_election_provider_multi_block_verifier.rs | on_initialize_valid_terminal       | 1.18MiB   | 1.69MiB   | +42.71 |\n|--------------------------------------------------+------------------------------------+-----------+-----------+-----------------|\n| pallet_election_provider_multi_block_verifier.rs | on_initialize_invalid_non_terminal | 1.30MiB   | 450.82KiB | -66.08 |\n|--------------------------------------------------+------------------------------------+-----------+-----------+-----------------|\n| pallet_election_provider_multi_block_verifier.rs | on_initialize_valid_non_terminal   | 279.93KiB | 62.22KiB  | -77.77 |\n+--------------------------------------------------+------------------------------------+-----------+-----------+-----------------+\n```\n\n<summary> \n\nnote for PR authors\n\n<details>\n\n<br>\n\n## TODO\n\n- [x] Finalize weights\n- [x] Lock voter list when snapshot being taken \n- [x] push based election\n- [x] OffchainWorker miner can now run on multiple pages \n- [x] Trimming is improved, all bounds are respected.\n- [x] clients pallets: add ID\n- [x] make election prolonged\n- [x] bring westend-next and ah-next to staking-next\n- [x] Test pre-migration to post-migration state in ahm-test.\n- [x] Offence reporting works without exposure info on RC (done but\nrecheck).\n- [ ] staking-async fix tests\n- [ ] root offence testing (minimally done in migration test)\n- [ ] Run benchmarking\n- [x] ~~Add custom decoder for OffenceDetails~~.\n\n## TODO before finalizing PR\n- [x] Go over again and ensure no interaction with staking-classic\nexcept by AhClient (and pallets that are going away) in Westend. Make\nany non used apis private.\n- [ ] Create diff with changes from staking-classic.\n\n## Migration Notes\n- At the start of the AHM migration, trigger:\n`RC::pallet_staking_async_ah_client::on_migration_start()`\n- At the start of the AHM migration, trigger the following:\n  - definitely filter `staking::bond`\n  - RC: set `staking::Forcing` to `ForceNone`. \n- At the end of the AHM migration, trigger the following\n  - `RC::pallet_staking_async_ah_client::on_migration_end()`\n  - Set `AH::pallet_staking_async::ForceEra` to `Forcing::NotForcing`.\n  - Set RC staking and pool min bond to be u32::max.\n\n## Follow-up\n- [ ] Offence generation e2e test (zombienet)\n\n</details>\n</summary>\n\n---------\n\nCo-authored-by: kianenigma <kian@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Kian Paimani <5588131+kianenigma@users.noreply.github.com>\nCo-authored-by: Tsvetomir Dimitrov <tsvetomir@parity.io>",
          "timestamp": "2025-04-22T09:02:08Z",
          "tree_id": "70c2513ca2fbb0738f2fd7982f5e2476c84bb325",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/3cf51f631da8eebbdaeff01a037c7be82b1a70ca"
        },
        "date": 1745316914250,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17217242,
            "range": "± 58215",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17541714,
            "range": "± 210697",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18650179,
            "range": "± 363271",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22978084,
            "range": "± 172756",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51431973,
            "range": "± 588483",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 331640717,
            "range": "± 9569076",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2390587458,
            "range": "± 116507246",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14240812,
            "range": "± 96258",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14394997,
            "range": "± 122133",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14918049,
            "range": "± 108998",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18888707,
            "range": "± 172954",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 47928983,
            "range": "± 334478",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 276636761,
            "range": "± 3218557",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2255578901,
            "range": "± 14974592",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "adb4130960b9a9cad2bbbb3cf1af3b9d606691f6",
          "message": "[revive] eth-rpc refactoring (#8148)\n\nRefactor eth-rpc\n- Get rid of the in memory-cache, we can just store receipts logs into\nsqlite, and use in-memory db for non archive node.\n- Track both best and finalized blocks so that we can properly index\ntransaction receipts in case of a relay chain re-org.\n- Keep reference to the latest finalized block so that we can use that\nfor queries that use the `finalized` block tag\n- use `--index-last-n-blocks` cli parameter to re-index the last n block\nwhen the server start\n- Fix issue related to gas estimate calculation for EIP1559 transaction\ntypes\n\ntested changes with https://github.com/paritytech/evm-test-suite/pull/87\n\nfix https://github.com/paritytech/contract-issues/issues/35\nhttps://github.com/paritytech/contract-issues/issues/33\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-04-22T09:33:04Z",
          "tree_id": "ed62eb7a8ba66cb24974c6604d95a96e94899b1c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/adb4130960b9a9cad2bbbb3cf1af3b9d606691f6"
        },
        "date": 1745321901967,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18762075,
            "range": "± 161375",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18976657,
            "range": "± 149864",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20053813,
            "range": "± 152483",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24348435,
            "range": "± 214543",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57797769,
            "range": "± 1042405",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 359853138,
            "range": "± 6500744",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2614332843,
            "range": "± 120990039",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15286519,
            "range": "± 91448",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15521088,
            "range": "± 77820",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16004912,
            "range": "± 137843",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20662961,
            "range": "± 207368",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52675847,
            "range": "± 809073",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 327667767,
            "range": "± 4871510",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2536215090,
            "range": "± 21822104",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "dharjeezy@gmail.com",
            "name": "dharjeezy",
            "username": "dharjeezy"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "38a4dfe0a97c541f8c388fc43a18b547bd273c67",
          "message": "`txpool`: use tracing for structured logging (#8001)\n\nFollow up on https://github.com/paritytech/polkadot-sdk/pull/6897 cc:\n@michalkucharczyk\n\nPolkadot address: 12GyGD3QhT4i2JJpNzvMf96sxxBLWymz4RdGCxRH5Rj5agKW\n\nFixes: #5490\n\n---------\n\nCo-authored-by: Iulian Barbu <14218860+iulianbarbu@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: Michal Kucharczyk <1728078+michalkucharczyk@users.noreply.github.com>",
          "timestamp": "2025-04-22T13:15:34Z",
          "tree_id": "48d81af1a2470b439bb5d3bcdc59d0433ad5e75b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/38a4dfe0a97c541f8c388fc43a18b547bd273c67"
        },
        "date": 1745330892729,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17873093,
            "range": "± 158412",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18187908,
            "range": "± 91345",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19706778,
            "range": "± 177391",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23407925,
            "range": "± 148624",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51662079,
            "range": "± 476082",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 293814925,
            "range": "± 1506742",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2189243410,
            "range": "± 59897532",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14494388,
            "range": "± 158387",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14592647,
            "range": "± 120003",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15125872,
            "range": "± 99626",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18861458,
            "range": "± 116500",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49124184,
            "range": "± 404579",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 282697555,
            "range": "± 1532027",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2314409592,
            "range": "± 23548485",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ub2262000@gmail.com",
            "name": "Utkarsh Bhardwaj",
            "username": "UtkarshBhardwaj007"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "79b28b3185d01f2e43e098b1f57372ed9df64adf",
          "message": "add poke_deposit extrinsic to pallet-recovery (#7882)\n\n# Description\n\n* This PR adds a new extrinsic `poke_deposit` to `pallet-recovery`. This\nextrinsic will be used to re-adjust the deposits made in the pallet\nafter AHM.\n* Part of #5591 \n\n## Review Notes\n\n* Added a new extrinsic `poke_deposit` in `pallet-recovery`.\n* Added a new event `DepositPoked` to be emitted upon a successful call\nof the extrinsic.\n* Added a new enum `DepositKind` to differentiate between the 2 kinds of\ndeposits in the pallet.\n* Although the immediate use of the extrinsic will be to give back some\nof the deposit after the AH-migration, the extrinsic is written such\nthat it can work if the deposit decreases or increases (both).\n* The call to the extrinsic would be `free` if an actual adjustment is\nmade to the deposit and `paid` otherwise.\n* Added tests to test all scenarios.\n* Added benchmark\n* **Fixed bug** in benchmark helper function `insert_recovery_config`\nwhere funds were being reserved from the wrong account.\n* Minor refactoring to avoid code duplication.\n* Had to re-organise imports to make the code more readable and modular.\nIn the process, I removed unnecessary dependencies and imported\neverything from the frame umbrella crate. So this PR also solves: #6504\nfor `pallet-recovery`\n\n## TO-DOs\n* [x] Run CI cmd bot to benchmark\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>",
          "timestamp": "2025-04-22T16:22:15Z",
          "tree_id": "51ff806f6f165fdb9fcf4d85a22ecc5d9a677f22",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/79b28b3185d01f2e43e098b1f57372ed9df64adf"
        },
        "date": 1745342188639,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17300180,
            "range": "± 104921",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17956915,
            "range": "± 151920",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19135511,
            "range": "± 123401",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23107704,
            "range": "± 154981",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51287511,
            "range": "± 451505",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 295475485,
            "range": "± 2072908",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2411840874,
            "range": "± 184525569",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14699611,
            "range": "± 87836",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14686746,
            "range": "± 153758",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15379434,
            "range": "± 86651",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19754871,
            "range": "± 218443",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49831899,
            "range": "± 602044",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 297105464,
            "range": "± 12069253",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2419383777,
            "range": "± 27032502",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "gorka.irazoki@gmail.com",
            "name": "girazoki",
            "username": "girazoki"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c800a0dd2adefbee24c916e702058897588e7a85",
          "message": "Allow configuration of worst case buy execution weight (#7944)\n\nAdds `worst_case_buy_execution` to the Config trait of\n`pallet-xcm-benchmarks` with a default implementation that mimics the\ncode that existed previous to this PR.\n\nRationale: not allowing to set the `WeightLimit` and the `FeeAsset`\nmight mean that we dont benchmark the worst case, as with\n`WeightLimit::Unlimited` the `Trader` does not even execute:\nhttps://github.com/paritytech/polkadot-sdk/blob/c01dbebeaa6394691974de46dd2d41a582f6a4c2/polkadot/xcm/xcm-executor/src/lib.rs#L833\n\nThe new configurable function allows projects to customize the\nparameters with which the benchmark is run to make sure they account for\nthe worst-case scenario\n\n**This is very likely the case of the assethub system chain**, with\nseveral traders being analyzed and possibly several reads being made:\n\n\nhttps://github.com/paritytech/polkadot-sdk/blob/38d2fa859861005157ccb249dca1378f015e0b06/cumulus/parachains/runtimes/assets/asset-hub-rococo/src/xcm_config.rs#L403\n\n---------\n\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>\nCo-authored-by: Adrian Catangiu <adrian@parity.io>",
          "timestamp": "2025-04-23T10:45:20Z",
          "tree_id": "2b78a92c783a38b62f3d387e7000a1e2bca6e06c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c800a0dd2adefbee24c916e702058897588e7a85"
        },
        "date": 1745409983405,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17502570,
            "range": "± 89943",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17859685,
            "range": "± 76756",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18823028,
            "range": "± 106299",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23171628,
            "range": "± 160385",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53296346,
            "range": "± 724167",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 326725093,
            "range": "± 4360985",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2478516375,
            "range": "± 136139685",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14650211,
            "range": "± 134804",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14536235,
            "range": "± 118348",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15493878,
            "range": "± 137068",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19728157,
            "range": "± 227648",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50546187,
            "range": "± 723358",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 297145567,
            "range": "± 12461990",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2445880122,
            "range": "± 31294981",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "serban@parity.io",
            "name": "Serban Iorga",
            "username": "serban300"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "bff1ae9728440cb3f1d7b49adeb810e5d7038110",
          "message": "XCMP: use batching when enqueuing inbound messages (#8021)\n\nThis is a follow-up for\nhttps://github.com/paritytech/polkadot-sdk/pull/7963\n\nhttps://github.com/paritytech/polkadot-sdk/pull/7963 introduced some\n[performance improvements for the message_queue enqueuing\nlogic](https://github.com/paritytech/polkadot-sdk/pull/7963/commits/ae657d631422b11acf129229e1aeb19580dba788).\nThis PR leverages those improvements by implementing batching in the\nXCMP queue pallet.\n\nAlso the PR increases the weight metering accuracy for the enqueuing\nlogic.\n\nThe performance difference can be seen in [this\ncommit](https://github.com/paritytech/polkadot-sdk/commit/1d6c4266e2ee06368cb697084ffd0cc9b47dcdb0):\n\n```\n\tfn enqueue_1000_small_xcmp_messages() -> Weight {\n\t\t// Proof Size summary in bytes:\n\t\t//  Measured:  `151`\n\t\t//  Estimated: `5487`\n\t\t// Minimum execution time: 134_166_000 picoseconds.\n\t\tWeight::from_parts(138_915_000, 5487)\n\t\t\t.saturating_add(T::DbWeight::get().reads(4_u64))\n\t\t\t.saturating_add(T::DbWeight::get().writes(3_u64))\n\t}\n\n\tfn enqueue_1000_small_xcmp_messages_individually() -> Weight {\n\t\t// Proof Size summary in bytes:\n\t\t//  Measured:  `151`\n\t\t//  Estimated: `5487`\n\t\t// Minimum execution time: 10_181_142_000 picoseconds.\n\t\tWeight::from_parts(10_200_139_000, 5487)\n\t\t\t.saturating_add(T::DbWeight::get().reads(4_u64))\n\t\t\t.saturating_add(T::DbWeight::get().writes(3_u64))\n\t}\n``` \n\nFor 1000 messages of 3 bytes each it takes `134us` to enqueue them using\nbatching and `10181us` to enqueue them individually. This is a ~75x\nimprovement.\n\n---------\n\nSigned-off-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>",
          "timestamp": "2025-04-23T15:34:08Z",
          "tree_id": "5e241652458c7831d52be3ac8ace09d769e8f944",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/bff1ae9728440cb3f1d7b49adeb810e5d7038110"
        },
        "date": 1745425561908,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19970661,
            "range": "± 345067",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19969120,
            "range": "± 205106",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20601644,
            "range": "± 356570",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25455717,
            "range": "± 196442",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54928072,
            "range": "± 656922",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 361156964,
            "range": "± 8676175",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2644078405,
            "range": "± 82563125",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15379906,
            "range": "± 112594",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15551457,
            "range": "± 162490",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16061341,
            "range": "± 131126",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20888757,
            "range": "± 211295",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53453335,
            "range": "± 822991",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 343479764,
            "range": "± 3715391",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2569772179,
            "range": "± 38419201",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "claravanstaden64@gmail.com",
            "name": "Clara van Staden",
            "username": "claravanstaden"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e8e8d6ecba5eafd4835748cdc807789ba59061cd",
          "message": "Extract create_pool_with_native_on macro to common crate (#8289)\n\nMoves macro to a common crate so that it can be reused in the polkadot\nruntimes repo.",
          "timestamp": "2025-04-23T21:58:30Z",
          "tree_id": "89f6cc8a75fe43acaf4c5f53ec0f20c2e31babbe",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e8e8d6ecba5eafd4835748cdc807789ba59061cd"
        },
        "date": 1745448349459,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17236381,
            "range": "± 113849",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17426687,
            "range": "± 230864",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18902154,
            "range": "± 146889",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23029879,
            "range": "± 294016",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53410924,
            "range": "± 811760",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 316294535,
            "range": "± 3239225",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2460024481,
            "range": "± 161850679",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14398547,
            "range": "± 182814",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14606133,
            "range": "± 105822",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15106928,
            "range": "± 133138",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19400133,
            "range": "± 233383",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49373904,
            "range": "± 655137",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 282398401,
            "range": "± 3255162",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2304467227,
            "range": "± 31254200",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "paolo@parity.io",
            "name": "Paolo La Camera",
            "username": "sigurpol"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "7e65abb1808126994339b9990a543378c6f2af4c",
          "message": "staking-async: add missing new_session_genesis (#8310)\n\nFix issue #8302 (introduced by #8127), where the staking-async module\ncould fail during genesis.\n\nThe issue was related to the staking-async module in the Polkadot SDK,\nspecifically with the implementation of the `historical::SessionManager`\ntrait in the `ah-client` pallet with missing implementations of the\nnew_session_genesis method in two different places:\n- In the pallet_session::SessionManager<T::AccountId> implementation\n- In the historical::SessionManager<T::AccountId,\nsp_staking::Exposure<T::AccountId, BalanceOf<T>>> implementation\n\nNote: the SessionManager trait requires the implementation of\nnew_session_genesis for proper functioning, especially during chain\ninitialization.\n\nThe pallet-staking-async/ah-client has different operating modes:\n- Passive: Delegates operations to a fallback implementation\n- Buffered: Buffers operations for later processing\n- Active: Performs operations directly\n\nThe fix ensures that in Passive mode, the new_session_genesis method\ncorrectly delegates to the fallback implementation, while in other modes\nit returns None.\n\n---------\n\nCo-authored-by: kianenigma <kian@parity.io>",
          "timestamp": "2025-04-25T08:51:49Z",
          "tree_id": "3bdbf4f74503a7d64369f2267050bfaf64adc664",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/7e65abb1808126994339b9990a543378c6f2af4c"
        },
        "date": 1745574956894,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 20285441,
            "range": "± 425003",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20871942,
            "range": "± 393588",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 23213379,
            "range": "± 415779",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 27242058,
            "range": "± 1007487",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 63729494,
            "range": "± 1471794",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 395375055,
            "range": "± 12786832",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2494840988,
            "range": "± 100613047",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16721023,
            "range": "± 272717",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16825534,
            "range": "± 495622",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17636821,
            "range": "± 313724",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22343253,
            "range": "± 479019",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 58124649,
            "range": "± 1359444",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 351344433,
            "range": "± 8896983",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2645032960,
            "range": "± 28264085",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "363911+pepoviola@users.noreply.github.com",
            "name": "Javier Viola",
            "username": "pepoviola"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "116472ec1d813cb17a036b5fbcab5a82f9d5d11e",
          "message": "migrate parachain-templates tests to `gha` (#8226)\n\nmigrate\n[parachain-template](https://github.com/paritytech/polkadot-sdk/blob/master/.gitlab/pipeline/zombienet/parachain-template.yml)\npipeline to gha.",
          "timestamp": "2025-04-25T09:03:23Z",
          "tree_id": "3a7aa53b04e7ba7813ba82cd247d27a01975ee63",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/116472ec1d813cb17a036b5fbcab5a82f9d5d11e"
        },
        "date": 1745581307029,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17953293,
            "range": "± 99644",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18275549,
            "range": "± 239297",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19452756,
            "range": "± 173181",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23848499,
            "range": "± 222907",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56073918,
            "range": "± 897452",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 337624825,
            "range": "± 4308952",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2707727380,
            "range": "± 82726845",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14786629,
            "range": "± 114373",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14901429,
            "range": "± 119859",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15444761,
            "range": "± 109873",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19817358,
            "range": "± 327913",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50682391,
            "range": "± 978760",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 303179093,
            "range": "± 5171350",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2392495691,
            "range": "± 19261374",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "claravanstaden64@gmail.com",
            "name": "Clara van Staden",
            "username": "claravanstaden"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8da42e8faeba3e0ae55d6983c12ba5676d9e14de",
          "message": "Snowbridge - V1 - Adds 2 hop transfer to Rococo (#7956)\n\nAdds a test to demonstrate a 2-hop (Ethereum to Westend AH, second\ntransaction from Westend AH to Rococo AH) transfer to Rococo AH (and\nback to Ethereum in a 2-hop fashion as well).",
          "timestamp": "2025-04-25T13:16:45Z",
          "tree_id": "de56c889b287517fcf993e8d4b4b2bdb0b3cbf1e",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/8da42e8faeba3e0ae55d6983c12ba5676d9e14de"
        },
        "date": 1745592030859,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 20502063,
            "range": "± 225863",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 21007910,
            "range": "± 475353",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22911037,
            "range": "± 357490",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26581262,
            "range": "± 583040",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 62722548,
            "range": "± 2212719",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 399447837,
            "range": "± 9284731",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2746015846,
            "range": "± 26047257",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17205697,
            "range": "± 247739",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17445119,
            "range": "± 200952",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17848328,
            "range": "± 302669",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22687439,
            "range": "± 542670",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 57245042,
            "range": "± 2121261",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 365975317,
            "range": "± 3675528",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2730235188,
            "range": "± 26319422",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "evgeny@parity.io",
            "name": "Evgeny Snitko",
            "username": "AndWeHaveAPlan"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "0171ff8f070bf6b805dfa922af552283782f3309",
          "message": "push to dockerhub (#8322)\n\nPush images to dockerhub paritypr org in addition to private google\nregistry\nfix https://github.com/paritytech/devops/issues/3976",
          "timestamp": "2025-04-25T15:30:01Z",
          "tree_id": "64a2e7031b5220c0f3b9c97c059efe80ed8b919e",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/0171ff8f070bf6b805dfa922af552283782f3309"
        },
        "date": 1745598261978,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18568724,
            "range": "± 214168",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19225404,
            "range": "± 201888",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20519150,
            "range": "± 339428",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24939124,
            "range": "± 315930",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57249472,
            "range": "± 1214050",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 352259822,
            "range": "± 9589020",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2597519423,
            "range": "± 77022010",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15461631,
            "range": "± 143704",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15740642,
            "range": "± 195937",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16057509,
            "range": "± 525049",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20509334,
            "range": "± 201149",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52440943,
            "range": "± 758199",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 316905588,
            "range": "± 2830859",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2482306839,
            "range": "± 31888314",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "hrishav@parity.io",
            "name": "castillax",
            "username": "castillax"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7e5b993c32565f753e7904074ed3e5775a2838d5",
          "message": "Add new host APIs set_storage_or_clear and get_storage_or_zero (#7857)\n\n# Description\n\n*This PR introduces two new storage API functions—set_storage_or_clear\nand get_storage_or_zero—which provide fixed‑size (32‑byte) storage\noperations. These APIs are an attempt to match Ethereum’s SSTORE\nsemantics. These APIs provide additional functionality for setting and\nretrieving storage values and clearing storage when a zero value is\nprovided and returning zero bytes when a key does not exist.*\n\nFixes #6944 \n## Review Notes\n\n* Changes in `runtime.rs`\nAdded the set_storage_or_clear function to set storage at a fixed\n256-bit key with a fixed 256-bit value. If the provided value is all\nzeros, the key is cleared.\nAdded the get_storage_or_zero function to read storage at a fixed\n256-bit key and write back a fixed 256-bit value. If the key does not\nexist, 32 bytes of zero are written back.\n* Changes in `storage.rs`\nAdded test cases to cover the new set_storage_or_clear and\nget_storage_or_zero APIs.\n.\n\n```\n// Example usage of the new set_storage_or_clear function\nlet existing = api::set_storage_or_clear(StorageFlags::empty(), &KEY, &VALUE_A);\nassert_eq!(existing, None);\n\n// Example usage of the new get_storage_or_zero function\nlet mut stored: [u8; 32] = [0u8; 32];\nlet _ = api::get_storage_or_zero(StorageFlags::empty(), &KEY, &mut stored);\nassert_eq!(stored, VALUE_A);\n```\n\n*All existing tests pass*\n\n# Checklist\n\n* [x] My PR includes a detailed description as outlined in the\n\"Description\" and its two subsections above.\n* [x] My PR follows the [labeling requirements](\n\nhttps://github.com/paritytech/polkadot-sdk/blob/master/docs/contributor/CONTRIBUTING.md#Process\n) of this project (at minimum one label for `T` required)\n* External contributors: ask maintainers to put the right label on your\nPR.\n* [x] I have made corresponding changes to the documentation (if\napplicable)\n* [x] I have added tests that prove my fix is effective or that my\nfeature works (if applicable)\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>\nCo-authored-by: xermicus <cyrill@parity.io>",
          "timestamp": "2025-04-25T16:17:27Z",
          "tree_id": "ad4cf14d66c3be4ce7fc4ac8ec8c23ccfc6af0af",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/7e5b993c32565f753e7904074ed3e5775a2838d5"
        },
        "date": 1745601008573,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17699973,
            "range": "± 147831",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17974271,
            "range": "± 190175",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19236238,
            "range": "± 139250",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23585022,
            "range": "± 163002",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 52761566,
            "range": "± 1246626",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 315972319,
            "range": "± 3452442",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2321752274,
            "range": "± 77967115",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14542549,
            "range": "± 159522",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14725927,
            "range": "± 182015",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15214738,
            "range": "± 156761",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19264447,
            "range": "± 200810",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49215549,
            "range": "± 618520",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 291196684,
            "range": "± 2887376",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2338313579,
            "range": "± 24061842",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "117115317+lrubasze@users.noreply.github.com",
            "name": "Lukasz Rubaszewski",
            "username": "lrubasze"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2460ec55149d6b4253cbed7391df77c30026dde6",
          "message": "[CI] Improve GH build status checking (#8331)\n\nThis is to address cases, when `gh run ls` returns more than one status\n(when the GH workflow was triggered multiple times for given SHA).\nOtherwise multiple statuses are stored within STATUS variable preventing\nthe workflow from finishing.\n \neg.\nOld command:\n```bash\ngh run ls -c 678cbe5d4fcb89d166ea0e75bfeb146789795fd0 -w \"Build and push images\" \\\n    --json name,status --jq '.[] | select(.name == \"Build and push images\") | .status'\n```\nOutputs:\n```\ncompleted\ncompleted\n```\n\nNew command:\n```bash\ngh run ls -c 678cbe5d4fcb89d166ea0e75bfeb146789795fd0 -w \"Build and push images\" \\\n    --json status,databaseId --jq 'max_by(.databaseId) | .status'\n```\nOutputs:\n```\ncompleted\n```\n\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-04-26T22:51:04Z",
          "tree_id": "c3fe53ad233ac31d106220fe7e2f098fac387b43",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/2460ec55149d6b4253cbed7391df77c30026dde6"
        },
        "date": 1745710662416,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 20363731,
            "range": "± 553114",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20478592,
            "range": "± 1001444",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22527616,
            "range": "± 942585",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25425169,
            "range": "± 924257",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 62634262,
            "range": "± 1867842",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 382720951,
            "range": "± 10379969",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2849018624,
            "range": "± 108053123",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15578954,
            "range": "± 111862",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15549467,
            "range": "± 161032",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16088868,
            "range": "± 175396",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20505908,
            "range": "± 209276",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52314547,
            "range": "± 416670",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 301284245,
            "range": "± 4606473",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2374725376,
            "range": "± 15729725",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41779041+alvicsam@users.noreply.github.com",
            "name": "Alexander Samusev",
            "username": "alvicsam"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "6565c4247b86eeb6d5dd55a0f0dcc4d0aca34841",
          "message": "ci: change nextest test-threads to num-cpus (#8357)\n\nTest if \"num-cpus\" option is faster",
          "timestamp": "2025-04-28T12:53:29Z",
          "tree_id": "b4856a254a8d4928331eb9024b5b2f5848b4b354",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/6565c4247b86eeb6d5dd55a0f0dcc4d0aca34841"
        },
        "date": 1745847599094,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17966788,
            "range": "± 141835",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18290801,
            "range": "± 125697",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19597020,
            "range": "± 101802",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23750870,
            "range": "± 276292",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56140651,
            "range": "± 1102492",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 352288636,
            "range": "± 5232727",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2774613112,
            "range": "± 165412201",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14670752,
            "range": "± 126414",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14971076,
            "range": "± 86886",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15523460,
            "range": "± 186185",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19883878,
            "range": "± 171043",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51321393,
            "range": "± 807832",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 307219387,
            "range": "± 4946846",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2487333966,
            "range": "± 27034553",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alin@parity.io",
            "name": "Alin Dima",
            "username": "alindima"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5340da2f37374cabe299d66aabe3d6f959f121c9",
          "message": "fix synchronous backing test (#8338)\n\nFixes https://github.com/paritytech/polkadot-sdk/issues/8131\n\nAdds a synchronous backing test runtime to `test-parachain`. The test\nwas flaky due to bugs in the old cumulus image being used (pre async\nbacking)",
          "timestamp": "2025-04-28T13:06:13Z",
          "tree_id": "dcee5b588b06f21cc191cbf94e54d598b1f1092d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/5340da2f37374cabe299d66aabe3d6f959f121c9"
        },
        "date": 1745848656137,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18452455,
            "range": "± 137201",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19347215,
            "range": "± 149959",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21158576,
            "range": "± 378396",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25363943,
            "range": "± 259204",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55039047,
            "range": "± 771875",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 353080210,
            "range": "± 8005402",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2662503029,
            "range": "± 90325236",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15249585,
            "range": "± 82788",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15858306,
            "range": "± 110869",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16139419,
            "range": "± 205179",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19958569,
            "range": "± 144389",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51092512,
            "range": "± 1239482",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 301106281,
            "range": "± 3484899",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2416787495,
            "range": "± 11936175",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alex.theissen@me.com",
            "name": "Alexander Theißen",
            "username": "athei"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "398bbfccf752200d7aaeb75fddb099c5606c0bbd",
          "message": "pallet_revive: Replace adhoc pre-compiles with pre-compile framework (#8262)\n\nThis PRs adds the ability to define custom pre-compiles from outside the\npallet. Before, all pre-compiles were hard coded as part of the pallet.\n\n## Design\n1. Adding a pre-compile is as easy as implementing the new `Precompile`\ntrait on any type. It can be added to the pallet by passing it into\n`Config::Precompiles`. This config know excepts a tuple of multiple\ntypes that each implement `Precompile`.\n2. Each pre-compile has to implement Solidity ABI. Meaning its inputs\nand outputs are encoded according to Eth ABI. This makes writing a\npre-compile much simpler since it doesn't have to implement its own\ndecoding logic. More importantly: It makes it trivial to consume the API\nfrom a Solidity contract.\n3. We constrain the address space of pre-compiles to a safe range so\nthat they cannot accidentally match a wide range creating a collision\nwith real contracts.\n4. We check that pre-compile address ranges do not overlap at compile\ntime.\n5. Pre-compiles behave exactly as a normal contract. They exist as\nframes on the call stack and the environment they observe is their own\n(not the one of the calling contract). They can also be delegate called\nwhich changes the semantics in the same way as for normal contracts:\nThey observe the environment of the calling contract.\n6. They can also be called by the origin without any other contract\nin-between.\n\nCheck the rustdocs of the `precompile` module on how to write a\npre-compile.\n\n## Changes\n1. A new module `precompiles` is added that contains the framework to\nwrite pre-compiles. It also contains the sub module `builtin` that\ncontains hard coded pre-compiles which exist Ethereum.\n2. The `pure_precompiles` module was deleted since all its pre-compiles\nwere ported over to the new framework and are now housed in `builtin`.\n4. The `CallSetup` type is moved outside of the `benchmarking` module\nbecause it is also needed for testing code now. It is intended to be\nused for implementors outside of the crate to test the pre-compiles (in\naddition to benchmarking them).\n\n## Follow Ups\n- https://github.com/paritytech/polkadot-sdk/issues/8363\n- https://github.com/paritytech/polkadot-sdk/issues/8364\n- https://github.com/paritytech/polkadot-sdk/issues/8362\n\nFixes [#6716](https://github.com/paritytech/polkadot-sdk/issues/6716)\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: PG Herveou <pgherveou@gmail.com>\nCo-authored-by: xermicus <cyrill@parity.io>",
          "timestamp": "2025-04-28T17:29:47Z",
          "tree_id": "bcd8512efbab68b00025d0055779d5651f6f06c7",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/398bbfccf752200d7aaeb75fddb099c5606c0bbd"
        },
        "date": 1745864283890,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18046359,
            "range": "± 175995",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18439466,
            "range": "± 171230",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19960901,
            "range": "± 149937",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24236632,
            "range": "± 217350",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 58373215,
            "range": "± 831092",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 371209997,
            "range": "± 8779373",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2745971509,
            "range": "± 161192590",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15168389,
            "range": "± 175638",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15445465,
            "range": "± 155044",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15757170,
            "range": "± 126201",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20564418,
            "range": "± 204275",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52846189,
            "range": "± 866495",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 321103496,
            "range": "± 5367109",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2581697420,
            "range": "± 25006381",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2ae2779a07524be05c3ee40cb8b5e341ec1ca15d",
          "message": "slot-based-collator: Do not skip slots (#8243)\n\nEnsure that we do not skip a slot. This could for example happen if the\nwork being done in the previous slot was taking until the end of the\nlast slot or a little bit longer.",
          "timestamp": "2025-04-29T07:01:27Z",
          "tree_id": "03fc24890caf10c78a72b9872290fe6e4c251d80",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/2ae2779a07524be05c3ee40cb8b5e341ec1ca15d"
        },
        "date": 1745912969062,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18181054,
            "range": "± 172815",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18191899,
            "range": "± 192946",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19777951,
            "range": "± 273680",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24212454,
            "range": "± 223358",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54775474,
            "range": "± 1099934",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 321731037,
            "range": "± 4519526",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2385085281,
            "range": "± 133347869",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15015799,
            "range": "± 305619",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15061946,
            "range": "± 171794",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15899121,
            "range": "± 133675",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19768419,
            "range": "± 163005",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50934233,
            "range": "± 530955",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 293786023,
            "range": "± 2716751",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2385885943,
            "range": "± 25283464",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "678b60fcdfec5845fde82401f5aa7dc02fdb915c",
          "message": "Introduce `remove_upgrade_cooldown` (#8254)\n\nThis dispatchable enables anyone to pay for removing an active upgrade\ncooldown from a parachain instead of waiting for the cooldown to be\nfinished. It is useful for times when a parachain needs to apply an\nupgrade faster than the upgrade cooldown, but it will need to pay in\nthis case. The dispatchable enables anyone to remove an upgrade cooldown\nof any parachain. The caller needs to pay for the removal and the tokens\nare burned on a successful removal.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-04-29T10:09:24Z",
          "tree_id": "5baf342d56781bcafca484de6f203dcfc913d915",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/678b60fcdfec5845fde82401f5aa7dc02fdb915c"
        },
        "date": 1745924707783,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18606216,
            "range": "± 83558",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18697766,
            "range": "± 166024",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20456066,
            "range": "± 245578",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24813383,
            "range": "± 259711",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 60985767,
            "range": "± 1436754",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 365838422,
            "range": "± 7029668",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2788136827,
            "range": "± 145422509",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15560200,
            "range": "± 109906",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15388210,
            "range": "± 201952",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15988354,
            "range": "± 209238",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20817093,
            "range": "± 306410",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54992650,
            "range": "± 2866019",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 322878679,
            "range": "± 4010874",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2565195413,
            "range": "± 47686170",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "535ada9a6e8e01ee612787fa6ae68d611f535e2b",
          "message": "Migrate 0009-approval-voting-coalescing.zndsl to zombienet-sdk (#7666)\n\nFixes: https://github.com/paritytech/polkadot-sdk/issues/7651\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>\nCo-authored-by: Andrei Sandu <54316454+sandreim@users.noreply.github.com>\nCo-authored-by: Javier Viola <javier@parity.io>\nCo-authored-by: Javier Viola <363911+pepoviola@users.noreply.github.com>\nCo-authored-by: Stephane Gurgenidze <59443568+sw10pa@users.noreply.github.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-04-29T10:54:13Z",
          "tree_id": "4ee578bff182e54eabeda59f39d42f8ea05c0251",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/535ada9a6e8e01ee612787fa6ae68d611f535e2b"
        },
        "date": 1745927201535,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17488684,
            "range": "± 109932",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17775265,
            "range": "± 473308",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19147061,
            "range": "± 114342",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23339341,
            "range": "± 68266",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54487822,
            "range": "± 616944",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 351602453,
            "range": "± 4103974",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2451751416,
            "range": "± 198407682",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14615771,
            "range": "± 112836",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14700215,
            "range": "± 62235",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15211849,
            "range": "± 159236",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19269878,
            "range": "± 113581",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50375175,
            "range": "± 1028386",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 306430800,
            "range": "± 4578047",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2444829501,
            "range": "± 39061856",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aman@parity.io",
            "name": "Aman",
            "username": "aman4150"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9abe25d974f6045d1e97537e0f1e860459053722",
          "message": "wasm-builder: Fix crate patching logic for the runtime blob (#8244)\n\nthe current code overwrites the patches already applied to the final\nruntime blob workspace toml.\n\nNo pr-doc is required because this change is for riscv backend which is\nnot released yet.\n\n---------\n\nSigned-off-by: Aman <aman@parity.io>\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-04-29T11:35:18Z",
          "tree_id": "984f19001781045abadbdc7c149b5ef0467cad43",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/9abe25d974f6045d1e97537e0f1e860459053722"
        },
        "date": 1745930294954,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17671006,
            "range": "± 47686",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18302250,
            "range": "± 75547",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19113296,
            "range": "± 181189",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23631495,
            "range": "± 366922",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54423642,
            "range": "± 1003019",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 344024349,
            "range": "± 3969967",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2472651773,
            "range": "± 132684294",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14652216,
            "range": "± 128082",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14740894,
            "range": "± 136494",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15282625,
            "range": "± 102801",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19414913,
            "range": "± 139687",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50169642,
            "range": "± 652653",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 287501536,
            "range": "± 3555611",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2348855776,
            "range": "± 10192520",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "37865735+clangenb@users.noreply.github.com",
            "name": "clangenb",
            "username": "clangenb"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ebacdc2264139c18062a189f83eebc120ee9a34b",
          "message": "Allow genesis-presets to be patched and remove native runtime calls from the staging-node-cli (#8323)\n\nThis allows that we can update the hardcoded genesis-presets with some\njson-values, closes\nhttps://github.com/paritytech/polkadot-sdk/issues/7748.\n\nIdeally, we should be able to remove calls into the native runtime with\nthis (i.e., don't link the runtime in the node's code).\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Michal Kucharczyk <1728078+michalkucharczyk@users.noreply.github.com>",
          "timestamp": "2025-04-29T15:14:38Z",
          "tree_id": "8efdca0b10297c7d46c4b44b1eb84cdd4f8d13ad",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ebacdc2264139c18062a189f83eebc120ee9a34b"
        },
        "date": 1745942733435,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17468240,
            "range": "± 174002",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17778585,
            "range": "± 98342",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19244331,
            "range": "± 130690",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23666628,
            "range": "± 243164",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53268878,
            "range": "± 1287053",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 328677769,
            "range": "± 5178064",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2406276657,
            "range": "± 82404814",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14863322,
            "range": "± 135281",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14826032,
            "range": "± 120277",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15513283,
            "range": "± 95708",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19272980,
            "range": "± 176699",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49107716,
            "range": "± 298223",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 289398011,
            "range": "± 4196629",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2343283035,
            "range": "± 14638355",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d88a7e4be7fdbab462d9ea3a9c98c9f7a9cfb66a",
          "message": "[pallet-revive] add fee_history (#8197)\n\nAdd eth_feeHistory method to the eth-rpc\nfix https://github.com/paritytech/contract-issues/issues/39\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: xermicus <cyrill@parity.io>",
          "timestamp": "2025-04-29T21:56:28Z",
          "tree_id": "023241dd9936cd622ac727ec75aaef432bdea8c1",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d88a7e4be7fdbab462d9ea3a9c98c9f7a9cfb66a"
        },
        "date": 1745967008985,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17726393,
            "range": "± 122634",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18216753,
            "range": "± 280884",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19303338,
            "range": "± 76455",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23606415,
            "range": "± 229373",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53211776,
            "range": "± 365113",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 321485868,
            "range": "± 3425298",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2348715832,
            "range": "± 78618568",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14724376,
            "range": "± 152213",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14813483,
            "range": "± 88625",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15301526,
            "range": "± 665145",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19175049,
            "range": "± 138789",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50411255,
            "range": "± 335624",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 293881702,
            "range": "± 3380405",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2373479875,
            "range": "± 39606572",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48632512+s0me0ne-unkn0wn@users.noreply.github.com",
            "name": "s0me0ne-unkn0wn",
            "username": "s0me0ne-unkn0wn"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c1a246aabfae090261198bb8d3d6e5cf1e0fef84",
          "message": "Fix FFI type diversion (#8261)\n\nA #7375 follow-up fix",
          "timestamp": "2025-04-30T09:38:55Z",
          "tree_id": "d54159867d9e531b316b3b7988526b2f25a88903",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c1a246aabfae090261198bb8d3d6e5cf1e0fef84"
        },
        "date": 1746010043720,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17931385,
            "range": "± 232298",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18402398,
            "range": "± 221761",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19909945,
            "range": "± 137315",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24212755,
            "range": "± 296949",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54795178,
            "range": "± 979712",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 334389858,
            "range": "± 9343165",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2728438759,
            "range": "± 47106565",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14958023,
            "range": "± 184924",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15259855,
            "range": "± 93199",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15696077,
            "range": "± 118323",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19706575,
            "range": "± 219737",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51106569,
            "range": "± 600411",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 303958349,
            "range": "± 6425560",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2399256681,
            "range": "± 20987790",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "dmitry@markin.tech",
            "name": "Dmitry Markin",
            "username": "dmitry-markin"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3ff1b1db36260cbc47297ab753e2dcec1f5999fd",
          "message": "RFC-0008: Store parachain bootnodes in the relay chain DHT (#8072)\n\nImplement [RFC-0008 \"DHT\nbootnodes\"](https://polkadot-fellows.github.io/RFCs/approved/0008-parachain-bootnodes-dht.html).\nClose https://github.com/paritytech/polkadot-sdk/issues/1825.\n\nWith this mechanism, every parachain node is eligible to act as a\nbootnode. If its peer ID is close to the parachain key for the current\nrelay chain epoch, it becomes discoverable by other parachain nodes via\nthe relay chain DHT. This removes the need to specify bootnodes in the\nparachain chainspec, eliminating a single point of failure and\nsimplifying things for parachain operators.\n\nThe mechanism is enabled by default. The embedded DHT bootnode can be\ndisabled using the `--no-dht-bootnode` flag, and discovery of such nodes\ncan be disabled with the `--no-dht-bootnode-discovery` flag.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-04-30T13:09:42Z",
          "tree_id": "a8443fbc2d8d4551eb75f5a4139f52c9351c868d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/3ff1b1db36260cbc47297ab753e2dcec1f5999fd"
        },
        "date": 1746022727088,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18583822,
            "range": "± 171718",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18993579,
            "range": "± 85992",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20284771,
            "range": "± 103051",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25008398,
            "range": "± 385131",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59344032,
            "range": "± 1407642",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 366391523,
            "range": "± 6375321",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2340086378,
            "range": "± 90048921",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15185600,
            "range": "± 92396",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15401901,
            "range": "± 119734",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15892835,
            "range": "± 85595",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20310718,
            "range": "± 303380",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53330614,
            "range": "± 822643",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 334077179,
            "range": "± 8857097",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2503942427,
            "range": "± 8312544",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "60601340+lexnv@users.noreply.github.com",
            "name": "Alexandru Vasile",
            "username": "lexnv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9869517b4dc851469e6d854a263f82ff32133524",
          "message": "networking: Update litep2p network backend to v0.9.4 (#8373)\n\n# Litep2p Release\n\nThis release brings several improvements and fixes to litep2p, advancing\nits stability and readiness for production use.\n\n### Performance Improvements\n\nThis release addresses an issue where notification protocols failed to\nexit on handle drop, lowering CPU usage in scenarios like\nminimal-relay-chains from 7% to 0.1%.\n\n### Robustness Improvements\n\n- Kademlia:\n- Optimized address store by sorting addresses based on dialing score,\nbounding memory consumption and improving efficiency.\n- Limited `FIND_NODE` responses to the replication factor, reducing data\nstored in the routing table.\n- Address store improvements enhance robustness against routing table\nalterations.\n\n- Identify Codec:\n- Enhanced message decoding to manage malformed or unexpected messages\ngracefully.\n\n- Bitswap:\n- Introduced a write timeout for sending frames, preventing protocol\nhangs or delays.\n\n### Testing and Reliability\n\n- Fuzzing Harness: Added a fuzzing harness by SRLabs to uncover and\nresolve potential issues, improving code robustness. Thanks to @R9295\nfor the contribution!\n\n- Testing Enhancements: Improved notification state machine testing.\nThanks to Dominique (@Imod7) for the contribution!\n\n### Dependency Management\n\n- Updated all dependencies for stable feature flags (default and\n\"websocket\") to their latest versions.\n\n- Reorganized dependencies under specific feature flags, shrinking the\ndefault feature set and avoiding exposure of outdated dependencies from\nexperimental features.\n\n### Fixed\n\n- notifications: Exit protocols on handle drop to save up CPU of\n`minimal-relay-chains`\n([#376](https://github.com/paritytech/litep2p/pull/376))\n- identify: Improve identify message decoding\n([#379](https://github.com/paritytech/litep2p/pull/379))\n- crypto/noise: Set timeout limits for the noise handshake\n([#373](https://github.com/paritytech/litep2p/pull/373))\n- kad: Improve robustness of addresses from the routing table\n([#369](https://github.com/paritytech/litep2p/pull/369))\n- kad: Bound kademlia messages to the replication factor\n([#371](https://github.com/paritytech/litep2p/pull/371))\n- codec: Decode smaller payloads for identity to None\n([#362](https://github.com/paritytech/litep2p/pull/362))\n\n### Added\n\n- bitswap: Add write timeout for sending frames\n([#361](https://github.com/paritytech/litep2p/pull/361))\n- notif/tests: check test state\n([#360](https://github.com/paritytech/litep2p/pull/360))\n- SRLabs: Introduce simple fuzzing harness\n([#367](https://github.com/paritytech/litep2p/pull/367))\n- SRLabs: Introduce Fuzzing Harness\n([#365](https://github.com/paritytech/litep2p/pull/365))\n\n### Changed\n\n- features: Move quic related dependencies under feature flag\n([#359](https://github.com/paritytech/litep2p/pull/359))\n- tests/substrate: Remove outdated substrate specific conformace testing\n([#370](https://github.com/paritytech/litep2p/pull/370))\n- ci: Update stable dependencies\n([#375](https://github.com/paritytech/litep2p/pull/375))\n- build(deps): bump hex-literal from 0.4.1 to 1.0.0\n([#381](https://github.com/paritytech/litep2p/pull/381))\n- build(deps): bump tokio from 1.44.1 to 1.44.2 in /fuzz/structure-aware\n([#378](https://github.com/paritytech/litep2p/pull/378))\n- build(deps): bump Swatinem/rust-cache from 2.7.7 to 2.7.8\n([#363](https://github.com/paritytech/litep2p/pull/363))\n- build(deps): bump tokio from 1.43.0 to 1.43.1\n([#368](https://github.com/paritytech/litep2p/pull/368))\n- build(deps): bump openssl from 0.10.70 to 0.10.72\n([#366](https://github.com/paritytech/litep2p/pull/366))\n\n---------\n\nSigned-off-by: Alexandru Vasile <alexandru.vasile@parity.io>\nCo-authored-by: Dmitry Markin <dmitry@markin.tech>",
          "timestamp": "2025-05-01T09:44:22Z",
          "tree_id": "3dd45fb88c52f648592907b2962ad9eb03658ace",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/9869517b4dc851469e6d854a263f82ff32133524"
        },
        "date": 1746097365700,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18152321,
            "range": "± 117349",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18455556,
            "range": "± 200192",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19808329,
            "range": "± 137930",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24027138,
            "range": "± 259015",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57850526,
            "range": "± 430478",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 374688749,
            "range": "± 7486903",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2676685865,
            "range": "± 100694060",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15289255,
            "range": "± 201647",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15422932,
            "range": "± 100268",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16124154,
            "range": "± 161430",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20592367,
            "range": "± 114431",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52040282,
            "range": "± 935659",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 316135825,
            "range": "± 6581202",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2464830029,
            "range": "± 14236086",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "5588131+kianenigma@users.noreply.github.com",
            "name": "Kian Paimani",
            "username": "kianenigma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "03f3c2991d1175913bf9d66e0e5b54e543a34ca4",
          "message": "fix westend's election currency to vote conversion (#8307)\n\nWithin the staking elections, while the balance is `u128`, we want to\ndownscale all of them to `u64` for further calculations (e.g. within ).\nFor this, we divide total issuance by u64::max, and downscale everyone\nby that. This is what `u128CurrencyToVote` is doing, which is fed to\n`pallet-staking` as `type CurrencyToVote`.\n\natm, the `wnd` total issuance is around 100 times more than `u64::MAX`,\nso all stakes in the election process get downscaled by a 100. Note that\nthis downscaled version is also used in `voter-list`, which is why we\nsee (reported by Nova) that a nominator with 100 WND is in the\n`voter-list` bag associated with `1 WND`.\n\nThe fix proposed here is also a sane way to fix this: even if the total\nissuance is more than u64::max, the likelihood of a single staker's\nstake being more than u64::max is super low. And if it is, so be it.\nThis would mean that whatever stake they have above u64::max cannot be\nused in the staking election process and would remain unused.\n\nBeyond changing westend, this PR will add a check to the `try-state` of\nboth `pallet-staking` and `pallet-staking-async` to warn us about this.\n\nLong term fix: https://github.com/paritytech/polkadot-sdk/issues/406\n\n---------\n\nCo-authored-by: Ankan <10196091+Ank4n@users.noreply.github.com>",
          "timestamp": "2025-05-01T11:03:41Z",
          "tree_id": "8e7a6eb9c3665c913fa355bc97db9f2e44e52a74",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/03f3c2991d1175913bf9d66e0e5b54e543a34ca4"
        },
        "date": 1746101499059,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17883825,
            "range": "± 105315",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18256779,
            "range": "± 427521",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19653064,
            "range": "± 272481",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23846748,
            "range": "± 338310",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56569298,
            "range": "± 944545",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 355145982,
            "range": "± 4544699",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2575033705,
            "range": "± 74856176",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15158370,
            "range": "± 396345",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15565377,
            "range": "± 262471",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15889145,
            "range": "± 181406",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20045007,
            "range": "± 146862",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51613107,
            "range": "± 478569",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 309058914,
            "range": "± 5971992",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2408333790,
            "range": "± 22807636",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "5588131+kianenigma@users.noreply.github.com",
            "name": "Kian Paimani",
            "username": "kianenigma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fc9addabf310dc86f8e6752a131748a85af7a685",
          "message": "[AHM] add election-provider-multi-block::minimum-score to genesis config (#8339)\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Ankan <10196091+Ank4n@users.noreply.github.com>",
          "timestamp": "2025-05-01T20:56:43Z",
          "tree_id": "f9bae5fdf065fa41a05ca64e7223a62e41f4e2a6",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/fc9addabf310dc86f8e6752a131748a85af7a685"
        },
        "date": 1746135828428,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18466512,
            "range": "± 133157",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18611612,
            "range": "± 129633",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20200434,
            "range": "± 132678",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24369002,
            "range": "± 285074",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57243690,
            "range": "± 692462",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 355285215,
            "range": "± 12983228",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2594785002,
            "range": "± 197189394",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15552821,
            "range": "± 231318",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15327909,
            "range": "± 175038",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16178578,
            "range": "± 170349",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20710605,
            "range": "± 269458",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54568274,
            "range": "± 2685315",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 316759987,
            "range": "± 4672796",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2565245759,
            "range": "± 37932041",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "5588131+kianenigma@users.noreply.github.com",
            "name": "Kian Paimani",
            "username": "kianenigma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e7ca25fe2b29434a62df8f493a7b4f63f6bc71c7",
          "message": "add staking/election related view functions (#8337)\n\nAdds two self-explanatory view functions to staking/election related\npallets. To be used by wallets wishing to perform rebag operation, and\nuse by staking miner(s) to know how much deposit they need in advance.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Ankan <10196091+Ank4n@users.noreply.github.com>\nCo-authored-by: Giuseppe Re <giuseppe.re@parity.io>",
          "timestamp": "2025-05-02T10:37:44Z",
          "tree_id": "ca37acdb45eb604a7003d320a317db2f993f6150",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e7ca25fe2b29434a62df8f493a7b4f63f6bc71c7"
        },
        "date": 1746186038524,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19064530,
            "range": "± 152137",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19402184,
            "range": "± 189649",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21143013,
            "range": "± 170776",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25327128,
            "range": "± 160880",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59892731,
            "range": "± 1367712",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 393152086,
            "range": "± 8066675",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2485924658,
            "range": "± 134163184",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15664634,
            "range": "± 76916",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15787772,
            "range": "± 131924",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16519493,
            "range": "± 199958",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21010473,
            "range": "± 238986",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53226000,
            "range": "± 1028247",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 333846906,
            "range": "± 3976344",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2597929972,
            "range": "± 47512512",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41779041+alvicsam@users.noreply.github.com",
            "name": "Alexander Samusev",
            "username": "alvicsam"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "98cefb870b0fe6dbc7fa6d02ffefd1268ff2a5b7",
          "message": "[cmd-bot] Move cmd output to artifacts  (#8407)\n\nPR removes some output for cmd-bot and moves it into artifacts.\n\ncc https://github.com/paritytech/polkadot-sdk/issues/8195",
          "timestamp": "2025-05-02T12:21:10Z",
          "tree_id": "8e9b6c4331838b5697bf8a93b185eb09f55f2f5f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/98cefb870b0fe6dbc7fa6d02ffefd1268ff2a5b7"
        },
        "date": 1746191810017,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17342457,
            "range": "± 110830",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17663670,
            "range": "± 109275",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18933473,
            "range": "± 120505",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23010573,
            "range": "± 135953",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51524484,
            "range": "± 1031544",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 311235011,
            "range": "± 1837318",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2448471737,
            "range": "± 45511332",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14506446,
            "range": "± 112059",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14632871,
            "range": "± 134306",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15283509,
            "range": "± 226446",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19288349,
            "range": "± 222632",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49266143,
            "range": "± 386409",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 286528269,
            "range": "± 3154361",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2330328779,
            "range": "± 10263533",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ndk@parity.io",
            "name": "Andrii",
            "username": "x3c41a"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e85f0ad7d49e25eb3f641481cd40042b8ff9d204",
          "message": "Remove TakeFirstAssetTrader from AH Westend and Rococo (#8376)\n\n## Description\n\nRemoved `TakeFirstAssetTrader` from Asset Hub Westend and Rococo.\nImproved macros, fixed tests.\n\nThis implies asset sufficiency no longer guarantees that weight can also\nbe bought with it. `SwapFirstAssetTrader` is used instead which will\nattempt to swap some of the given asset for the required amount of\nnative asset to buy weight. This may or may not succeed depending on\nwhether there is a local pool present with enough liquidity to serve the\nswap.\n\n## Review notes\n\nAdditionally parametrised macro and fixed Westend test: weight swapping\nwas failing at [this\nline](https://github.com/paritytech/polkadot-sdk/blob/44ae6a8bebd23a8ffac02d71c6e74ee889c3ab00/substrate/frame/asset-conversion/src/lib.rs#L903)\nwith around 100x difference thus had to modify the macro.\n\nFixes #8233\n\n---------\n\nCo-authored-by: Adrian Catangiu <adrian@parity.io>",
          "timestamp": "2025-05-02T17:08:43Z",
          "tree_id": "e58778ad894b25476c0bb71e86f408abf3e1309c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e85f0ad7d49e25eb3f641481cd40042b8ff9d204"
        },
        "date": 1746208435024,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18739853,
            "range": "± 501140",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18448357,
            "range": "± 154303",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20494608,
            "range": "± 296058",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24559238,
            "range": "± 240718",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55277231,
            "range": "± 692454",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 356572326,
            "range": "± 5422606",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2597253019,
            "range": "± 80077169",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14910099,
            "range": "± 288485",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14971465,
            "range": "± 124882",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15558873,
            "range": "± 106521",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19548473,
            "range": "± 141646",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49977674,
            "range": "± 600613",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 294896260,
            "range": "± 5275927",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2373225995,
            "range": "± 14047517",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "gui.thiolliere@gmail.com",
            "name": "Guillaume Thiolliere",
            "username": "gui1117"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "db5ee7daaf34566263a91819f0db731bb8a2b273",
          "message": "Add methods in the statement store RPCs to get the statements and not just the statement data. (#8314)\n\nSome statement contain a proof with the signature of the statement, this\nproof is useful to assert that the statement comes from the expected\naccount.\n\nAlternatively we can always add some signature inside the encrypted\ndata, but this means we sign 2 times and it isn't necessary in some\ncases.\n\nWhat do you think @arkpar ?\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-05T03:57:03Z",
          "tree_id": "5a257091a319bc843e49e03757ad2e8137830c59",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/db5ee7daaf34566263a91819f0db731bb8a2b273"
        },
        "date": 1746420212208,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19186148,
            "range": "± 207843",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19419410,
            "range": "± 190475",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20898935,
            "range": "± 248283",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25154102,
            "range": "± 290843",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56572204,
            "range": "± 601930",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 350101192,
            "range": "± 3716000",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2418664402,
            "range": "± 19315796",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15652423,
            "range": "± 112559",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15813532,
            "range": "± 408770",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16631324,
            "range": "± 165508",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20893502,
            "range": "± 243114",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53651641,
            "range": "± 640809",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 323173687,
            "range": "± 6955481",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2461119571,
            "range": "± 11873589",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "gui.thiolliere@gmail.com",
            "name": "Guillaume Thiolliere",
            "username": "gui1117"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "26ab4113a141dc00fcf3956f1838fbc7784ebe1e",
          "message": "[Tx ext stage 2: 2/4] Introduce `#[pallet::authorize(...)]` macro attribute and `AuthorizeCall` system transaction extension (#6324)\n\n## Meta \n\nThis PR is part of 4 PR:\n* https://github.com/paritytech/polkadot-sdk/pull/6323\n* https://github.com/paritytech/polkadot-sdk/pull/6324\n* https://github.com/paritytech/polkadot-sdk/pull/6325\n* https://github.com/paritytech/polkadot-sdk/pull/6326\n\n## Description\n\n* new attribute `#[pallet::authorize(..)]`, this attributes takes a\nfunction which returns the validity of the call.\n* new attribute `#[pallet::weight_of_authorize(..)]`, same as\n`#[pallet::weight(..)]` defines the pre dispatch weight of the\n`authorize` function. It can also be retrieved from `WeightInfo` under\nthe name: `authorize_$call_name`.\n* new trait `Authorize` in frame-support: implemented on the call for\npallets and runtime, and used by `AuthorizeCall` transaction extension\nin frame-system.\n* new origin variant in frame origin: `Origin::Authorized`: a bit\nsimilar to `Unsigned` but used for general transactions.\n* new transaction extension: `AuthorizeCall` in frame system. This is\nmeant to be used first in the transaction extension pipeline. It will\ncall the authorize function and change the origin to authorized\n* new method: `ensure_authorized`.\n\n## Usage\n\n```rust\n# #[allow(unused)]\n#[frame_support::pallet]\npub mod pallet {\n    use frame_support::pallet_prelude::*;\n    use frame_system::pallet_prelude::*;\n                                                                                   \n    #[pallet::pallet]\n    pub struct Pallet<T>(_);\n                                                                                   \n    #[pallet::config]\n    pub trait Config: frame_system::Config {}\n                                                                                   \n    #[pallet::call]\n    impl<T: Config> Pallet<T> {\n        #[pallet::weight(Weight::zero())]\n        #[pallet::authorize(|_source, foo| if *foo == 42 {\n            let refund = Weight::zero();\n            let validity = ValidTransaction::default();\n            Ok((validity, refund))\n        } else {\n            Err(TransactionValidityError::Invalid(InvalidTransaction::Call))\n        })]\n        #[pallet::weight_of_authorize(Weight::zero())]\n        #[pallet::call_index(0)]\n        pub fn some_call(origin: OriginFor<T>, arg: u32) -> DispatchResult {\n            ensure_authorized(origin)?;\n                                                                                   \n            Ok(())\n        }\n                                                                                   \n        #[pallet::weight(Weight::zero())]\n        // We can also give the callback as a function\n        #[pallet::authorize(Pallet::<T>::authorize_some_other_call)]\n        #[pallet::weight_of_authorize(Weight::zero())]\n        #[pallet::call_index(1)]\n        pub fn some_other_call(origin: OriginFor<T>, arg: u32) -> DispatchResult {\n            ensure_authorized(origin)?;\n                                                                                   \n            Ok(())\n        }\n    }\n                                                                                   \n    impl<T: Config> Pallet<T> {\n        fn authorize_some_other_call(\n            source: TransactionSource,\n            foo: &u32\n        ) -> TransactionValidityWithRefund {\n            if *foo == 42 {\n                let refund = Weight::zero();\n                let validity = ValidTransaction::default();\n                Ok((validity, refund))\n            } else {\n                Err(TransactionValidityError::Invalid(InvalidTransaction::Call))\n            }\n        }\n    }\n                                                                                   \n    #[frame_benchmarking::v2::benchmarks]\n    mod benchmarks {\n        use super::*;\n        use frame_benchmarking::v2::BenchmarkError;\n                                                                                   \n        #[benchmark]\n        fn authorize_some_call() -> Result<(), BenchmarkError> {\n            let call = Call::<T>::some_call { arg: 42 };\n                                                                                   \n            #[block]\n            {\n                use frame_support::pallet_prelude::Authorize;\n                call.authorize(TransactionSource::External)\n                    .ok_or(\"Call must give some authorization\")??;\n            }\n                                                                                   \n            Ok(())\n        }\n    }\n}\n```\n\n---------\n\nCo-authored-by: GitHub Action <action@github.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-06T01:09:15Z",
          "tree_id": "8cc68edbc8c7001f45e148a3aec17f34a310ed62",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/26ab4113a141dc00fcf3956f1838fbc7784ebe1e"
        },
        "date": 1746497628246,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18184086,
            "range": "± 227577",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18493053,
            "range": "± 264593",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19873342,
            "range": "± 250274",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24423770,
            "range": "± 218355",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56641372,
            "range": "± 626763",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 338881155,
            "range": "± 5922596",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2441889675,
            "range": "± 55119810",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15397239,
            "range": "± 144627",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15502244,
            "range": "± 152091",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16340551,
            "range": "± 131857",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20568705,
            "range": "± 287215",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51108823,
            "range": "± 1299394",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 296377837,
            "range": "± 5014616",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2374405796,
            "range": "± 20695316",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "dev@shiposha.com",
            "name": "Daniel Shiposha",
            "username": "mrshiposha"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5802306a39a5845f2b1e566355f2ce8344c7c7b1",
          "message": "XcmPaymentApi::query_weight_to_asset_fee simple common impl (#8281)\n\n# Description\n\nAdd a common implementation for\n`XcmPaymentApi::query_weight_to_asset_fee` to `pallet-xcm`.\n\nThis PR is a simple alternative to #8202 (which could still be useful\nfor other reasons).\nIt uses a workaround instead of a big refactoring.\n\nThe workaround is:\nComputes the weight cost using the provided `WeightTrader`.\nThis function is supposed to be used ONLY in\n`XcmPaymentApi::query_weight_to_asset_fee`\nRuntime API implementation, as it can introduce a massive change to the\ntotal issuance.\nThe provided `WeightTrader` must be the same as the one used in the\nXcmExecutor to ensure\nuniformity in the weight cost calculation.\n\nNOTE: Currently this function uses a workaround that should be good\nenough for all practical\nuses: passes `u128::MAX / 2 == 2^127` of the specified asset to the\n`WeightTrader` as\npayment and computes the weight cost as the difference between this and\nthe unspent amount.\nSome weight traders could add the provided payment to some account's\nbalance. However,\nit should practically never result in overflow because even currencies\nwith a lot of decimal digits\n(say 18) usually have the total issuance of billions (`x * 10^9`) or\ntrillions (`x * 10^12`) at max,\nmuch less than `2^127 / 10^18 =~ 1.7 * 10^20` (170 billion billion).\nThus, any account's balance\nmost likely holds less than `2^127`, so adding `2^127` won't result in\n`u128` overflow.\n\n\n## Integration\n\nThe Runtime builders can use the `query_weight_to_asset_fee` provided by\n`pallet-xcm` in\ntheir XcmPaymentApi implementation.\n\n---------\n\nCo-authored-by: Adrian Catangiu <adrian@parity.io>",
          "timestamp": "2025-05-06T10:26:49Z",
          "tree_id": "ddb81f91f910c3fc75f153b85684d2bdf077624a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/5802306a39a5845f2b1e566355f2ce8344c7c7b1"
        },
        "date": 1746530046806,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18357738,
            "range": "± 167376",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18124213,
            "range": "± 185467",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19618549,
            "range": "± 222166",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23690314,
            "range": "± 233852",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53076704,
            "range": "± 941686",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 332645209,
            "range": "± 7986093",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2428504197,
            "range": "± 181135932",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14661746,
            "range": "± 112060",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14649195,
            "range": "± 342406",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15531231,
            "range": "± 114225",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19415217,
            "range": "± 131813",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50262097,
            "range": "± 420194",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 295502316,
            "range": "± 4688785",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2383000331,
            "range": "± 33929505",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "dmitry@markin.tech",
            "name": "Dmitry Markin",
            "username": "dmitry-markin"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f2835be96a89f6ba684b657be931fc52a946d0ad",
          "message": "DHT bootnodes: get randomness from the next epoch descriptor (#8405)\n\nUse runtime calls to get epoch randomness only on startup, and later get\nit from the next epoch descriptor at the first block of every epoch.\n\nResolves https://github.com/paritytech/polkadot-sdk/issues/8377.\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-05-06T13:14:19Z",
          "tree_id": "3ea65529d8b93a560833644f1889e7fa7d8814ea",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f2835be96a89f6ba684b657be931fc52a946d0ad"
        },
        "date": 1746540956249,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17064262,
            "range": "± 98510",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17880897,
            "range": "± 301432",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18585212,
            "range": "± 91299",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 22631438,
            "range": "± 159099",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 50254418,
            "range": "± 734627",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 298037759,
            "range": "± 1634381",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2175967737,
            "range": "± 109875010",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14312028,
            "range": "± 102541",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15250150,
            "range": "± 776331",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16757091,
            "range": "± 377709",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18583165,
            "range": "± 927224",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 47831967,
            "range": "± 262517",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 278413055,
            "range": "± 2658924",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2182281110,
            "range": "± 32726663",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ludovic.domingues96@gmail.com",
            "name": "Ludovic Domingues",
            "username": "Krayt78"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ea61b4afbe850d6cfa406b53ab04397301dc3b4d",
          "message": "Migrate pallet-paged-list to umbrella crate (#6931)\n\nPart of #6504\n\n---------\n\nCo-authored-by: Kian Paimani <5588131+kianenigma@users.noreply.github.com>\nCo-authored-by: Guillaume Thiolliere <guillaume.thiolliere@parity.io>\nCo-authored-by: Giuseppe Re <giuseppe.re@parity.io>",
          "timestamp": "2025-05-06T15:06:41Z",
          "tree_id": "aaab2198e2cadab0d22051a17501993f01d7ff6b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ea61b4afbe850d6cfa406b53ab04397301dc3b4d"
        },
        "date": 1746547082495,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17659333,
            "range": "± 266444",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17846341,
            "range": "± 131679",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19351290,
            "range": "± 160526",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23301488,
            "range": "± 235403",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53918215,
            "range": "± 388770",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 330223033,
            "range": "± 4196452",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2473470234,
            "range": "± 24755410",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14628270,
            "range": "± 152561",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14797291,
            "range": "± 107187",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15537365,
            "range": "± 204543",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19575756,
            "range": "± 186151",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50100263,
            "range": "± 441644",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 294219556,
            "range": "± 3368778",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2370784465,
            "range": "± 42910555",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "james@jsdw.me",
            "name": "James Wilson",
            "username": "jsdw"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f8c0f09e2981049093ddc4a93f45b20278d44c79",
          "message": "Add all touched crates in #8327 to prdoc to fix release issue (#8441)\n\nThe prdoc from #8327 did not reference all crates that were touched. I\nadded them here.",
          "timestamp": "2025-05-06T15:42:13Z",
          "tree_id": "4d37db5e1fa86ff87d6548811f4c90ef72574105",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f8c0f09e2981049093ddc4a93f45b20278d44c79"
        },
        "date": 1746551162347,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17761575,
            "range": "± 139973",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17890598,
            "range": "± 117910",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19141405,
            "range": "± 106431",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23060984,
            "range": "± 238475",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51020341,
            "range": "± 487245",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 300112642,
            "range": "± 1308598",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2290463660,
            "range": "± 75804440",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14784742,
            "range": "± 137627",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14805709,
            "range": "± 57626",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15390059,
            "range": "± 165620",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 18935225,
            "range": "± 163398",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 48927628,
            "range": "± 420778",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 283863280,
            "range": "± 8600175",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2321555724,
            "range": "± 20747180",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ludovic.domingues96@gmail.com",
            "name": "Ludovic Domingues",
            "username": "Krayt78"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "bee448b580f3de140cf591c899999f09dde33f2c",
          "message": "Migrate pallet safe mode to umbrella crate (#6905)\n\nPart of #6504",
          "timestamp": "2025-05-07T12:58:52Z",
          "tree_id": "6d9e1b3952bdb8357433d9ac453811607c913005",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/bee448b580f3de140cf591c899999f09dde33f2c"
        },
        "date": 1746626877404,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18328300,
            "range": "± 163198",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18864556,
            "range": "± 249862",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20777521,
            "range": "± 339754",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23793680,
            "range": "± 240519",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57095936,
            "range": "± 1074179",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 343875131,
            "range": "± 4018295",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2793578681,
            "range": "± 36892297",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15431381,
            "range": "± 608252",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15631629,
            "range": "± 249237",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16135562,
            "range": "± 167299",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20767802,
            "range": "± 171342",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54156018,
            "range": "± 844804",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 308588804,
            "range": "± 5663295",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2459146540,
            "range": "± 37192863",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "10196091+Ank4n@users.noreply.github.com",
            "name": "Ankan",
            "username": "Ank4n"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5b8b5aa0bd6e21f2addd8a28fab92392575b41e2",
          "message": "[StakingAsync] Remove SlashingSpan Logic (#8316)\n\nalso closes https://github.com/paritytech/polkadot-sdk/issues/2650\n\n## Summary\n\nThis PR removes the concept of slashing spans (`SlashingSpans`,\n`SpanSlash`) and all related metadata from `pallet-staking-async`.\n\nWhile working on this, I noticed some issues with the current span\nlogic:\n- Spans were always starting and ending during the processing of an\noffence, meaning they never actually spanned across multiple eras\n(likely due to changes in logic over time).\n- We don’t chill validators either, so the core reason for slashing span\nisn't exercised.\n\nBecause of these factors, slashing spans were not serving their intended\npurpose. Removing them simplifies the slashing logic significantly and\nallows us to drop a good chunk of unnecessary code.\n\n## API Changes (pallet-staking-async)\n### Removed\n- StorageMap SlashingSpans\n- StorageMap SpanSlash.\n- Error IncorrectSlashingSpans.\n\n### Deprecated\nFor the following extrinsic, the parameter `num_slashing_spans` is\ndeprecated and has no effect. It is left for backward compatibility.\n- withdraw_unbonded\n- force_unstake\n- reap_stash\n\n\n## Functional Changes:\nThe key functional change is around slashing rewards:\n\nPreviously:\n- The reward was 50% of 10% (`SlashRewardFraction`) of the slashed\namount.\n- For each successive slash in the same era, the reward would halve\nagain (e.g., 50%, then 25%, then 12.5%, etc.).\n\nWith this PR:\n- Successive offences are still filtered to only keep the highest slash\nper validator/nominator per era.\n- Halving the reward on successive offences is removed.\n- My take: this seems reasonable, since we already filter out weaker\noffences.\n- However, if we want to preserve this behaviour, we could still add a\ncounter of slashes per validator/nominator per era to implement the\nhalving logic.\n\n## TODO\n- [x] Race condition of offence test: Second offence comes before first\nis applied : This is doing this already `offence_discarded_correctly`.\n- [x] Preserve extrinsic signatures.\n\n---------\n\nCo-authored-by: Tsvetomir Dimitrov <tsvetomir@parity.io>",
          "timestamp": "2025-05-08T10:14:53Z",
          "tree_id": "fad4424da71cef7409c75274bbb6d16dd5776b18",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/5b8b5aa0bd6e21f2addd8a28fab92392575b41e2"
        },
        "date": 1746702315301,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 20426343,
            "range": "± 858581",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 21132230,
            "range": "± 568732",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 24388130,
            "range": "± 2438291",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 28977796,
            "range": "± 1285700",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 66927050,
            "range": "± 1775254",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 390997023,
            "range": "± 9698715",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2740409335,
            "range": "± 127441496",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17040499,
            "range": "± 155670",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17228995,
            "range": "± 318514",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18369310,
            "range": "± 423109",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23820934,
            "range": "± 742418",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 62444062,
            "range": "± 1736625",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 370986686,
            "range": "± 6297005",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2814043813,
            "range": "± 44578317",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "egor@parity.io",
            "name": "Egor_P",
            "username": "EgorPopelyaev"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "4b83d24f4bc96a7b17964be94b178dd7b8f873b5",
          "message": "[Backport] Version bumps and prdocs reordering from the stable2503-2 release (#8469)\n\nThis PR backports regular version bumps and prdocs reordering from the\nstable2503 branch back to master",
          "timestamp": "2025-05-08T15:33:25Z",
          "tree_id": "c1d258b34e96a0d3974cf2c2796cc41b57ea6a58",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4b83d24f4bc96a7b17964be94b178dd7b8f873b5"
        },
        "date": 1746722984192,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19236207,
            "range": "± 129051",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19599913,
            "range": "± 204261",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21565971,
            "range": "± 287701",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25475067,
            "range": "± 237540",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56229346,
            "range": "± 985943",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 343630157,
            "range": "± 11268642",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2464942481,
            "range": "± 82924871",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15156063,
            "range": "± 148426",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15366743,
            "range": "± 151178",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16138757,
            "range": "± 466523",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20186025,
            "range": "± 134879",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51510418,
            "range": "± 584165",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 310318557,
            "range": "± 7083947",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2453716916,
            "range": "± 28616087",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "egor@parity.io",
            "name": "Egor_P",
            "username": "EgorPopelyaev"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f73c228b7a1a4a6b7d80ae7917a61df62f2359b8",
          "message": "[Release] Scripts to align stable branch with CI checks after the crates releases (#8468)\n\nThis PR adds few scripts to revert changes done by `parity-publish` tool\nduring the crates release to align the state of the stable branches with\nthe CI checks running in\n[checks-quick.yml](https://github.com/paritytech/polkadot-sdk/blob/master/.github/workflows/checks-quick.yml)\nflow. Scripts are doing following changes:\n- replace path deps with `workspace = true`\n- delete versions from the root Cargo.toml\n- delete versions from umbrella/Cargo.toml",
          "timestamp": "2025-05-09T11:37:34Z",
          "tree_id": "c4c976fef30a2d6d998b5d83ec63200e90abd9eb",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f73c228b7a1a4a6b7d80ae7917a61df62f2359b8"
        },
        "date": 1746793726910,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19019433,
            "range": "± 193648",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19115890,
            "range": "± 130700",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20901265,
            "range": "± 230141",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25156456,
            "range": "± 272380",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 60358236,
            "range": "± 1787974",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 406931030,
            "range": "± 8536327",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2533037481,
            "range": "± 157691206",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16351679,
            "range": "± 444353",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 18434668,
            "range": "± 478089",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18714350,
            "range": "± 818306",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 24666539,
            "range": "± 496922",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 76367307,
            "range": "± 2790241",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 404090213,
            "range": "± 21576423",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2996777856,
            "range": "± 207981588",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "117115317+lrubasze@users.noreply.github.com",
            "name": "Lukasz Rubaszewski",
            "username": "lrubasze"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f331a447ca698b3f14389f7e4a2f912152d7544c",
          "message": "Align `zombienet-sdk`-based tests with breaking change (#8442)\n\nThis PR updates the tests so they are compatible with latest changes in\n`zombienet-sdk`.\n\n# Description\n\nTests that use `wait_log_line_count_with_timeout()` method have been\nupdated accordingly to the new signature of the method.\nDetails in https://github.com/paritytech/zombienet-sdk/pull/333\n\nAdditionally:\n- bumped `zombienet-sdk` to `v0.3.0`\n- Set `RUN_IN_CI=1` flag for `zombienet-sdk` tests",
          "timestamp": "2025-05-12T09:22:28Z",
          "tree_id": "39b13c9701634b4c4ac9a55e48b32a1316879640",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f331a447ca698b3f14389f7e4a2f912152d7544c"
        },
        "date": 1747044473517,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18970065,
            "range": "± 139572",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19252978,
            "range": "± 145120",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20656153,
            "range": "± 211533",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24298277,
            "range": "± 268922",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55521091,
            "range": "± 1114683",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 319082971,
            "range": "± 6400977",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2346466627,
            "range": "± 150426712",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15266188,
            "range": "± 84191",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15524467,
            "range": "± 189770",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16104089,
            "range": "± 440675",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20599633,
            "range": "± 476129",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52413061,
            "range": "± 432493",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 314782863,
            "range": "± 4680011",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2435909478,
            "range": "± 23990562",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "14218860+iulianbarbu@users.noreply.github.com",
            "name": "Iulian Barbu",
            "username": "iulianbarbu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e453db03522be0905e4e73e5f6c05eaf5a02f4a1",
          "message": "`fatxpool`: optimize txs prunning based on inactive views provides tags  (#7980)\n\n# Description\n\nIterate through the tree route block hashes, get their inactive views in\nthe view store, and considering the list of all txs on the enacted fork,\nget their provides tags if found in the inactive views, and use them\nwhen prunning txs from the enacted fork tip's active view based on tags,\nif needed in case the txs tags can not be found in the active view,\ninstead of revalidating the txs to get their 'provides' tag.\n\nCloses #7399 \n\n## Integration\n\nN/A\n\n## Review Notes\n\nThe data below corresponds to a test where we send 50k ready & 50k\nfuture txs to a single validator in a two validators relaychain network.\nIt can be seen that the optimized version performs better: doing only 2\nrevalidations with each prune invocation, even when forking. The\noverhead for computing the map of txs -> provides tags when the map has\nmaximum length is in the order of 2 ms. Down the line the complexity of\ncomputing the map is around enacted + retracted forks lengths * txs per\nblock. The assumption is that the overhead is still negligible when\ncompared to the revalidation (which we can't tell really for how many\ntxs can be done, I think).\n\nRevalidations for the unoptimized versions happen when forking\n(active_views >1), while optimized version is kept close to zero in\nterms of revalidations even when forking The optimized chart contains\nalso the number of unknown txs (usually revalidated in unoptimized\ncontext), and how many txs are reused in terms of existing provides tags\n(in comparison to the unknown txs count). The data points for the\nunknown and reused overlap in all cases, meaning the optimization is at\nwork when forking happens.\n\n1. With optimizations:\n\n![alice](https://github.com/user-attachments/assets/d13d2c5c-070b-4484-85e3-fa135204773b)\n\n3. Without:\n\n![alice](https://github.com/user-attachments/assets/a049f91c-9ef9-4779-8909-3205135b0993)\n\n**NOTE:**\nI stopped the investigation of how to pick which inactive views to\nsearch for the txs provides tags (currently iterating through enacted +\nretracted + common block - tip of enacted - tip of retracted), since tbh\nI don't have a good idea for how to investigate it. Hence, while\nthinking about a good way to optimize even more, I feel that the\nendeavor would bring diminishing returns - since the optimization works\nwell enough already for the synthetic tests, reducing the revalidations\ncount, and implicitly `prune` duration, which in the end can reduce\n`maintain` duration.\n\n---------\n\nSigned-off-by: Iulian Barbu <iulian.barbu@parity.io>\nCo-authored-by: Michal Kucharczyk <1728078+michalkucharczyk@users.noreply.github.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Sebastian Kunert <mail@skunert.dev>",
          "timestamp": "2025-05-12T14:40:39Z",
          "tree_id": "2ee202f61e5107e75b7a9b78d820241465a108ff",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e453db03522be0905e4e73e5f6c05eaf5a02f4a1"
        },
        "date": 1747063877464,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18981415,
            "range": "± 169475",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19151422,
            "range": "± 146889",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20594738,
            "range": "± 177023",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24706411,
            "range": "± 288927",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 58040615,
            "range": "± 782186",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 358370528,
            "range": "± 3991104",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2513679529,
            "range": "± 136863732",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15572646,
            "range": "± 116714",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15693930,
            "range": "± 100666",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16295807,
            "range": "± 87898",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20756436,
            "range": "± 318272",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52578335,
            "range": "± 898586",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 326639943,
            "range": "± 4583819",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2469479992,
            "range": "± 19624026",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "60601340+lexnv@users.noreply.github.com",
            "name": "Alexandru Vasile",
            "username": "lexnv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1849b3563d4ad1884bbfd5ee92b3daf87f50e8fb",
          "message": "cumulus/fix: Allow block-announce to exist in the background of minimal relay chains (#8514)\n\nThis PR fixes an issue with the collators that would not get advertised.\n\nThe issue relates to the `/block-announces/1` protocol for the litep2p\nnetwork backends.\nPreviously, the notification service handle was dropped, causing the\nlitep2p backend to terminate the long-running task that handled the\n`/block-announces/1` protocol. This represents a subtle difference\nbetween libp2p and litep2p, where libp2p would continue to operate the\nprotocol under the hood even without the respective handle:\n\n```\n// Logs extracted from the libp2p node showing that \nsub-libp2p::notification::service: [Relaychain] /b0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe/block-announces/1: notification received from PeerId(\"12D3KooWBjWQRpVLUWMUuDVcYEDokuReQHMxqMJrrHjwTve2CGhG\")\n```\n\nThe downstream effect of stopping the notification protocol is that full\nnodes that attempt to negotiate the protocol would disconnect and ban\nminimal relay chain nodes that do not handle the process. This cascades\ninto the ability of the collators to advertise blocks:\n\n```\n[Parachain] Authority Discovery couldn't resolve Public(70c2e207db27de34e4aff1dcf370419e575e7712bda507b9ca8e3bd1ddf8bf6e (5EcZ7UwY...))\n\nparachain::validator-discovery: [Parachain] New ConnectToValidators request peer_set=Collation requested=5 failed_to_resolve=5\n```\n## Testing Done\n\nThe CPU is still reduced from 7.5% to 1.87%:\n![Screenshot 2025-05-13 at 18 30\n37](https://github.com/user-attachments/assets/2d75fad9-71a2-4806-91c7-ac17aad2f77b)\n\nThanks to @paulormart for confirming the fix 🙏 \n\nCloses: https://github.com/paritytech/polkadot-sdk/issues/8474\n\n---------\n\nSigned-off-by: Alexandru Vasile <alexandru.vasile@parity.io>",
          "timestamp": "2025-05-13T18:08:24Z",
          "tree_id": "becd04e7e82d8fbf0eff5658d3e815047b183df9",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/1849b3563d4ad1884bbfd5ee92b3daf87f50e8fb"
        },
        "date": 1747163344456,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 23217867,
            "range": "± 1310914",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 22588614,
            "range": "± 1169454",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 25378757,
            "range": "± 588917",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 29124937,
            "range": "± 1272417",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 69354686,
            "range": "± 3842045",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 440528414,
            "range": "± 13649056",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2728513518,
            "range": "± 103474872",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 18204707,
            "range": "± 618002",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 18191318,
            "range": "± 383158",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18443887,
            "range": "± 476851",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22818527,
            "range": "± 121076",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 57918652,
            "range": "± 547725",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 341646022,
            "range": "± 5420159",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2703672606,
            "range": "± 27057753",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "write@reusable.software",
            "name": "ordian",
            "username": "ordian"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ae1785cd7454c2212bb558ddabc4496050aa7b2f",
          "message": "dispute-coordinator: populate disabled state on startup (#8503)\n\nPopulating off-chain disabled state on startup from the disputes\ndatabase makes the disputes spam handling more resilient wrt. validator\nrestarts.",
          "timestamp": "2025-05-14T06:27:21Z",
          "tree_id": "37d842fe201945df9e53acd4d664d1424b93eef1",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ae1785cd7454c2212bb558ddabc4496050aa7b2f"
        },
        "date": 1747206931795,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18923131,
            "range": "± 176175",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19231846,
            "range": "± 138103",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20653475,
            "range": "± 277485",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24460997,
            "range": "± 262052",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55417824,
            "range": "± 548088",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 319733541,
            "range": "± 7053117",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2324962059,
            "range": "± 93715730",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16081854,
            "range": "± 1080972",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16240639,
            "range": "± 105873",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16885377,
            "range": "± 91205",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21109543,
            "range": "± 105053",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53399296,
            "range": "± 363412",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 309098758,
            "range": "± 3209706",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2449404399,
            "range": "± 26541591",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c4ba6e0288a127f7f452e09e872960837aa313c0",
          "message": "statement-distribution: skip leafs where we can't fetch the state (#8510)\n\nObserved during https://github.com/paritytech/polkadot-sdk/issues/8414\non polkadot and https://github.com/paritytech/polkadot-sdk/issues/8481\non kusama, that in the presence of disputes, backing starts to lag, this\nhappens because statement-distribution tries to fetch the disabled\nvalidators for leafs that have been discarded:\n\nLogs kusama:  https://grafana.teleport.parity.io/goto/7CB8AI-Ng?orgId=1\n```\nDEBUG tokio-runtime-worker parachain::statement-distribution: error=FetchDisabledValidators(NotSupported { runtime_api_name: \"disabled_validators\" })\n```\n\nLogs from polkadot incident\nhttps://github.com/paritytech/polkadot-sdk/issues/8414#issuecomment-2855958086:\n```\n2025-05-06 16:39:36 🏆 Imported #25889143 (0x4ea4…8ee8 → 0xe88b…12ff)    \n2025-05-06 16:39:36 cannot query the runtime API version: Api called for an unknown Block: State already discarded for 0x0b157597a3703df7237ddec737da2ff8149d51c2b99245f1293b2b86fa9b4a0c api=\"disabled_validators\"\n2025-05-06 16:39:39 💤 Idle (28 peers), best: #25889143 (0xe88b…12ff), finalized #25889140 (0x34e4…298d), ⬇ 2.4MiB/s ⬆ 943.2kiB/s    \n2025-05-06 16:39:42 🏆 Imported #25889144 (0xe88b…12ff → 0x9af4…db4b)    \n2025-05-06 16:39:42 cannot query the runtime API version: Api called for an unknown Block: State already discarded for 0x0b157597a3703df7237ddec737da2ff8149d51c2b99245f1293b2b86fa9b4a0c api=\"disabled_validators\"\n2025-05-06 16:39:44 💤 Idle (28 peers), best: #25889144 (0x9af4…db4b), finalized #25889141 (0x8634…1521), ⬇ 2.2MiB/s ⬆ 816.5kiB/s    \n2025-05-06 16:39:48 🏆 Imported #25889145 (0x9af4…db4b → 0x19a6…cef3)    \n2025-05-06 16:39:48 cannot query the runtime API version: Api called for an unknown Block: State already discarded for 0x0b157597a3703df7237ddec737da2ff8149d51c2b99245f1293b2b86fa9b4a0c api=\"disabled_validators\"\n2025-05-06 16:39:49 💤 Idle (28 peers), best: #25889145 (0x19a6…cef3), finalized #25889141 (0x8634…1521), ⬇ 1.7MiB/s ⬆ 526.6kiB/s    \n2025-05-06 16:39:54 🏆 Imported #25889146 (0x19a6…cef3 → 0x4f7a…9d2c) \n```\n\n## Root-cause\n1. Relay-chain has forks something like this.\n```\nA -> B -> C -> D -> F\n| -> E\n```\n\n2. Relay-chain finalises block C.\n3. New block F is created and statement-distribution receives\nActiveLeave update for it.\n4. This logic\nhttps://github.com/paritytech/polkadot-sdk/blob/c679ed79a1de575d4c3d5b8878b3e401b024f2f2/polkadot/node/network/statement-distribution/src/v2/mod.rs#L566\nreturns all possible leafs `E` included, [because of\nthis](https://github.com/paritytech/polkadot-sdk/blob/c679ed79a1de575d4c3d5b8878b3e401b024f2f2/polkadot/node/subsystem-util/src/backing_implicit_view.rs#L272)\n5. E has been discarded and request fails here:\nhttps://github.com/paritytech/polkadot-sdk/blob/c679ed79a1de575d4c3d5b8878b3e401b024f2f2/polkadot/node/network/statement-distribution/src/v2/mod.rs#L577.\n6. At first error we bail-out so the active leafs for `E` is not\nproperly process, so no candidate will be backed that is based on `E`\n7. This continues on until a new block is finalized and `E` gets cleanup\nbecause it falls behind.\n\n## Fix\n\nThe proposed fix is to not fail hard on this type of errors and continue\nwith the processing.\n\n## ~Open questions~\n~Why does this appear only when there are a lot of disputes in the\nsystem, instead of every time there is a fork ? My theory is that\ndisputes impact somehow the order of some blocks getting discarded.~\n\nTested with a smaller cache size\nhttps://github.com/paritytech/polkadot-sdk/blob/c679ed79a1de575d4c3d5b8878b3e401b024f2f2/polkadot/node/core/runtime-api/src/cache.rs#L113,\nso the reason this works without dispute is that the\n`request_disabled_validators` is hitting the runtime-api cache, but when\nyou have a lot of disputes in the system the leafs on forks got evicted.\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: ordian <write@reusable.software>\nCo-authored-by: ordian <noreply@reusable.software>",
          "timestamp": "2025-05-14T06:49:41Z",
          "tree_id": "15421aeb98ff1d9d1b74966db85ae011647ac970",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c4ba6e0288a127f7f452e09e872960837aa313c0"
        },
        "date": 1747209174097,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18768889,
            "range": "± 155285",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19161184,
            "range": "± 154695",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20436416,
            "range": "± 193025",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24607816,
            "range": "± 280743",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 58647082,
            "range": "± 721972",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 344380286,
            "range": "± 2922883",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2678704142,
            "range": "± 148808992",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15853570,
            "range": "± 337168",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16066846,
            "range": "± 467358",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16797459,
            "range": "± 165617",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21747058,
            "range": "± 215022",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54438000,
            "range": "± 446948",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 320334494,
            "range": "± 4071948",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2614068441,
            "range": "± 67977624",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "giuseppe.re@parity.io",
            "name": "Giuseppe Re",
            "username": "re-gius"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "0488c0434301b50b49f56f877192404dbd8fdb20",
          "message": "Stabilize the FRAME umbrella crate (#8470)\n\nStabilizing the FRAME umbrella crate, which is no longer marked as\nexperimental. Improving the related documentation, including README and\nmaintenance notes.\n\nAfter integrating the FRAME umbrella crate in 17 pallets as tracked in\n#6504 and modifying it in the process, it has reached a good level of\nstability and it can be easily used for pallet development.\n\nKey improvements:\n    - Enhanced documentation with clear usage guidelines\n    - Added comprehensive maintenance notes for future contributors\n- Established clear design principles for prelude usage and module\norganization\n    - Updated documentation links to point to the official hosted docs\n\nThis closes #6504.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-14T10:21:52Z",
          "tree_id": "a4f2e7aded95f1fb9f2fe2f3791dad609bd85434",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/0488c0434301b50b49f56f877192404dbd8fdb20"
        },
        "date": 1747223352514,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 21478052,
            "range": "± 229760",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 21810925,
            "range": "± 203842",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 24176825,
            "range": "± 248567",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 29047141,
            "range": "± 551992",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 70906306,
            "range": "± 1806677",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 446394332,
            "range": "± 5831586",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 3054371133,
            "range": "± 196998046",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 18428362,
            "range": "± 254878",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 18526558,
            "range": "± 147529",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 19238675,
            "range": "± 218631",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 24761242,
            "range": "± 262912",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 63176820,
            "range": "± 1321352",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 424661259,
            "range": "± 25984376",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 3065382779,
            "range": "± 30279181",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "enntheprogrammer@gmail.com",
            "name": "sistemd",
            "username": "sistemd"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "fc3a2074df9f22995eec6eb9075dbfca39ed84ff",
          "message": "parachain informant (#8332)\n\nCloses https://github.com/paritytech/polkadot-sdk/issues/8216.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-14T12:29:01Z",
          "tree_id": "4ea33608f09e386133ca7764779a91425d0f229b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/fc3a2074df9f22995eec6eb9075dbfca39ed84ff"
        },
        "date": 1747231361826,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18759449,
            "range": "± 113134",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19042853,
            "range": "± 159845",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20553639,
            "range": "± 176654",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24591519,
            "range": "± 254324",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55267929,
            "range": "± 344901",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 309410055,
            "range": "± 6628656",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2370975797,
            "range": "± 98615034",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16242651,
            "range": "± 93981",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16253828,
            "range": "± 436724",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16936849,
            "range": "± 216749",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21205681,
            "range": "± 108343",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54334873,
            "range": "± 496505",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 317559959,
            "range": "± 1810457",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2457218316,
            "range": "± 52800230",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9991b1a804202bfa0beee1bdd7f78e0d1fd642a3",
          "message": "Make SharedTrieCache/LocalTrieCache work with entire state in memory  (#7682)\n\nPart of\nhttps://github.com/paritytech/polkadot-sdk/issues/6131#issuecomment-2640012327,\nwe need to make sure that the TrieCache is able to work with the\nassumption that more or less the entire current state fits into memory,\nthis can be split into a few parts:\n\n- [x] Remove the LocalTrieCache hard coded size and make it configurable\nfrom outside.\n- [x] Decided to have two flavours of building the LocalTrieCache, for\nthe import and block authoring we are using a trusted local cache that\ngrow to hold everything in the block and then propagated everything into\nthe shared trie cache.\n- ~[x] Everything from LocalTrieCache needs to be propagated back to the\nSharedTrieCache in a fast and safe manner, so that it doesn't become a\nbottleneck. Currently, that is done on drop, with the function holding\nthe ShareTrieCache write lock while promoting all keys. Decided to move\nthis on a separate worker thread, so that the hot-path does not have to\nwait for drop function to propagate everything from the LocalTrieCache\nto the SharedTrieCache, the flushing of the worker thread happens after\nthe block production and import happens.~ Update this is not need\nbecause authoring and imports is bounded, so the numbers is not\nexaggeratedly big, to make the drop too heavy, see numbers here\nhttps://github.com/paritytech/polkadot-sdk/pull/7682#discussion_r2016046852.\n\n# Todo\n- [x] Stats to prove most of reads/writes hit the shared or the local\ntrie cache.\n- [x] Unit testing  the new changes.\n\nFixes: https://github.com/paritytech/polkadot-sdk/issues/7534\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-05-14T14:51:51Z",
          "tree_id": "3a1090795a903aa356842d972a087042ff81f98f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/9991b1a804202bfa0beee1bdd7f78e0d1fd642a3"
        },
        "date": 1747238132063,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17852135,
            "range": "± 99800",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18343044,
            "range": "± 117847",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19866950,
            "range": "± 240147",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24320179,
            "range": "± 330562",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56527567,
            "range": "± 1285644",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 350151558,
            "range": "± 6235654",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2538713571,
            "range": "± 78252627",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15518671,
            "range": "± 178959",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15886984,
            "range": "± 212701",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16165536,
            "range": "± 232293",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20295268,
            "range": "± 274613",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52708766,
            "range": "± 583961",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 314369366,
            "range": "± 6581103",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2499442459,
            "range": "± 36969660",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "james@jsdw.me",
            "name": "James Wilson",
            "username": "jsdw"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4838fac28ab8e568ee2e5262523ad72ddd2db166",
          "message": "Stabilize V16 metadata (#8443)\n\nThis PR bumps frame-metadata 23.0.0, which stabilizes V16 metadata. This\nwas previously available as the \"unstable\" metadata.\n\nThe main additions provided by V16 metadata are:\n- Information about the Pallet View Functions exposed by pallets.\n- Information about the Config associated types used by each pallet.\n- Support for V5 transactions, including support for a chain providing\nmultiple transaction extension versions and multiple supported\ntransaciton versions.\n- Support for deprecation information, so that mostly anything defined\nin a runtime can be marked as deprecated in order for runtime/pallet\nauthors to communicate to consumers about deprecated items.\n\nTo sanity check this, I've built a polkadot node with this change and\nchecked that using Subxt (this PR\nhttps://github.com/paritytech/subxt/pull/1999), v16 metadata is indeed\navailable, downloads and decodes correctly.\n\n<!--\n✄\n-----------------------------------------------------------------------------\n\nThank you for your Pull Request! 🙏 Please make sure it follows the\ncontribution guidelines outlined in [this\n\ndocument](https://github.com/paritytech/polkadot-sdk/blob/master/docs/contributor/CONTRIBUTING.md)\nand fill out the\nsections below. Once you're ready to submit your PR for review, please\ndelete this section and leave only the text under\nthe \"Description\" heading.\n\n# Description\n\n*A concise description of what your PR is doing, and what potential\nissue it is solving. Use [Github semantic\n\nlinking](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword)\nto link the PR to an issue that must be closed once this is merged.*\n\n## Integration\n\n*In depth notes about how this PR should be integrated by downstream\nprojects. This part is mandatory, and should be\nreviewed by reviewers, if the PR does NOT have the `R0-Silent` label. In\ncase of a `R0-Silent`, it can be ignored.*\n\n## Review Notes\n\n*In depth notes about the **implementation** details of your PR. This\nshould be the main guide for reviewers to\nunderstand your approach and effectively review it. If too long, use\n\n[`<details>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details)*.\n\n*Imagine that someone who is depending on the old code wants to\nintegrate your new code and the only information that\nthey get is this section. It helps to include example usage and default\nvalue here, with a `diff` code-block to show\npossibly integration.*\n\n*Include your leftover TODOs, if any, here.*\n\n# Checklist\n\n* [ ] My PR includes a detailed description as outlined in the\n\"Description\" and its two subsections above.\n* [ ] My PR follows the [labeling requirements](\n\nhttps://github.com/paritytech/polkadot-sdk/blob/master/docs/contributor/CONTRIBUTING.md#Process\n) of this project (at minimum one label for `T` required)\n* External contributors: ask maintainers to put the right label on your\nPR.\n* [ ] I have made corresponding changes to the documentation (if\napplicable)\n* [ ] I have added tests that prove my fix is effective or that my\nfeature works (if applicable)\n\nYou can remove the \"Checklist\" section once all have been checked. Thank\nyou for your contribution!\n\n✄\n-----------------------------------------------------------------------------\n--.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-14T16:19:55Z",
          "tree_id": "c344fd5142d5b2eb364fee2d18a173b23b036da1",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4838fac28ab8e568ee2e5262523ad72ddd2db166"
        },
        "date": 1747243805516,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18535922,
            "range": "± 183806",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19018147,
            "range": "± 220819",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20706800,
            "range": "± 220940",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24995262,
            "range": "± 700120",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 58041544,
            "range": "± 1129638",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 339591512,
            "range": "± 6626041",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2520943392,
            "range": "± 69110904",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16363316,
            "range": "± 315527",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16419807,
            "range": "± 257177",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16943609,
            "range": "± 490071",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21621934,
            "range": "± 219563",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 55437414,
            "range": "± 814435",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 316595078,
            "range": "± 5121565",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2558456946,
            "range": "± 21085434",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "5588131+kianenigma@users.noreply.github.com",
            "name": "Kian Paimani",
            "username": "kianenigma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "da8c374871cc97807935230e7c398876d5adce62",
          "message": "check XCM size in VMP routing (#8409)\n\nContxt: within AHM, AH and RC need to communicate large-ish payloads of\ndata, such as 1000 validator key and corresponding reward points per\nsession. While the current limits on Polkadot and Kusama allow for such\npayloads, I am putting the code in place such that we\n`SendXcm::validate` any message before sending, and based on that, if\n`MessageSizeExceeded` is returned, we recursively split the messages.\nThis code itself will come in a sparate PR.\n\nSo far, it turned out that in the code bath of a UMP (para -> RC),\n`validate` actually didn't check the message size. This PR adds this. I\nam not super familiar yet with this part of the codebase to know where\nto add unit tests for this, but I can tell that in my ZN experiments,\nthis fixes the issue.\n\nI was expecting a similar hack to also be needed for DMP (RC -> para),\nbut it seems like this is not needed and in this code-path (based on who\nis the router: `ChildParachainRouter` in my case).\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>",
          "timestamp": "2025-05-14T20:34:30Z",
          "tree_id": "743e609685b6201a77f811a4d89e4ea58519852e",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/da8c374871cc97807935230e7c398876d5adce62"
        },
        "date": 1747259157459,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18853240,
            "range": "± 212744",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19200608,
            "range": "± 303993",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21096981,
            "range": "± 657714",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24693556,
            "range": "± 445948",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57377489,
            "range": "± 816422",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 338361138,
            "range": "± 2453573",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2463484589,
            "range": "± 71449075",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16593820,
            "range": "± 186642",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16760961,
            "range": "± 156810",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17610534,
            "range": "± 94917",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21954458,
            "range": "± 106417",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 56087743,
            "range": "± 1036397",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 320547805,
            "range": "± 3136597",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2573167144,
            "range": "± 18017902",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d99bafc738266f97bd03807909772b4471e56ce4",
          "message": "[pallet-revive] tracing prepare support for future tracing APIS (#8495)\n\n- Break down eth-rpc client storage and runtime API into separate files\n- Make debug_trace methods Return a composite Trace enum so we can\nintroduce other trace types (in follow up PR)\n- Fix eth_getStorageAt to use BigEndian for key encoding\n\ncompanion evm-test-suite PR\nhttps://github.com/paritytech/evm-test-suite/pull/93\n\nFix https://github.com/paritytech/contract-issues/issues/67\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-15T12:40:14Z",
          "tree_id": "14e628871c9a2b5abdb476a3558e4837d22ab3a3",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d99bafc738266f97bd03807909772b4471e56ce4"
        },
        "date": 1747315901046,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18942803,
            "range": "± 196077",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19231182,
            "range": "± 274078",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22386143,
            "range": "± 403269",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26011001,
            "range": "± 517751",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59872102,
            "range": "± 655712",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 370827696,
            "range": "± 11422727",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2591771750,
            "range": "± 25035178",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16635679,
            "range": "± 286503",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16703467,
            "range": "± 435276",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17493971,
            "range": "± 235153",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21970027,
            "range": "± 353102",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 56159268,
            "range": "± 717487",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 335900393,
            "range": "± 7064807",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2651675165,
            "range": "± 62699539",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "23c41b237b262b3ddf0d6842792959cde234385b",
          "message": "Disable check-runtime-migration (#8547)\n\nwestend state is fully broken since we dropped some messages on latest\nupgrade\nI am disabling this job for now until we can resolve the issue\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-16T12:47:04Z",
          "tree_id": "75e3295c63e81f98c81f4e5064cc8d5c7ce9c3f3",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/23c41b237b262b3ddf0d6842792959cde234385b"
        },
        "date": 1747402521882,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19561061,
            "range": "± 388125",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19936183,
            "range": "± 982966",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21881288,
            "range": "± 669240",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26343656,
            "range": "± 567984",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 60878887,
            "range": "± 1048279",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 371809006,
            "range": "± 13110637",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2636708597,
            "range": "± 149980793",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17039668,
            "range": "± 242189",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17290941,
            "range": "± 292498",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17632413,
            "range": "± 252911",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22604577,
            "range": "± 211971",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 58361908,
            "range": "± 1301317",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 337011263,
            "range": "± 9010938",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2732206958,
            "range": "± 66152996",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "leonardo@custodio.me",
            "name": "Leonardo Custodio",
            "username": "leonardocustodio"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3681bd8f56fbc555dea1760c119e10d0938d449f",
          "message": "Use correct polkadot repository (#8488)\n\nThe link provided in the `Documentation` argument, leads to the old\nrepository that is on `read-only` state\n\nCo-authored-by: Nikolai Kozlov <1431590+nkpar@users.noreply.github.com>",
          "timestamp": "2025-05-16T14:12:56Z",
          "tree_id": "2f12d58d68e07843122cd704f51a90c5c48a49b7",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/3681bd8f56fbc555dea1760c119e10d0938d449f"
        },
        "date": 1747408373283,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19593251,
            "range": "± 151448",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19851637,
            "range": "± 169905",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21639329,
            "range": "± 143858",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25886463,
            "range": "± 170716",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 60251217,
            "range": "± 468938",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 387947573,
            "range": "± 5708078",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2616498645,
            "range": "± 146533251",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16965557,
            "range": "± 152842",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17293275,
            "range": "± 108428",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17859089,
            "range": "± 126110",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22818192,
            "range": "± 186181",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 57485851,
            "range": "± 876251",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 341118945,
            "range": "± 12377167",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2654703294,
            "range": "± 29375771",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "serban@parity.io",
            "name": "Serban Iorga",
            "username": "serban300"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5edf3d69eec0b60a62f9405b62c90a17bad88c27",
          "message": "FeeTracker: remove `get_min_fee_factor()` (#8528)\n\nRelated to https://github.com/paritytech/polkadot-sdk/issues/8462\n\nFollow-up for https://github.com/paritytech/polkadot-sdk/pull/8477\n\nThe minimal fee factor should always be 1\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-16T15:28:24Z",
          "tree_id": "c0133772c2825c1e1ed9eab0d660299691d3d70c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/5edf3d69eec0b60a62f9405b62c90a17bad88c27"
        },
        "date": 1747412377295,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19857552,
            "range": "± 188019",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20350278,
            "range": "± 226384",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21877062,
            "range": "± 259940",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26881649,
            "range": "± 431690",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 63052774,
            "range": "± 1535890",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 388006553,
            "range": "± 9028029",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2431148110,
            "range": "± 224056657",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17122935,
            "range": "± 211889",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17418536,
            "range": "± 168146",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18041724,
            "range": "± 98145",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22628374,
            "range": "± 253703",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 57889158,
            "range": "± 1101421",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 362420746,
            "range": "± 9885340",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2729562818,
            "range": "± 46546371",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aqdrgg19@gmail.com",
            "name": "VolodymyrBg",
            "username": "VolodymyrBg"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "391e6eaf10afa9782fc305231e96140de36fc44f",
          "message": "Fix broken link to call_ext.rs in parachains README (#8558)\n\n# Description\n\nFixed broken link to signed extension file in\nbridges/modules/parachains/README.md:\n- Was: [signed extension](./src/call_ext)\n- Now: [signed extension](./src/call_ext.rs)\n\nNow the link correctly points to the existing call_ext.rs file, which\nimproves navigation and prevents errors when viewing the documentation.\n\n# Checklist\n\n* [ ] My PR includes a detailed description as outlined in the\n\"Description\" and its two subsections above.\n* [ ] My PR follows the [labeling requirements](\n\nhttps://github.com/paritytech/polkadot-sdk/blob/master/docs/contributor/CONTRIBUTING.md#Process\n) of this project (at minimum one label for `T` required)\n* External contributors: ask maintainers to put the right label on your\nPR.\n* [ ] I have made corresponding changes to the documentation (if\napplicable)\n* [ ] I have added tests that prove my fix is effective or that my\nfeature works (if applicable)\n\nYou can remove the \"Checklist\" section once all have been checked. Thank\nyou for your contribution!\n\n✄\n-----------------------------------------------------------------------------",
          "timestamp": "2025-05-19T07:08:05Z",
          "tree_id": "08a1ba84ce2a96742aee8268647ea92757bad65c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/391e6eaf10afa9782fc305231e96140de36fc44f"
        },
        "date": 1747641525290,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19951366,
            "range": "± 192469",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20121351,
            "range": "± 295335",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21945115,
            "range": "± 249168",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26755465,
            "range": "± 298054",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 64667178,
            "range": "± 887496",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 370727239,
            "range": "± 11713005",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2951786091,
            "range": "± 143407062",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17597247,
            "range": "± 257707",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17385749,
            "range": "± 183310",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18279147,
            "range": "± 234181",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23588995,
            "range": "± 208231",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 60019196,
            "range": "± 2044349",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 350040249,
            "range": "± 6156939",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2668951333,
            "range": "± 28983003",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "serban@parity.io",
            "name": "Serban Iorga",
            "username": "serban300"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "047534b1eadbdea082304d08c34c0fb43c6212ae",
          "message": "UncheckedExtrinsic: limit the decoded call size + simpllifications (#8234)\n\nCloses #7360 \n\nThis PR:\n- sets a memory limit when decoding the `RuntimeCall` inside an\n`UncheckedExtrinsic`\n- simplifies some logic\n\nThis PR splits some logic from #7902. The purpose of doing this is to\nmake it possible to review the logic incrementally, which should be\neasier.",
          "timestamp": "2025-05-19T09:59:40Z",
          "tree_id": "2e94292718b0b4dc6dd5d0dcbd4c526cb0d67188",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/047534b1eadbdea082304d08c34c0fb43c6212ae"
        },
        "date": 1747652277178,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 20251399,
            "range": "± 234196",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20484575,
            "range": "± 302917",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22363115,
            "range": "± 311224",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 28445828,
            "range": "± 751263",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 74834556,
            "range": "± 1379022",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 518508517,
            "range": "± 19175346",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 3153475378,
            "range": "± 347979777",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 20140329,
            "range": "± 451553",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 20498574,
            "range": "± 528757",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 21449119,
            "range": "± 856766",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 27010090,
            "range": "± 644946",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 72964455,
            "range": "± 1769051",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 413040825,
            "range": "± 11318233",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2915799526,
            "range": "± 26658869",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "oliver.tale-yazdi@parity.io",
            "name": "Oliver Tale-Yazdi",
            "username": "ggwpez"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "058b4f52fe308697419d590e0a7bd2b520410a2f",
          "message": "pallet scheduler: fix weight and add safety checks (#7785)\n\nChanges:\n- Add runtime integrity test for scheduler pallet to ensure that lookups\nuse sensible weights\n- Check all passed storage names in the omni bencher to be known by\nFRAME metadata\n- Trim storage names in omni bencher to fix V1 bench syntax bug\n- Fix V1 bench syntax storage name sanitization for specific Rust\nversions\n\nI re-ran the benchmarks with the omni-bencher modifications and it did\nnot change the [proof\nsize](https://weights.tasty.limo/compare?repo=polkadot-sdk&threshold=1&path_pattern=substrate%2Fframe%2F**%2Fsrc%2Fweights.rs%2Cpolkadot%2Fruntime%2F*%2Fsrc%2Fweights%2F**%2F*.rs%2Cpolkadot%2Fbridges%2Fmodules%2F*%2Fsrc%2Fweights.rs%2Ccumulus%2F**%2Fweights%2F*.rs%2Ccumulus%2F**%2Fweights%2Fxcm%2F*.rs%2Ccumulus%2F**%2Fsrc%2Fweights.rs&method=asymptotic&ignore_errors=true&unit=proof&old=cc0142510b81dcf1c1a22f7dc164c453c25287e6&new=bb19d78821eaeaf2262f6a23ee45f83dd4f94d29).\nI reverted [the\ncommit](https://github.com/paritytech/polkadot-sdk/pull/7785/commits/bb19d78821eaeaf2262f6a23ee45f83dd4f94d29)\nafterwards to reduce the noise for reviewers.\n\n---------\n\nSigned-off-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-19T11:33:03Z",
          "tree_id": "41256fb76c6f6fb035379bdd269236d8d206628c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/058b4f52fe308697419d590e0a7bd2b520410a2f"
        },
        "date": 1747659421281,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18843456,
            "range": "± 204735",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19171839,
            "range": "± 91459",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20756983,
            "range": "± 191077",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24857264,
            "range": "± 211803",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55782901,
            "range": "± 1313615",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 332637956,
            "range": "± 7043490",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2565503946,
            "range": "± 36085815",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16196155,
            "range": "± 120398",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16229529,
            "range": "± 163255",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17019280,
            "range": "± 190613",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21375446,
            "range": "± 105679",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54425034,
            "range": "± 1458310",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 313451411,
            "range": "± 2294436",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2518156871,
            "range": "± 13965827",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "oliver.tale-yazdi@parity.io",
            "name": "Oliver Tale-Yazdi",
            "username": "ggwpez"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e000a5c42c7aee5ce08bb9f5f40bf17ac4005a0e",
          "message": "[FRAME] Omni bencher fixes (#8265)\n\nChanges:\n- Add `--pallets` option to selectively run multiple pallets. In the\npast we only had `--pallet` to run a single one.\n- Add `--exclude-extrinsics [pallet::extrinsic]` to add\n(Pallet,Extrinsic) tuples that should be excluded.\n- Fix storage overlay reversion *before* the benchmark runs.\n- Test root hash for V2 benchmarks to be deterministic\n- <s>Changed DB reps to 1 for speedup since it should not be needed to\nrun multiple times. (TODO test)</s>\n\nChecked that it fixes the Kusama benchmark issue when\n[patching](https://github.com/ggwpez/substrate-scripts/blob/master/diener.py)\nto a fixed stable2412 fork:\n\n(before)\n```pre\nThe following 5 benchmarks failed:\n- pallet_nomination_pools::apply_slash_fail\n- pallet_nomination_pools::migrate_delegation\n- pallet_nomination_pools::pool_migrate\n- pallet_offences::report_offence_babe\n- pallet_offences::report_offence_grandpa\nError: Input(\"5 benchmarks failed\")\n```\n\n(after)\n```pre\nThe following 1 benchmarks failed:\n- pallet_nomination_pools::apply_slash_fail\nError: Input(\"1 benchmarks failed\")\n```\nThis one needs fixing but is not breaking the other ones anymore.\n\n---------\n\nSigned-off-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>",
          "timestamp": "2025-05-19T16:03:55Z",
          "tree_id": "4c0e6ec2609f40851c01fcb5c87071221c9d073d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e000a5c42c7aee5ce08bb9f5f40bf17ac4005a0e"
        },
        "date": 1747677447866,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18499691,
            "range": "± 125435",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18633533,
            "range": "± 191227",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20179818,
            "range": "± 203499",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24617788,
            "range": "± 336129",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59973252,
            "range": "± 825151",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 371729832,
            "range": "± 5209883",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2606090803,
            "range": "± 164905314",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15775832,
            "range": "± 151504",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15772906,
            "range": "± 163332",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16578754,
            "range": "± 128260",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21068888,
            "range": "± 249975",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 55738346,
            "range": "± 1078279",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 317577016,
            "range": "± 4511018",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2528417994,
            "range": "± 42877703",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41779041+alvicsam@users.noreply.github.com",
            "name": "Alexander Samusev",
            "username": "alvicsam"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "2836a99fc249e1db95d3beffc50050fdf1a20d65",
          "message": "[cmd-bot] Temporary fix for weights output (#8565)\n\nPR adds a temporary fix for cmd-bot. \n\ncc https://github.com/paritytech/polkadot-sdk/issues/8195",
          "timestamp": "2025-05-20T08:45:18Z",
          "tree_id": "ce3b0308b1072d9204d0f056e570a95268cc8ae6",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/2836a99fc249e1db95d3beffc50050fdf1a20d65"
        },
        "date": 1747734344328,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19431431,
            "range": "± 165182",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19690676,
            "range": "± 221777",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21418740,
            "range": "± 206005",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26030041,
            "range": "± 312436",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 60432676,
            "range": "± 1027118",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 353561818,
            "range": "± 6843694",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2577341885,
            "range": "± 54606668",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16884420,
            "range": "± 172292",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17114963,
            "range": "± 173141",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17968939,
            "range": "± 359562",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22635444,
            "range": "± 183157",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 59105020,
            "range": "± 788764",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 336698089,
            "range": "± 1658466",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2725265253,
            "range": "± 33408451",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "178801527+raymondkfcheung@users.noreply.github.com",
            "name": "Raymond Cheung",
            "username": "raymondkfcheung"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "803b3463d512327aee6ab0ca13ac368a2256275a",
          "message": "Ensure Consistent Topic IDs for Traceable Cross-Chain XCM (#7691)\n\nThis PR resolves issue #6119 by ensuring consistent topic ID inclusion\nin all XCM messages processed or sent via `XcmExecutor`, addressing\ninstances where message topics were absent or inconsistent across\nmultiple hops. To guarantee topic assignment and enhance traceability,\nthis PR implements:\n\n*\n[**`WithUniqueTopic`**](https://paritytech.github.io/polkadot-sdk/master/staging_xcm_builder/struct.WithUniqueTopic.html):\nThis structure automatically appends a unique topic ID to any XCM that\ndoes not already contain a `SetTopic` instruction, guaranteeing that\nevery message has an identifier.\n*\n[**`XcmContext.topic_or_message_id()`**](https://paritytech.github.io/polkadot-sdk/master/staging_xcm/v5/struct.XcmContext.html):\nThe `topic_or_message_id()` function is used to append a `SetTopic` to\nany outbound XCM that lacks one, ensuring that each message is\nconsistently traceable by falling back to the context’s message ID when\nno topic is set.\n* **Removal of `forward_id_for`**: The `forward_id_for` function, which\nwas used to derive a new ID based on an original, has been removed as\nthe focus is now on maintaining a consistent topic ID throughout the XCM\nlifecycle.\n\nTogether, these changes guarantee that all XCMs—whether executed locally\nor dispatched to other chains—carry an associated topic ID throughout\ntheir journey. This significantly improves debugging and observability\nby enabling comprehensive tracing of message flows within logs and\nevents. This enhancement is particularly beneficial for complex,\nmulti-hop XCM scenarios where topic consistency was previously\nunreliable, making it easier to follow the path and effects of each\ncross-chain message.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Adrian Catangiu <adrian@parity.io>\nCo-authored-by: Serban Iorga <serban@parity.io>",
          "timestamp": "2025-05-20T09:12:58Z",
          "tree_id": "317ae45ee361d4176847abd191727f29c106371d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/803b3463d512327aee6ab0ca13ac368a2256275a"
        },
        "date": 1747736122355,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19362363,
            "range": "± 184736",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19915217,
            "range": "± 218012",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21472162,
            "range": "± 378444",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26666527,
            "range": "± 520520",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 63061287,
            "range": "± 1349641",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 390244125,
            "range": "± 10628735",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2612129904,
            "range": "± 164799292",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17468782,
            "range": "± 450096",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17590778,
            "range": "± 258646",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18256165,
            "range": "± 219606",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23417273,
            "range": "± 457688",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 60016546,
            "range": "± 707196",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 347324369,
            "range": "± 3978606",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2721302933,
            "range": "± 23377873",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "rohit.sarpotdar@parity.io",
            "name": "Rohit Sarpotdar",
            "username": "rosarp"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4173aac8abc7e518d4048306c18d4f2176241206",
          "message": "Bridges: Fix - Improve try-state for pallet-xcm-bridge-hub (#8546)\n\nFixing #8215 based on #8185: Improve try-state for pallet-xcm-bridge-hub\n\nIt removes try_as and uses try_from implementation instead.\n\n---------\n\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>",
          "timestamp": "2025-05-20T10:53:09Z",
          "tree_id": "618564688f2403b3fecb42cca092fd3df4877eaa",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4173aac8abc7e518d4048306c18d4f2176241206"
        },
        "date": 1747741644273,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18489619,
            "range": "± 129955",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18648051,
            "range": "± 260057",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20201734,
            "range": "± 174233",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24328104,
            "range": "± 263779",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54228499,
            "range": "± 475092",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 314529896,
            "range": "± 8509414",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2207105065,
            "range": "± 74637384",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15811618,
            "range": "± 474502",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15970988,
            "range": "± 179948",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16521409,
            "range": "± 88814",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20806912,
            "range": "± 113998",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53108773,
            "range": "± 313312",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 305785712,
            "range": "± 4084558",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2420923140,
            "range": "± 31002442",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "serban@parity.io",
            "name": "Serban Iorga",
            "username": "serban300"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ff5c67c8a3d60ccb3f0af114a07db8f4bec485a0",
          "message": "Update `parity-scale-codec` to `v3.7.5` (#8577)\n\nUpdate `parity-scale-codec` to `v3.7.5`\n\n---------\n\nCo-authored-by: Andrii <ndk@parity.io>",
          "timestamp": "2025-05-21T07:08:43Z",
          "tree_id": "9d42fbfd00fb915b93f470ec77a7ad9308ef082e",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ff5c67c8a3d60ccb3f0af114a07db8f4bec485a0"
        },
        "date": 1747814548495,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19541296,
            "range": "± 235759",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19574295,
            "range": "± 199535",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21176572,
            "range": "± 293805",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26143455,
            "range": "± 261145",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 63441007,
            "range": "± 636065",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 381486312,
            "range": "± 4097404",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2864657639,
            "range": "± 113644097",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16811864,
            "range": "± 235692",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16921733,
            "range": "± 669357",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17745052,
            "range": "± 430602",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22931403,
            "range": "± 522750",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 57827816,
            "range": "± 597843",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 327505409,
            "range": "± 4216330",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2640436520,
            "range": "± 28505882",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "hrishav@parity.io",
            "name": "castillax",
            "username": "castillax"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "2863b7a9a879935ff16987d0e95065d088dad9f8",
          "message": "Fix generated address returned by Substrate RPC runtime call (#8504)\n\n## Description\n\nWhen dry-running a contract deployment through the runtime API, the\nreturned address does not match the actual address that will be used\nwhen the transaction is submitted. This inconsistency occurs because the\naddress derivation logic doesn't properly account for the difference\nbetween transaction execution and dry-run execution contexts.\n\nThe issue stems from the `create1` address derivation logic in\n`exec.rs`:\n\n```rust\naddress::create1(\n    &deployer,\n    // the Nonce from the origin has been incremented pre-dispatch, so we\n    // need to subtract 1 to get the nonce at the time of the call.\n    if origin_is_caller {\n        account_nonce.saturating_sub(1u32.into()).saturated_into()\n    } else {\n        account_nonce.saturated_into()\n    },\n)\n```\n\nThe code correctly subtracts 1 from the account nonce during a\ntransaction execution (because the nonce is incremented pre-dispatch),\nbut doesn't account for execution context - whether it's a real\ntransaction or a dry run through the RPC.\n\n## Review Notes\n\nThis PR adds a new condition to check for the `IncrementOnce` when\ncalculating the nonce for address derivation:\n\n```rust\naddress::create1(\n    &deployer,\n    // the Nonce from the origin has been incremented pre-dispatch, so we\n    // need to subtract 1 to get the nonce at the time of the call.\n    if origin_is_caller && matches!(exec_context, IncrementOnce::AlreadyIncremented) {\n        account_nonce.saturating_sub(1u32.into()).saturated_into()\n    } else {\n        account_nonce.saturated_into()\n    },\n)\n```\n\n\n## Before Fix\n\n- Dry-run contract deployment returns address derived with nonce N\n- Actual transaction deployment creates contract at address derived with\nnonce N-1\n- Result: Inconsistent addresses between simulation and actual execution\n\n## After Fix\n\n- Dry-run and actual transaction deployments both create contracts at\nthe same address\n- Result: Consistent contract addresses regardless of execution context\n- Added test case to verify nonce handling in different execution\ncontexts\n\nThis fix ensures that users can rely on the address returned by a dry\nrun to match the actual address that will be used when the transaction\nis submitted.\n\nFixes https://github.com/paritytech/contract-issues/issues/37\n\n# Checklist\n\n* [x] My PR includes a detailed description as outlined in the\n\"Description\" and its two subsections above.\n* [x] My PR follows the [labeling requirements](\n\nhttps://github.com/paritytech/polkadot-sdk/blob/master/docs/contributor/CONTRIBUTING.md#Process\n) of this project (at minimum one label for `T` required)\n* External contributors: ask maintainers to put the right label on your\nPR.\n* [x] I have made corresponding changes to the documentation (if\napplicable)\n* [x] I have added tests that prove my fix is effective or that my\nfeature works (if applicable)\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: pgherveou <pgherveou@gmail.com>",
          "timestamp": "2025-05-21T12:10:48Z",
          "tree_id": "125db6986b5403c0de8a90e570a8254b6130fe95",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/2863b7a9a879935ff16987d0e95065d088dad9f8"
        },
        "date": 1747832962308,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19549466,
            "range": "± 389488",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19498051,
            "range": "± 264578",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21054747,
            "range": "± 400456",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25320081,
            "range": "± 256996",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59550219,
            "range": "± 1365426",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 398449712,
            "range": "± 14314466",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2605526005,
            "range": "± 150658539",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16962106,
            "range": "± 146567",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16951191,
            "range": "± 198920",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18219447,
            "range": "± 221412",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23367608,
            "range": "± 356563",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 59867721,
            "range": "± 1172593",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 361473250,
            "range": "± 6300469",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2770523804,
            "range": "± 36870929",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "5588131+kianenigma@users.noreply.github.com",
            "name": "Kian Paimani",
            "username": "kianenigma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5d71d474ab78dacc37f89698a71baa45b41d0302",
          "message": "fix epmb solution duplicate issue + add remote mining apparatus to epm (#8585)\n\nBackports a part of https://github.com/paritytech/polkadot-sdk/pull/8422\nto master so it can be included in ongoing releases sooner.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Dónal Murray <donal.murray@parity.io>",
          "timestamp": "2025-05-21T15:32:43Z",
          "tree_id": "a7bd1cae9323f52b92c423acb9f2760612cbbf79",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/5d71d474ab78dacc37f89698a71baa45b41d0302"
        },
        "date": 1747844532183,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19096106,
            "range": "± 253155",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19659605,
            "range": "± 197763",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21298461,
            "range": "± 339284",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25314506,
            "range": "± 395654",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56473579,
            "range": "± 536206",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 366780663,
            "range": "± 4511150",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2557921069,
            "range": "± 159758664",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16198503,
            "range": "± 196370",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16562459,
            "range": "± 201231",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17281210,
            "range": "± 117504",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21545225,
            "range": "± 121168",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 55895439,
            "range": "± 328217",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 311284891,
            "range": "± 3696955",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2544795503,
            "range": "± 54013175",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "14218860+iulianbarbu@users.noreply.github.com",
            "name": "Iulian Barbu",
            "username": "iulianbarbu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e44b89fb7ca3385f314803c733ad97b26cd14e9f",
          "message": "txpool: fix tx removal from unlocks set (#8500)\n\n# Description\n\nRemoving a tx subtree means partly removing some txs from the unlocks\nset of other txs. This logic is buggy and the PR attempts to fix it.\n\nCloses #8498 \n\n## Integration\n\nN/A\n\n## Review Notes\n\nThis doesn't seem to be an important bug. Unit tests for txpool still\npass after the fix, so txpool behavior isn't changing much.\n\n### TODOs\n\n- [x] test with a heavy load test (5 millions txs) - all txs were\nvalidated successfully\n- [x] added a unit test\n\n---------\n\nSigned-off-by: Iulian Barbu <iulian.barbu@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-21T17:39:58Z",
          "tree_id": "f58d28e8d71b185f26380c0de28160f7576545bb",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e44b89fb7ca3385f314803c733ad97b26cd14e9f"
        },
        "date": 1747852548385,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 21846062,
            "range": "± 379712",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20905547,
            "range": "± 426703",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22600632,
            "range": "± 442379",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25559212,
            "range": "± 879688",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57661921,
            "range": "± 620734",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 382154833,
            "range": "± 16711710",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2595102062,
            "range": "± 75399604",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17104583,
            "range": "± 156435",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16990447,
            "range": "± 164450",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17796877,
            "range": "± 198959",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22423334,
            "range": "± 285074",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 56915812,
            "range": "± 508175",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 335203568,
            "range": "± 22243773",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2559007904,
            "range": "± 18550687",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "14218860+iulianbarbu@users.noreply.github.com",
            "name": "Iulian Barbu",
            "username": "iulianbarbu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "26afcd65438f5518bb6a0c281cfcc6159a60587e",
          "message": "`fatxpool`: add fallback for ready at light (#8533)\n\n# Description\n\nProposing a new block on top of an existing parent block considers the\nbest ready transactions provided by the txpool to be included in the new\nblock. Whenever the given parent hash to build on top of is part of a\nfork up to the finalized block which has no best block notified to the\npool, it might be the case that the proposer will rely on\n`ready_at_light` (due to various reason not in our control), and when\nthat's the case, the ready transactions set will be empty.\n\nThis PR adds a fallback for the `ready_at_light` where we consider the\nready txs of the most recent view processed by the txpool, even if those\ntxs might be invalid\n\nCloses #8213 \nCloses #6056\n\n## Integration\n\nN/A\n\n## Review Notes\n\nIn terms of testing, I updated an existing test which already exercises\n`ready_at_light` in the scope of the newly added fallback.\n\n---------\n\nSigned-off-by: Iulian Barbu <iulian.barbu@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Michal Kucharczyk <1728078+michalkucharczyk@users.noreply.github.com>",
          "timestamp": "2025-05-22T12:59:45Z",
          "tree_id": "69051a21be9fa9579a069ec0926808bd3cd4f529",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/26afcd65438f5518bb6a0c281cfcc6159a60587e"
        },
        "date": 1747922265858,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18111698,
            "range": "± 96903",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18448379,
            "range": "± 109878",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20009166,
            "range": "± 149600",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23872356,
            "range": "± 197069",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54333285,
            "range": "± 875343",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 314921289,
            "range": "± 3329421",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2353176095,
            "range": "± 96192896",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15724153,
            "range": "± 232786",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15896569,
            "range": "± 132020",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16427694,
            "range": "± 64341",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20905663,
            "range": "± 214901",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53476090,
            "range": "± 632757",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 312067546,
            "range": "± 10640802",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2474898854,
            "range": "± 71118748",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "oliver.tale-yazdi@parity.io",
            "name": "Oliver Tale-Yazdi",
            "username": "ggwpez"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e723cfa2030586f968bb37dd094a61912573a13c",
          "message": "🔪 flaky and Zombienet tests (#8600)\n\nCommenting out all flaky tests and tracking them here\nhttps://github.com/paritytech/polkadot-sdk/issues/48\n\nChanges:\n- Disable flaky Rust tests by adding a new disabled feature. `#[ignore]`\nattribute is not possible since CI runs with `--ignored`\n- Disable all Zombienet tests\n\n- [ ] Waiting for CI what other tests fail.\n\n---------\n\nSigned-off-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>",
          "timestamp": "2025-05-22T22:29:20Z",
          "tree_id": "7fda3db009e3e15d9fae760d1fa967b927f9f496",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e723cfa2030586f968bb37dd094a61912573a13c"
        },
        "date": 1747956282139,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19135434,
            "range": "± 277493",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19330258,
            "range": "± 493917",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20698128,
            "range": "± 211916",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25298569,
            "range": "± 496413",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 58086844,
            "range": "± 1120146",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 333623773,
            "range": "± 3476356",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2431328613,
            "range": "± 61994531",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16993372,
            "range": "± 211857",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17140033,
            "range": "± 207408",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17647819,
            "range": "± 637909",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22355808,
            "range": "± 175875",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 57045738,
            "range": "± 844456",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 324742402,
            "range": "± 10077020",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2578087418,
            "range": "± 34874771",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "85f5dc72e3825c189f7cd0fdffd1e463ccf946e1",
          "message": "Use hashbrown hashmap/hashset in validation context (#8606)\n\nDiscovered while profiling\nhttps://github.com/paritytech/polkadot-sdk/issues/6131#issuecomment-2891523233\nwith the benchmark https://github.com/paritytech/polkadot-sdk/pull/8069\nthat when running in validation a big chunk of the time is spent\ninserting and retrieving data from the BTreeMap/BTreeSet.\n\nBy switching to hashbrown HashMap/HashSet in validation TrieCache and\nTrieRecorder and the memory-db\nhttps://github.com/paritytech/trie/pull/221 read costs improve with\naround ~40% and write with about ~20%\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-23T14:53:14Z",
          "tree_id": "ade5b4ef80478c623bc008c8bb3d5ea06199a2ad",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/85f5dc72e3825c189f7cd0fdffd1e463ccf946e1"
        },
        "date": 1748015295201,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18427981,
            "range": "± 156505",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18705638,
            "range": "± 270437",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20277718,
            "range": "± 146670",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24840557,
            "range": "± 347306",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56703800,
            "range": "± 982872",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 320426842,
            "range": "± 7071792",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2360892888,
            "range": "± 29222704",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16273710,
            "range": "± 160571",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16630699,
            "range": "± 150257",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17367449,
            "range": "± 246890",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21616200,
            "range": "± 296390",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 56784729,
            "range": "± 848250",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 320075671,
            "range": "± 7241859",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2508557508,
            "range": "± 29857337",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "gui.thiolliere@gmail.com",
            "name": "Guillaume Thiolliere",
            "username": "gui1117"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2d1883f12755152eaf3d315cd4042cbf04a5d6e7",
          "message": "Introduce CreateBare, deprecated CreateInherent (#7597)\n\nRename `CreateInherent` to `CreateBare`, add method `create_bare` and\ndeprecate `create_inherent`.\nBoth unsigned transaction and inherent use the extrinsic type `Bare`.\nBefore this PR `CreateInherent` trait was use to generate unsigned\ntransaction, now unsigned transaction can be generated using a proper\ntrait `CreateBare`.\nHow to upgrade:\n* Change usage of `CreateInherent` to `CreateBare` and `create_inherent`\nto `create_bare`.\n* Implement `CreateBare` for the runtime, the method `create_bare` is\nusually implemented using `Extrinsic::new_bare`.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-26T05:13:04Z",
          "tree_id": "4ad5f6bee8bf332251c23f613a03869585a63248",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/2d1883f12755152eaf3d315cd4042cbf04a5d6e7"
        },
        "date": 1748239463240,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19585707,
            "range": "± 306663",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20442591,
            "range": "± 268309",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21980799,
            "range": "± 282377",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26097365,
            "range": "± 228443",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59286963,
            "range": "± 1187747",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 336538539,
            "range": "± 5554008",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2683233409,
            "range": "± 153687026",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17879629,
            "range": "± 365380",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 18101686,
            "range": "± 417913",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18079676,
            "range": "± 84382",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23265501,
            "range": "± 389646",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 57736595,
            "range": "± 2788063",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 351936014,
            "range": "± 4663903",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2648915349,
            "range": "± 28003406",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "60601340+lexnv@users.noreply.github.com",
            "name": "Alexandru Vasile",
            "username": "lexnv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8d1782e381313477892c3943eccd608fcbaa6e91",
          "message": "tx/metrics: Add metrics for the RPC v2 `transactionWatch_v1_submitAndWatch` (#8345)\n\nThis PR adds metrics for the following RPC subscription:\n[transactionWatch_v1_submitAndWatch](https://paritytech.github.io/json-rpc-interface-spec/api/transactionWatch_v1_submitAndWatch.html)\n\nMetrics are exposed in two ways:\n- simple counters of how many events we've seen globally\n- a histogram vector of execution times, which is labeled by `initial\nevent` -> `final event`\n- This helps us identify how long it takes the transaction pool to\nadvance the state of the events, and further debug issues\n  \nPart of: https://github.com/paritytech/polkadot-sdk/issues/8336\n\n### (outdated) PoC Dashboards\n\n![Screenshot 2025-04-28 at 17 50\n48](https://github.com/user-attachments/assets/9fd0bf30-a321-4362-a10b-dfc3de1eb474)\n\n\n### Next steps\n- [x] initial dashboards with a live node\n- [x] adjust testing\n\n---------\n\nSigned-off-by: Alexandru Vasile <alexandru.vasile@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-26T12:51:17Z",
          "tree_id": "6d8b137db98ddfdd936bfe38b3078b7212a8ce64",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/8d1782e381313477892c3943eccd608fcbaa6e91"
        },
        "date": 1748269117016,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18897672,
            "range": "± 117891",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19229931,
            "range": "± 214586",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21246521,
            "range": "± 159689",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24912749,
            "range": "± 257264",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56204790,
            "range": "± 560756",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 348143093,
            "range": "± 10935651",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2492090379,
            "range": "± 169971881",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16515178,
            "range": "± 104108",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16638531,
            "range": "± 109777",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17258166,
            "range": "± 129460",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21855378,
            "range": "± 266750",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 55642667,
            "range": "± 1166224",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 321256311,
            "range": "± 3317587",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2560836469,
            "range": "± 15790619",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2102fdf4e27e04f24b1735b558205eb58473aca2",
          "message": "[pallet-revive] make subscription task panic on error (#8587)\n\n- subscription task are \"essential tasks\" and the service should go down\nwhen they fail.\n- Upgrade subxt to 0.41\n- Update zombienet-sdk to use the subxt re-export of subxt so it does\nnot conflict with the workspace version\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-26T13:59:52Z",
          "tree_id": "9be1f8fce584875744ec5e3ccf81f8df8cea5704",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/2102fdf4e27e04f24b1735b558205eb58473aca2"
        },
        "date": 1748271079683,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18494234,
            "range": "± 93636",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18890361,
            "range": "± 151557",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20638190,
            "range": "± 130628",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24644353,
            "range": "± 301774",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57871286,
            "range": "± 1638566",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 353876152,
            "range": "± 4253974",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2762953175,
            "range": "± 128671235",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16164962,
            "range": "± 232674",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16431000,
            "range": "± 162646",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16924322,
            "range": "± 106269",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21760516,
            "range": "± 99900",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 56326285,
            "range": "± 3224584",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 330938482,
            "range": "± 3273448",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2621125854,
            "range": "± 24531237",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ub2262000@gmail.com",
            "name": "Utkarsh Bhardwaj",
            "username": "UtkarshBhardwaj007"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "7b224d3bf9ce1e8eebeac4cc33a06a702cae3501",
          "message": "add poke_deposit extrinsic to pallet-bounties (#8382)\n\n# Description\n\n* This PR adds a new extrinsic `poke_deposit` to `pallet-bounties`. This\nextrinsic will be used to re-adjust the deposits made in the pallet to\ncreate a new bounty.\n* Part of #5591 \n\n## Review Notes\n\n* Added a new extrinsic `poke_deposit` in `pallet-bounties`.\n* This extrinsic checks and adjusts the deposits made for creating a\nbounty.\n* Added a new event `DepositPoked` to be emitted upon a successful call\nof the extrinsic.\n* Although the immediate use of the extrinsic will be to give back some\nof the deposit after the AH-migration, the extrinsic is written such\nthat it can work if the deposit decreases or increases (both).\n* The call to the extrinsic would be `free` if an actual adjustment is\nmade to the deposit and `paid` otherwise (when no deposit is changed).\n* Added tests to test all scenarios.\n* Added benchmarks\n\n## TO-DOs\n* [x] Run CI cmd bot to benchmark\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-26T19:12:11Z",
          "tree_id": "1433bd45f52e24115d7c233c569607061b6a478e",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/7b224d3bf9ce1e8eebeac4cc33a06a702cae3501"
        },
        "date": 1748290081950,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18670303,
            "range": "± 135379",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19023087,
            "range": "± 191097",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20606390,
            "range": "± 106238",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24993678,
            "range": "± 143534",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 60112321,
            "range": "± 738382",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 344029408,
            "range": "± 5167269",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2361326134,
            "range": "± 122333688",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15826135,
            "range": "± 76954",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16067247,
            "range": "± 209024",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16657696,
            "range": "± 200596",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21093909,
            "range": "± 320910",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 55084928,
            "range": "± 484122",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 327398955,
            "range": "± 4678823",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2560522446,
            "range": "± 42024467",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "yrong1997@gmail.com",
            "name": "Ron",
            "username": "yrong"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "64aed49226dc592c456cb7aac126c84d5c0d78e8",
          "message": "Snowbridge: Remove asset location check for compatibility (#8473)\n\nThe `TokenIdOf`\n[convert](https://github.com/paritytech/polkadot-sdk/blob/4b83d24f4bc96a7b17964be94b178dd7b8f873b5/bridges/snowbridge/primitives/core/src/location.rs#L40)\nis XCM version-agnostic, meaning we will get the same token ID for both\nV5 and legacy V4 asset.\n\nHowever, the extra check is unnecessary, as\nthe`ConvertAssetId::convert(&token_id).ok_or(InvalidAsset)?;` alone is\nsufficient to verify whether the token is registered.",
          "timestamp": "2025-05-27T08:09:12Z",
          "tree_id": "56b2ff03bba5069b04087e104f45369a3498c4fa",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/64aed49226dc592c456cb7aac126c84d5c0d78e8"
        },
        "date": 1748336432501,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19346603,
            "range": "± 216975",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19633837,
            "range": "± 243385",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21234788,
            "range": "± 208753",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25466126,
            "range": "± 287064",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59911467,
            "range": "± 1181514",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 370461903,
            "range": "± 3682145",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2614783713,
            "range": "± 194939630",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16522337,
            "range": "± 86303",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16591453,
            "range": "± 150686",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17196934,
            "range": "± 92183",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21802241,
            "range": "± 194528",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 56598929,
            "range": "± 895452",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 335100063,
            "range": "± 6082767",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2638657337,
            "range": "± 14404059",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "73a0bca9cbcadb6798b72a5ebc18cf714b3fca25",
          "message": "[pallet-revive] impl_revive_api macro (#8652)\n\nMove pallet-revive runtime api implementation in a macro, so that we\ndon't repeat the code for every runtime.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-27T10:54:53Z",
          "tree_id": "b8d94aa8954f74f977ab2c1044c4bd9f099530e7",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/73a0bca9cbcadb6798b72a5ebc18cf714b3fca25"
        },
        "date": 1748347404241,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18725034,
            "range": "± 160731",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19048099,
            "range": "± 116155",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20757540,
            "range": "± 229105",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25000621,
            "range": "± 381019",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 58066115,
            "range": "± 962176",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 350981665,
            "range": "± 3184779",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2487159167,
            "range": "± 88628773",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16082569,
            "range": "± 109621",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16402007,
            "range": "± 115580",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17632952,
            "range": "± 138159",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22061072,
            "range": "± 244619",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 57904368,
            "range": "± 961096",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 329388353,
            "range": "± 3609495",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2556085207,
            "range": "± 21400918",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alex.theissen@me.com",
            "name": "Alexander Theißen",
            "username": "athei"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b6f48bf9872f1f7b0306ed8f4c57f2964c844e33",
          "message": "revive: Simplify the storage meter (#8667)\n\nHistorically, the collection of storage deposits was running in an\ninfallible context. Meaning we needed to make sure that the caller was\nable to pay the deposits when the last contract execution returns. To\nachieve that, we capped the storage deposit limit to the maximum balance\nof the origin. This made the code more complex: It conflated the deposit\n**limit** with the amount of balance the origin has.\n\nIn the meantime, we changed code around to make the deposit collection\nfallible. But never changed this aspect.\n\nThis PR rectifies that by doing:\n- The root storage meter and all its nested meter's limits are\ncompletely independent of the origin's balance. This makes it way easier\nto argue about the limit that a nested meter has at any point.\n- Consistently use `StorageDepositNotEnoughFunds` (limit not reached)\nand `StorageDepositLimitExhausted` (limit reached).\n- Origin not being able to pay the ed for a new account is now\n`StorageDepositNotEnoughFunds` and traps the caller rather then being a\n`TransferFailed` return code. Important since we are hiding the ed from\ncontracts. So it should also not be an error code that must be handled.\n\nIm preparation for:\nhttps://github.com/paritytech/contract-issues/issues/38\n\n---------\n\nCo-authored-by: xermicus <cyrill@parity.io>\nCo-authored-by: PG Herveou <pgherveou@gmail.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-27T13:21:07Z",
          "tree_id": "b7f2df2d1a2ed6d30866df16a40f67ee8388f694",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/b6f48bf9872f1f7b0306ed8f4c57f2964c844e33"
        },
        "date": 1748354943027,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19692011,
            "range": "± 338128",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20611123,
            "range": "± 334594",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22075943,
            "range": "± 371071",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 27096414,
            "range": "± 322624",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 62266905,
            "range": "± 1166996",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 388522949,
            "range": "± 6918051",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2857744302,
            "range": "± 225072834",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17417549,
            "range": "± 90752",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17479738,
            "range": "± 334530",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18282287,
            "range": "± 170095",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23467024,
            "range": "± 420385",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 60393520,
            "range": "± 2036745",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 362374670,
            "range": "± 5345390",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2846427024,
            "range": "± 97460520",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9dc13377ded3ed8bb4447906ac6cc6375f4698c8",
          "message": "cumulus-aura: Improve equivocation checks (#8669)\n\nInstead of just checking for the slot, we also take the block number and\nthe relay parent into account (as we actually allow to build multiple\nblocks per slot). Then this pr also ensures that we are still able to\nimport blocks from availability recovery. This ensures that a network\ndoesn't get stuck on a storm of equivocations. The next step after this\npull request would be to implement on chain slashing for equivocations\nand probably disabling of the offending author.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-27T15:45:46Z",
          "tree_id": "99133b51f90729e7c348f3ec91b5cbf958df71d3",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/9dc13377ded3ed8bb4447906ac6cc6375f4698c8"
        },
        "date": 1748363954765,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19597811,
            "range": "± 496059",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19178686,
            "range": "± 160481",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21143401,
            "range": "± 155388",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25519096,
            "range": "± 256513",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56983347,
            "range": "± 732274",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 349097303,
            "range": "± 7599834",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2463357291,
            "range": "± 110470884",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16899557,
            "range": "± 163557",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16990208,
            "range": "± 379147",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17443801,
            "range": "± 654845",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21640363,
            "range": "± 119487",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 55175888,
            "range": "± 500967",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 323733725,
            "range": "± 5707022",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2574136468,
            "range": "± 33641699",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4baf234cfa8da5e79c920dfd23a1e2344a0dfb84",
          "message": "Bump memory-db (#8607)\n\nBump memory-db to pick up\nhttps://github.com/paritytech/polkadot-sdk/pull/8606 and\nhttps://github.com/paritytech/trie/pull/221\n\nAdditionally, polkavm needs to be bumped to get rid of to get rid of\nhttps://github.com/paritytech/polkadot-sdk/actions/runs/15180236627/job/42688141374#step:5:1869\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>",
          "timestamp": "2025-05-27T17:42:18Z",
          "tree_id": "9d6e906560e7caba6fa586e6e897f1127b7b361c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4baf234cfa8da5e79c920dfd23a1e2344a0dfb84"
        },
        "date": 1748371968835,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18398645,
            "range": "± 136203",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18811357,
            "range": "± 162000",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20282079,
            "range": "± 174821",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24396362,
            "range": "± 157243",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56544116,
            "range": "± 598444",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 344087523,
            "range": "± 3097396",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2466683295,
            "range": "± 126896635",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15919520,
            "range": "± 631445",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16070294,
            "range": "± 120134",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16720163,
            "range": "± 80918",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21195591,
            "range": "± 142739",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53650996,
            "range": "± 331858",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 313968979,
            "range": "± 3357937",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2520144489,
            "range": "± 12069044",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eresav@me.com",
            "name": "Andrei Eres",
            "username": "AndreiEres"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "10cde1f6119068cc2b1d71b536cf5e4c442b77b2",
          "message": "Add trie cache warmup (#7556)\n\n# Description\nFixes https://github.com/paritytech/polkadot-sdk/issues/7533.\n\nPart of launching smart contracts on AssetHub. The current task involves\nwarming up the state and performing sanity checks to ensure that memory\nusage remains within reasonable limits; otherwise, it should abort\ngracefully.\n\nHere is a breakdown of the task by parts: \n- **Configuration.** We use a CLI flag to trigger the warm up. To\nincrease the cache size, we use an existing flag.\n- **Warm-up.** We populate the trie cache with values from the database\nusing a best hash as a storage root. For normal use we spawn a\nbackground task for it, for testing purposes we warm up in a blocking\nmanner.\n- **Sanity checks.** If we find that the configured cache size is too\nlarge, we warn.\n\nVariants of the added flag:\n| Flag | Meaning |\n\n|---------------------------------|---------------------------------------------|\n| [no flag] | no warm-up |\n| warm-up-trie-cache | non-blocking warmup |\n| warm-up-trie-cache non-blocking | non-blocking warmup (same as just\nthe flag) |\n| —warm-up-trie-cache blocking | blocking warmup |\n\n## Integration\nTested on a snapshot from polkadot-asset-hub: 5426064 keys, ~900MIB\nstate. Populating Trie cache takes 1.5–2 minutes on Macbook Pro M2.\n\n## Aditional Notes\nInitially, we thought about putting the entire state into memory using a\nCLI flag or a runtime parameter, but decided against it. That’s up to\ncollators to decide on which setup run their machines, they can use the\ncurrent cache size setting to increase the throughput.\n\n## Todos\nTesting moved to https://github.com/paritytech/polkadot-sdk/pull/8644\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Alexandru Gheorghe <49718502+alexggh@users.noreply.github.com>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>",
          "timestamp": "2025-05-28T07:25:44Z",
          "tree_id": "d0651e283a76fa6c43f7ced7520471aba8e1c904",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/10cde1f6119068cc2b1d71b536cf5e4c442b77b2"
        },
        "date": 1748421164931,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18524597,
            "range": "± 141867",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18857721,
            "range": "± 229345",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20301407,
            "range": "± 271918",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24432309,
            "range": "± 368163",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56766048,
            "range": "± 1043504",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 326584862,
            "range": "± 5868816",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2520877628,
            "range": "± 164530866",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16060546,
            "range": "± 107455",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16147742,
            "range": "± 156434",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16947620,
            "range": "± 509709",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21311080,
            "range": "± 303768",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54862367,
            "range": "± 1791539",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 319732835,
            "range": "± 4557300",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2523308000,
            "range": "± 19400187",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a5f86681300a590c98c657955bc623749c759604",
          "message": "Shared Add ethereum-standards crate (#8679)\n\nShared PR that adds ethereum-standards crate used by upcoming #7762 and\n#8365\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Francisco Aguirre <franciscoaguirreperez@gmail.com>",
          "timestamp": "2025-05-28T10:20:47Z",
          "tree_id": "a4ba7f4b685b22dc01349ec57a00d37977e6def0",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/a5f86681300a590c98c657955bc623749c759604"
        },
        "date": 1748431051177,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18989519,
            "range": "± 161627",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19297783,
            "range": "± 167936",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21069378,
            "range": "± 225435",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25427285,
            "range": "± 463135",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 58930680,
            "range": "± 933948",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 356388922,
            "range": "± 3526785",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2878716116,
            "range": "± 222165976",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16364773,
            "range": "± 146505",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16420258,
            "range": "± 482592",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17235341,
            "range": "± 122118",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22038217,
            "range": "± 210769",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 57165888,
            "range": "± 783023",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 333210284,
            "range": "± 6565420",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2627015798,
            "range": "± 45708839",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "35698397+drskalman@users.noreply.github.com",
            "name": "drskalman",
            "username": "drskalman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b4b7439e6f7bdd61a0a0d9fc3949b1f50a8dcfb6",
          "message": "Implement Proof Of Possession capability for all public key crypto types (#6010)\n\n- Implement `ProofOfPossession` traits with default implementation.\n- Implement their derive macro in a new proc-macro crate in\n`pubkeycrypto` create which eventually should contains all pubkey crypto\nscheme as recommended by #1975\n- Derive ProofOfPossession for all pubkey crypto type beside BLS.\n\n- [x] Implement Nugget BLS proof of possession which should certifies\nthat the unique secret key known to the prover is used to generate both\npublic keys in G1 and G2.\n- [x] Implement sign Host function for BLS12-381 necessary to be able to\ngenerate proof of possion through runtime.\n- [x] Implement generation and verification of proof of possession\nfunctions in all RuntimeApp and RuntimeAppPublic s.\n\n---------\n\nCo-authored-by: Andrew Burger <andrewburger1991@gmail.com>\nCo-authored-by: Davide Galassi <davxy@datawok.net>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-05-28T10:23:48Z",
          "tree_id": "a0ecb6b5ff85adc5aba7ca79a715bfbc154a77c6",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/b4b7439e6f7bdd61a0a0d9fc3949b1f50a8dcfb6"
        },
        "date": 1748432472857,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 20159074,
            "range": "± 517750",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 21195043,
            "range": "± 347215",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 23072189,
            "range": "± 958322",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 27158195,
            "range": "± 370657",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 65198244,
            "range": "± 1267284",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 437042959,
            "range": "± 10179733",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2834545696,
            "range": "± 17968157",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17747298,
            "range": "± 220569",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17918094,
            "range": "± 168570",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18857419,
            "range": "± 211999",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 24089904,
            "range": "± 203750",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 60787111,
            "range": "± 643178",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 378268134,
            "range": "± 6247073",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2883455378,
            "range": "± 41278553",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "178801527+raymondkfcheung@users.noreply.github.com",
            "name": "Raymond Cheung",
            "username": "raymondkfcheung"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "38b7581fc04aebc7d68983cee28a6a21367de8fd",
          "message": "CI: Enforce SemVer restrictions on backport PRs with optional override via `validate: false` (#8632)\n\nThis PR enforces SemVer policies on backport branches by ensuring crate\nversion bumps in `.prdoc` files are limited to `minor`, `patch`, or\n`none` unless explicitly overridden.\n\n## Key Points\n\n* Backport PRs targeting stable branches must restrict crate bumps to\n`minor`, `patch`, or `none` to maintain stability.\n* `major` bumps are disallowed unless explicitly overridden by adding\n`validate: false` to the crate entry in `prdoc/pr_$PR.prdoc`.\n* Developers must also provide a justification in the PR description\nwhen using `validate: false`.\n* The CI validates that any `major` bump is only allowed if accompanied\nby `validate: false`; otherwise, the backport check fails with a clear\nerror message.\n\nThis validation prevents accidental inclusion of breaking changes in\nbackports while allowing informed exceptions with documented\njustification.\n\nTo summarise the logic:\n\n| bump level | validate | backport result |\n|------------|----------|-----------------|\n| none       | (nil)    | allowed         |\n| patch      | (nil)    | allowed         |\n| minor      | (nil)    | allowed         |\n| major      | false    | allowed         |\n| major      | (nil)    | failed          |\n\nCloses: #8629\n\n---------\n\nCo-authored-by: Adrian Catangiu <adrian@parity.io>",
          "timestamp": "2025-05-28T13:20:48Z",
          "tree_id": "1f016293bf66c4a10d611c94291eae7ed3d35b28",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/38b7581fc04aebc7d68983cee28a6a21367de8fd"
        },
        "date": 1748442223128,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19458728,
            "range": "± 228031",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20066708,
            "range": "± 311952",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21376430,
            "range": "± 193387",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25581391,
            "range": "± 344875",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 62270455,
            "range": "± 979310",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 362029330,
            "range": "± 5615300",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2739752501,
            "range": "± 122412452",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16613014,
            "range": "± 268532",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16979679,
            "range": "± 235068",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17526632,
            "range": "± 107728",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22185314,
            "range": "± 132684",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 57559684,
            "range": "± 685383",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 343816652,
            "range": "± 6327768",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2655115300,
            "range": "± 18928156",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "178801527+raymondkfcheung@users.noreply.github.com",
            "name": "Raymond Cheung",
            "username": "raymondkfcheung"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fed35af5cd7398e64e60fb3578fe4f0732856c11",
          "message": "Make `WeightBounds` return `XcmError` to surface failures (#8535)\n\nThis PR partially addresses #8419 by improving error handling and\ntraceability for XCM weight calculation failures in `WeightInfoBounds`\nand `FixedWeightBounds`.\n\n## Why change\n\nThe vague \"Failed to prepare message\" error in #8419 makes debugging\nextremely difficult. The current implementation drops detailed errors\nand omits log context, especially for cases like decoding instructions\nor violating instruction count limits. Previously, XCM weight\ncalculation errors were surfaced only as `Result<Weight, ()>`, losing\nvaluable error information and forcing all upstream consumers to treat\nthem as opaque failures.\n\n## How change\n\n* Updates return types: Changes `WeightBounds::weight` and\n`instr_weight` to return `Result<Weight, XcmError>` instead of\n`Result<Weight, ()>`\n* Improves internal error handling: Uses `Result<Weight, XcmError>`\ninternally for:\n    - Instruction decoding failures → `FailedToDecode`\n    - Message/instruction weight overflows → `Overflow`\n    - Excessive instruction count → `ExceedsStackLimit`\n* Adds structured debug logging:\n    - `weight`: logs error type, instructions remaining, message length\n    - `instr_weight`: logs error type, instruction, and limit\n* Updates consumers: Ensures downstream callers (e.g., `XcmExecutor`,\n`ExecuteXcm`) properly handle the structured errors\n\nThis enables better structured error handling and debugging while\nproviding detailed context for XCM weight calculation failures.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-29T05:59:07Z",
          "tree_id": "4e295d0d3ca3ad39f9423bad940624bccfae1d22",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/fed35af5cd7398e64e60fb3578fe4f0732856c11"
        },
        "date": 1748502170432,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19646098,
            "range": "± 322955",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19878484,
            "range": "± 314624",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21285690,
            "range": "± 137272",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25712020,
            "range": "± 501486",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59904592,
            "range": "± 1440421",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 353803381,
            "range": "± 5345232",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2833190132,
            "range": "± 57583654",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16681750,
            "range": "± 143509",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16871818,
            "range": "± 184288",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17343649,
            "range": "± 119810",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22460297,
            "range": "± 178707",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 58524370,
            "range": "± 1565563",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 332357071,
            "range": "± 6640702",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2611245799,
            "range": "± 26429496",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1db9f930a56be566a6bd39bc9e6c47628f7c8b76",
          "message": "bound trusted local cache to shared limits sizes (#8688)\n\nThis\nhttps://github.com/paritytech/polkadot-sdk/pull/7556#discussion_r2107732009\nmade me think that we can have some miss-uses of the trusted cache, so\nit needs some reasonable bounds for the size.\n\nSince there is no point in letting it grow past the shared cache limits,\nbecause the items will be discarded anyways when we propagate them back\nto the share cache so I decided to bound it to those limits.\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-29T07:53:20Z",
          "tree_id": "e659e8690ff4b91351ec4724e495e296dde74adb",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/1db9f930a56be566a6bd39bc9e6c47628f7c8b76"
        },
        "date": 1748508833291,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18342132,
            "range": "± 237171",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18600888,
            "range": "± 159260",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20170148,
            "range": "± 168587",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24533015,
            "range": "± 219397",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54934038,
            "range": "± 496919",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 305845394,
            "range": "± 5454780",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2390189149,
            "range": "± 101490131",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16196604,
            "range": "± 156664",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16214595,
            "range": "± 72402",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16903424,
            "range": "± 92754",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21213993,
            "range": "± 185737",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53864294,
            "range": "± 278005",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 309160405,
            "range": "± 3237220",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2476020010,
            "range": "± 12494585",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "karol.k91@gmail.com",
            "name": "Karol Kokoszka",
            "username": "karolk91"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "477595ff951be6218c9a70857572959f02e1eb1c",
          "message": "transfer_assets benchmarking and weights for people chains (#8700)\n\nRelates to:\nhttps://github.com/paritytech/polkadot-sdk/pull/8369#discussion_r2111743837\n\nIntroduces implementation of `set_up_complex_asset_transfer()` to\ncorrectly benchmark weights for `transfer_assets` extrinsics on Rococo\nPeople and Westend People\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Adrian Catangiu <adrian@parity.io>",
          "timestamp": "2025-05-29T09:58:36Z",
          "tree_id": "812bad752aac8ad5c5e91037b8bcc9f8dc7e06d0",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/477595ff951be6218c9a70857572959f02e1eb1c"
        },
        "date": 1748515794785,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18521719,
            "range": "± 119797",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18837101,
            "range": "± 195941",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20937567,
            "range": "± 279318",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25260619,
            "range": "± 260909",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59890954,
            "range": "± 1266805",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 347667816,
            "range": "± 13025201",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2562769042,
            "range": "± 113305850",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16042881,
            "range": "± 211734",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16041755,
            "range": "± 103863",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16654745,
            "range": "± 186000",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21362886,
            "range": "± 319624",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54287536,
            "range": "± 1925002",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 323177795,
            "range": "± 5794184",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2590855795,
            "range": "± 16075929",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "bkontur@gmail.com",
            "name": "Branislav Kontur",
            "username": "bkontur"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d6b9159cde1c30b98764db0596edb2ce1bdaf5be",
          "message": "Add `Paras` `authorize_code_hash` + `apply_authorized_code` feature (#7592)\n\nCloses: https://github.com/paritytech/polkadot-sdk/issues/7574\nRelates to: https://github.com/paritytech/polkadot-sdk/issues/7591\n\n## Motivation\n\nThis feature is useful when triggering a `Paras` pallet call from a\ndifferent chain than the one where the `Paras` pallet is deployed. For\nexample, we may want to send `Paras::force_set_current_code(para, code)`\nfrom the Collectives and/or AssetHub to the relay chain (because the\nrelaychain governance will be migrated to the AssetHub as a part of\nAHM).\n\nThe primary reason for this approach is to avoid transferring the entire\n`new_code` Wasm blob between chains. Instead, we authorize the\n`code_hash` using `root` via `fn\nauthorize_force_set_current_code_hash(new_authorization, expire_at)`.\nThis authorization can later be applied by anyone using\n`Paras::apply_authorized_force_set_current_code(para, new_code)`. If\n`expire_at` is reached without the authorization being used, it is\nautomatically removed.\n\n## Usage\n\nThis feature is intended for use in two scenarios:\n\n- The D-Day scenario, where we can restart AssetHub from Collectives —\nsee the PoC: https://github.com/paritytech/polkadot-sdk/pull/8141\n- Using `force_set_current_code` for any parachain from migrated\ngovernance to AssetHub (AHM)\n\n## TODO\n- [x] ~cover also `add_trusted_validation_code` or\n`force_schedule_code_upgrade` - see comment bellow:\nhttps://github.com/paritytech/polkadot-sdk/pull/7592#issuecomment-2678092104~\nno see other\n[comment](https://github.com/paritytech/polkadot-sdk/pull/7592#discussion_r1978344413)\n\n\n## Open questions\n\n- [ ] ~Do we need something like `poke_authorized_code_hash`? E.g. in\ncase that we authorize code hash, but nobody would apply it and the\nparachain starts working with old/other_new code? Is this possible?~\n- [ ] Do we need something similar for `frame_system` pallet and\n`set_code` / `set_code_without_checks`?\n- [ ] Can we achieve the same with `pallet-whitelist`?\n- [ ] Do we have other extrinsics over chains which has `code`\nattribute?\n- [x] Do we need to add `validate_unsigned` for `apply_authorized_code`?\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: Kian Paimani <5588131+kianenigma@users.noreply.github.com>\nCo-authored-by: Adrian Catangiu <adrian@parity.io>",
          "timestamp": "2025-05-29T10:36:46Z",
          "tree_id": "99befc0e7f10f0b0c3540c594eeca5424060ab67",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d6b9159cde1c30b98764db0596edb2ce1bdaf5be"
        },
        "date": 1748518800374,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19591006,
            "range": "± 922722",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19834608,
            "range": "± 256828",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21516402,
            "range": "± 252300",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25762752,
            "range": "± 310257",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 61313173,
            "range": "± 1222206",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 402678742,
            "range": "± 9904664",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2625354279,
            "range": "± 127587621",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16879321,
            "range": "± 124848",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17209923,
            "range": "± 190767",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17865783,
            "range": "± 192042",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22699255,
            "range": "± 271320",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 57704012,
            "range": "± 638728",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 355003643,
            "range": "± 2811584",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2687307514,
            "range": "± 24054483",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "karol.k91@gmail.com",
            "name": "Karol Kokoszka",
            "username": "karolk91"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "05649f110fdbdadd024eb38784a2a37aa1aac087",
          "message": "Sync xcm related test utils impls with runtimes repo (#8369)\n\n# Description\n\nThis PR covers an effort to sync some utils implementations that were\ncreated/modified for the purpose of using them in [runtimes\nrepo](https://github.com/polkadot-fellows/runtimes) with the intention\nto introduce there first and then upstream back to polkadot-sdk\n\n# Checklist\n\n* [x] `test_parachain_is_trusted_teleporter` utilizng dry-run as in\n[PR](https://github.com/polkadot-fellows/runtimes/pull/673/files/dc3f9cdd588e62f3a4abd5b0ca08262fcb568882#diff-7346706278168c97dfec9e73bec1a115274a2be89a3147b914dd2eedec9f6269R344)\n* [x] `test_relay_is_trusted_teleporter` utilizing dry-run as currently\non\n[main](https://github.com/polkadot-fellows/runtimes/blob/f5b3d53f25cf7a78479874badf3aa44c6f7ec49b/integration-tests/emulated/helpers/src/lib.rs#L71)\n* [x] `test_parachain_is_trusted_teleporter_for_relay` utilizing dry-run\nas currently on\n[main](https://github.com/polkadot-fellows/runtimes/blob/f5b3d53f25cf7a78479874badf3aa44c6f7ec49b/integration-tests/emulated/helpers/src/lib.rs#L209)\n* [x] modified `ToParachainDeliveryHelper` to utilize `WithdrawAsset`\nbased worst-case fee estimation instead of `ClearOrigin`, first\nintroduced in [forked\nrepo](https://github.com/karolk91/runtimes/pull/1/files#diff-ef0567d8ca7b55f6f8fa190c7613f343f0ac6c0314492b8db4a1b213f351f7a7R46)\n(to be merged to fellows)\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Adrian Catangiu <adrian@parity.io>\nCo-authored-by: Andrii <ndk@parity.io>",
          "timestamp": "2025-05-29T12:46:16Z",
          "tree_id": "f720787dd58a53362b07e7e6dfa34fa0d22f51e9",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/05649f110fdbdadd024eb38784a2a37aa1aac087"
        },
        "date": 1748526009764,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19174612,
            "range": "± 199240",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20098655,
            "range": "± 745293",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20994986,
            "range": "± 294893",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25376300,
            "range": "± 525277",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59366722,
            "range": "± 836453",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 377863665,
            "range": "± 5631301",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2569322226,
            "range": "± 200037535",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16602203,
            "range": "± 237097",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16553110,
            "range": "± 134652",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17394784,
            "range": "± 109862",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22070281,
            "range": "± 195282",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 57810705,
            "range": "± 461849",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 364175021,
            "range": "± 3118019",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2710600958,
            "range": "± 36116412",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "skunert49@gmail.com",
            "name": "Sebastian Kunert",
            "username": "skunert"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "4b74df3b36b2d8fb2e87f951bed9604f149dccb8",
          "message": "Allow building on older relay parents (#8299)\n\n## Context\nWith the slot-based collator and elastic-scaling, parachains build\nblocks at a fast pace. A classic example is a chain with 3 cores, which\nwould produce one block every 2 seconds. With such a busy schedule,\ncollator nodes do not have enough time to author their 3 blocks on\nmultiple relay chain forks.\n\nTherefore, we pick the current best relay chain block at block\nproduction as our parent. In most cases, this block will be on the fork\nthat continues. However, it can happen that multiple BABE primary blocks\nare present or we see a secondary block first due to timing issues. In\nthat case, we would build on the wrong block.\n\n## Mitigation\nTo mitigate building on the wrong relay chain forks, the idea emerged to\njust build on an older relay parent. The depth of relay chain forks is\nusually very low, mostly 1 block. By building 1 or 2 blocks behind the\ntip, we can eliminate the impact of the relay chain forks already.\n\n## Changes Overview\nThe PR consists of two larger parts:\n1. Modifications to the block builder task, so that it picks a relay\nchain parent at a given offset and fills the parachain inherent with the\nrequired data.\n2. Modifications to the `set_validation_data` inherent. This is\nnecessary to enforce the relay parent offset. Without these runtime side\nchanges, a parachain author could just build at the tip and skip a\nprevious author. In this PR, I introduce a new runtime API that tells\nthe node side at which offset blocks should be built. It enforces this\noffset by requiring multiple descendants of the relay parent to be\npresent in the `set_validation_data` inherent. If the offset, for\nexample, is 2, the inherent requires 2 descendants and the relay parent\nitself to be present.\n\n## Tradeoffs\n- To verify these descendant headers, the relay chain authorities need\nto be added to the relay chain state proof, which consumes a bit of PoV\nspace.\n- The latency of incoming XCM messages is delayed by `OFFSET * 6s`.\n- The unincluded segment needs to increase by `VELOCITY * RP_OFFSET`.\nThe problem is that from the runtimes perspective, the currently\nproduced block is not included at the relay parent.\n\n## Compatibility\nThe changes here should be backward compatible. The main point of\nfriction is the `ParachainInherent`, where new runtimes expect a\ndifferent format. I am keeping the [legacy\nversion](https://github.com/paritytech/polkadot-sdk/blob/524f9f40f450c27edbe61a838a5d6c6cf64a6cf9/cumulus/primitives/parachain-inherent/src/lib.rs#L64-L64)\naround for now so that we can try to decode it the new version is not\npassed.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: Michal Kucharczyk <1728078+michalkucharczyk@users.noreply.github.com>",
          "timestamp": "2025-05-29T14:16:46Z",
          "tree_id": "61e9867d9090a8d0a5501df27268665bbd659aab",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4b74df3b36b2d8fb2e87f951bed9604f149dccb8"
        },
        "date": 1748533163215,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 20156305,
            "range": "± 242114",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20638758,
            "range": "± 297691",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22172481,
            "range": "± 168516",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26813019,
            "range": "± 378822",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 65723555,
            "range": "± 1632861",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 399579888,
            "range": "± 10744779",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 3007151849,
            "range": "± 236082002",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17260266,
            "range": "± 239417",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17303854,
            "range": "± 194911",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18059621,
            "range": "± 219387",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23088474,
            "range": "± 285726",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 60837110,
            "range": "± 753899",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 370609354,
            "range": "± 3342730",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2790037344,
            "range": "± 29796092",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "yrong1997@gmail.com",
            "name": "Ron",
            "username": "yrong"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "40e3fcb050147c89e80c3dc1d47599ce23c619ed",
          "message": "Snowbridge: Unpaid execution when bridging to Ethereum (#8599)\n\n### Context\n\nCurrently we use\n[SovereignPaidRemoteExporter](https://github.com/paritytech/polkadot-sdk/blob/ff5c67c8a3d60ccb3f0af114a07db8f4bec485a0/cumulus/parachains/runtimes/assets/asset-hub-westend/src/xcm_config.rs#L457-L464),\nwhich is unnecessary since all fees in Snowbridge V2 will be estimated\non the fly and injected into the XCM.\n\nResolves: https://linear.app/snowfork/issue/SNO-1510\n\n---------\n\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>\nCo-authored-by: Adrian Catangiu <adrian@parity.io>",
          "timestamp": "2025-05-29T17:11:02Z",
          "tree_id": "8529f825c120b2fe298320d1643f82d15ee39da4",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/40e3fcb050147c89e80c3dc1d47599ce23c619ed"
        },
        "date": 1748545771176,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 21233543,
            "range": "± 297639",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 21596822,
            "range": "± 256500",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 23101978,
            "range": "± 426490",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 28189479,
            "range": "± 609175",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 69369730,
            "range": "± 2411164",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 437660223,
            "range": "± 8780089",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2955160186,
            "range": "± 110125308",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 18275391,
            "range": "± 374409",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 18115801,
            "range": "± 204533",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 19031669,
            "range": "± 299854",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 24203354,
            "range": "± 254493",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 63454686,
            "range": "± 951807",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 389782840,
            "range": "± 9343760",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2911338057,
            "range": "± 29918709",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "paolo@parity.io",
            "name": "Paolo La Camera",
            "username": "sigurpol"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e6b6769d1c524fd55f51bb55fab53dc389dc6e26",
          "message": "Staking (EPMB): update the semantics of elect() and Phase::Extract(N) (#8633)\n\n- Make `elect()` in `election-provider-multi-block` (`EPMB`) the sole\nresponsible for `Phase::Export` transitions:\n- before this change, the handling was split between EPMB's\n`on_initialize()/next()` and `elect()` (e.g. as triggered by\nstaking-async's `on_initialize()`).\n- Update the semantics of elect(N) and of the inner value of Export(N):\n- calling `elect(N)` means now that we are expecting to serve result for\npage N and to transition to `Phase::Export(N-1)` if N > 0 or to\n`Phase::Off` if N == 0.\n\nFor a 4-page election, the flow is the following:\n\n1. **elect(3):**\n   - If in `Done`, serve result for page 3, transition to `Export(2)`.\n2. **elect(2):**\n- If in `Export(2)`, serve result for page 2, transition to `Export(1)`.\n3. **elect(1):**\n- If in `Export(1)`, serve result for page 1, transition to `Export(0)`.\n4. **elect(0):**\n   - If in `Export(0)`, serve result for page 0, transition to `Off`.\n\nThis change fixes the issue for which we were handling multiple\ntransactions in the same block or not depending on the order of\ninitialization of the pallets. E.g. if `staking-async` was initialized\nbefore `EPMB`, in block `X`:\n- when in `Phase::Done`, calling `elect(N)` as coming for\n`staking-async`'s `on_initialize()`, forced the transition `Done` ->\n`Export(N)`\n- the following `next()` triggered by `EPMB`'s `on_initialize()` forced\nthe transition still within block X from `Export(N)` to `Export(N-1)`\n\nThis is fixed now since the transitions around `export` phase are fully\nencapsulated into `EPMB`'s `elect()` function.",
          "timestamp": "2025-05-30T06:48:43Z",
          "tree_id": "22ffc7f19c2cd9e39aa526e62cb3378af62f58e4",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e6b6769d1c524fd55f51bb55fab53dc389dc6e26"
        },
        "date": 1748591057181,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19533668,
            "range": "± 541943",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19799430,
            "range": "± 274567",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21679110,
            "range": "± 218912",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25255094,
            "range": "± 233383",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 60798996,
            "range": "± 1525007",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 394790283,
            "range": "± 8500956",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2890972847,
            "range": "± 70156199",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16897335,
            "range": "± 109147",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16984820,
            "range": "± 204882",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17371081,
            "range": "± 147901",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22251439,
            "range": "± 234551",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 56214685,
            "range": "± 828363",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 339783321,
            "range": "± 4489986",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2641442410,
            "range": "± 35594807",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "paolo@parity.io",
            "name": "Paolo La Camera",
            "username": "sigurpol"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3d0c061d5111723cedab73b09e52ddc052dd00a7",
          "message": "Staking (EPMB): Add defensive error handling to voter snapshot creation and solution verification (#8687)\n\n- Refactor snapshot creation to emit events and triggers defensive panic\non failure\n- Replace unwrap() with defensive_unwrap_or(u32::MAX) to ensure solution\nfails verification gracefully when desired_targets is unavailable rather\nthan panicking.\n- Add error events for failed target and voter snapshots\n\nClose #8685.",
          "timestamp": "2025-05-30T15:21:59Z",
          "tree_id": "d462350a619bef86b55b5f3eca050a1d6a1f7849",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/3d0c061d5111723cedab73b09e52ddc052dd00a7"
        },
        "date": 1748621676802,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18505443,
            "range": "± 122756",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18962664,
            "range": "± 143201",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20777568,
            "range": "± 298898",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24905471,
            "range": "± 606123",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 58337760,
            "range": "± 872594",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 379426084,
            "range": "± 8158399",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2669488466,
            "range": "± 242191342",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15867071,
            "range": "± 280124",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17306943,
            "range": "± 133983",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18147237,
            "range": "± 181449",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22801339,
            "range": "± 455030",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 59736801,
            "range": "± 1102858",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 359493747,
            "range": "± 11498450",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2862807203,
            "range": "± 33663864",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "5588131+kianenigma@users.noreply.github.com",
            "name": "Kian Paimani",
            "username": "kianenigma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "7bb570ddac5df9819bff8cea59aad1b95fb411ed",
          "message": "[AHM] Staking async fixes for XCM and election planning (#8422)\n\nThis PR brings a few small fixes related to the XCM messages of\nstaking-async, among other small fixes:\n\n\n* [x] Allows `xcm::validate` to check the message size, and we actually\nnow act upon it in the `staking-async-rc/parachain-runtime`s. The code\nis a bit duplicate now, and there is a TOOD about how to better refactor\nit later.\n* [x] Part of this work is backported separately as\nhttps://github.com/paritytech/polkadot-sdk/pull/8409\n* [x] It brings a default `EraElectionPlannerOf` which should be the\nright tool to use to ensure elections always happen in time, with an\neducated guess based on `ElectionProvider::duration` rather than a\nrandom number.\n* [x] It adds a few unit tests about the above\n* [x] It silences some logs that were needlessly `INFO`, and makes the\nprinting of some types a bit more CLI friendly.\n* [x] Fix the issue with duplicate voters in solution type: see\nhttps://github.com/paritytech/polkadot-sdk/pull/8585\n* [x] Move `PagedRawSolution` to be unbounded, and therefore decode-able\nwithout PoV\n* [x] Undo a rename from `ClaimedRewards` to `ErasClaimedRewards`\n  * [ ] Needs fixing in westend\n\n---------\n\nCo-authored-by: Adrian Catangiu <adrian@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Paolo La Camera <paolo@parity.io>",
          "timestamp": "2025-05-30T15:54:43Z",
          "tree_id": "fb9b46a6085e232e05f2f53e6f9acabe27244662",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/7bb570ddac5df9819bff8cea59aad1b95fb411ed"
        },
        "date": 1748623828823,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18658584,
            "range": "± 207675",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19109435,
            "range": "± 256202",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20592121,
            "range": "± 163241",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24636698,
            "range": "± 217997",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57332131,
            "range": "± 594218",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 346325208,
            "range": "± 4580806",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2632968182,
            "range": "± 171344897",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16894371,
            "range": "± 492899",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16704507,
            "range": "± 111203",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17317109,
            "range": "± 179910",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22013999,
            "range": "± 338787",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 57596870,
            "range": "± 612733",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 332925201,
            "range": "± 4936801",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2613460307,
            "range": "± 16711244",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eskimor@users.noreply.github.com",
            "name": "eskimor",
            "username": "eskimor"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "1a8313fb2f88053e931370811973e8ce0394686a",
          "message": "Broker: Introduce min price + adjust renewals to lower market. (#8630)\n\nThis PR provides:\n\n1. The means for the runtime to configure a minimum price for sales.\n2. Prevents renewals to get detached too much from current market, by\nbumping them at least to the `end_price` of the current sale.\n\nTODO:\n\n- [x] Implement\n- [x] Add tests\n- [x] Fix runtimes/Make Rococo + Westend use the new price controller.\n- [x] prdoc\n- [x] Leave configurability to the runtime\n\n---------\n\nCo-authored-by: Robert <robert@gonimo.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Maciej <maciej.zyszkiewicz@parity.io>",
          "timestamp": "2025-05-30T16:16:57Z",
          "tree_id": "5bae32eea3ff61143198e621ec2d34820a5e931b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/1a8313fb2f88053e931370811973e8ce0394686a"
        },
        "date": 1748625381395,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 22120864,
            "range": "± 225585",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 22608382,
            "range": "± 318469",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 24291701,
            "range": "± 449500",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 28597007,
            "range": "± 563478",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 69787410,
            "range": "± 1892041",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 459969044,
            "range": "± 3855140",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 3249692700,
            "range": "± 148842388",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 18412112,
            "range": "± 172517",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 18841228,
            "range": "± 218529",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 19519769,
            "range": "± 172893",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 24751218,
            "range": "± 364323",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 64730524,
            "range": "± 1229518",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 416680359,
            "range": "± 9115937",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2942627256,
            "range": "± 34310430",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ae4a242b5439541b223fdb22fa3830886637244b",
          "message": "pallet-assets ERC20 precompile (#8554)\n\nAdd ERC20 precompile for pallet-asset.\n\nSince there can be multiple instances of `pallet-assets`, the Precompile\nis implemented for an `AssetPrecompileConfig` that defines both the\naddress range to match and how to extract the asset_id from the address.\n\nFor now I have only created one `AssetIdExtractor` that pulls an u32\nasset id encoded in the address.\n\nFollow up PR will define stateful extractor to extract the id from\nstorage for foreign assets.\n\nOther solidity traits will be added in follow up PRs\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Francisco Aguirre <franciscoaguirreperez@gmail.com>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>",
          "timestamp": "2025-05-30T17:42:04Z",
          "tree_id": "8035f329361ef0b96b296835493c212f30f658cd",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ae4a242b5439541b223fdb22fa3830886637244b"
        },
        "date": 1748629930763,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 20092020,
            "range": "± 179180",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 21000153,
            "range": "± 350944",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22684844,
            "range": "± 146042",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26797636,
            "range": "± 417711",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 65113730,
            "range": "± 668714",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 432202313,
            "range": "± 4522709",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2913702291,
            "range": "± 214876005",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17666850,
            "range": "± 181039",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17674840,
            "range": "± 589770",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18491937,
            "range": "± 107857",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23659780,
            "range": "± 391288",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 60465153,
            "range": "± 780364",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 371585815,
            "range": "± 8639345",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2817415214,
            "range": "± 48422641",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "franciscoaguirreperez@gmail.com",
            "name": "Francisco Aguirre",
            "username": "franciscoaguirre"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "65ade498b63bf2216d1c444f28c1b48085417f13",
          "message": "Nest errors in pallet-xcm (#7730)\n\nErrors in `pallet-xcm` are frustrating. You execute an XCM instruction\nand get `LocalExecutionIncomplete`: no details, no context. Was it\ninsufficient balance? An account conversion failure? You're left\nguessing.\n\nTo fix this, we introduce `LocalExecutionIncompleteWithError`, which\nnests an `ExecutionError` enum inside `LocalExecutionIncomplete`. This\nprovides specific error details, like insufficient balance or asset\ntransaction failures, making debugging easier for users and\napplications. FRAME errors are limited to 4 bytes, and we were only\nusing one. By nesting `ExecutionError`, we utilize the full 4 bytes with\na compact enum that mirrors `XcmError` for consistency.\n\nTo make this robust, we reworked problematic errors. For instance,\n`FailedToTransactAsset` previously took a string, which couldn’t fit in\n4 bytes. We’ve replaced it with a unit variant in `ExecutionError`,\nlogging the string for debugging while keeping the encoding compact.\nThis ensures detailed, efficient error reporting.\n\n---------\n\nCo-authored-by: Raymond Cheung <178801527+raymondkfcheung@users.noreply.github.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Adrian Catangiu <adrian@parity.io>\nCo-authored-by: Andrii <ndk@parity.io>",
          "timestamp": "2025-05-31T22:03:58Z",
          "tree_id": "dbe1cca0ec02255336bc211c7f25c3e49a7a0e00",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/65ade498b63bf2216d1c444f28c1b48085417f13"
        },
        "date": 1748731931297,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 21015770,
            "range": "± 354512",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 21294306,
            "range": "± 275786",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22758434,
            "range": "± 349791",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 27481802,
            "range": "± 670572",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 64122325,
            "range": "± 2058379",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 420313608,
            "range": "± 14937566",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2830650414,
            "range": "± 170660682",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17726240,
            "range": "± 270179",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17716051,
            "range": "± 255900",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18380441,
            "range": "± 222858",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23774834,
            "range": "± 392629",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 59688622,
            "range": "± 879731",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 379513356,
            "range": "± 16067307",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2717000680,
            "range": "± 23946226",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "59443568+sw10pa@users.noreply.github.com",
            "name": "Stephane Gurgenidze",
            "username": "sw10pa"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "25d6e88d919030a1eb67fd0df3fac98f3c12ed28",
          "message": "feat: add collator peer ID to ParachainInherentData (#8708)\n\n## Issue\n[[#7749] Collator Protocol Revamp: send PeerId via\nUMP](https://github.com/paritytech/polkadot-sdk/issues/7749)\n\n## Description\nAdds an optional `collator_peer_id` field to the new version of\n`ParachainInherentData` struct from [PR\n#8299](https://github.com/paritytech/polkadot-sdk/pull/8299). This field\nis currently unused and defaults to `None`, but is added proactively to\navoid introducing yet another version of the inherent data after the\ncurrent release.\n\n## Next Steps\n### In a follow-up PR:\n- Populate `collator_peer_id` on the collator side;\n- Handle the field in the `parachain-system` pallet and sends a UMP\nsignal to the relay chain.",
          "timestamp": "2025-06-02T07:32:16Z",
          "tree_id": "4be04c5a73b1ae643f9218b17f8bf144ae5b4a72",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/25d6e88d919030a1eb67fd0df3fac98f3c12ed28"
        },
        "date": 1748854981913,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18263104,
            "range": "± 189815",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18737336,
            "range": "± 355110",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20019713,
            "range": "± 185599",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24108684,
            "range": "± 123199",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53593259,
            "range": "± 562855",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 297894128,
            "range": "± 2171730",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2312730646,
            "range": "± 54387355",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15903435,
            "range": "± 89309",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16083733,
            "range": "± 143392",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16675516,
            "range": "± 154470",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20963761,
            "range": "± 157086",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53898581,
            "range": "± 547620",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 308989611,
            "range": "± 1207986",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2483334935,
            "range": "± 30368196",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fb41dde0bbfe6bf003d63eb3abd15e6574c0586c",
          "message": "[pallet-revive] update dry-run logic (#8662)\n\n- Revert #8504\n- Add a `prepare_dry_run` that run before bare_call / bare_instantiate\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-02T12:07:51Z",
          "tree_id": "cb642143591a436af77f34cde891a3843d020691",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/fb41dde0bbfe6bf003d63eb3abd15e6574c0586c"
        },
        "date": 1748869321345,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19037585,
            "range": "± 238170",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19558445,
            "range": "± 756541",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21189078,
            "range": "± 239835",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25181555,
            "range": "± 244396",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55303451,
            "range": "± 465923",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 308070622,
            "range": "± 2695330",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2577654250,
            "range": "± 72537921",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16280901,
            "range": "± 90361",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16391747,
            "range": "± 206545",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16839272,
            "range": "± 138514",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21251686,
            "range": "± 129103",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54110789,
            "range": "± 612791",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 317005345,
            "range": "± 3956624",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2536975423,
            "range": "± 26364986",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "evgeny@parity.io",
            "name": "Evgeny Snitko",
            "username": "AndWeHaveAPlan"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a251f77f35c4dc261e8ba51327d68a969f0671ca",
          "message": "Docker master image tag fix (#8711)",
          "timestamp": "2025-06-02T13:57:18Z",
          "tree_id": "4929df7843b83068c198ae67ed14aa638dc20086",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/a251f77f35c4dc261e8ba51327d68a969f0671ca"
        },
        "date": 1748875766545,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18971526,
            "range": "± 272779",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19423432,
            "range": "± 160246",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20637296,
            "range": "± 169659",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25085555,
            "range": "± 244780",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56053550,
            "range": "± 693204",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 345526667,
            "range": "± 6524201",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2317230096,
            "range": "± 33519408",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16359576,
            "range": "± 148254",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16418641,
            "range": "± 155745",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16990361,
            "range": "± 135084",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21551565,
            "range": "± 140628",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54619698,
            "range": "± 555785",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 323105505,
            "range": "± 5809685",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2538155433,
            "range": "± 19359309",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "tiago.bandeira@parity.io",
            "name": "Tiago Bandeira",
            "username": "tiagobndr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "32ec6096910fbb57686370cbbf83babc94563e07",
          "message": "Remove all XCM dependencies from `pallet-revive` (#8584)\n\nThis PR removes all XCM dependencies from `pallet-revive`, including the\n`mock-network` crate which was primarily used to test the unstable\n`xcm_execute` and `xcm_send` APIs. These APIs (along their respective\ntests) will be moved to the XCM precompile in `pallet-xcm` to avoid\ncyclic dependencies.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Adrian Catangiu <adrian@parity.io>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>",
          "timestamp": "2025-06-02T14:21:17Z",
          "tree_id": "cd8dde1f12d7ad089384e53b29080efb633cf49a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/32ec6096910fbb57686370cbbf83babc94563e07"
        },
        "date": 1748879739883,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18768758,
            "range": "± 246759",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19279517,
            "range": "± 249558",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21077853,
            "range": "± 217579",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25248346,
            "range": "± 140341",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57202724,
            "range": "± 857546",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 333824106,
            "range": "± 4807975",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2528059861,
            "range": "± 71090735",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16268885,
            "range": "± 98970",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16371411,
            "range": "± 75339",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17134368,
            "range": "± 114048",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21474334,
            "range": "± 156515",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54686882,
            "range": "± 1960747",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 324485798,
            "range": "± 6557721",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2570946226,
            "range": "± 35817720",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "5588131+kianenigma@users.noreply.github.com",
            "name": "Kian Paimani",
            "username": "kianenigma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "1dd7cf6c9f454ca184e74dcb48b28304e9e9c88f",
          "message": "[AHM] Report the weights of epmb pallet to expose kusama and polkadot weights (#8704)\n\n- [ ] Use them in WAH once @ggwpez merges the current deployed code on\nWAH to master\n- [x] Run on ref hardware\n\n```\ndisplaying pallet_election_provider_multi_block_dot_size.rs\n+--------------------------------------------------+--------------------------------------+---------+---------+------------+\n| File                                             | Extrinsic                            | Old     | New     | Change [%] |\n+==========================================================================================================================+\n| pallet_election_provider_multi_block_dot_size.rs | on_initialize_nothing                | 3.56KiB | 3.56KiB | Unchanged  |\n|--------------------------------------------------+--------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_dot_size.rs | on_initialize_into_unsigned          | 3.75KiB | 3.75KiB | Unchanged  |\n|--------------------------------------------------+--------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_dot_size.rs | on_initialize_into_snapshot_rest     | 3.06MiB | 3.06MiB | Unchanged  |\n|--------------------------------------------------+--------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_dot_size.rs | on_initialize_into_snapshot_msp      | 2.41MiB | 2.41MiB | Unchanged  |\n|--------------------------------------------------+--------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_dot_size.rs | on_initialize_into_signed_validation | 3.76KiB | 3.76KiB | Unchanged  |\n|--------------------------------------------------+--------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_dot_size.rs | on_initialize_into_signed            | 3.12MiB | 3.12MiB | Unchanged  |\n|--------------------------------------------------+--------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_dot_size.rs | manage                               | 0B      | 0B      | Unchanged  |\n|--------------------------------------------------+--------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_dot_size.rs | export_terminal                      | 2.25MiB | 2.25MiB | Unchanged  |\n|--------------------------------------------------+--------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_dot_size.rs | export_non_terminal                  | 1.32MiB | 1.32MiB | Unchanged  |\n+--------------------------------------------------+--------------------------------------+---------+---------+------------+\n+--------------------------------------------------+--------------------------------------+----------+----------+------------+\n| File                                             | Extrinsic                            | Old      | New      | Change [%] |\n+============================================================================================================================+\n| pallet_election_provider_multi_block_dot_size.rs | on_initialize_nothing                | 251.46us | 251.46us | Unchanged  |\n|--------------------------------------------------+--------------------------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_dot_size.rs | on_initialize_into_unsigned          | 4.29ms   | 4.29ms   | Unchanged  |\n|--------------------------------------------------+--------------------------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_dot_size.rs | on_initialize_into_snapshot_rest     | 127.75ms | 127.75ms | Unchanged  |\n|--------------------------------------------------+--------------------------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_dot_size.rs | on_initialize_into_snapshot_msp      | 35.09ms  | 35.09ms  | Unchanged  |\n|--------------------------------------------------+--------------------------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_dot_size.rs | on_initialize_into_signed_validation | 4.16ms   | 4.16ms   | Unchanged  |\n|--------------------------------------------------+--------------------------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_dot_size.rs | on_initialize_into_signed            | 124.19ms | 124.19ms | Unchanged  |\n|--------------------------------------------------+--------------------------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_dot_size.rs | manage                               | 300.00ns | 300.00ns | Unchanged  |\n|--------------------------------------------------+--------------------------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_dot_size.rs | export_terminal                      | 235.27ms | 235.27ms | Unchanged  |\n|--------------------------------------------------+--------------------------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_dot_size.rs | export_non_terminal                  | 185.57ms | 185.57ms | Unchanged  |\n+--------------------------------------------------+--------------------------------------+----------+----------+------------+\ndisplaying pallet_election_provider_multi_block_signed_dot_size.rs\n+---------------------------------------------------------+----------------------+----------+----------+------------+\n| File                                                    | Extrinsic            | Old      | New      | Change [%] |\n+===================================================================================================================+\n| pallet_election_provider_multi_block_signed_dot_size.rs | unset_page           | 18.56KiB | 18.56KiB | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_dot_size.rs | submit_page          | 6.91KiB  | 6.91KiB  | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_dot_size.rs | register_not_full    | 6.39KiB  | 6.39KiB  | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_dot_size.rs | register_eject       | 85.80KiB | 85.80KiB | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_dot_size.rs | clear_old_round_data | 85.18KiB | 85.18KiB | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_dot_size.rs | bail                 | 82.74KiB | 82.74KiB | Unchanged  |\n+---------------------------------------------------------+----------------------+----------+----------+------------+\n+---------------------------------------------------------+----------------------+----------+----------+------------+\n| File                                                    | Extrinsic            | Old      | New      | Change [%] |\n+===================================================================================================================+\n| pallet_election_provider_multi_block_signed_dot_size.rs | unset_page           | 9.30ms   | 9.30ms   | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_dot_size.rs | submit_page          | 7.06ms   | 7.06ms   | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_dot_size.rs | register_not_full    | 566.44us | 566.44us | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_dot_size.rs | register_eject       | 5.03ms   | 5.03ms   | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_dot_size.rs | clear_old_round_data | 4.63ms   | 4.63ms   | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_dot_size.rs | bail                 | 4.68ms   | 4.68ms   | Unchanged  |\n+---------------------------------------------------------+----------------------+----------+----------+------------+\ndisplaying pallet_election_provider_multi_block_unsigned_dot_size.rs\n+-----------------------------------------------------------+-------------------+---------+---------+------------+\n| File                                                      | Extrinsic         | Old     | New     | Change [%] |\n+================================================================================================================+\n| pallet_election_provider_multi_block_unsigned_dot_size.rs | validate_unsigned | 3.74KiB | 3.74KiB | Unchanged  |\n|-----------------------------------------------------------+-------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_unsigned_dot_size.rs | submit_unsigned   | 1.41MiB | 1.41MiB | Unchanged  |\n+-----------------------------------------------------------+-------------------+---------+---------+------------+\n+-----------------------------------------------------------+-------------------+---------+---------+------------+\n| File                                                      | Extrinsic         | Old     | New     | Change [%] |\n+================================================================================================================+\n| pallet_election_provider_multi_block_unsigned_dot_size.rs | validate_unsigned | 4.87ms  | 4.87ms  | Unchanged  |\n|-----------------------------------------------------------+-------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_unsigned_dot_size.rs | submit_unsigned   | 36.54ms | 36.54ms | Unchanged  |\n+-----------------------------------------------------------+-------------------+---------+---------+------------+\ndisplaying pallet_election_provider_multi_block_verifier_dot_size.rs\n+-----------------------------------------------------------+------------------------------------+-----------+-----------+------------+\n| File                                                      | Extrinsic                          | Old       | New       | Change [%] |\n+=====================================================================================================================================+\n| pallet_election_provider_multi_block_verifier_dot_size.rs | on_initialize_valid_terminal       | 1.25MiB   | 1.25MiB   | Unchanged  |\n|-----------------------------------------------------------+------------------------------------+-----------+-----------+------------|\n| pallet_election_provider_multi_block_verifier_dot_size.rs | on_initialize_valid_non_terminal   | 324.40KiB | 324.40KiB | Unchanged  |\n|-----------------------------------------------------------+------------------------------------+-----------+-----------+------------|\n| pallet_election_provider_multi_block_verifier_dot_size.rs | on_initialize_invalid_terminal     | 1.25MiB   | 1.25MiB   | Unchanged  |\n|-----------------------------------------------------------+------------------------------------+-----------+-----------+------------|\n| pallet_election_provider_multi_block_verifier_dot_size.rs | on_initialize_invalid_non_terminal | 541.11KiB | 541.11KiB | Unchanged  |\n+-----------------------------------------------------------+------------------------------------+-----------+-----------+------------+\n+-----------------------------------------------------------+------------------------------------+---------+---------+------------+\n| File                                                      | Extrinsic                          | Old     | New     | Change [%] |\n+=================================================================================================================================+\n| pallet_election_provider_multi_block_verifier_dot_size.rs | on_initialize_valid_terminal       | 41.04ms | 41.04ms | Unchanged  |\n|-----------------------------------------------------------+------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_verifier_dot_size.rs | on_initialize_valid_non_terminal   | 5.33ms  | 5.33ms  | Unchanged  |\n|-----------------------------------------------------------+------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_verifier_dot_size.rs | on_initialize_invalid_terminal     | 44.94ms | 44.94ms | Unchanged  |\n|-----------------------------------------------------------+------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_verifier_dot_size.rs | on_initialize_invalid_non_terminal | 14.04ms | 14.04ms | Unchanged  |\n+-----------------------------------------------------------+------------------------------------+---------+---------+------------+\ndisplaying pallet_election_provider_multi_block_ksm_size.rs\n+--------------------------------------------------+--------------------------------------+---------+---------+------------+\n| File                                             | Extrinsic                            | Old     | New     | Change [%] |\n+==========================================================================================================================+\n| pallet_election_provider_multi_block_ksm_size.rs | on_initialize_nothing                | 3.56KiB | 3.56KiB | Unchanged  |\n|--------------------------------------------------+--------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_ksm_size.rs | on_initialize_into_unsigned          | 3.75KiB | 3.75KiB | Unchanged  |\n|--------------------------------------------------+--------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_ksm_size.rs | on_initialize_into_snapshot_rest     | 3.24MiB | 3.24MiB | Unchanged  |\n|--------------------------------------------------+--------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_ksm_size.rs | on_initialize_into_snapshot_msp      | 2.41MiB | 2.41MiB | Unchanged  |\n|--------------------------------------------------+--------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_ksm_size.rs | on_initialize_into_signed_validation | 3.76KiB | 3.76KiB | Unchanged  |\n|--------------------------------------------------+--------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_ksm_size.rs | on_initialize_into_signed            | 3.36MiB | 3.36MiB | Unchanged  |\n|--------------------------------------------------+--------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_ksm_size.rs | manage                               | 0B      | 0B      | Unchanged  |\n|--------------------------------------------------+--------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_ksm_size.rs | export_terminal                      | 4.08MiB | 4.08MiB | Unchanged  |\n|--------------------------------------------------+--------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_ksm_size.rs | export_non_terminal                  | 2.12MiB | 2.12MiB | Unchanged  |\n+--------------------------------------------------+--------------------------------------+---------+---------+------------+\n+--------------------------------------------------+--------------------------------------+----------+----------+------------+\n| File                                             | Extrinsic                            | Old      | New      | Change [%] |\n+============================================================================================================================+\n| pallet_election_provider_multi_block_ksm_size.rs | on_initialize_nothing                | 250.77us | 250.77us | Unchanged  |\n|--------------------------------------------------+--------------------------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_ksm_size.rs | on_initialize_into_unsigned          | 2.77ms   | 2.77ms   | Unchanged  |\n|--------------------------------------------------+--------------------------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_ksm_size.rs | on_initialize_into_snapshot_rest     | 139.55ms | 139.55ms | Unchanged  |\n|--------------------------------------------------+--------------------------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_ksm_size.rs | on_initialize_into_snapshot_msp      | 34.79ms  | 34.79ms  | Unchanged  |\n|--------------------------------------------------+--------------------------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_ksm_size.rs | on_initialize_into_signed_validation | 2.75ms   | 2.75ms   | Unchanged  |\n|--------------------------------------------------+--------------------------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_ksm_size.rs | on_initialize_into_signed            | 130.53ms | 130.53ms | Unchanged  |\n|--------------------------------------------------+--------------------------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_ksm_size.rs | manage                               | 340.00ns | 340.00ns | Unchanged  |\n|--------------------------------------------------+--------------------------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_ksm_size.rs | export_terminal                      | 415.86ms | 415.86ms | Unchanged  |\n|--------------------------------------------------+--------------------------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_ksm_size.rs | export_non_terminal                  | 311.80ms | 311.80ms | Unchanged  |\n+--------------------------------------------------+--------------------------------------+----------+----------+------------+\ndisplaying pallet_election_provider_multi_block_signed_ksm_size.rs\n+---------------------------------------------------------+----------------------+----------+----------+------------+\n| File                                                    | Extrinsic            | Old      | New      | Change [%] |\n+===================================================================================================================+\n| pallet_election_provider_multi_block_signed_ksm_size.rs | unset_page           | 20.77KiB | 20.77KiB | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_ksm_size.rs | submit_page          | 6.96KiB  | 6.96KiB  | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_ksm_size.rs | register_not_full    | 6.45KiB  | 6.45KiB  | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_ksm_size.rs | register_eject       | 46.54KiB | 46.54KiB | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_ksm_size.rs | clear_old_round_data | 46.06KiB | 46.06KiB | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_ksm_size.rs | bail                 | 43.61KiB | 43.61KiB | Unchanged  |\n+---------------------------------------------------------+----------------------+----------+----------+------------+\n+---------------------------------------------------------+----------------------+----------+----------+------------+\n| File                                                    | Extrinsic            | Old      | New      | Change [%] |\n+===================================================================================================================+\n| pallet_election_provider_multi_block_signed_ksm_size.rs | unset_page           | 3.97ms   | 3.97ms   | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_ksm_size.rs | submit_page          | 4.03ms   | 4.03ms   | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_ksm_size.rs | register_not_full    | 565.74us | 565.74us | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_ksm_size.rs | register_eject       | 2.99ms   | 2.99ms   | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_ksm_size.rs | clear_old_round_data | 2.60ms   | 2.60ms   | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_ksm_size.rs | bail                 | 2.65ms   | 2.65ms   | Unchanged  |\n+---------------------------------------------------------+----------------------+----------+----------+------------+\ndisplaying pallet_election_provider_multi_block_unsigned_ksm_size.rs\n+-----------------------------------------------------------+-------------------+---------+---------+------------+\n| File                                                      | Extrinsic         | Old     | New     | Change [%] |\n+================================================================================================================+\n| pallet_election_provider_multi_block_unsigned_ksm_size.rs | validate_unsigned | 3.74KiB | 3.74KiB | Unchanged  |\n|-----------------------------------------------------------+-------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_unsigned_ksm_size.rs | submit_unsigned   | 1.34MiB | 1.34MiB | Unchanged  |\n+-----------------------------------------------------------+-------------------+---------+---------+------------+\n+-----------------------------------------------------------+-------------------+---------+---------+------------+\n| File                                                      | Extrinsic         | Old     | New     | Change [%] |\n+================================================================================================================+\n| pallet_election_provider_multi_block_unsigned_ksm_size.rs | validate_unsigned | 4.16ms  | 4.16ms  | Unchanged  |\n|-----------------------------------------------------------+-------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_unsigned_ksm_size.rs | submit_unsigned   | 33.74ms | 33.74ms | Unchanged  |\n+-----------------------------------------------------------+-------------------+---------+---------+------------+\ndisplaying pallet_election_provider_multi_block_verifier_ksm_size.rs\n+-----------------------------------------------------------+------------------------------------+-----------+-----------+------------+\n| File                                                      | Extrinsic                          | Old       | New       | Change [%] |\n+=====================================================================================================================================+\n| pallet_election_provider_multi_block_verifier_ksm_size.rs | on_initialize_valid_terminal       | 1.18MiB   | 1.18MiB   | Unchanged  |\n|-----------------------------------------------------------+------------------------------------+-----------+-----------+------------|\n| pallet_election_provider_multi_block_verifier_ksm_size.rs | on_initialize_valid_non_terminal   | 280.00KiB | 280.00KiB | Unchanged  |\n|-----------------------------------------------------------+------------------------------------+-----------+-----------+------------|\n| pallet_election_provider_multi_block_verifier_ksm_size.rs | on_initialize_invalid_terminal     | 1.18MiB   | 1.18MiB   | Unchanged  |\n|-----------------------------------------------------------+------------------------------------+-----------+-----------+------------|\n| pallet_election_provider_multi_block_verifier_ksm_size.rs | on_initialize_invalid_non_terminal | 483.20KiB | 483.20KiB | Unchanged  |\n+-----------------------------------------------------------+------------------------------------+-----------+-----------+------------+\n+-----------------------------------------------------------+------------------------------------+---------+---------+------------+\n| File                                                      | Extrinsic                          | Old     | New     | Change [%] |\n+=================================================================================================================================+\n| pallet_election_provider_multi_block_verifier_ksm_size.rs | on_initialize_valid_terminal       | 37.32ms | 37.32ms | Unchanged  |\n|-----------------------------------------------------------+------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_verifier_ksm_size.rs | on_initialize_valid_non_terminal   | 10.16ms | 10.16ms | Unchanged  |\n|-----------------------------------------------------------+------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_verifier_ksm_size.rs | on_initialize_invalid_terminal     | 38.84ms | 38.84ms | Unchanged  |\n|-----------------------------------------------------------+------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_verifier_ksm_size.rs | on_initialize_invalid_non_terminal | 11.39ms | 11.39ms | Unchanged  |\n+-----------------------------------------------------------+------------------------------------+---------+---------+------------+\n\n```\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Paolo La Camera <paolo@parity.io>",
          "timestamp": "2025-06-02T17:15:50Z",
          "tree_id": "58a2b97623cf09de26ce332512be71eb2b5d13c6",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/1dd7cf6c9f454ca184e74dcb48b28304e9e9c88f"
        },
        "date": 1748887872555,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18970579,
            "range": "± 254360",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18968543,
            "range": "± 150522",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20836394,
            "range": "± 387634",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25319766,
            "range": "± 334645",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57296517,
            "range": "± 743115",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 333860782,
            "range": "± 7222194",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2511898146,
            "range": "± 146145812",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16563613,
            "range": "± 130017",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16564352,
            "range": "± 112189",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17312587,
            "range": "± 151754",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21904021,
            "range": "± 316483",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 58117392,
            "range": "± 1689223",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 323774886,
            "range": "± 2334750",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2605557099,
            "range": "± 28763844",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "skunert49@gmail.com",
            "name": "Sebastian Kunert",
            "username": "skunert"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "01801a5606fac49186adb854abb842970f78741a",
          "message": "Unflake `returns_status_for_pruned_blocks` (#8709)\n\nI was nearly dying of old age while trying to get CI to pass yesterday\nbecause of this test.\n\nTurns out there is a race condition (see code comment). The solution is\na bit of a hack, but its the best one I came up with.\n\nWill let it run in a loop over the weekend, previously failed around\nonce every 30-50 times when machine is put under stress.",
          "timestamp": "2025-06-02T18:19:27Z",
          "tree_id": "c5f4ac3f38cd8a33e07f5cc9f16402702d306a84",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/01801a5606fac49186adb854abb842970f78741a"
        },
        "date": 1748891573899,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19701114,
            "range": "± 166234",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20017797,
            "range": "± 112372",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21725844,
            "range": "± 161523",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26081745,
            "range": "± 317192",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59102296,
            "range": "± 733710",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 365572830,
            "range": "± 11005134",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2500533072,
            "range": "± 207832991",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17057145,
            "range": "± 78852",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17187903,
            "range": "± 70871",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17901135,
            "range": "± 117667",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22286064,
            "range": "± 165312",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 57134311,
            "range": "± 610496",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 338370849,
            "range": "± 2671504",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2674622078,
            "range": "± 45505633",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "60601340+lexnv@users.noreply.github.com",
            "name": "Alexandru Vasile",
            "username": "lexnv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f6d18b73c4138cd834c6979be6eed291e63c6f17",
          "message": "client/net: Use litep2p as the default network backend (#8461)\n\n# Litep2p Becomes the Default Network Backend\n\nThis PR finalizes the [litep2p](https://github.com/paritytech/litep2p)\nintegration and makes it the default network backend for substrate-based\nchains.\n\n## Litep2p Improvements\n\nAfter the stabilization, a forum post will follow with up to date\ninformation and more accurate measurements of the live impact of\nlitep2p.\n\n### CPU Usage Reduction\n\n**Litep2p consumes roughly 2x less CPU than the libp2p alternative**.\nThis frees up resources for other usecases (subsystems) and enables\nrunning nodes on more cost-efficient hardware.\n\nThis metric has been collected by the `networking::libp2p-node` metric\nof a live Kusama validator. This represents the CPU time spent on\npolling the networking task. Litep2p CPU consumption is on the left,\nusing roughtly 1.3x CPUs, while libp2p on the right uses roughly 2.9-3x\nCPUs:\n\n![Screenshot 2025-05-26 at 15 23\n22](https://github.com/user-attachments/assets/17bf1ed8-b887-423e-b131-f0bbf146919e)\n\n\nThis metric has been collected by the NodeExporter of a live Kusama\nvalidator. Litep2p CPU consumption is on the left, using roughtly 230\nCPU units, while libp2p on the right uses roughly 350 CPU units. This\nmakes litep2p ~1.52 times more effiecient:\n\n![Screenshot 2025-05-26 at 15 24\n33](https://github.com/user-attachments/assets/8923cb56-241d-4e1d-9593-33c5def2ff4d)\n\n\n\n### DHT Improvements and Authority Discovery\n\nLitep2p is able to discover peers faster via the Kademlia protocol than\nlibp2p. This behavior manifests in faster discovery times for\nvalidators. For context, libp2p discovers 1K DHT records (authority\nrecords) in approximately 10 minutes, while litep2p discovers them in\njust 2.5 minutes (for more info see\nhttps://github.com/paritytech/polkadot-sdk/issues/7077#issuecomment-2575662449).\n\nThis will improve issues we've seen with libp2p that causes validators\nto not receive rewards:\n- https://github.com/paritytech/polkadot-sdk/issues/8548\n\n### Stable Sync Peers\n\nLitep2p presents a more stable peer count in comparison with the libp2p\nbackend. This ensures we can sync up faster than libp2p to the tip of\nthe chain. In an older experiment, litep2p syncs to the tip of the chain\nin 526s, compared to 803s for libp2p. The stability of connections shows\nimprovements for other protocols as well:\n\n![Screenshot 2025-05-26 at 15 01\n59](https://github.com/user-attachments/assets/ac3607ba-a551-49e5-9a50-f5150a6b619f)\n\nThe previous image shows on the left the litep2p version and on the\nright the libp2p version.\n\n\n### Revert Kusama Enablement\nThis PR reverts https://github.com/paritytech/polkadot-sdk/pull/7866.\nLitep2p is now enabled by default, we don't need to selectively enable\nit on different chains.\n\n### Litep2p 0.9.5\n\nThis release primarily focuses on strengthening the stability of the\nwebsocket transport. We've resolved an issue where higher-level\nbuffering was causing the Noise protocol to fail when decoding messages.\n\nWe've also significantly improved connectivity between litep2p and\nSmoldot (the Substrate-based light client). Empty frames are now handled\ncorrectly, preventing handshake timeouts and ensuring smoother\ncommunication.\n\nFinally, we've carried out several dependency updates to keep the\nlibrary current with the latest versions of its underlying components.\n\nFixed:\n- substream/fix: Allow empty payloads with 0-length frame\n([#395](https://github.com/paritytech/litep2p/pull/395))\n- websocket: Fix connection stability on decrypt messages\n([#393](https://github.com/paritytech/litep2p/pull/393))\n\nChanged:\n- crypto/noise: Show peerIDs that fail to decode\n([#392](https://github.com/paritytech/litep2p/pull/392))\n- cargo: Bump yamux to 0.13.5 and tokio to 1.45.0\n([#396](https://github.com/paritytech/litep2p/pull/396))\n- ci: Enforce and apply clippy rules\n([#388](https://github.com/paritytech/litep2p/pull/388))\n- build(deps): bump ring from 0.16.20 to 0.17.14\n([#389](https://github.com/paritytech/litep2p/pull/389))\n- Update hickory-resolver 0.24.2 -> 0.25.2\n([#386](https://github.com/paritytech/litep2p/pull/386))\n\n\n### Fix peerset reserve only mode\n\nThis has been move in PR:\nhttps://github.com/paritytech/polkadot-sdk/pull/8650 for ease of\nreviewing.\nThe PR rejects non-reserved peers in the reserved-only mode of the\nlitep2p notification peerset.\n\n---------\n\nSigned-off-by: Alexandru Vasile <alexandru.vasile@parity.io>",
          "timestamp": "2025-06-03T10:44:02Z",
          "tree_id": "8ce5aa0b4afe6ea5fbe1d90c56dcb5b10f9560b0",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f6d18b73c4138cd834c6979be6eed291e63c6f17"
        },
        "date": 1748951661958,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18781488,
            "range": "± 135974",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19094686,
            "range": "± 99488",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20609787,
            "range": "± 129828",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24984782,
            "range": "± 421139",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 58820540,
            "range": "± 796643",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 344019138,
            "range": "± 7355218",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2460427812,
            "range": "± 100125399",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16792582,
            "range": "± 204623",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16717207,
            "range": "± 176922",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17057833,
            "range": "± 171868",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22052744,
            "range": "± 234811",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54969119,
            "range": "± 890082",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 318470278,
            "range": "± 4226802",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2619815269,
            "range": "± 51726166",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "52418509+georgepisaltu@users.noreply.github.com",
            "name": "georgepisaltu",
            "username": "georgepisaltu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "82cf2305511459032071302aba96ba82b35b04f8",
          "message": "[PoP] Add personhood tracking pallets (#8164)\n\nThis PR adds the building blocks of a Proof of Personhood system. It\ncontains work contributed and reviewed by members of the PoP team.\n\n## `pallet-people`\n\nThe People pallet stores and manages identifiers of individuals who have\nproven their personhood. It tracks their personal IDs, organizes their\ncryptographic keys into rings, and allows them to use contextual aliases\nthrough authentication in extensions. When transactions include\ncryptographic proofs of belonging to the people set, the pallet's\ntransaction extension verifies these proofs before allowing the\ntransaction to proceed. This enables other pallets to check if actions\ncome from unique persons while preserving privacy through the ring-based\nstructure.\n\nThe pallet implements the `PeopleTrait` interface and accepts new\npersons after they prove their uniqueness elsewhere, stores their\ninformation, and will support removing persons in the future. While\nother systems (e.g., wallets) generate the proofs, this pallet handles\nthe storage of all necessary data and verifies the proofs when used.\n\nPeople are identified through a new cryptographic primitive, as defined\nin the `GenerateVerifiable` interface in the `verifiable` crate. People\nget the privilege of running free transactions for supported calls\nthrough a combination of a new `AsPerson` transaction extension and new\norigin types `PersonalIdentity` and `PersonalAlias`.\n\n## `pallet-origin-restriction`\n\nThis pallet tracks certain origin and limits how much total \"fee usage\"\nthey can accumulate. Usage gradually recovers as blocks pass. This\npallet and its associated transaction extension are used to limit the\namount of on-chain compute people get when they run free transactions,\nsince the fee model does not apply to them.\n\n## `pallet-dummy-dim`\n\nAllows control of a `PeopleTrait` interface through a privileged origin\nby simulating a DIM. It is meant only to help in testing scenarios and\nacts as a control panel for `PeopleTrait` implementers. It is not an\nofficial DIM and should not be used in production, but, like\n`pallet-sudo`, should prove useful on testnets.\n\n---------\n\nSigned-off-by: georgepisaltu <george.pisaltu@parity.io>\nCo-authored-by: gui <gui.thiolliere@gmail.com>\nCo-authored-by: Zebedeusz <michal.gil@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-03T11:41:10Z",
          "tree_id": "affe92e736edc96ca4c9dbbeb6a2a01142553223",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/82cf2305511459032071302aba96ba82b35b04f8"
        },
        "date": 1748955550591,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18623126,
            "range": "± 140474",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19506996,
            "range": "± 252062",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21397774,
            "range": "± 350382",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25698789,
            "range": "± 331543",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 58110196,
            "range": "± 2115894",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 323776318,
            "range": "± 4192544",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2475535071,
            "range": "± 81109701",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16912242,
            "range": "± 253137",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16924935,
            "range": "± 235298",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17391692,
            "range": "± 181957",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21999822,
            "range": "± 338099",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 55905493,
            "range": "± 446209",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 329722004,
            "range": "± 4471794",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2571214183,
            "range": "± 18251452",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "60601340+lexnv@users.noreply.github.com",
            "name": "Alexandru Vasile",
            "username": "lexnv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "85b71daf7aac59da4d2186b45d589c7c619f0981",
          "message": "sync/fix: Clear gap sync on known imported blocks (#8445)\n\nThis PR ensures that warp sync gaps are properly cleared when known\nblocks are imported. Previously, gaps were only removed in response to\n`ImportedUnknown` events.\n\nThis limitation caused issues for asset-hub and bridge-hub collators,\nwhich remained stuck in the \"Block history\" state without progressing.\n\n\nThe root cause lies in the client.info() reporting a gap during node\nstartup or restart (ie block verification fails). In some cases, a peer\nmay respond with the missing blocks after we’ve already imported them\nlocally, leaving the gap open.\n\nGrafana link: https://grafana.teleport.parity.io/goto/jCcsBLxNg?orgId=1\n\nTraces from production:\n\n```\n2025-05-06 12:55:34.251 DEBUG                 main sync: [Parachain] Starting gap sync #4935955 - #4935955    \n\n2025-05-06 12:55:34.558 TRACE tokio-runtime-worker sync: [Parachain] New gap block request for 12D3KooWAVQMhkXmc5ueSYasdsRWQbKus2YGZ6HDZUB4ViJMCxXy, (best:5103253, common:5103253) BlockRequest { id: 0, fields: HEADER | BODY | JUSTIFICATION, from: Number(4935955), direction: Descending, max: Some(1) }    \n\n2025-05-06 12:55:34.558 TRACE tokio-runtime-worker sync: [Parachain] Processed `SyncingAction::StartRequest` to 12D3KooWAVQMhkXmc5ueSYasdsRWQbKus2YGZ6HDZUB4ViJMCxXy with strategy key StrategyKey(\"ChainSync\").    \n\n2025-05-06 12:55:34.608 TRACE tokio-runtime-worker sync: [Parachain] BlockResponse 0 from 12D3KooWAVQMhkXmc5ueSYasdsRWQbKus2YGZ6HDZUB4ViJMCxXy with 1 blocks  (4935955)    \n\n2025-05-06 12:55:34.608 DEBUG tokio-runtime-worker sync: [Parachain] Drained 1 gap blocks from 4935954    \n\t\n2025-05-06 12:55:35.511 TRACE tokio-runtime-worker sync::import-queue: [Parachain] Starting import of 1 blocks  (4935955)    \n\n2025-05-06 12:55:35.517 TRACE tokio-runtime-worker sync::import-queue: [Parachain] Block already in chain 4935955: 0x63db2b40cccac020fbc922e5e98bb3955f4cdaa823a2be85ecf22776745ccacc    \n\n2025-05-06 12:55:35.517 TRACE tokio-runtime-worker sync::import-queue: [Parachain] Block imported successfully Some(4935955) (0x63db…cacc)    \n\n2025-05-06 12:55:35.517 TRACE tokio-runtime-worker sync: [Parachain] Cleared blocks from 4935955 to 4935956    \n```\n\n### Testing Done\n\nAdded two tests to verify that warp sync gaps are correctly cleared\nunder both block import scenarios. The first test closely follows the\noperations performed by the node, while the second one emulates the\nimports.\n\n### Next Steps\n\nAdded extra debug logs to monitor if the issue persists (pointing\ntowards a corupt database -- ie client.info() always has the gap\npresent).\n\nCloses: https://github.com/paritytech/polkadot-sdk/issues/8416\n\ncc @paritytech/networking\n\n---------\n\nSigned-off-by: Alexandru Vasile <alexandru.vasile@parity.io>\nCo-authored-by: Nikolai Kozlov <1431590+nkpar@users.noreply.github.com>",
          "timestamp": "2025-06-04T11:15:17Z",
          "tree_id": "233a89f158f8e202259e85922b4e2dac282bf7f2",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/85b71daf7aac59da4d2186b45d589c7c619f0981"
        },
        "date": 1749038963393,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18427373,
            "range": "± 221086",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18767023,
            "range": "± 114805",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20509926,
            "range": "± 128134",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24862588,
            "range": "± 302069",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 58239641,
            "range": "± 1054526",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 351945607,
            "range": "± 14513502",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2577458230,
            "range": "± 92164894",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16293389,
            "range": "± 209933",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16295874,
            "range": "± 101596",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17092898,
            "range": "± 96177",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21780417,
            "range": "± 97703",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 55155083,
            "range": "± 816172",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 326460070,
            "range": "± 7065252",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2593755698,
            "range": "± 16712967",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b24707cae8d09eaa6072b9e0bd0faea09d238f58",
          "message": "[pallet-revive] contract's nonce starts at 1 (#8734)\n\nnonce starting value should be 1 see\nhttps://github.com/ethereum/EIPs/blob/master/EIPS/eip-161.md\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-04T12:43:47Z",
          "tree_id": "d8c7d22f6d97e4acc42c6fa141d1b09607ed6eb8",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/b24707cae8d09eaa6072b9e0bd0faea09d238f58"
        },
        "date": 1749044611121,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19896184,
            "range": "± 230685",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20661879,
            "range": "± 290715",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22580231,
            "range": "± 334417",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 27449379,
            "range": "± 225476",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 68565500,
            "range": "± 1497960",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 426076551,
            "range": "± 4362384",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2838743490,
            "range": "± 210931654",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 18116374,
            "range": "± 289168",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 18188032,
            "range": "± 872307",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 19058725,
            "range": "± 152381",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 24078539,
            "range": "± 305214",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 65070984,
            "range": "± 1106981",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 377418067,
            "range": "± 4217453",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2985649383,
            "range": "± 56614233",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "178801527+raymondkfcheung@users.noreply.github.com",
            "name": "Raymond Cheung",
            "username": "raymondkfcheung"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "873cd459c66021b5fceb159efcfb01d796419d8b",
          "message": "Implement detailed logging for XCM failures (#8724)\n\nThis PR enhances diagnostics across XCM-related components by\nimplementing more detailed logging, especially for failures. The primary\naim is to improve visibility into XCM errors (e.g., within `map_err`\nblocks), enabling faster troubleshooting for developers and node\noperators.\n\nKey enhancements include:\n* Logging specific error conditions (e.g., `BadVersion`, `BadLocation`,\nexecution errors).\n* Including essential context in error logs (e.g., message hashes,\norigin, destination, relevant parameters).\n* Standardising log targets for easier analysis (e.g.,\n`xcm::module::function_name`).\n* Clarifying log messages.\n\nThis work continues #7003 and partially addresses #6119.\n\n## Integration\n\nDownstream projects using XCM functionalities should see improved\ndiagnostic logs without needing direct integration changes, as this\nprimarily enhances internal logging. Node operators will find new, more\ndetailed XCM error logs, aiding in monitoring and troubleshooting. Log\nparsing scripts might need updates for new log formats.\n\n## Review Notes\n\nThis PR enhances logging throughout XCM-related code paths, particularly\nin error handling (e.g., `map_err` blocks), to improve failure\nvisibility.\n\nReviewers are encouraged to assess:\n* **Clarity & Actionability:** Are logs clear, concise, and actionable\nfor failures?\n* **Context:** Do error logs capture essential context (message hash,\norigin, destination, error specifics, parameters) appropriately for\ntheir level?\n* **Log Levels:** Is the chosen log level (e.g., `error`, `warn`,\n`debug`, `trace`) suitable? Are any level adjustments appropriate?\n* **Targets:** Are `target:` fields (e.g., `xcm::module::function`)\nconsistent and specific?\n* **Error Accuracy:** Do logs accurately reflect the handled error\ncondition?\n* **Impact:** Logging should minimally affect core logic and\nperformance; favour simple logging of existing/easily derived data.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-04T14:08:49Z",
          "tree_id": "732dd354bc223995a654a863647c57ff146faf66",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/873cd459c66021b5fceb159efcfb01d796419d8b"
        },
        "date": 1749051350055,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19575943,
            "range": "± 218084",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20219479,
            "range": "± 799493",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22486527,
            "range": "± 411376",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26903872,
            "range": "± 478529",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 61445823,
            "range": "± 1766410",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 410100568,
            "range": "± 13222774",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2702400141,
            "range": "± 125326543",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17424606,
            "range": "± 123342",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17426532,
            "range": "± 180840",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18307069,
            "range": "± 374153",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23266561,
            "range": "± 395528",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 59092003,
            "range": "± 378598",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 363976526,
            "range": "± 10948113",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2895281948,
            "range": "± 96905408",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "14218860+iulianbarbu@users.noreply.github.com",
            "name": "Iulian Barbu",
            "username": "iulianbarbu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d9e16fdb471f46b85bf8f89798cdba829f088903",
          "message": "omni-node: fix `benchmark pallet` to work with `--runtime` (#8594)\n\n# Description\n\nThe PR fixes the logic so that `polkadot-omni-node benchmark pallet`\nsubcommand pulls in the appropriate arguments, while not needing to\ninstatiate the full node configuration, which requires always passing\n`--chain` flag.\n\n## Integration\n\nDevelopers will be able to use `polkadot-omni-node benchmark pallet`\nwith `--runtime` flag, same as `frame-omni-bencher`.\n\n## Review Notes\n\nDid a few things in this PR:\n- made `polkadot-omni-node benchmark pallet` not require always the\n`--chain` flag\n- removed the deprecated `run` method for `benchmark pallet` from\n`benchmarking-cli`.\n- removed the check that disallows the chain flag from\n`frame-omni-bencher` since it is allowed and usable\n\nTODO:\n- [x] a few more testing of the commands with both `--runtime` and\n`--chain`.\n- [x] remove `runtime-benchmarks` feature guard for benchmark cmds\n\n---------\n\nSigned-off-by: Iulian Barbu <iulian.barbu@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-04T15:56:14Z",
          "tree_id": "a0a8dca6c7e5909738a46896f5ce720b79697fea",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d9e16fdb471f46b85bf8f89798cdba829f088903"
        },
        "date": 1749057307838,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19327194,
            "range": "± 213649",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19887437,
            "range": "± 281482",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21491787,
            "range": "± 123544",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25882161,
            "range": "± 347461",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 63363478,
            "range": "± 1119413",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 402257020,
            "range": "± 11180374",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2679321643,
            "range": "± 121985669",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17390779,
            "range": "± 230750",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17124409,
            "range": "± 132208",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17900633,
            "range": "± 118783",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22793638,
            "range": "± 138380",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 57756677,
            "range": "± 628931",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 345803767,
            "range": "± 5157542",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2686720713,
            "range": "± 24843443",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "5588131+kianenigma@users.noreply.github.com",
            "name": "Kian Paimani",
            "username": "kianenigma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3ff2859d78e2a4a7ff9afe855f7863e4ef650068",
          "message": "[AHM] Relax the requirement for RC-Client to receive +1 session reports (#8702)\n\nSomething that we learned in westend: if `ah-client` decides to go to\n`Buffered` mode ever again, it might skip some sessions. Atm, we were\nenforcing sessions to be strictly incremented by one once received by RC\nclient. This could cause us to drop some validator reward points.\n\nAs a simple fix, this PR relaxes this check such that if the last repot\nwas `x`:\n\n1. x+1 is our expected behavior\n2. x+2 and more is still accepted, but we emit warning events\n3. x and below is still dropped. This can only happen due to: unforeseen\nbug in RC, or XCM failing to send messages in order.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-04T22:26:24Z",
          "tree_id": "38c931a8ad22ab2b77ba3fb89cd5a256ec7a601b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/3ff2859d78e2a4a7ff9afe855f7863e4ef650068"
        },
        "date": 1749081394733,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18253546,
            "range": "± 170820",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18471819,
            "range": "± 214513",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20167907,
            "range": "± 166869",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24692326,
            "range": "± 376071",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 58831431,
            "range": "± 1261256",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 349198713,
            "range": "± 6952950",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2522818407,
            "range": "± 76346054",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16724763,
            "range": "± 169283",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16833476,
            "range": "± 216598",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17656659,
            "range": "± 217722",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22299012,
            "range": "± 162342",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 56924983,
            "range": "± 918864",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 326773641,
            "range": "± 3896099",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2641428594,
            "range": "± 20733318",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "skunert49@gmail.com",
            "name": "Sebastian Kunert",
            "username": "skunert"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d054ac7dbac54abb692a06e78bd3e5d1a4da5ec9",
          "message": "Actually use RP offset in YAP parachain (#8745)\n\nWhen I merged #8299 I missed this part here, the offset should be set to\n`RELAY_PARENT_OFFSET`.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-05T09:08:53Z",
          "tree_id": "9a03ebdaec2694fe4b5b3459f147d90ce62717a5",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d054ac7dbac54abb692a06e78bd3e5d1a4da5ec9"
        },
        "date": 1749118403741,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19520159,
            "range": "± 232045",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20361420,
            "range": "± 724263",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21288321,
            "range": "± 241934",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25910247,
            "range": "± 317129",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 61304156,
            "range": "± 1205803",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 359223171,
            "range": "± 8402915",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2509167296,
            "range": "± 137665528",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17006486,
            "range": "± 177936",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17091619,
            "range": "± 690098",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17740485,
            "range": "± 286319",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22516204,
            "range": "± 387234",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 57986855,
            "range": "± 729327",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 341957441,
            "range": "± 5301342",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2750041213,
            "range": "± 16330390",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "maciej.zyszkiewicz@parity.io",
            "name": "Maciej",
            "username": "Overkillus"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5902b54c3e599fa9b4519759fe97164dd14e702a",
          "message": "Introduction of Approval Slashes [Disabling Strategy Stage 4] (#6827)\n\nImplementation of Stage 4 of the new [Disabling\nStrategy](https://github.com/paritytech/polkadot-sdk/issues/4359).\n\nStage 3 needs to be deployed before this goes live. ([Stage 3\nPR](https://github.com/paritytech/polkadot-sdk/pull/5724))\n\nCurrently only backers are ever slashed as a result of disputes.\n\nThis PR creates 3 types of offences with respective slashes:\n- ForInvalidBacked (100%) -> hard punishment as backers bear all the\nresponsbility for validity\n- ForInvalidApproved (2%) -> minor punishment to deter lazy validators\n- AgainstValid (0%) -> very minor punishment (this causes disablement so\nopp cost)\n\nCloses #4746\n\nIMPL details:\n\nThis will require a change to parachains primitives which are used both\non the runtime and node side. Rolling it out is time consuming so the\nplan is to release it in 2 parts.\n\nFirst updade runtime only with new offence types but keep old runtime\napis (mapping from new format to old) so the node logic can remain the\nsame. This will allow us to have the new offences for disputes\nconcluding on-chain. Past session disputes that require proof\nsubmissions will temporarily not support the new slash types (but they\nare rarer). This will make the network more robust in the short term (as\nit is much easier to deploy).\n\nAs the second part we can update the runtime apis and node side to fully\nsupport the new types.\n\nTODOs:\n\n- [x] new offence types\n- [ ] ~~migrations~~ (migration not needed because codec is compatible\nin conversion from old->new)\n- [ ] ~~migration tests~~\n- [x] conversion (new -> old) to preserve old runtime apis\n- [x] conversion of disputeProofs (old -> new) to maintain old past\nsession dispute behaviour\n- [ ] new runtime apis (postponed for later)\n- [x] disabling for spammy validators zombienet test\n- [x] disabling for lazy validators zombienet test\n- [ ] unit tests\n\n---------\n\nCo-authored-by: ordian <write@reusable.software>\nCo-authored-by: Stephane Gurgenidze <59443568+sw10pa@users.noreply.github.com>\nCo-authored-by: ordian <noreply@reusable.software>",
          "timestamp": "2025-06-05T14:36:23Z",
          "tree_id": "03ce5caff5a42acb601a747f005f05546852e835",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/5902b54c3e599fa9b4519759fe97164dd14e702a"
        },
        "date": 1749138492360,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19329301,
            "range": "± 214955",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19870062,
            "range": "± 374966",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21560520,
            "range": "± 259541",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25954702,
            "range": "± 474052",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 61082199,
            "range": "± 831991",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 390180196,
            "range": "± 6846403",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2670676460,
            "range": "± 195597716",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17353289,
            "range": "± 245964",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17358831,
            "range": "± 89257",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17945639,
            "range": "± 196572",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23578322,
            "range": "± 282243",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 59857219,
            "range": "± 959277",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 364858888,
            "range": "± 3385583",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2759824778,
            "range": "± 65398186",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "jose@blockdeep.io",
            "name": "José Molina Colmenero",
            "username": "Moliholy"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6cb6f5b5b22168e8e391d776014174b3731948ee",
          "message": "Do not make pallet-identity benchmarks signature-dependent (#8179)\n\nSimilar to #4756 for `pallet-nfts`, the changes proposed in this PR\nintend to make benchmarks for `pallet-identity` signature-agnostic by\nthe inclusion of a benchmark helper with sane defaults to handle the\nsigning operations.",
          "timestamp": "2025-06-05T18:47:09Z",
          "tree_id": "985fb994e8611430c371af085168f4db8a4d2561",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/6cb6f5b5b22168e8e391d776014174b3731948ee"
        },
        "date": 1749153410374,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19226788,
            "range": "± 162608",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19496103,
            "range": "± 204670",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21468656,
            "range": "± 189134",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26308765,
            "range": "± 752050",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 65132518,
            "range": "± 1410049",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 395939526,
            "range": "± 9398297",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2424453424,
            "range": "± 29171227",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17119477,
            "range": "± 104524",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17288618,
            "range": "± 176908",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18071061,
            "range": "± 436038",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23163011,
            "range": "± 221532",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 59902341,
            "range": "± 835469",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 365750359,
            "range": "± 5637739",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2730054554,
            "range": "± 52801722",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "37865735+clangenb@users.noreply.github.com",
            "name": "clangenb",
            "username": "clangenb"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a80b5718c38eb2081d33192e866baee84c7f0b55",
          "message": "Add genesis presets for remaining runtimes in polkadot-parachain-bin (#8426)\n\nNamely, this adds the genesis presets for: penpal,\nrococo-parachain-runtime and yet-another-parachain-runtime.\n\nThis is a follow-up issue of\nhttps://github.com/paritytech/polkadot-sdk/issues/5704. Some runtimes\nwere added after the initial refactor was done, and they were still\nfollowing the old, obsolete paradigm.\n\n---------\n\nCo-authored-by: Iulian Barbu <14218860+iulianbarbu@users.noreply.github.com>",
          "timestamp": "2025-06-06T07:46:14Z",
          "tree_id": "fb97b5abc48092d060c1ca0cd330f8c5e60a7b27",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/a80b5718c38eb2081d33192e866baee84c7f0b55"
        },
        "date": 1749199053916,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19934830,
            "range": "± 311117",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20501878,
            "range": "± 229532",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22064570,
            "range": "± 245734",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 27198813,
            "range": "± 264732",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 67718487,
            "range": "± 1420462",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 423712458,
            "range": "± 10945572",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 3021174876,
            "range": "± 171221182",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17492149,
            "range": "± 125290",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17603768,
            "range": "± 213176",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18364156,
            "range": "± 175519",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23935454,
            "range": "± 419739",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 62544402,
            "range": "± 1334814",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 391631605,
            "range": "± 5994108",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2858198950,
            "range": "± 30280295",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9c9e3f142457d5b041354b770eb695bf0e7cfa92",
          "message": "Move Transaction depth limit checks (#8750)\n\nThis moves the check of the transaction depth limit to `frame-executive`\ninstead of having it hidden in the `sp-api` macros.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-06T09:30:39Z",
          "tree_id": "fb4a39d3d1724b55a245a93ce6f1d972517467b3",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/9c9e3f142457d5b041354b770eb695bf0e7cfa92"
        },
        "date": 1749205564659,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18312982,
            "range": "± 221644",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19064738,
            "range": "± 410602",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20590925,
            "range": "± 411350",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25191747,
            "range": "± 652225",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55717135,
            "range": "± 1157377",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 325835076,
            "range": "± 5565295",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2413678842,
            "range": "± 155973233",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16106291,
            "range": "± 117495",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16242966,
            "range": "± 136443",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17968143,
            "range": "± 582124",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 27428825,
            "range": "± 956247",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 73813341,
            "range": "± 4178703",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 345277010,
            "range": "± 19985509",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2554921609,
            "range": "± 31259614",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "yrong1997@gmail.com",
            "name": "Ron",
            "username": "yrong"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "36c3039007866480be258d9645626c56ab168d69",
          "message": "Snowbridge: enforce fee when registering Polkadot native asset (#8725)\n\nResolves: https://linear.app/snowfork/issue/SNO-1497",
          "timestamp": "2025-06-09T11:19:34Z",
          "tree_id": "086d182406d10db5096ed2ba6a5af22cf0031cb5",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/36c3039007866480be258d9645626c56ab168d69"
        },
        "date": 1749470810199,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18270871,
            "range": "± 168070",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18823577,
            "range": "± 249462",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20466903,
            "range": "± 368131",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24689245,
            "range": "± 220209",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56950414,
            "range": "± 1384488",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 333813734,
            "range": "± 4664712",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2341903578,
            "range": "± 75103272",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16157959,
            "range": "± 86789",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16395994,
            "range": "± 129417",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17167566,
            "range": "± 556103",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21854626,
            "range": "± 175473",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 56545966,
            "range": "± 708482",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 329703735,
            "range": "± 3027026",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2603325703,
            "range": "± 26919739",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "14218860+iulianbarbu@users.noreply.github.com",
            "name": "Iulian Barbu",
            "username": "iulianbarbu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "25552a05d1326f82a38c59f07a1a6c0a527ce567",
          "message": "release-reusable-rc-build: add optional `features` input that can be considered for nodes building (#8755)\n\n# Description\n\n`polkadot-omni-node` & `polkadot-parachain` are currently released\nwithout `runtime-benchmarks` feature. This means they will not support\nrunning `benchmark pallet/storage` subcommands, due to having them\nfeature gated by `runtime-benchmarks` feature.\n\n## Integration\n\nDevelopers/operators wanting to benchmark runtimes via\n`polkadot-omni-node/polkadot-parachain` will be able to do it once we'll\nrelease the binaries based on the release pipeline changes brought in\nthe PR.\n\n## Review Notes\n\nN/A\n\n---------\n\nSigned-off-by: Iulian Barbu <iulian.barbu@parity.io>",
          "timestamp": "2025-06-10T08:54:12Z",
          "tree_id": "6707a38372abe02db86723cbedc50e2f1e35724c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/25552a05d1326f82a38c59f07a1a6c0a527ce567"
        },
        "date": 1749548590069,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18570115,
            "range": "± 67893",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18844813,
            "range": "± 526960",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20542951,
            "range": "± 204935",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24873109,
            "range": "± 157789",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57696279,
            "range": "± 571456",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 338676559,
            "range": "± 7061826",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2647276258,
            "range": "± 92047359",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16330604,
            "range": "± 72045",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16379005,
            "range": "± 74075",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17146179,
            "range": "± 113957",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21315571,
            "range": "± 176995",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 55275706,
            "range": "± 1117377",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 316004567,
            "range": "± 6204469",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2551892859,
            "range": "± 25602043",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "egor@parity.io",
            "name": "Egor_P",
            "username": "EgorPopelyaev"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0157f244d0560d439b73a5aedbfe6bed56376a26",
          "message": "[Release|CI/CD] Exclude test runtimes from the runtimes build (#8820)",
          "timestamp": "2025-06-11T10:29:21Z",
          "tree_id": "23d2e8d96dba309117b9ecd6b553ac0ff718f58c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/0157f244d0560d439b73a5aedbfe6bed56376a26"
        },
        "date": 1749640737039,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19222970,
            "range": "± 189758",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19650815,
            "range": "± 351807",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21612567,
            "range": "± 325999",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26288016,
            "range": "± 297493",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 64471615,
            "range": "± 1770129",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 393968384,
            "range": "± 7126863",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2742539474,
            "range": "± 171647162",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16973225,
            "range": "± 263673",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16973770,
            "range": "± 557786",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17935120,
            "range": "± 297713",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22803967,
            "range": "± 423337",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 59132375,
            "range": "± 1093985",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 369749658,
            "range": "± 4712980",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2746070550,
            "range": "± 29993970",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "tiago.bandeira@parity.io",
            "name": "Tiago Bandeira",
            "username": "tiagobndr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "37951b676608dce36c7997f2950f7d3a9a21118b",
          "message": "Add XCM Precompile to `pallet-xcm` (#8693)\n\nThis PR adds the XCM precompile (with `xcmSend`, `xcmExecute` and\n`weightMessage` functionalities) to `pallet-xcm`.\n\nThis follows the discussion we had on the now closed\n[PR](https://github.com/paritytech/polkadot-sdk/pull/8471/), which\nattempted to add the precompile to `pallet-revive`, but that approach\nwould have introduced unwanted cyclic dependencies. That's why we\ndecided to migrate the precompile to `pallet-xcm`, avoiding adding\nunnecessary dependencies to `pallet-revive`.\n\nThis PR should also encapsulate unit tests in `precompiles.rs` as well\nas integration tests under\n`cumulus/parachains/integration-tests/emulated/tests`.\n\nSee tracking parent\n[issue](https://github.com/paritytech/polkadot-sdk/issues/6718)\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Siphamandla Mjoli <brianm445@yahoo.com>\nCo-authored-by: Siphamandla Mjoli <siphamandla@parity.io>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>\nCo-authored-by: Francisco Aguirre <franciscoaguirreperez@gmail.com>\nCo-authored-by: PG Herveou <pgherveou@gmail.com>",
          "timestamp": "2025-06-11T12:57:58Z",
          "tree_id": "413c3d93f10ff655360c35656d034658631b6523",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/37951b676608dce36c7997f2950f7d3a9a21118b"
        },
        "date": 1749649783145,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19217966,
            "range": "± 175001",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19740430,
            "range": "± 254236",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21210887,
            "range": "± 196310",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25520153,
            "range": "± 155486",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 58869739,
            "range": "± 1438042",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 380950183,
            "range": "± 6876417",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2640945158,
            "range": "± 124536411",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17471534,
            "range": "± 109989",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17656707,
            "range": "± 586386",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18172615,
            "range": "± 165667",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22931294,
            "range": "± 179802",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 58759291,
            "range": "± 888921",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 358908630,
            "range": "± 7245467",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2740819096,
            "range": "± 44528830",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "14218860+iulianbarbu@users.noreply.github.com",
            "name": "Iulian Barbu",
            "username": "iulianbarbu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "292368d05eec5d6649607251ab21ed2c96ebd158",
          "message": "release/build-macos-binaries: add missing FEATURES argument  (#8816)\n\n# Description\n\nIn #8755 we enabled release scripts to build binaries with certain\nfeatures too, used especially for `polkadot-omni-node`. I missed to add\nthe `FEATURES` argument to the build script used for macos:\n\nhttps://github.com/paritytech/polkadot-sdk/pull/8755/files#diff-f4ebb5b55e4d2f4ec7ab5674ac3376839b13358d78935f9c388d79e75beeceb8R224\n\n## Integration\n\nN/A\n\n## Review Notes\n\nThis must be merged to be able to build `polkadot-omni-node` binary with\nruntime-benchmarks feature on macos.\nFixed also the macos build per:\nhttps://github.com/paritytech/polkadot-sdk/pull/8815/commits/05502a350b5995c5b3386ef42bd608c88ec8f17c.\n\n---------\n\nSigned-off-by: Iulian Barbu <iulian.barbu@parity.io>",
          "timestamp": "2025-06-11T13:30:59Z",
          "tree_id": "7cf74cf428cf045868c4132fa89faff0364bceda",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/292368d05eec5d6649607251ab21ed2c96ebd158"
        },
        "date": 1749653095696,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19762433,
            "range": "± 268298",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19869915,
            "range": "± 295245",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22023277,
            "range": "± 268848",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26424631,
            "range": "± 681925",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 63585927,
            "range": "± 1581472",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 385432054,
            "range": "± 7100209",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2647593314,
            "range": "± 94449776",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17409078,
            "range": "± 158860",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17650079,
            "range": "± 221713",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18438715,
            "range": "± 455979",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23464315,
            "range": "± 312418",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 59642951,
            "range": "± 2013632",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 351052495,
            "range": "± 3350051",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2704565834,
            "range": "± 21468481",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "donal.murray@parity.io",
            "name": "Dónal Murray",
            "username": "seadanda"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f96dfb73ff0472a5087451fd0227949b44756478",
          "message": "[pallet-broker] Force-unpool provisionally pooled regions before redispatching them (#4081)\n\nThis PR force removes regions from the pool before allowing them to be\nredispatched (through `partition`/`interlace`/`assign`) in the case that\na region was pooled with `Provisional` finality.\n\nThis PR does not account for the case where a pooled region already\nentitles the benefactor to a contribution reward before the point of it\nbeing redispatched. However, `claim_revenue` should be called before\ntrying to redispatch a region anyway.\nOtherwise there would be ambiguity as to what should be done with the\nfirst part of a partitioned region. The first of the two new regions\nactually has the exact same `region_id` as the original region -- leave\nit pooled/withdraw from pool/claim contribution then withdraw?\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-13T10:33:18Z",
          "tree_id": "9252b4ba357a052894712e133e0ddc077a35254b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f96dfb73ff0472a5087451fd0227949b44756478"
        },
        "date": 1749814391138,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 20595095,
            "range": "± 200965",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20321877,
            "range": "± 504457",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22144107,
            "range": "± 264543",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26230556,
            "range": "± 224219",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 64323131,
            "range": "± 846294",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 407722893,
            "range": "± 11714628",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2480983659,
            "range": "± 110796197",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17554341,
            "range": "± 174447",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17919939,
            "range": "± 252356",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18623115,
            "range": "± 240080",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23869890,
            "range": "± 319950",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 62844578,
            "range": "± 1415202",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 368707509,
            "range": "± 3796194",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2803491201,
            "range": "± 30131150",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5a84a332babf7968569b88034b5e4fc4abead35e",
          "message": "[pallet-revive] prestate tracer (#8742)\n\n- Add prestate tracer, with identical API as\nhttps://geth.ethereum.org/docs/developers/evm-tracing/built-in-tracers#prestate-tracer\n- Add coinbase runtime API to get the miner's address\ntested against geth with\nhttps://github.com/paritytech/evm-test-suite/pull/93\n\nfixes https://github.com/paritytech/revive-differential-tests/issues/7\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-13T11:28:21Z",
          "tree_id": "9a88c8e461debb0a6fb502b48679ebd679f381ad",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/5a84a332babf7968569b88034b5e4fc4abead35e"
        },
        "date": 1749818174265,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19166895,
            "range": "± 488836",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19970662,
            "range": "± 387759",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21532129,
            "range": "± 236941",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25891917,
            "range": "± 191251",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 60780963,
            "range": "± 710016",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 368613741,
            "range": "± 4442835",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2692722086,
            "range": "± 142236248",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17540809,
            "range": "± 185614",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17594912,
            "range": "± 243324",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18226700,
            "range": "± 232157",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23233523,
            "range": "± 205441",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 59491546,
            "range": "± 576669",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 359596599,
            "range": "± 7052797",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2738081013,
            "range": "± 46947817",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8e2b6f742a38bb13688e12abacded0aab2dbbb23",
          "message": "[pallet-revive] dev-node (#8746)\n\nThis adds a dev-node that is essentially the minimal template with the\naddition of pallet-revive\n\ncan be launched with\n\n```\ncargo run -p revive-dev-node\n```\n\nGoal: \n- use dev-node instead of kitchensink in\npolkadot-sdk/substrate/frame/revive/rpc/src/tests.rs for faster run and\nbuild time\n- use dev-node in https://github.com/paritytech/evm-test-suite and\nhttps://github.com/paritytech/revive-differential-tests\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-13T12:08:22Z",
          "tree_id": "c95826a81d74bea1a5dca5cacc79c43ce746071d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/8e2b6f742a38bb13688e12abacded0aab2dbbb23"
        },
        "date": 1749820069529,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18853534,
            "range": "± 218761",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19373035,
            "range": "± 311596",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21328039,
            "range": "± 229105",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25851659,
            "range": "± 481249",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59603878,
            "range": "± 1047289",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 349824306,
            "range": "± 5233213",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2458543160,
            "range": "± 113698999",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16622345,
            "range": "± 124077",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16818866,
            "range": "± 218623",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17534375,
            "range": "± 177793",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22502057,
            "range": "± 200000",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 56390838,
            "range": "± 806759",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 340875373,
            "range": "± 3015310",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2657056385,
            "range": "± 29872774",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "paolo@parity.io",
            "name": "Paolo La Camera",
            "username": "sigurpol"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d0a525301ab8d962e478ed87b8665f30142a879d",
          "message": "EPMB: Handle empty solution pages gracefully in verifier (#8666)\n\n- Treat missing solution pages as empty rather than errors.\n- Updated `get_page` method now returns a default Solution instead of an\nOption when no candidate solutions are available. This simplifies the\nAPI\nand improves code clarity by removing the need to handle None cases.\n- Similarly, updated `get_score` method now returns a default (0) score\nif no leader is available.\n- Removed VerificationDataUnavailable now that `get_page` and\n`get_score` don't return an Option anymore\n- Signed validation phase must now be a multiple of the number of pages\n- Updated tests to reflect new behavior and remove defensive unwraps.\n\nClose security vulnerability found\n[here](https://github.com/paritytech-secops/srlabs_findings/issues/505).\nA malicious miner could trigger panic in the EPMB pallet, submitting a\nvery high score and then intentionally\nfailing in submitting one or more pages.\n\nA unit test replicating the vulnerability ensures that the fix works as\nexpected (i.e. no panic, solution is rejected).\n\n---------\n\nCo-authored-by: kianenigma <kian@parity.io>\nCo-authored-by: Kian Paimani <5588131+kianenigma@users.noreply.github.com>",
          "timestamp": "2025-06-13T21:14:57Z",
          "tree_id": "af343733a89a05442777f0e8f32fbeeeb548ab3e",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d0a525301ab8d962e478ed87b8665f30142a879d"
        },
        "date": 1749852397989,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18648943,
            "range": "± 208911",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19103048,
            "range": "± 170155",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20717365,
            "range": "± 232729",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25079481,
            "range": "± 271098",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59656471,
            "range": "± 728982",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 366413074,
            "range": "± 3612134",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2641053749,
            "range": "± 116594213",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16490527,
            "range": "± 219531",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16694238,
            "range": "± 82331",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17375135,
            "range": "± 161979",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22116988,
            "range": "± 179089",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 55827773,
            "range": "± 335342",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 333433754,
            "range": "± 4810858",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2633300612,
            "range": "± 23746297",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ludovic.domingues96@gmail.com",
            "name": "Ludovic Domingues",
            "username": "Krayt78"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4a4009589b17267e32983c0f4e0c7f54860b40cb",
          "message": "Add deposit for setting session keys (#7953)\n\n# Description\ncloses #1625\n\nImplement hold balance tracking for test accounts in the session pallet.\nRequires `pallet_session::Config` to specify:\n    * `type Currency`, assigned to an instance of `pallet_balances`.\n* `type RuntimeHoldReason`, almost always set to `RuntimeHoldReason`.\n* `type KeyDeposit`, the amount of deposit. Set to `()` to assert no\ndeposit amount is needed.\n    \nPolkadot address: 14AgwoPjcRiEEJgjfHmvAqkjdERCG26WEvQUoGLuBzcXKMS2\n\n---------\n\nCo-authored-by: Kian Paimani <5588131+kianenigma@users.noreply.github.com>\nCo-authored-by: kianenigma <kian@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-06-14T09:17:53Z",
          "tree_id": "63e297516823da22031454bcad0b74b53ad6347b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4a4009589b17267e32983c0f4e0c7f54860b40cb"
        },
        "date": 1749895823278,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18512401,
            "range": "± 117102",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18733942,
            "range": "± 281758",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20588727,
            "range": "± 287398",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24628522,
            "range": "± 312518",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 58714984,
            "range": "± 760537",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 365282377,
            "range": "± 8019866",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2567643073,
            "range": "± 151812575",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16180419,
            "range": "± 116846",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16387424,
            "range": "± 133629",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17100005,
            "range": "± 146719",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21625120,
            "range": "± 154185",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 56979861,
            "range": "± 687339",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 330878062,
            "range": "± 6816834",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2606238500,
            "range": "± 15966483",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ludovic.domingues96@gmail.com",
            "name": "Ludovic Domingues",
            "username": "Krayt78"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2ffee63df61d45b9c7b2c53afb10a9495bee792e",
          "message": "Fix calling nominate on a validator that doesn’t exist silently succeeds (#8436)\n\n# Description\nThis PR fixes a bug where calling nominate on a validator that doesn’t\nexist silently succeeds.\nIt also updates all the tests that had an incorrect setup - they were\nsimulating elections with unregistered validators.\n\npolkadot address: 14AgwoPjcRiEEJgjfHmvAqkjdERCG26WEvQUoGLuBzcXKMS2\n\n---------\n\nCo-authored-by: Kian Paimani <5588131+kianenigma@users.noreply.github.com>\nCo-authored-by: Ankan <10196091+Ank4n@users.noreply.github.com>\nCo-authored-by: kianenigma <kian@parity.io>",
          "timestamp": "2025-06-14T16:47:26Z",
          "tree_id": "0293d0c7a9f22add7fbdf28e59c8ca843c037003",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/2ffee63df61d45b9c7b2c53afb10a9495bee792e"
        },
        "date": 1749922783683,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18373896,
            "range": "± 244058",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18637532,
            "range": "± 165717",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20302260,
            "range": "± 239644",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24905130,
            "range": "± 1213940",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 58258973,
            "range": "± 530117",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 348008729,
            "range": "± 4613070",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2562642958,
            "range": "± 147069801",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16037402,
            "range": "± 160951",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16048063,
            "range": "± 106923",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16811767,
            "range": "± 109896",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21532942,
            "range": "± 161152",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54689633,
            "range": "± 536232",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 320599983,
            "range": "± 4615870",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2601124508,
            "range": "± 34740606",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "donal.murray@parity.io",
            "name": "Dónal Murray",
            "username": "seadanda"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "20452a838f4f1970a407aea9e15ba7321684a704",
          "message": "Allow RelaychainDataProvider set_block_number to be used in tests (#8537)\n\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-06-15T15:07:24Z",
          "tree_id": "1c14e417a3e086902c0e82202b2ef5f749766a47",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/20452a838f4f1970a407aea9e15ba7321684a704"
        },
        "date": 1750003222307,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18438351,
            "range": "± 212155",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18707397,
            "range": "± 134149",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20324207,
            "range": "± 169893",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24688423,
            "range": "± 228293",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56863154,
            "range": "± 1036032",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 323296671,
            "range": "± 6169314",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2599802055,
            "range": "± 188681128",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16041615,
            "range": "± 348306",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16157901,
            "range": "± 152740",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16798839,
            "range": "± 111619",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21691677,
            "range": "± 375580",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54956023,
            "range": "± 655210",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 314303592,
            "range": "± 5287561",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2533435896,
            "range": "± 35550233",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c405dda71db4463f55b26a037484274f3ab2e646",
          "message": "[pallet-revive] fix call-trace create calls (#8781)\n\nFix call-traces for CREATE calls.\n\nthese types of calls have a \"CREATE\" and \"CREATE2\" type see\nhttps://geth.ethereum.org/docs/developers/evm-tracing/built-in-tracers#call-tracer\n\nThe input of these trace, should also contain the bytecode or code hash.\n\nfixes https://github.com/paritytech/contract-issues/issues/96\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-15T21:55:13Z",
          "tree_id": "8a6f09d132c61e9bf5e856cf2e7a4aac082610e0",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c405dda71db4463f55b26a037484274f3ab2e646"
        },
        "date": 1750027670429,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18520386,
            "range": "± 112275",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18855360,
            "range": "± 408940",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20609620,
            "range": "± 249223",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24803050,
            "range": "± 200518",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59086793,
            "range": "± 1126915",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 366832921,
            "range": "± 3657718",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2356907082,
            "range": "± 28629777",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16392761,
            "range": "± 124610",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16565010,
            "range": "± 121236",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17207422,
            "range": "± 122462",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21904780,
            "range": "± 137255",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 56407094,
            "range": "± 968885",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 325121758,
            "range": "± 5145068",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2596382580,
            "range": "± 89333325",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "andrew.ahlers@parity.io",
            "name": "andrew-ifrita",
            "username": "andrew-ifrita"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b9fbf243c57939ecadc89b82ed42249703203874",
          "message": "docs: fix XCM docs for AlwaysV4 and AlwaysV5 (#8862)\n\n✄\n-----------------------------------------------------------------------------\n\nThank you for your Pull Request! 🙏 Please make sure it follows the\ncontribution guidelines outlined in [this\n\ndocument](https://github.com/paritytech/polkadot-sdk/blob/master/docs/contributor/CONTRIBUTING.md)\nand fill out the\nsections below. Once you're ready to submit your PR for review, please\ndelete this section and leave only the text under\nthe \"Description\" heading.\n\n# Description\n\nFix docstrings for `AlwaysV4` and `AlwaysV5` in XCM code, both of which\nwrongly stated V3\n\n## Integration\n\nOnly docs are changed.\n\n## Review Notes\n\nNone\n\n\n# Checklist\n\n* [x] My PR includes a detailed description as outlined in the\n\"Description\" and its two subsections above.\n* [x] My PR follows the [labeling requirements](\n\nhttps://github.com/paritytech/polkadot-sdk/blob/master/docs/contributor/CONTRIBUTING.md#Process\n) of this project (at minimum one label for `T` required)\n* External contributors: ask maintainers to put the right label on your\nPR.\n* [x] I have made corresponding changes to the documentation (if\napplicable)\n* [x] (N/A) I have added tests that prove my fix is effective or that my\nfeature works (if applicable)\n\nYou can remove the \"Checklist\" section once all have been checked. Thank\nyou for your contribution!\n\n✄\n-----------------------------------------------------------------------------",
          "timestamp": "2025-06-16T10:02:04Z",
          "tree_id": "c198cb761726325b836a171b765efa7a6ac7fad5",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/b9fbf243c57939ecadc89b82ed42249703203874"
        },
        "date": 1750071180122,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18279333,
            "range": "± 161498",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18650906,
            "range": "± 201817",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20186355,
            "range": "± 130292",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24758775,
            "range": "± 331308",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56014702,
            "range": "± 1020018",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 327298876,
            "range": "± 4008930",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2402809939,
            "range": "± 88858472",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16306485,
            "range": "± 151651",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16341670,
            "range": "± 85383",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17020026,
            "range": "± 97552",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21409905,
            "range": "± 204063",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54718292,
            "range": "± 846512",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 314640124,
            "range": "± 4706880",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2519559666,
            "range": "± 38909866",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "noreply@reusable.software",
            "name": "ordian",
            "username": "ordian"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "da75e7db67ee4a08f3821ef552dc0ca47975cf66",
          "message": "paras_inherent: fix overweight warn (#8861)\n\nFixes #8859 \n\nLong-term fix would be addressing #5520.",
          "timestamp": "2025-06-16T13:28:13Z",
          "tree_id": "3ea47a6d56b14f3ce033d5e3083f9f0b27d40f74",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/da75e7db67ee4a08f3821ef552dc0ca47975cf66"
        },
        "date": 1750084196541,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18168804,
            "range": "± 236327",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18566683,
            "range": "± 149912",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20155885,
            "range": "± 100682",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24489185,
            "range": "± 264223",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54888196,
            "range": "± 1143463",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 305341922,
            "range": "± 4094668",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2354691088,
            "range": "± 72628022",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16053062,
            "range": "± 259017",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16256593,
            "range": "± 111709",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17025380,
            "range": "± 180398",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21238427,
            "range": "± 100440",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54639375,
            "range": "± 1180133",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 308491166,
            "range": "± 3874083",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2507564589,
            "range": "± 36240285",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "363911+pepoviola@users.noreply.github.com",
            "name": "Javier Viola",
            "username": "pepoviola"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "bd646008920111d1dd5698dc73f45428f3227d31",
          "message": "[Zombienet] changes for new runners (#8864)\n\nChanges for new CI runners.",
          "timestamp": "2025-06-16T15:40:28Z",
          "tree_id": "0e3bf0f3fe5df49c96e9a110573057454184745d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/bd646008920111d1dd5698dc73f45428f3227d31"
        },
        "date": 1750091423325,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19954495,
            "range": "± 378639",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20636449,
            "range": "± 315887",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22409308,
            "range": "± 333754",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26750813,
            "range": "± 231398",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 61156011,
            "range": "± 1104799",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 391654768,
            "range": "± 12953268",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2932772394,
            "range": "± 189110065",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17683187,
            "range": "± 201490",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17544950,
            "range": "± 151313",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18268874,
            "range": "± 189003",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23156791,
            "range": "± 172928",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 58786051,
            "range": "± 1315722",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 365905358,
            "range": "± 8202282",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2722081189,
            "range": "± 34782362",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "dmitry@markin.tech",
            "name": "Dmitry Markin",
            "username": "dmitry-markin"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "fdd9b43a9b9ca28c68f04b7f8cae9db5b2c04687",
          "message": "Add doc for DHT bootnodes mechanism (#8865)\n\nAdd description of the RFC-8 \"DHT bootnodes\" implementation.\n\nRendered:\nhttps://github.com/paritytech/polkadot-sdk/blob/dm-dht-bootnodes-doc/docs/sdk/src/guides/dht_bootnodes.md",
          "timestamp": "2025-06-17T08:45:58Z",
          "tree_id": "89091993c5374d1cea4506ee415a5e7c832ac85a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/fdd9b43a9b9ca28c68f04b7f8cae9db5b2c04687"
        },
        "date": 1750152888561,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19959206,
            "range": "± 349704",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20680330,
            "range": "± 396843",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22133845,
            "range": "± 261695",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 27897785,
            "range": "± 1376953",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 67361673,
            "range": "± 1838325",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 392632838,
            "range": "± 9738370",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 3167586561,
            "range": "± 211154358",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 18371296,
            "range": "± 393794",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 18482273,
            "range": "± 473399",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 19006787,
            "range": "± 237190",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 24856752,
            "range": "± 263282",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 64099441,
            "range": "± 1041031",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 368257851,
            "range": "± 4988032",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2993432076,
            "range": "± 25123644",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eresav@me.com",
            "name": "Andrei Eres",
            "username": "AndreiEres"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "310e81d772201491b2a49452adaae7796ac237df",
          "message": "Check artifact integrity before execution (#8833)\n\nFixes https://github.com/paritytech/polkadot-sdk/issues/677\nFixes https://github.com/paritytech/polkadot-sdk/issues/2399 \n\n# Description\n\nTo detect potential corruption of PVF artifacts on disk, we store their\nchecksums and verify if they match before execution. In case of a\nmismatch, we recreate the artifact.\n\n## Integration\n\nIn Candidate Validation, we treat the error similarly to\nPossiblyInvalidError::RuntimeConstruction due to their close nature.\n\n## Review Notes\n\nThe Black3 hashing algorithm has already been used. I believe we can\nswitch to twox, as suggested in the issue, because the checksum does not\nneed to be cryptographically hashed, and we do not reveal the checksum\nin logs.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-17T13:28:32Z",
          "tree_id": "40f6f510c55627c250552908018d8d26604c29f1",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/310e81d772201491b2a49452adaae7796ac237df"
        },
        "date": 1750170545448,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19819699,
            "range": "± 223550",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20417123,
            "range": "± 245201",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21930843,
            "range": "± 141795",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 27083201,
            "range": "± 262280",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 65863113,
            "range": "± 1240657",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 376322698,
            "range": "± 12086146",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2709579284,
            "range": "± 188998573",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17899949,
            "range": "± 209512",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 18141062,
            "range": "± 126205",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18671926,
            "range": "± 151275",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23996147,
            "range": "± 229505",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 61816012,
            "range": "± 661757",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 363233798,
            "range": "± 3764285",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2764919469,
            "range": "± 26286660",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "363911+pepoviola@users.noreply.github.com",
            "name": "Javier Viola",
            "username": "pepoviola"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6697fc8ca61a8ac77b42dc1ac1b66e0dcf033197",
          "message": "[zombienet] fix ci for new runners (#8876)\n\nAdd needed env vars to run with the new runners (polkadot workflow) and\nmove cumulus/substrate to zombienet action.",
          "timestamp": "2025-06-17T14:49:04Z",
          "tree_id": "5654c46c22f0eb9cde59441248c7afe3de24a772",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/6697fc8ca61a8ac77b42dc1ac1b66e0dcf033197"
        },
        "date": 1750175773948,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19003029,
            "range": "± 134487",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19307272,
            "range": "± 364633",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21075352,
            "range": "± 140710",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25401177,
            "range": "± 276313",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57916213,
            "range": "± 899233",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 345536354,
            "range": "± 4737101",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2561777503,
            "range": "± 140391849",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16590265,
            "range": "± 214046",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16684724,
            "range": "± 169900",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17521570,
            "range": "± 173001",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21928997,
            "range": "± 176783",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 57054276,
            "range": "± 807495",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 338768391,
            "range": "± 4264280",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2622628761,
            "range": "± 23405721",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6b5a1284e83ed52dfc61f7deb920af41ae1efd31",
          "message": "extend overseer to send priority messages (#8834)\n\nExtend overseer to send priority messages, the new functionality is used\nfor sending messages on the grandpa call path when we call\ndispute-coordinator and approval-voting in\nfinality_target_with_longest_chain to make sure we don't block\nunnecessarily.\n\nDepends on: https://github.com/paritytech/orchestra/pull/87.\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Javier Viola <javier@parity.io>\nCo-authored-by: Javier Viola <363911+pepoviola@users.noreply.github.com>",
          "timestamp": "2025-06-17T16:17:36Z",
          "tree_id": "1bb03dbcc5809a80c347b65df981123f794c92a0",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/6b5a1284e83ed52dfc61f7deb920af41ae1efd31"
        },
        "date": 1750180162371,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17962797,
            "range": "± 151380",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18591186,
            "range": "± 336312",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20077116,
            "range": "± 143486",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24155120,
            "range": "± 489719",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55508873,
            "range": "± 1155441",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 322396176,
            "range": "± 3546845",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2290277152,
            "range": "± 135195909",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16030829,
            "range": "± 200803",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16148960,
            "range": "± 76075",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16929166,
            "range": "± 168539",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21364196,
            "range": "± 207181",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54502012,
            "range": "± 521276",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 311630409,
            "range": "± 4292559",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2564293708,
            "range": "± 44754438",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "OliverLim818@gmail.com",
            "name": "cuteolaf",
            "username": "cuteolaf"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "79c84d47fc30e365488f5926cbea0d00eb6d3c52",
          "message": "replace `pure` with `create_pure` in comments (#8892)\n\n# Description\n\nFixed some comments in the implementation of proxy pallet.",
          "timestamp": "2025-06-18T08:40:45Z",
          "tree_id": "88412a2b037372def5632f5177debada7b5e77ac",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/79c84d47fc30e365488f5926cbea0d00eb6d3c52"
        },
        "date": 1750239113272,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17444841,
            "range": "± 79752",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17892984,
            "range": "± 94685",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19180578,
            "range": "± 220938",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23277581,
            "range": "± 283751",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54727276,
            "range": "± 448809",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 319594793,
            "range": "± 5640609",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2371112044,
            "range": "± 91775185",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15930431,
            "range": "± 138494",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16065785,
            "range": "± 97783",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16685437,
            "range": "± 77328",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20840435,
            "range": "± 324454",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54420969,
            "range": "± 1021761",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 310254278,
            "range": "± 2110978",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2467022412,
            "range": "± 15018644",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "serban@parity.io",
            "name": "Serban Iorga",
            "username": "serban300"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f6cd17e550caeaa1b8184b5f3135ca21f2cb16eb",
          "message": "Fix `zombienet-substrate-0002-validators-warp-sync` (#8878)\n\nCloses https://github.com/paritytech/polkadot-sdk/issues/8871\nRelated to #8748\n\nFix `zombienet-substrate-0002-validators-warp-sync`",
          "timestamp": "2025-06-18T11:08:36Z",
          "tree_id": "44eecdbe6318c8ce6583340f94006ec98f56792f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f6cd17e550caeaa1b8184b5f3135ca21f2cb16eb"
        },
        "date": 1750249136796,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19234114,
            "range": "± 282225",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20040716,
            "range": "± 452430",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21617140,
            "range": "± 215052",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26240976,
            "range": "± 250517",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 62561251,
            "range": "± 1050089",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 399915955,
            "range": "± 6619310",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2525827266,
            "range": "± 203974062",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17000557,
            "range": "± 185311",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17175024,
            "range": "± 192402",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17665688,
            "range": "± 137205",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23068773,
            "range": "± 213877",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 58296870,
            "range": "± 629732",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 346081133,
            "range": "± 6496535",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2725798277,
            "range": "± 32412626",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f10da5373cde92d9fc63ebfc66b9f62f5ad34a11",
          "message": "[pallet-revive] only record diff if value changed (#8881)\n\nOnly record storage change in diff mode if the value differ from the\ninitial one.\nPrevious implementation would report a diff for example when the old\nvalue was written again.\n\nUpdated tests in https://github.com/paritytech/evm-test-suite/pull/96\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-18T15:29:50Z",
          "tree_id": "c3ae3ee372616e288e1b45aa53082dbd2c513d7c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f10da5373cde92d9fc63ebfc66b9f62f5ad34a11"
        },
        "date": 1750264043832,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 20727343,
            "range": "± 285843",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 21613819,
            "range": "± 460490",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 23602061,
            "range": "± 358220",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 28170084,
            "range": "± 203744",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 68387654,
            "range": "± 852136",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 426013105,
            "range": "± 15210115",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2708677494,
            "range": "± 179092406",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17567320,
            "range": "± 108170",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17554123,
            "range": "± 244832",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18232088,
            "range": "± 146223",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23199061,
            "range": "± 247330",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 59632354,
            "range": "± 783541",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 354392858,
            "range": "± 4877105",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2695299711,
            "range": "± 53509830",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "86f833bff3c434e6fdd202c0521eb1dcaf7fb31e",
          "message": "[pallet-revive-rpc] fix sqlite in-memory connection pool issue (#8897)\n\nFix in-memory sqlite connection pool issue\nsee https://github.com/launchbadge/sqlx/issues/2510\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-18T17:09:55Z",
          "tree_id": "1b66734bfc6368fd978192f62b5adb847f93f0ec",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/86f833bff3c434e6fdd202c0521eb1dcaf7fb31e"
        },
        "date": 1750270348585,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18789922,
            "range": "± 435094",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19072526,
            "range": "± 179629",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21104821,
            "range": "± 208777",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24975387,
            "range": "± 296418",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59494938,
            "range": "± 771939",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 367762128,
            "range": "± 4669868",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2470259722,
            "range": "± 112676929",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16397353,
            "range": "± 138259",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16722747,
            "range": "± 238466",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17631092,
            "range": "± 207193",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22394072,
            "range": "± 544979",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 56049765,
            "range": "± 745269",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 333161354,
            "range": "± 5078550",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2631025497,
            "range": "± 26073625",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "32168055+antkve@users.noreply.github.com",
            "name": "Anthony Kveder",
            "username": "antkve"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "7d875655ea38b734d6f1a3a79aef227e846f227c",
          "message": "Fix bridge tests (#8900)\n\nFixes: https://github.com/paritytech/polkadot-sdk/issues/8800\n\n# Description\nFixing bridges integration tests by setting up pool\n\n---------\n\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>",
          "timestamp": "2025-06-19T08:01:30Z",
          "tree_id": "c6e34fd12d4d4103f3b1939a1c19acfc7ca43cbe",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/7d875655ea38b734d6f1a3a79aef227e846f227c"
        },
        "date": 1750323020130,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17183783,
            "range": "± 150646",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17581591,
            "range": "± 126005",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18957902,
            "range": "± 179881",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23101214,
            "range": "± 148506",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 51783591,
            "range": "± 468955",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 297580273,
            "range": "± 1898399",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2417861380,
            "range": "± 16686050",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16095974,
            "range": "± 132145",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16107804,
            "range": "± 128447",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16729485,
            "range": "± 175995",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21067727,
            "range": "± 369394",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53774852,
            "range": "± 976470",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 306325026,
            "range": "± 2206945",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2478971212,
            "range": "± 32134552",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "dmitry@markin.tech",
            "name": "Dmitry Markin",
            "username": "dmitry-markin"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "35d8868a9773cb560f00bd79f644228af6708d8f",
          "message": "DHT bootnodes: rate limit the discovery attempts instead of limiting max retry count (#8792)\n\nInstead of giving up after 5 discovery attempts, keep retrying with a\ndelay of 30 seconds until the discovery succeeds.\n\nThis fixes a DHT bootnodes zombinet test execution on CI where\nindividual nodes may start with a significant delay. This will also help\nshould there be temporary connectivity issues leading to 5 failures in a\nrow.\n\n---------\n\nCo-authored-by: Alexandru Vasile <60601340+lexnv@users.noreply.github.com>",
          "timestamp": "2025-06-19T15:38:11Z",
          "tree_id": "6d51d118fa8225e4896ea6c39f2c73e1572894f8",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/35d8868a9773cb560f00bd79f644228af6708d8f"
        },
        "date": 1750350646067,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 20369653,
            "range": "± 153726",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 21126638,
            "range": "± 232445",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 23087202,
            "range": "± 194593",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 28138366,
            "range": "± 951515",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 69545397,
            "range": "± 1435641",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 432706309,
            "range": "± 5463421",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2642533154,
            "range": "± 25089882",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17903498,
            "range": "± 192202",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 18236926,
            "range": "± 160214",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18550654,
            "range": "± 89772",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 24039496,
            "range": "± 237202",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 63675741,
            "range": "± 1025052",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 394486984,
            "range": "± 8494937",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2891491559,
            "range": "± 34663087",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "karol.k91@gmail.com",
            "name": "Karol Kokoszka",
            "username": "karolk91"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "bade694abb5d43469395168f06f9c6f1dab26407",
          "message": "Westend governance authorize_upgrade integration tests (#8787)\n\nIntroduces integration tests covering `authorize_upgrade` with\nwhitelisting via Collectives for Westend network:\n- relay chain authorizes upgrade for itself\n- relay chain authorizes upgrades for all system chains\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>",
          "timestamp": "2025-06-20T08:35:31Z",
          "tree_id": "682d62d1aac59b001942b7d983bce4d44c33349d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/bade694abb5d43469395168f06f9c6f1dab26407"
        },
        "date": 1750411673077,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19827116,
            "range": "± 358335",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20129616,
            "range": "± 495205",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21550431,
            "range": "± 232169",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25653317,
            "range": "± 119436",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57435182,
            "range": "± 398649",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 334531370,
            "range": "± 2568465",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2640458414,
            "range": "± 146159467",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16892205,
            "range": "± 96134",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16808792,
            "range": "± 126707",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17692179,
            "range": "± 167335",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22197311,
            "range": "± 144462",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 56117269,
            "range": "± 375316",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 336887179,
            "range": "± 3153960",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2626298887,
            "range": "± 26144141",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "tsvetomir@parity.io",
            "name": "Tsvetomir Dimitrov",
            "username": "tdimitrov"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "40a005033bc1b67344cc4ac5e594956b583780f3",
          "message": "More deterministic check for polkadot/zombienet_tests/functional/0019-coretime-collation-fetching-fairness.zndsl (#8921)\n\n`polkadot/zombienet_tests/functional/0019-coretime-collation-fetching-fairness.zndsl`\nis flaky on CI. I suspect the reason for this is session changes\nhappening during the measurement step. To make this more predictable\nI've modified the checker to wait for a session change before counting\nthe `CandidateIncluded` events. Hopefully this will stabilize the test\non CI too.",
          "timestamp": "2025-06-20T14:29:07Z",
          "tree_id": "7eb5a00ab10abc5e6c965b171a4effeba046b8bf",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/40a005033bc1b67344cc4ac5e594956b583780f3"
        },
        "date": 1750433425015,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 20772363,
            "range": "± 382684",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 21289527,
            "range": "± 263033",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22699228,
            "range": "± 324935",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 27480804,
            "range": "± 338241",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 65036375,
            "range": "± 1174601",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 399771411,
            "range": "± 13424895",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2721033433,
            "range": "± 217310751",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17076089,
            "range": "± 183223",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17185021,
            "range": "± 136790",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18108646,
            "range": "± 210798",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23324193,
            "range": "± 248798",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 64300027,
            "range": "± 1242228",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 364634693,
            "range": "± 13842547",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2793097275,
            "range": "± 62707743",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "14218860+iulianbarbu@users.noreply.github.com",
            "name": "Iulian Barbu",
            "username": "iulianbarbu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "764976b5800df633b6ec5904f0ae856e16040524",
          "message": "polkadot-omni-node: add `GetParachainInfo` runtime api  (#8651)\n\n# Description\n\nCloses #7384\nCloses #75\nCloses #8692\nCloses #8739 \n\n## Integration\n\nNode developers, node operators & runtime developers will not need to\ngenerate chain specs that contain a `para_id` field starting with this\nPR, but they'll have to implement the\n`cumulus_primitives_core::GetParachainInfo` runtime API once they drop\nthe `para_id` field, so that new nodes versions will be able to query\nthe runtime for the parachain id.\n\nStarting with `2512` the nodes will not support anymore reading the\nparachain id from chain specs `para_id` field, so it will be mandatory\nfor runtime to implement the `cumulus_primitives_core::GetParachainInfo`\ntrait and be upgraded.\n\n## Review Notes\n\nThis PR is based on prior work here:  #7546. It delivers the following:\n\n### Deprecated `para_id` chain spec extension\n\n- nodes like `polkadot-omni-node`/`polkadot-parachain`) will still\nsupport running chainspecs with `para_id` extension for a while (until\nstable2512)\n- nodes like `test-parachain`/`parachain-template-node` are supporting\nonly runtimes that implement the new runtime API.\n- `chain-spec-builder` will display that `para_id` is deprecated when\ncalling `help`, or when using the flag.\n\n### Additional cleanup/changes\n\n- fixed & renabled some omni-node/parachain-template-node tests from\n`polkadot-sdk-docs` & `templates/zombienet`, which rely on the newly\nadded runtime API as wellI. Tests based on the `para_id` chain spec\nextension are not present anymore, since omni-node will favour taking\nthe para id based on the runtime API if present.\n\n- removed the concept of running `minimal` with omni-node. I returned to\nan old idea of a few of us. At this moment we can't support it anymore\nwith omni-node since we'd need to add `parachain_info` to\n`minimal-template-runtime`, which doesn't make much sense.\n\n- most of the parachains runtimes (hope I haven't missed any relevant)\nthat run by using\n`polkadot-parachain/polkadot-omni-node/test-parachain/parachain-template-node`\nshould fail to work with the previous nodes (that support them) after\n`stable2512`. Probably that will be caught in the CI if I missed them\nduring this PR, but I doubt it.\n\n## Reviewers request\n\n- if there are other nodes used to run parachains runtimes, this is a\ngood moment to highlight them so that I can update them if needed in\nterms of picking up the `parachain_id` from the runtime.\n\n---------\n\nSigned-off-by: Iulian Barbu <iulian.barbu@parity.io>\nCo-authored-by: Steven <stevenlawrence13e@gmail.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Michal Kucharczyk <1728078+michalkucharczyk@users.noreply.github.com>",
          "timestamp": "2025-06-22T18:31:15Z",
          "tree_id": "b58e80b1292e6202f90085c779752e346ca3a764",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/764976b5800df633b6ec5904f0ae856e16040524"
        },
        "date": 1750620519850,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18230931,
            "range": "± 133941",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18738574,
            "range": "± 122147",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20332798,
            "range": "± 206895",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24237750,
            "range": "± 146609",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55161512,
            "range": "± 950600",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 320357132,
            "range": "± 7146283",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2524445444,
            "range": "± 83604409",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15963080,
            "range": "± 121814",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16030236,
            "range": "± 140030",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16706130,
            "range": "± 58056",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21219512,
            "range": "± 129439",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54334935,
            "range": "± 432955",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 309128426,
            "range": "± 3292767",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2485886157,
            "range": "± 47359809",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "e.svirsky@tut.by",
            "name": "Evgeny Svirsky",
            "username": "evgeny-s"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "4c8bde97d6def1313022e470a2a66a057141fa89",
          "message": "Token matching trait typo (#8955)\n\nTypo fix for token matching trait\n\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>",
          "timestamp": "2025-06-24T07:04:56Z",
          "tree_id": "030a82b95d2c4b85fd7df2d1b7fe021b3dfce870",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4c8bde97d6def1313022e470a2a66a057141fa89"
        },
        "date": 1750751938293,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18231271,
            "range": "± 138780",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18537080,
            "range": "± 249862",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19732677,
            "range": "± 335796",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24885550,
            "range": "± 207594",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57180471,
            "range": "± 1095688",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 349334882,
            "range": "± 8187049",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2383471527,
            "range": "± 212420327",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15551133,
            "range": "± 149517",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16657508,
            "range": "± 795210",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16685485,
            "range": "± 452192",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20873187,
            "range": "± 200793",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52676248,
            "range": "± 1313595",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 327387210,
            "range": "± 20414962",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2537823422,
            "range": "± 64709463",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5f3507ec02185e05c96f055d808d8d17d8b969e6",
          "message": "make sure dispute_coordinator/approval-voting parallel can receive priority messages (#8948)\n\nhttps://github.com/paritytech/polkadot-sdk/pull/8834, changed\nrelay_chain_selection to send priority messages, but did not configured\nthe subsystems to tell they can receive priority messages, with\n`can_receive_priority_messages` flag.\n\nIf `can_receive_priority_messages` is not specified orchestra falls back\nwhen sending a priority message to the normal queue, so this resulted in\nthe messages not being processed ahead of the others in the queue.\n\nFix this configuration mistake and add a test to make sure priority\nmessages are consumed ahead of normal ones by the subsystems.\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-24T07:28:49Z",
          "tree_id": "f45b40cb1f5276f7774d77d87f057a36768fedbe",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/5f3507ec02185e05c96f055d808d8d17d8b969e6"
        },
        "date": 1750753245904,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19137367,
            "range": "± 465241",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19550224,
            "range": "± 380203",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21703624,
            "range": "± 698978",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 27713468,
            "range": "± 444049",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 67099989,
            "range": "± 2221538",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 370584943,
            "range": "± 14754790",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2777409605,
            "range": "± 201227784",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16996095,
            "range": "± 275551",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17600447,
            "range": "± 239045",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17578685,
            "range": "± 273633",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23440921,
            "range": "± 607677",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 58459066,
            "range": "± 2498606",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 322704209,
            "range": "± 9376739",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2711621701,
            "range": "± 44553138",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "28b7c7770e9e7abf5b561fc42cfe565baf076cb7",
          "message": "remove enable_approval_voting_parallel cli flag (#8894)\n\nThis has been running on polkadot since\nhttps://github.com/paritytech/polkadot-sdk/pull/7504, so it is time to\nremove the flag that allowed us to run either with\napproval-voting-parallel or with approval-distribution and\napproval-voting subsystems.\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-24T10:20:06Z",
          "tree_id": "73626b2532ace72421a8a57f6cc1ebebd973a764",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/28b7c7770e9e7abf5b561fc42cfe565baf076cb7"
        },
        "date": 1750765271913,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18204615,
            "range": "± 89334",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18498115,
            "range": "± 352344",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19648157,
            "range": "± 222231",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24609210,
            "range": "± 130469",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54751678,
            "range": "± 524900",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 304812505,
            "range": "± 24627339",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2339273796,
            "range": "± 87164976",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15398398,
            "range": "± 223311",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15626356,
            "range": "± 160191",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15783218,
            "range": "± 124736",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20365251,
            "range": "± 423522",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51959236,
            "range": "± 578316",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 296578735,
            "range": "± 1615279",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2488534174,
            "range": "± 40712968",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "Sajjon@users.noreply.github.com",
            "name": "Alexander Cyon",
            "username": "Sajjon"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "38d3c3074935b9353519a39abdf8f4912c86b196",
          "message": "Link to dev setup guide from README and CONTRIBUTING (#8827)\n\n# Description\nToday the README does not link to how to get started making `cargo\nbuild` succeed. I've made some minor edits making the repo a bit more\n\"welcoming\" to devs who wanna get started building the repo.\n\n## Changes\n* Update `README.md` on how to get started with development (making\n`cargo build` succeed) by linking to [this\nguide](https://docs.polkadot.com/develop/parachains/install-polkadot-sdk/)\n* Update `CONTRIBUTING.md` with the same guide\n* Generalize `DOCUMENTATION_GUIDELINES.md` to not only be about\nSubstrate.\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-06-24T14:20:25+02:00",
          "tree_id": "fd0dab29639ec766763f212ab00a2a1fd5db92ee",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/38d3c3074935b9353519a39abdf8f4912c86b196"
        },
        "date": 1750768613596,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18755339,
            "range": "± 265441",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19422791,
            "range": "± 193477",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20438389,
            "range": "± 179904",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25457120,
            "range": "± 353969",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56578831,
            "range": "± 511585",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 348792165,
            "range": "± 7872004",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2375731946,
            "range": "± 48073661",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15809197,
            "range": "± 467705",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16283047,
            "range": "± 201295",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17091792,
            "range": "± 188136",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21323943,
            "range": "± 175060",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53378262,
            "range": "± 1018776",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 313452906,
            "range": "± 3288444",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2536031104,
            "range": "± 41049099",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "Sajjon@users.noreply.github.com",
            "name": "Alexander Cyon",
            "username": "Sajjon"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a9df491b9717d40dd3a2288d7c9687390433a1f3",
          "message": "Decrease too wide line in markdown (#8965)\n\nIn https://github.com/paritytech/polkadot-sdk/pull/8827 I wrote a line\nwhich was longer than CI markdown linter allowed (max 120 chars, width\nwas 126)\n\nThis causes CI failure:\nhttps://github.com/paritytech/polkadot-sdk/actions/runs/15850370092/job/44682093959?pr=8939",
          "timestamp": "2025-06-24T15:51:27+02:00",
          "tree_id": "f99546f969fd7fde316fc74dffccba669d5b9b7a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/a9df491b9717d40dd3a2288d7c9687390433a1f3"
        },
        "date": 1750775223526,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 20354272,
            "range": "± 189843",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20806702,
            "range": "± 602984",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 23133358,
            "range": "± 325522",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 27018250,
            "range": "± 1402828",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 66258279,
            "range": "± 2505323",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 389890713,
            "range": "± 14964055",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2862681211,
            "range": "± 170271947",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 18333992,
            "range": "± 543714",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 19223357,
            "range": "± 703234",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17584011,
            "range": "± 651937",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 24305430,
            "range": "± 592808",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 65119805,
            "range": "± 1760727",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 383526704,
            "range": "± 13980089",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2795149443,
            "range": "± 53786805",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "koute@users.noreply.github.com",
            "name": "Koute",
            "username": "koute"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8339a0f402b520eb39944f9f8b008c4d71629883",
          "message": "Bump PolkaVM to 0.25.0 (#8962)\n\nBump to the newest PolkaVM version. This contains *mostly* many linker\nimprovements/bugfixes, with no real functional changes.",
          "timestamp": "2025-06-24T13:51:44Z",
          "tree_id": "274544f161edeb2b54060a7c36dcdf2191a5e779",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/8339a0f402b520eb39944f9f8b008c4d71629883"
        },
        "date": 1750778345442,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 20488578,
            "range": "± 346291",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 21011014,
            "range": "± 868854",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22464982,
            "range": "± 1258440",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 28407575,
            "range": "± 979338",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 70212828,
            "range": "± 1083483",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 368511845,
            "range": "± 6400157",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 3031259623,
            "range": "± 115761901",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 18608075,
            "range": "± 358941",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 18590755,
            "range": "± 374134",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 19914575,
            "range": "± 379865",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 26262057,
            "range": "± 682615",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 63791138,
            "range": "± 1398855",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 373210098,
            "range": "± 4564953",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2758918261,
            "range": "± 85825723",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1728078+michalkucharczyk@users.noreply.github.com",
            "name": "Michal Kucharczyk",
            "username": "michalkucharczyk"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6efe9f5c2032140930061c98ca323c71f53958b6",
          "message": "`fatxpool`: limits handling optimizations and fixes (#8596)\n\nThis PR adds some optimization and fixes in handling limits in\nfork-aware transaction pool.\n\n#### Notes for reviewers\n\nChanges made (random order):\n- debug levels adjusted in numerous places places ( `debug -> trace` for\ntx, `trace -> debug` for general flow) for better readablity,\n- internal TxMemPool\n[storage](https://github.com/paritytech/polkadot-sdk/blob/74dafaee5c600fd2c8a59a280f647f94ccf0a755/substrate/client/transaction-pool/src/fork_aware_txpool/tx_mem_pool.rs#L268-L272)\nis now\n[sorted](https://github.com/paritytech/polkadot-sdk/blob/74dafaee5c600fd2c8a59a280f647f94ccf0a755/substrate/client/transaction-pool/src/fork_aware_txpool/tx_mem_pool/tx_mem_pool_map.rs#L123-L132).\nA new helper exposes methods to reduce number of transaction clones\n(e.g.\n[here](https://github.com/paritytech/polkadot-sdk/blob/74dafaee5c600fd2c8a59a280f647f94ccf0a755/substrate/client/transaction-pool/src/fork_aware_txpool/fork_aware_txpool.rs#L1404-L1410),\nsee [previous\nverions](https://github.com/paritytech/polkadot-sdk/blob/2863b7a9a879935ff16987d0e95065d088dad9f8/substrate/client/transaction-pool/src/fork_aware_txpool/fork_aware_txpool.rs#L1352-L1359)).\nThis new structure eliminates the necessity of sorting transactions on\nthe fly which was a not efficient, naive,\n[first](https://github.com/paritytech/polkadot-sdk/blob/e44b89fb7ca3385f314803c733ad97b26cd14e9f/substrate/client/transaction-pool/src/fork_aware_txpool/tx_mem_pool.rs#L384-L400)\nimplementation.\n- some _mutexes_ were migrated to `tokio::sync::Mutex` to avoid tokio\nthreads locking,\n- `sync` to `async`\n_[message](https://github.com/paritytech/polkadot-sdk/blob/74dafaee5c600fd2c8a59a280f647f94ccf0a755/substrate/client/transaction-pool/src/fork_aware_txpool/tx_mem_pool.rs#L743)\nbased_ bridge was implemented. It's purpose is mainly to support\n`LocalTransactionPool / OffchainTransactionPool` infrastucture. `sync`\nmethods can be called from both non-tokio and tokio context. This\nrequires one additional\n[blocking](https://github.com/paritytech/polkadot-sdk/blob/74dafaee5c600fd2c8a59a280f647f94ccf0a755/substrate/client/transaction-pool/src/fork_aware_txpool/fork_aware_txpool.rs#L398-L402)\ntask for transaction pool.\n- `ViewStore::most_recent_view` is now a\n[reference](https://github.com/paritytech/polkadot-sdk/blob/74dafaee5c600fd2c8a59a280f647f94ccf0a755/substrate/client/transaction-pool/src/fork_aware_txpool/view_store.rs#L171)\nto `View`.\n- `TXMEMPOOL_TRANSACTION_LIMIT_MULTIPLIER` removed, there is no point\nfor buffering more. Initially intended to work as buffer accommodating\ntransactions from two different full views (which could have different\nset of transactions), turned out to be a bottleneck in maintain function\n(it still is but aligning sizes reduced the impact),\n-\n[bug](https://github.com/paritytech/polkadot-sdk/blob/74dafaee5c600fd2c8a59a280f647f94ccf0a755/substrate/client/transaction-pool/src/fork_aware_txpool/view_store.rs#L769)\n:see_no_evil: fixed in pre-insert actions removal\n-\n[`ValidateTransactionPriority`](https://github.com/paritytech/polkadot-sdk/blob/045bc6d342620a02ee9b28d8de51f72ae680f06f/substrate/client/transaction-pool/src/graph/pool.rs#L64-L71)\nwas added. The goal is to allow faster processing of validation requests\nthat were made from the `maintain` context. Otherwise all requests were\nlanding in the same queue and maintain requests could be delayed. Now\nthe processing power is evenly 50/50 split between _maintain_ and\n_submit+revalidate_ context.\n\n\nRelated work:\n- https://github.com/michalkucharczyk/tx-test-tool/pull/42,\n- https://github.com/paritytech/polkadot-sdk/pull/8152,\n\nTodo:\n- [x] some run should be done also for parachain,\n\n---------\n\nCo-authored-by: Iulian Barbu <14218860+iulianbarbu@users.noreply.github.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-24T16:06:37Z",
          "tree_id": "af50442b60ceb8c007b5ac7d4eaab7eaaa5a00e5",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/6efe9f5c2032140930061c98ca323c71f53958b6"
        },
        "date": 1750784376091,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19337059,
            "range": "± 199865",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19523883,
            "range": "± 205917",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20965791,
            "range": "± 326838",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26983928,
            "range": "± 553127",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 60047655,
            "range": "± 777853",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 360027559,
            "range": "± 5272606",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2532109869,
            "range": "± 99396032",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17026966,
            "range": "± 234031",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17428368,
            "range": "± 214414",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17589705,
            "range": "± 377569",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22513273,
            "range": "± 281013",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 56684314,
            "range": "± 837847",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 340708948,
            "range": "± 2152115",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2627331818,
            "range": "± 15582393",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1728078+michalkucharczyk@users.noreply.github.com",
            "name": "Michal Kucharczyk",
            "username": "michalkucharczyk"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "77e73b9b258a94a8c0a43fcc19ee6257100861da",
          "message": "`fatxpool`: some more integration tests (#8152)\n\nSome extra tests for `fatxpool`, including long term test:\n- sending 5M transactions to relay/para,\n- transaction gossiping tests (for network protocol evaluation),\n- yet-another-parachain spemening test (2s / 7k),\n\nThe base directory can be specified by setting `TXPOOL_TEST_DIR` env\nvariable.\n\nIf set every individual test restults will be placed under this path in\na directory name formatted as `test_%Y%m%d_%H%M%S`. e.g.:\n```\nexport TXPOOL_TEST_DIR=/home/miszka/test-results\ncargo test  --release --test integration -- --ignored send_future_and_ready_from_many_accounts_to_parachain\n...\n2025-04-11T07:48:15.324966Z  INFO zombienet_orchestrator: 🧰 base_dir: \"/home/miszka/test-results/test_20250411_094815\"\n...\n```\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Iulian Barbu <14218860+iulianbarbu@users.noreply.github.com>",
          "timestamp": "2025-06-24T19:37:16Z",
          "tree_id": "f169c3e56938a2920569959eef3005f2d3c530cf",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/77e73b9b258a94a8c0a43fcc19ee6257100861da"
        },
        "date": 1750796939488,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18896904,
            "range": "± 97188",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19299099,
            "range": "± 162391",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20713897,
            "range": "± 315831",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26202461,
            "range": "± 190130",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59683778,
            "range": "± 805078",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 331321172,
            "range": "± 3900799",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2553059000,
            "range": "± 70716711",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16595435,
            "range": "± 182877",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16692206,
            "range": "± 183550",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17076888,
            "range": "± 306286",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22154192,
            "range": "± 154267",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 55579137,
            "range": "± 1766855",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 320372420,
            "range": "± 3665845",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2540921784,
            "range": "± 18906746",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1728078+michalkucharczyk@users.noreply.github.com",
            "name": "Michal Kucharczyk",
            "username": "michalkucharczyk"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "63973ccc7108560b2d0a7d882e5c0e232d9396ac",
          "message": "`fatxpool`: fix: remove invalid txs from the dropped stream controller (#8923)\n\nWhile testing mortal transaction I encountered exactly the same problem\nas in #8490.\nThis PR should fix the problem.\n\nfixes: #8490\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-25T06:40:14Z",
          "tree_id": "8c3bd2efc80adf2565c66ce09d2316fdb258f433",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/63973ccc7108560b2d0a7d882e5c0e232d9396ac"
        },
        "date": 1750836676967,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17726902,
            "range": "± 131853",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17875636,
            "range": "± 168074",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19113586,
            "range": "± 183004",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24014341,
            "range": "± 259212",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56983515,
            "range": "± 427659",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 363416684,
            "range": "± 14058183",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2534198647,
            "range": "± 130499719",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15719801,
            "range": "± 228881",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15448200,
            "range": "± 181382",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15766904,
            "range": "± 263146",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20498976,
            "range": "± 194212",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52362010,
            "range": "± 607804",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 309388985,
            "range": "± 3151582",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2485090487,
            "range": "± 44784475",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1728078+michalkucharczyk@users.noreply.github.com",
            "name": "Michal Kucharczyk",
            "username": "michalkucharczyk"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a511802dd8e8ebcb6eda2076a723adfb5436b037",
          "message": "`fatxpool`: fork aware transaction pool is now default (#8838)\n\nThis PR changes the node's default transaction pool to the fork aware\nimplementation.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-25T07:20:36Z",
          "tree_id": "2d0fed1835c46e1aabb10a63086e2c92c749f7d8",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/a511802dd8e8ebcb6eda2076a723adfb5436b037"
        },
        "date": 1750839119686,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19165764,
            "range": "± 338226",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19657478,
            "range": "± 206720",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21092271,
            "range": "± 214547",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26463873,
            "range": "± 437676",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 61695245,
            "range": "± 1082493",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 341802165,
            "range": "± 4669788",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2810014099,
            "range": "± 177502569",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16514655,
            "range": "± 398012",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17097213,
            "range": "± 258367",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17238727,
            "range": "± 262039",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22403568,
            "range": "± 372780",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 56287722,
            "range": "± 2391112",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 327063955,
            "range": "± 6230314",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2594058200,
            "range": "± 23344670",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eresav@me.com",
            "name": "Andrei Eres",
            "username": "AndreiEres"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1fcaaa4b8f43d4b31624297a4172eed73458f100",
          "message": "Add polkadot_parachain_peer_connectivity metric (#8973)\n\n# Description\n\nFixes https://github.com/paritytech/polkadot-sdk/issues/8911\n\nAdds `polkadot_parachain_peer_connectivity` histogram metric to better\nunderstand connectivity patterns.\n\n## Integration\n\nDoesn't affect downstream projects.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-25T09:07:00Z",
          "tree_id": "21f9f3b700d0d6af69dd48ec271fe9579c7eab3e",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/1fcaaa4b8f43d4b31624297a4172eed73458f100"
        },
        "date": 1750846903460,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18197287,
            "range": "± 402497",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18506799,
            "range": "± 134241",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19659351,
            "range": "± 126374",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24653447,
            "range": "± 118116",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55523315,
            "range": "± 696707",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 324495966,
            "range": "± 8041907",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2420269745,
            "range": "± 68858935",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15775568,
            "range": "± 162530",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15588234,
            "range": "± 421145",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16003660,
            "range": "± 301190",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20525784,
            "range": "± 163349",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52489301,
            "range": "± 408927",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 303596961,
            "range": "± 2432581",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2476940189,
            "range": "± 14541536",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "karol.k91@gmail.com",
            "name": "Karol Kokoszka",
            "username": "karolk91"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "cc5065dab6ab4c40d2901981481afdad8e34d4c2",
          "message": "transfer_assets benchmarking and weights for coretime chains (#8752)\n\nIntroduces implementation of `set_up_complex_asset_transfer()` to\ncorrectly benchmark weights for `transfer_assets` extrinsics on Rococo\nCoretime and Westend Coretime. Introducing also test scenarios to cover\ncommon xcm teleport use cases\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-25T10:15:30Z",
          "tree_id": "b73dcd429b1c64f19dff4df585da6daa472bf178",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/cc5065dab6ab4c40d2901981481afdad8e34d4c2"
        },
        "date": 1750850971524,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19787660,
            "range": "± 265289",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20012308,
            "range": "± 444440",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21446704,
            "range": "± 176401",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26855239,
            "range": "± 180641",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 60952379,
            "range": "± 1235756",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 362217471,
            "range": "± 7824417",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2566698154,
            "range": "± 129157996",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17124969,
            "range": "± 184713",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17165260,
            "range": "± 234318",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17603237,
            "range": "± 203309",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22556771,
            "range": "± 252421",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 56181858,
            "range": "± 635467",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 347528537,
            "range": "± 3627277",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2662582502,
            "range": "± 49037939",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "oliver.tale-yazdi@parity.io",
            "name": "Oliver Tale-Yazdi",
            "username": "ggwpez"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e774263960d8cb601c3087fb9bb38715ffb401b5",
          "message": "Fix revive-fixtures build script (#8980)\n\nThe .polkavm files are not recompiled when deleting\n`target/pallet-revive-fixtures`. I assume that CI is not caching that\nfolder or the .polkavm file extension. This leads to the\n`include_bytes!` macro to not finding these files.\n\nTested it here https://github.com/polkadot-fellows/runtimes/pull/785\n\n---------\n\nSigned-off-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>",
          "timestamp": "2025-06-25T14:30:51Z",
          "tree_id": "3d61ca0ac619bf952142e25b3d372d6e52ddbfd8",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e774263960d8cb601c3087fb9bb38715ffb401b5"
        },
        "date": 1750865150410,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18763502,
            "range": "± 173224",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19030693,
            "range": "± 156684",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20511337,
            "range": "± 307418",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25619036,
            "range": "± 293396",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 61414294,
            "range": "± 1482636",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 371806061,
            "range": "± 7092150",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2606870919,
            "range": "± 112438268",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15737193,
            "range": "± 235253",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16029935,
            "range": "± 213743",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16442739,
            "range": "± 115351",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21603958,
            "range": "± 286834",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 55126049,
            "range": "± 911101",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 334003197,
            "range": "± 12690066",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2602821721,
            "range": "± 39215823",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "olivarra1@gmail.com",
            "name": "Victor Oliva",
            "username": "voliva"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4a869b92b7d7397bfbb30bcafce103461714ec08",
          "message": "feat(revive): add contract instantiated event (#8789)\n\n# Description\n\nThis PR adds the `Instantiated` event for pallet-revive for the top\nframe. Addresses issue #8677\n\nThis might need refreshing the weights of bot `instantiate` and\n`instantiate_with_code`, as it emits a new event.\n\n## Integration\n\nNo additional work is needed to integrate this feature. The pallet will\nemit on `Instantiated` event every time `instantiate` or\n`instantiate_with_code` successfully performs an instantiation.\n\n# Checklist\n\n* [x] My PR includes a detailed description as outlined in the\n\"Description\" and its two subsections above.\n* [x] My PR follows the [labeling requirements](\n\nhttps://github.com/paritytech/polkadot-sdk/blob/master/docs/contributor/CONTRIBUTING.md#Process\n) of this project (at minimum one label for `T` required)\n* External contributors: ask maintainers to put the right label on your\nPR.\n* [x] I have made corresponding changes to the documentation (if\napplicable)\n* [x] I have added tests that prove my fix is effective or that my\nfeature works (if applicable)\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>",
          "timestamp": "2025-06-25T16:38:35Z",
          "tree_id": "0f3c48d1688322d218ac8af508e54aa115e30aa3",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4a869b92b7d7397bfbb30bcafce103461714ec08"
        },
        "date": 1750873043453,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19046866,
            "range": "± 133735",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19178875,
            "range": "± 301435",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20512818,
            "range": "± 285565",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25628920,
            "range": "± 420655",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 61316977,
            "range": "± 1254604",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 359242367,
            "range": "± 5241408",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2571006793,
            "range": "± 127541924",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15915681,
            "range": "± 184887",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16043180,
            "range": "± 201499",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16327762,
            "range": "± 153030",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21250425,
            "range": "± 155868",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53782387,
            "range": "± 774065",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 332849161,
            "range": "± 11151815",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2630172328,
            "range": "± 41343629",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1728078+michalkucharczyk@users.noreply.github.com",
            "name": "Michal Kucharczyk",
            "username": "michalkucharczyk"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "caf999310df66b790c7f26b0227a51068ba441fc",
          "message": "`fatxpool`: `ChainApi` is now async (#8875)\n\n[`ChainApi`](https://github.com/paritytech/polkadot-sdk/blob/488072d245763fb059743bf32eea2f48d84054b3/substrate/client/transaction-pool/src/graph/pool.rs#L65-L66)\nis now `async_trait`,\n[`validate_transaction`](https://github.com/paritytech/polkadot-sdk/blob/488072d245763fb059743bf32eea2f48d84054b3/substrate/client/transaction-pool/src/graph/pool.rs#L78)\nand\n[`block_body`](https://github.com/paritytech/polkadot-sdk/blob/488072d245763fb059743bf32eea2f48d84054b3/substrate/client/transaction-pool/src/graph/pool.rs#L112)\nare now `async` methods. This is just cleanup - migrating from returning\n`Future` to `async` method\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-25T21:43:36Z",
          "tree_id": "9d3d2131eb7ed4b84ce7223da3c9fc2191f8ba29",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/caf999310df66b790c7f26b0227a51068ba441fc"
        },
        "date": 1750892157504,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17695058,
            "range": "± 51613",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17797243,
            "range": "± 105882",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19005744,
            "range": "± 137177",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24309396,
            "range": "± 382593",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56267442,
            "range": "± 657029",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 339995231,
            "range": "± 10652799",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2342666082,
            "range": "± 20847220",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14261813,
            "range": "± 281605",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14381062,
            "range": "± 142229",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14940497,
            "range": "± 133168",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19150240,
            "range": "± 272085",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 49379402,
            "range": "± 328409",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 283073883,
            "range": "± 1862997",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2305652713,
            "range": "± 15531598",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "117115317+lrubasze@users.noreply.github.com",
            "name": "Lukasz Rubaszewski",
            "username": "lrubasze"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dbfed5a584d5f16602f0094ae2ac153fd62912be",
          "message": "Make zombienet CI great again (#8748)\n\nThis PR re-enables Zombienet CI tests.\n\n\nChanges:\n- Enable Zombienet Polkadot and Substrate tests\n- Zombienet Cumulus will be enabled separately, when being migrated to\n`zombienet-sdk`\n- Switch zombienet from `k8s` to `native` provider\n`k8s` turned out to be unstable for both `zombienet` and\n`zombienet-sdk`. Issues observed:\n  - problem with launching a pod\n- pods (and thus nodes) were not spawned at the same time (differences\nup to 120s), which affected some tests\n  - `kubectl` command failed \n  Observed many times for:\n    - kubectl cp\n    - kubectl exec\n    - kubectl logs\nIf we ever want to switch back to `k8s` we must ensure above issues no\nlonger exist.\n- Tweaks some tests to make sure they constantly pass\nAuthors of those tests are kindly asked to review the changes.\n- Some improvements and fixes `zombienet` and `zombienet-sdk` frameworks\n- Assign more beefy runners for more demanding tests\nRule of thumb: use large runner if spawned network consist of more than\n4 nodes\n- Disable some tests to let their authors to stabilize them\nCreated a dedicated `.github/zombienet-flaky-tests` file for more\nclarity\nATM there are 16 flaky tests. Their authors are kindly asked to fix them\nand re-enable.\n\n---------\n\nCo-authored-by: Javier Viola <javier@parity.io>\nCo-authored-by: Javier Viola <363911+pepoviola@users.noreply.github.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Anthony Lazam <xlzm.tech@gmail.com>",
          "timestamp": "2025-06-26T10:01:28Z",
          "tree_id": "f2cb70189cb93c0c4946240369572a0947e05f70",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/dbfed5a584d5f16602f0094ae2ac153fd62912be"
        },
        "date": 1750936814864,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 21087734,
            "range": "± 437191",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 21610874,
            "range": "± 538036",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22941223,
            "range": "± 271711",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 28868441,
            "range": "± 396277",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 71657149,
            "range": "± 1128213",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 446205356,
            "range": "± 6248015",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 3065700323,
            "range": "± 279010786",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 18348116,
            "range": "± 673241",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 18352646,
            "range": "± 323362",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18734037,
            "range": "± 156192",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 24538985,
            "range": "± 407138",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 59654872,
            "range": "± 993884",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 385106660,
            "range": "± 4803426",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2852599609,
            "range": "± 34547695",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "140459108+kilavvy@users.noreply.github.com",
            "name": "kilavvy",
            "username": "kilavvy"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "56234513d1d1b3cc9fb85fcc1a9735ab9df22ef2",
          "message": "Minor Documentation and Comment Corrections (#8997)\n\n**Description:**  \nThis pull request fixes minor typos and improves clarity in code\ncomments and documentation.\n- Corrected spelling errors in `coretime_interface.rs` and `types.rs`.\n- Enhanced comment readability for better developer experience.",
          "timestamp": "2025-06-26T12:16:15Z",
          "tree_id": "c055da89195b5154118af4c81f0797e5e8a60f5a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/56234513d1d1b3cc9fb85fcc1a9735ab9df22ef2"
        },
        "date": 1750943151529,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18233487,
            "range": "± 121616",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18418951,
            "range": "± 213908",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19634982,
            "range": "± 316675",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24372206,
            "range": "± 310753",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55327567,
            "range": "± 956269",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 318002077,
            "range": "± 6417238",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2542208010,
            "range": "± 113049553",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15605675,
            "range": "± 238756",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15797043,
            "range": "± 290902",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16062041,
            "range": "± 238289",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20511023,
            "range": "± 185505",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52389674,
            "range": "± 456559",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 302923260,
            "range": "± 10873647",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2430160903,
            "range": "± 17505991",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "yrong1997@gmail.com",
            "name": "Ron",
            "username": "yrong"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3bc4d127c52f2d6570c588537d7945b24b61d61c",
          "message": "Snowbridge: Improve local and testnet setup (#8848)\n\n### Context \n\n- The Prague-Electra fork is already live on the mainnet - enables it\nfor the local setup (with feature `fast-runtime`) by default.\n - Improve Penpal Runtime to include `pallet-utility`.\n\n---------\n\nCo-authored-by: Clara van Staden <claravanstaden64@gmail.com>",
          "timestamp": "2025-06-26T12:44:22Z",
          "tree_id": "0b04a7e49f6181884cf881c7fdeb08e3c813d8f0",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/3bc4d127c52f2d6570c588537d7945b24b61d61c"
        },
        "date": 1750945631850,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 20186060,
            "range": "± 327431",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20466397,
            "range": "± 152023",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21704939,
            "range": "± 312452",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 27914881,
            "range": "± 381359",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 66686848,
            "range": "± 771067",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 427302275,
            "range": "± 11191559",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2541785373,
            "range": "± 251323599",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17032755,
            "range": "± 274038",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17228735,
            "range": "± 243377",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17985765,
            "range": "± 345930",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22898745,
            "range": "± 209908",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 58611323,
            "range": "± 888137",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 360712217,
            "range": "± 5873066",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2710836748,
            "range": "± 50608217",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "gui.thiolliere@gmail.com",
            "name": "Guillaume Thiolliere",
            "username": "gui1117"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "18cd0b4d8ff6a2eea379a3b166fe21aec180778f",
          "message": "Enable statement store in polkadot-omni-node and polkadot-parachain (#8076)\n\nIn `polkadot-omni-node-lib`, when starting the node, when the runtime\nfor the best hash contains the runtime api: `ValidateStatement`, then we\nstart the statement store.\n\nThe statement store is an off-chain data-store for signed statements\naccessible via RPC and offchain worker.\nIt uses the runtime api to get the allowance associated to an account.\n\nThis takes effect in `polkadot-omni-node` and `polkadot-parachain` and\nany node depending on `polkadot-omni-node-lib`.\n\n</br>\n\n</br>\n\n ----\n\n### Old description:\n\nWe want to enable statement store for people chain.\n\nThis PR introduces and enables the statement store and add a new\nargument `disable_statement_store` in `polkadot-omni-node-lib`.\nThis takes effect in `polkadot-omni-node` and `polkadot-parachain` and\nany node depending on `polkadot-omni-node-lib`.\n\nThe reasoning is following other service such as `offchain_worker` the\ndefault behavior is to support it, otherwise I expect not many collator\nto explictly opt-in (but I can be wrong assuming this).\nDo system chain collator use `omni-node` or `polkadot-parachain`? we\ncould otherwise only enable it for `polkadot-parachain`. Or we could\nalso create a new binary for people chain and enable it only for this\nnew binary, and remove people chain from `polkadot-parachain`.\n\nIf the runtime doesn't support the API then it any submission will fail\nwith `Error calling into the runtime`.\n\nIt would be ideal to target the next cut-off for this issue/PR given\nthat it can take time for node operator to update their node.\n\nTo have a configurable CLI and default behavior for statement-store, I\ndid in this PR: https://github.com/paritytech/polkadot-sdk/pull/8421\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Sebastian Kunert <skunert49@gmail.com>\nCo-authored-by: Iulian Barbu <14218860+iulianbarbu@users.noreply.github.com>",
          "timestamp": "2025-06-26T14:44:56Z",
          "tree_id": "9d7792b62cc997aad62d005d4685d62689efae28",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/18cd0b4d8ff6a2eea379a3b166fe21aec180778f"
        },
        "date": 1750952311269,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19789570,
            "range": "± 510585",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20022554,
            "range": "± 129059",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21540956,
            "range": "± 414249",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26889233,
            "range": "± 219626",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 63735135,
            "range": "± 1089784",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 373862109,
            "range": "± 7634165",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2628171668,
            "range": "± 89761356",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16488910,
            "range": "± 222039",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16953703,
            "range": "± 313359",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17066770,
            "range": "± 237715",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22456806,
            "range": "± 245738",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 56749992,
            "range": "± 1011866",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 346918379,
            "range": "± 4020474",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2660241731,
            "range": "± 47884593",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "225d1742d4b9d578588daf7fd508d00b002a0de3",
          "message": "pallet-balances: Do not create account in benchmarking (#8932)\n\nThis particular benchmark is about benchmarking the account creation, so\nwe should not create it before :)\n\n\nCloses: https://github.com/paritytech/polkadot-sdk/issues/8927\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-27T08:26:29Z",
          "tree_id": "78dc175eb3b966f16377c0ad0396f2e61dd917d1",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/225d1742d4b9d578588daf7fd508d00b002a0de3"
        },
        "date": 1751016629461,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18663466,
            "range": "± 104817",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18878661,
            "range": "± 195013",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20346358,
            "range": "± 143034",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25499137,
            "range": "± 192787",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 60750537,
            "range": "± 1014897",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 359284323,
            "range": "± 4356995",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2670669015,
            "range": "± 85468702",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16402868,
            "range": "± 233870",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16402751,
            "range": "± 267583",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16655985,
            "range": "± 305884",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22313509,
            "range": "± 326072",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 58583854,
            "range": "± 1816090",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 316210073,
            "range": "± 4360410",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2602033401,
            "range": "± 67334741",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e1026d7ee22a593cf566a99484eee02a03ecc236",
          "message": "RuntimeAllocator: Align returned pointers (#8891)\n\nRust recently switched the default alignment of u128 to 16bytes:\nhttps://blog.rust-lang.org/2024/03/30/i128-layout-update/ This broke the\nassumption of our host allocator that the biggest alignment is 8 bytes.\n\nTo fix the alignment issue, the runtime allocator now takes care of\naligned the returned pointer. We are abusing the fact that we know how\nthe host allocator is working and storing some extra data in its header.\nThis is not a perfect solution as we don't align the host side pointers,\nbut the host side is mainly allocating `u8` arrays that should be fine\nwith the `8byte` alignment. Any node side change would be a consensus\nbreaking change.\n\n\nCloses: https://github.com/paritytech/polkadot-sdk/issues/8818\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-27T10:53:44Z",
          "tree_id": "e70aa26bbd2c4f3a9858fc4b04fb7eca8c10362b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e1026d7ee22a593cf566a99484eee02a03ecc236"
        },
        "date": 1751026167601,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19304851,
            "range": "± 225294",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19863616,
            "range": "± 323837",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21248103,
            "range": "± 226793",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26665522,
            "range": "± 266477",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 63346821,
            "range": "± 630620",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 367936439,
            "range": "± 6931284",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2645357147,
            "range": "± 165016844",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16701135,
            "range": "± 278048",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16539374,
            "range": "± 301417",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17210014,
            "range": "± 179228",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21908084,
            "range": "± 432434",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 56187728,
            "range": "± 652675",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 333163924,
            "range": "± 4093979",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2617983959,
            "range": "± 36285538",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "oliver.tale-yazdi@parity.io",
            "name": "Oliver Tale-Yazdi",
            "username": "ggwpez"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ffb2fddf5157e478e2df56536475d67c2b770b96",
          "message": "Run SemVer check also with R0 label (#8981)\n\n- **Dont skip semver check for R0 label**\n- **Rename `R0-silent` to `R0-no-crate-publish-required`**\n\n---------\n\nSigned-off-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>",
          "timestamp": "2025-06-27T12:32:13Z",
          "tree_id": "0e4663af28a4c33b98538e48d5ad0fe4957ff18f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ffb2fddf5157e478e2df56536475d67c2b770b96"
        },
        "date": 1751031333726,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19295145,
            "range": "± 180894",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19563887,
            "range": "± 289578",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21462184,
            "range": "± 438741",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26509161,
            "range": "± 492415",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 62347669,
            "range": "± 1206108",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 355318397,
            "range": "± 5843424",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2545546918,
            "range": "± 170423692",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16338777,
            "range": "± 163074",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16878057,
            "range": "± 347742",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16965779,
            "range": "± 365650",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22142378,
            "range": "± 250817",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 55898285,
            "range": "± 461223",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 313719245,
            "range": "± 3621452",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2523818327,
            "range": "± 18475322",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "donal.murray@parity.io",
            "name": "Dónal Murray",
            "username": "seadanda"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4e122d496f68a820e0e13f63435b6d74fb53be0d",
          "message": "[AHM] The Asset Hub Migration on Westend (#7997)\n\nPost AHM changes for Westend Relay and Asset Hub.\n\nChanges:\n- Add Async staking pallets to Westend Relay and Asset Hub\n- XCM stuff?\n- Deploy pallet-ah-ops\n- Deprecate pallet function\n`pallet_utility::Pallet::<T>::derivative_account_id` in favour of\nfreestanding function `pallet_utility::derivative_account_id`.\n\n---------\n\nSigned-off-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>\nSigned-off-by: Iulian Barbu <iulian.barbu@parity.io>\nCo-authored-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>\nCo-authored-by: muharem <ismailov.m.h@gmail.com>\nCo-authored-by: polka.dom <polkadotdom@gmail.com>\nCo-authored-by: Ankan <ankan.anurag@gmail.com>\nCo-authored-by: Kian Paimani <5588131+kianenigma@users.noreply.github.com>\nCo-authored-by: Adrian Catangiu <adrian@parity.io>\nCo-authored-by: kianenigma <kian@parity.io>\nCo-authored-by: Ankan <10196091+Ank4n@users.noreply.github.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Karol Kokoszka <karol.k91@gmail.com>\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>\nCo-authored-by: Paolo La Camera <paolo@parity.io>\nCo-authored-by: ordian <noreply@reusable.software>\nCo-authored-by: Javier Viola <363911+pepoviola@users.noreply.github.com>\nCo-authored-by: Dmitry Markin <dmitry@markin.tech>\nCo-authored-by: Andrei Eres <eresav@me.com>\nCo-authored-by: Tsvetomir Dimitrov <tsvetomir@parity.io>\nCo-authored-by: Javier Viola <javier@parity.io>\nCo-authored-by: Alexandru Gheorghe <49718502+alexggh@users.noreply.github.com>\nCo-authored-by: cuteolaf <OliverLim818@gmail.com>\nCo-authored-by: Michal Kucharczyk <1728078+michalkucharczyk@users.noreply.github.com>\nCo-authored-by: Serban Iorga <serban@parity.io>\nCo-authored-by: PG Herveou <pgherveou@gmail.com>\nCo-authored-by: Anthony Kveder <32168055+antkve@users.noreply.github.com>\nCo-authored-by: Alexandru Vasile <60601340+lexnv@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: Alin Dima <alin@parity.io>\nCo-authored-by: Iulian Barbu <14218860+iulianbarbu@users.noreply.github.com>\nCo-authored-by: Steven <stevenlawrence13e@gmail.com>\nCo-authored-by: girazoki <gorka.irazoki@gmail.com>\nCo-authored-by: Evgeny Svirsky <e.svirsky@tut.by>\nCo-authored-by: Alexander Cyon <Sajjon@users.noreply.github.com>\nCo-authored-by: Koute <koute@users.noreply.github.com>\nCo-authored-by: Afounso Souza <drewsmpk@gmail.com>\nCo-authored-by: Alexandre R. Baldé <alexandre.balde@parity.io>\nCo-authored-by: Doordashcon <jesse.chejieh@gmail.com>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>\nCo-authored-by: Victor Oliva <olivarra1@gmail.com>\nCo-authored-by: Karol Kokoszka <karol@parity.io>",
          "timestamp": "2025-06-27T15:21:49Z",
          "tree_id": "e07b89123d6ec10848381da7ac02a652e1b8edf9",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4e122d496f68a820e0e13f63435b6d74fb53be0d"
        },
        "date": 1751041719972,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 20135002,
            "range": "± 376866",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20580681,
            "range": "± 249625",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22338516,
            "range": "± 500510",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 27465246,
            "range": "± 298524",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 66686442,
            "range": "± 1048621",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 435357601,
            "range": "± 16653366",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2591956375,
            "range": "± 187849482",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17172270,
            "range": "± 144947",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17438365,
            "range": "± 420779",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17866134,
            "range": "± 796205",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23408060,
            "range": "± 230933",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 59724557,
            "range": "± 1660986",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 353592977,
            "range": "± 4850220",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2673454395,
            "range": "± 30715040",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "220b5aa6446b3fc0e5accefed96abfc7d45f9a18",
          "message": "Fix prestate create traces (#8935)\n\nFix an issue on the prestate tracer, for CREATE trace.\nThe tracer was not reporting the created properly in the created trace.\n\nAlso added tests in evm-test-suite\nhttps://github.com/paritytech/evm-test-suite/pull/97\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>\nCo-authored-by: xermicus <cyrill@parity.io>",
          "timestamp": "2025-06-29T20:51:48Z",
          "tree_id": "1e6f2d483f0f3e3fece691fdea354a7b89de0942",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/220b5aa6446b3fc0e5accefed96abfc7d45f9a18"
        },
        "date": 1751233423667,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18279587,
            "range": "± 249362",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18723711,
            "range": "± 737174",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19876325,
            "range": "± 202093",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25179938,
            "range": "± 110421",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 58566830,
            "range": "± 642302",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 351686810,
            "range": "± 11181043",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2440910291,
            "range": "± 90102168",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15871677,
            "range": "± 198354",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16069275,
            "range": "± 245013",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16228829,
            "range": "± 532411",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21303147,
            "range": "± 472021",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53468056,
            "range": "± 715338",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 305403264,
            "range": "± 4509518",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2467034291,
            "range": "± 24077146",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0511431bf95ae81b284887100444bd1c560188e0",
          "message": "Add address revive runtime API (#8851)\n\nThis gives an easy way for substrate user to convert an Account ID into\nthe mapped H160 address, by calling a new `address` runtime API\nfunction.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-30T04:07:31Z",
          "tree_id": "6edc783272386590f5912f28df95c8afc764d3e5",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/0511431bf95ae81b284887100444bd1c560188e0"
        },
        "date": 1751259583215,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18347489,
            "range": "± 165156",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18609321,
            "range": "± 288480",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19965505,
            "range": "± 207911",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25277262,
            "range": "± 287365",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59703509,
            "range": "± 1024431",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 358486225,
            "range": "± 12029018",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2730592919,
            "range": "± 61935668",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16054286,
            "range": "± 153794",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16264131,
            "range": "± 350772",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16674460,
            "range": "± 195413",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21466298,
            "range": "± 196538",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 55265535,
            "range": "± 844886",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 319058084,
            "range": "± 4770403",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2529018996,
            "range": "± 34881064",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "44604217+tmpolaczyk@users.noreply.github.com",
            "name": "tmpolaczyk",
            "username": "tmpolaczyk"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "d30a5fbbd973035893a1a25e1bcf9d9fb2c24d53",
          "message": "Fix pallet_migrations benchmark when FailedMigrationHandler emits events (#8694)\n\nWhen FailedMigrationHandler emits events, the `UpgradeFailed` event is\nnot the last one, so `assert_last_event` fails. Fixed by checking that\nthe `UpgradeFailed` event is emitted, even if it is not the last one.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-06-30T07:38:13Z",
          "tree_id": "55c79a51c2be86abbf231a1611a4ef1332748aed",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d30a5fbbd973035893a1a25e1bcf9d9fb2c24d53"
        },
        "date": 1751272613144,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19553917,
            "range": "± 265962",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19753058,
            "range": "± 210873",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21439851,
            "range": "± 194498",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26552158,
            "range": "± 326493",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 63519566,
            "range": "± 890875",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 402058491,
            "range": "± 6390444",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2918683997,
            "range": "± 71408963",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16534852,
            "range": "± 218397",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16785297,
            "range": "± 162625",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17245811,
            "range": "± 298386",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22300133,
            "range": "± 276184",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 57009288,
            "range": "± 2595877",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 348068553,
            "range": "± 6011172",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2771784580,
            "range": "± 59429996",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alex.theissen@me.com",
            "name": "Alexander Theißen",
            "username": "athei"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3515d4af2993ada853fc8a5d11b2474241545840",
          "message": "revive: Precompiles should return dummy code when queried (#9001)\n\nFixes https://github.com/paritytech/contract-issues/issues/111\n\nThis fixes both the RPC and the opcodes `EXTCODESIZE` and `EXTCODEHASH`.\n\nAlso removed the disabled host function `is_contract`. Contracts do use\n`EXTCODESIZE` to determine if something is a contract exclusively.\n\nNeed to add some differential tests to our test suite to make sure that\nthe RPC matches geth behaviour:\n\nOn kitchensink:\n\n```shell\n# primitive precompiles should not return error but 0x\n$ cast code 0x0000000000000000000000000000000000000001\n0x\n\n# this is the erc pre-compile\n$ cast code 0x0000000000000000000000000000000000010000\n0x60006000fd\n```\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-30T08:40:16Z",
          "tree_id": "4e458f071d2f268d819085a75a9426821bf63be3",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/3515d4af2993ada853fc8a5d11b2474241545840"
        },
        "date": 1751277289964,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19089289,
            "range": "± 339609",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19035416,
            "range": "± 256765",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20449842,
            "range": "± 346337",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25952706,
            "range": "± 185685",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57539626,
            "range": "± 652308",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 326075774,
            "range": "± 3728888",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2422452842,
            "range": "± 50539185",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15875795,
            "range": "± 226401",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16054650,
            "range": "± 259221",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16168885,
            "range": "± 346089",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21073626,
            "range": "± 248873",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53524255,
            "range": "± 594847",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 310786916,
            "range": "± 5229045",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2554145642,
            "range": "± 53566813",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "Sajjon@users.noreply.github.com",
            "name": "Alexander Cyon",
            "username": "Sajjon"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "0447d26148ef5b97f40fc01bce2d5156ab335eca",
          "message": "Always send full parent header, not only hash, part of collation response (#8939)\n\nImplementation of https://github.com/paritytech/polkadot-sdk/issues/7733\n\n# Description\nInstead of **conditionally** sending the full parent header in the\ncollation response we now **always** send it (never the hash of it).\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-30T12:55:05Z",
          "tree_id": "5dd8260c081bcdeac6c260c80aea6e5d93f81d63",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/0447d26148ef5b97f40fc01bce2d5156ab335eca"
        },
        "date": 1751291333412,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19413234,
            "range": "± 586831",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19597489,
            "range": "± 386922",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20580291,
            "range": "± 719075",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25576084,
            "range": "± 427750",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59108303,
            "range": "± 1586349",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 370499401,
            "range": "± 27341741",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2670979488,
            "range": "± 161963628",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16209167,
            "range": "± 374640",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16386689,
            "range": "± 317600",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16639836,
            "range": "± 270552",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21500265,
            "range": "± 458129",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54013545,
            "range": "± 1610718",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 313554471,
            "range": "± 11513306",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2505647506,
            "range": "± 118931406",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "paolo@parity.io",
            "name": "Paolo La Camera",
            "username": "sigurpol"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "75deaab1061bf740a3c3f172668922b0a5c54344",
          "message": "EPMB/unsigned: fixed multi-page winner computation (#8987)\n\n## The issue \n\nIn `FullSupportsOfMiner`, we initially considered `MaxWinnersPerPage` as\nthe overall maximum number of winners across pages. However, it should\nbe calculated as `Pages * MaxWinnersPerPage` to prevent the computed\nsolution from having a low overall total of winners, which could result\nin a `WrongWinnerCount` error.\n\nThis bug was identified in\n\n[#staking-miner-1074](https://github.com/paritytech/polkadot-staking-miner/issues/1074)\nwhile testing the staking miner in a setup with aggressive trimming to\nevaluate backer bounding.\n\n## How to test \n\nA test has been added to replicate this scenario:\n\nTest configuration:\n- `Pages=2`\n- `MaxWinnersPerPage=2`\n- `desired_targets=3` (3 or 4 doesn't matter here, the key point is that\nis strictly > `MaxWinnersPerPage`)\n- `MaxBackersPerWinner=1`\n\nBefore the fix in this PR: \n- `FullSupportsOfMiner` could only hold 2 winners in total (bounded by\n`MaxWinnersPerPage`)\n- But the mining algorithm needed to hold 3 winners across multiple\npages\n- This would cause a `WrongWinnerCount` error during verification\n\nWith the fix:\n- `FullSupportsOfMiner` can now hold `Pages * MaxWinnersPerPage = 2 * 2\n= 4` winners\n- The test passes with 3 winners across 2 pages (proving it can hold\nmore than `MaxWinnersPerPage=2`)\n- No `WrongWinnerCount` errors occur\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-30T14:07:56Z",
          "tree_id": "c8956a48b2e8cb156ae38ceb128b344e27666883",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/75deaab1061bf740a3c3f172668922b0a5c54344"
        },
        "date": 1751299043972,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18581236,
            "range": "± 319343",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18718219,
            "range": "± 133445",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20286131,
            "range": "± 248617",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25311633,
            "range": "± 274426",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59757765,
            "range": "± 928611",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 385891447,
            "range": "± 3388545",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2735254335,
            "range": "± 72618440",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16191382,
            "range": "± 194728",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16030598,
            "range": "± 158525",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16822446,
            "range": "± 171130",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21646703,
            "range": "± 504473",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54809567,
            "range": "± 1546675",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 334199603,
            "range": "± 5229925",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2624531581,
            "range": "± 38549676",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "serban@parity.io",
            "name": "Serban Iorga",
            "username": "serban300"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a51c31246a789078f6109428974a31e2af55e6b2",
          "message": "XCMP and DMP improvements (#8860)\n\nRelated to https://github.com/paritytech/polkadot-sdk/issues/489\n\nThis PR changes the parachain receiving logic for XCMP and DMP by adding\nsome offchain processing before forwarding the messages to the parachain\n`set_validation_data` inherent. This enables us to relax the advancement\nrule.",
          "timestamp": "2025-07-01T07:19:38Z",
          "tree_id": "cbeb4c88307b11c741d5dcd44a9351ff7594f5cf",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/a51c31246a789078f6109428974a31e2af55e6b2"
        },
        "date": 1751357544411,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18561069,
            "range": "± 230836",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18869555,
            "range": "± 201588",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20222459,
            "range": "± 226532",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25245123,
            "range": "± 197659",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 60244110,
            "range": "± 754122",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 364437532,
            "range": "± 11669088",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2439474948,
            "range": "± 51996230",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16030825,
            "range": "± 214488",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15933163,
            "range": "± 197275",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16603042,
            "range": "± 442586",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21396785,
            "range": "± 248067",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54281597,
            "range": "± 1015224",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 319926900,
            "range": "± 7067137",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2578302831,
            "range": "± 47128695",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "diego2737@gmail.com",
            "name": "Diego",
            "username": "dimartiro"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "20510c488198e8ee72b241fd2d0f6d1784982734",
          "message": "chore: Bump bounded-collections dep (#9004)\n\n# Description\n\nBump bounded-collections dep from `0.2.3` to `0.3.2` based on the latest\n[release](https://crates.io/crates/bounded-collections/0.3.2)\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-07-01T08:03:09Z",
          "tree_id": "44744a795008b71ae5174e1747ef796272b08505",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/20510c488198e8ee72b241fd2d0f6d1784982734"
        },
        "date": 1751362406462,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18445980,
            "range": "± 190438",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18660567,
            "range": "± 250990",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20056142,
            "range": "± 184770",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25387327,
            "range": "± 434156",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59535883,
            "range": "± 736853",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 370853668,
            "range": "± 4839249",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2484502072,
            "range": "± 116022238",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15835456,
            "range": "± 273624",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16042366,
            "range": "± 232098",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16305958,
            "range": "± 200845",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21150829,
            "range": "± 188822",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53201455,
            "range": "± 524053",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 313238874,
            "range": "± 3415962",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2485934915,
            "range": "± 33264318",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "10196091+Ank4n@users.noreply.github.com",
            "name": "Ankan",
            "username": "Ank4n"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8546b7ab14b469cdc66bfb596f8dd899aced26b7",
          "message": "[Staking] [AHM] Fixes insufficient slashing of nominators (and some other small issues). (#8937)\n\nChanges to pallet-staking-async\n\n## Removed\n- Config constant `MaxDisabledValidators`: This constant was removed\nsince validator disabling logic has been moved to pallet-session, making\nit redundant in staking-async.\n- Storage DoubleMap `NominatorSlashInEra`: This was used to track\nper-era maximum slashes for nominators. It’s no longer required — we now\nonly track the highest slash per validator per era.\n- Call `withdraw_overstake`: This was a temporary extrinsic meant to fix\noverstake issues, but with fungible migration of staking funds, this is\nno longer possible and the extrinsic is obsolete.\n\n## Changed\n- Nominator slashing logic: The logic now aggregates slashes from\ndistinct offending validators nominated by a nominator within the same\nera. For repeated offences by the same validator, only the highest slash\nfraction is applied. Previously, the pallet applied only the highest\nslash across all validators, regardless of how many were slashed.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-01T14:17:55Z",
          "tree_id": "eab2686cd5968c2ae624a59303bc754c3bebe353",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/8546b7ab14b469cdc66bfb596f8dd899aced26b7"
        },
        "date": 1751386047142,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18519296,
            "range": "± 165691",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18731021,
            "range": "± 184371",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19822211,
            "range": "± 199487",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24843536,
            "range": "± 261744",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55975133,
            "range": "± 605310",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 321031239,
            "range": "± 13951583",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2363932073,
            "range": "± 61405055",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15734941,
            "range": "± 176921",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15974566,
            "range": "± 236210",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16117412,
            "range": "± 200256",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20849882,
            "range": "± 253593",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54995213,
            "range": "± 2366289",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 314879138,
            "range": "± 5177401",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2538766546,
            "range": "± 72112645",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1728078+michalkucharczyk@users.noreply.github.com",
            "name": "Michal Kucharczyk",
            "username": "michalkucharczyk"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "29aabd213b528d7322f72ac441e01b13a8474057",
          "message": "Fix flaxy 0003-block-building-warp-sync test - one more approach (#8974)\n\nSee the explanation in this comment:\n\nhttps://github.com/paritytech/polkadot-sdk/issues/8868#issuecomment-3003739535\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Lukasz Rubaszewski <117115317+lrubasze@users.noreply.github.com>",
          "timestamp": "2025-07-01T15:29:47Z",
          "tree_id": "eeb171e4d9a7fb0a6d12007cb3bcedefd615de62",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/29aabd213b528d7322f72ac441e01b13a8474057"
        },
        "date": 1751388796232,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 20116496,
            "range": "± 439573",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20199545,
            "range": "± 451148",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22028745,
            "range": "± 518211",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 27306549,
            "range": "± 601213",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 62674987,
            "range": "± 1316658",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 368976421,
            "range": "± 4185098",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2833608845,
            "range": "± 221323944",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17471194,
            "range": "± 369987",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17584259,
            "range": "± 240920",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18366588,
            "range": "± 382934",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23005742,
            "range": "± 214092",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 59834976,
            "range": "± 1093535",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 352092428,
            "range": "± 5350767",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2720509471,
            "range": "± 20809582",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1431590+nkpar@users.noreply.github.com",
            "name": "Nikolai Kozlov",
            "username": "nkpar"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "6824a6782354e274cf308be314f142551c5457ab",
          "message": "Add optional auto-rebag within on-idle (#8684)\n\nImplemented an `on_idle` hook for automatic rebagging of accounts,\nenabling incremental correction of account positions within the\nbags-list during the idle phase of block execution. Introduced new\nstorages and configurable constants to support this functionality, along\nwith improvements in logging and internal helpers.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Ankan <10196091+Ank4n@users.noreply.github.com>\nCo-authored-by: Kian Paimani <5588131+kianenigma@users.noreply.github.com>",
          "timestamp": "2025-07-01T17:34:56Z",
          "tree_id": "d7d7c3d9377a77baccd6e32ad81ac989e50d8655",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/6824a6782354e274cf308be314f142551c5457ab"
        },
        "date": 1751394306074,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18341722,
            "range": "± 200591",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18892018,
            "range": "± 258924",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19860345,
            "range": "± 236069",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25021147,
            "range": "± 74134",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56647011,
            "range": "± 733254",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 332801114,
            "range": "± 2881633",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2483728700,
            "range": "± 109500317",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15685321,
            "range": "± 212322",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15997974,
            "range": "± 191200",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16210781,
            "range": "± 222148",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20867911,
            "range": "± 193991",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52717014,
            "range": "± 688355",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 300839935,
            "range": "± 2004475",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2467310572,
            "range": "± 37769240",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "2ad96b728d889b77930781df9dc02fcc8c357795",
          "message": "reenable 0001-parachains-pvf (#9046)\n\nFixes: https://github.com/paritytech/polkadot-sdk/issues/8940.\n\nAll failure seems to be because occasionally we have 1 occurence in the\n3 bucket, since the default backing timeout on polkadot is 2.5 it does\nmakes sense to allow items in the 3 bucket as well.\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>\nCo-authored-by: Paolo La Camera <paolo@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: alvicsam <alvicsam@gmail.com>",
          "timestamp": "2025-07-02T08:28:26Z",
          "tree_id": "77147f3b0001b15bd06463d2d34033ac4ca67d5c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/2ad96b728d889b77930781df9dc02fcc8c357795"
        },
        "date": 1751448631075,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18566835,
            "range": "± 141121",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18743069,
            "range": "± 250003",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20112291,
            "range": "± 291826",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25513666,
            "range": "± 508595",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 60305820,
            "range": "± 1269865",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 346619400,
            "range": "± 7088910",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2661204065,
            "range": "± 16989106",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15807758,
            "range": "± 283196",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15909751,
            "range": "± 243612",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16408522,
            "range": "± 260757",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21288095,
            "range": "± 353827",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53980686,
            "range": "± 951088",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 316593202,
            "range": "± 4919558",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2650102588,
            "range": "± 42169570",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e3f52a0cc8370e8f0bb0ee25592d6e7152fc7f62",
          "message": "Fetch parent block `api_version` (#9059)\n\nThis is required to ensure that we use the `api_version` of the runtime\nthat will be used on the relay chain to validate the block. Otherwise\nthe node may thinks the runtime was already upgraded and sends data to\nthe relay chain that can not be decoded by the runtime and thus, the\nvalidation fails.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-02T09:48:51Z",
          "tree_id": "1a6f9d2f50e3b9690ea5a5c7f3b146b6d7aa85f5",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e3f52a0cc8370e8f0bb0ee25592d6e7152fc7f62"
        },
        "date": 1751453189323,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18678515,
            "range": "± 92771",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19005019,
            "range": "± 144324",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20147926,
            "range": "± 289213",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25556568,
            "range": "± 277137",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57230456,
            "range": "± 447500",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 319860066,
            "range": "± 12157020",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2331780089,
            "range": "± 27831580",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16051582,
            "range": "± 246614",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16548126,
            "range": "± 423722",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17276887,
            "range": "± 302596",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22088498,
            "range": "± 224811",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 55388813,
            "range": "± 253927",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 323619238,
            "range": "± 3548264",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2598656959,
            "range": "± 50164369",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "178801527+raymondkfcheung@users.noreply.github.com",
            "name": "Raymond Cheung",
            "username": "raymondkfcheung"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b7a48fcfdcc38c4ac2799275d02991759ab18ab9",
          "message": "Align parameters for `EventEmitter::emit_sent_event` (#9057)\n\nCorrected markdown and indentation for the `emit_sent_event` function\nparameters in the `EventEmitter` trait documentation for better\nreadability.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-02T10:06:47Z",
          "tree_id": "f96377f6f5877c2360da59fe5e3694f7324c55ed",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/b7a48fcfdcc38c4ac2799275d02991759ab18ab9"
        },
        "date": 1751454512919,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19448746,
            "range": "± 241466",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19690674,
            "range": "± 206867",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21111516,
            "range": "± 196572",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26425490,
            "range": "± 109841",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 62927187,
            "range": "± 823956",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 376148830,
            "range": "± 4171480",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2573469019,
            "range": "± 161936682",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17083258,
            "range": "± 242242",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16914845,
            "range": "± 175571",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17616610,
            "range": "± 271893",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22181332,
            "range": "± 183574",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 55644487,
            "range": "± 1024959",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 337894025,
            "range": "± 6769385",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2592523273,
            "range": "± 27274475",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "4211399+ordian@users.noreply.github.com",
            "name": "ordian",
            "username": "ordian"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "87a8fb03886485c6e0f5125ddfc7211ca9947803",
          "message": "dispute-coordinator: handle race with offchain disabling (#9050)\n\nFixes a potential race with off-chain disabling when we learned about\ndisablement after importing a dispute from that validator.\n\nI think there's no need to handle startup to do deactivation. This will\nbe only relevant for when a node upgrades to the release with a fix and\nwriting a migration for that seems like an overkill since this scenario\nis very low probability.",
          "timestamp": "2025-07-02T11:38:00Z",
          "tree_id": "80d69b0fb439b35bd22fb88d94e7e7bfa85f0efa",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/87a8fb03886485c6e0f5125ddfc7211ca9947803"
        },
        "date": 1751459442144,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19028192,
            "range": "± 203870",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19515061,
            "range": "± 179013",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21424216,
            "range": "± 335307",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26642510,
            "range": "± 377318",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 63534312,
            "range": "± 917944",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 376176259,
            "range": "± 9194051",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2581417394,
            "range": "± 84545635",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16467264,
            "range": "± 199496",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16582846,
            "range": "± 222480",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17535763,
            "range": "± 249614",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22246672,
            "range": "± 186355",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 56273425,
            "range": "± 1154136",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 343782386,
            "range": "± 4716206",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2626098881,
            "range": "± 13202594",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "Sajjon@users.noreply.github.com",
            "name": "Alexander Cyon",
            "username": "Sajjon"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ee6d22b94d9a93ac5989d4cce2f20a604b86214b",
          "message": "net/discovery: File persistence for `AddrCache` (#8839)\n\nImplementation of https://github.com/paritytech/polkadot-sdk/issues/8758\n\n# Description\nAuthority Discovery crate has been changed so that the `AddrCache` is\npersisted to `persisted_cache_file_path` a `json` file in\n`net_config_path` folder controlled by `NetworkConfiguration`.\n\n`AddrCache` is JSON serialized (`serde_json::to_pretty_string`) and\npersisted to file:\n- periodically (every 10 minutes)\n- on shutdown\n\nFurthermore, this persisted `AddrCache` on file will be read from upon\nstart of the worker - if it does not exist, or we failed to deserialize\nit a new empty cache is used.\n\n`AddrCache` is made Serialize/Deserialize thanks to `PeerId` and\n`Multiaddr` being made Serialize/Deserialize.\n\n# Implementation\nThe worker use a spawner which is used in the [run loop of the worker,\nwhere at an interval we try to persist the\n[AddrCache](https://github.com/paritytech/polkadot-sdk/blob/cyon/persist_peers_cache/substrate/client/authority-discovery/src/worker.rs#L361-L372).\nWe won't persist the `AddrCache` if `persisted_cache_file_path:\nOption<PathBuf>` is `None` - which it would be if\n[`NetworkConfiguration`\n`net_config_path`](https://github.com/paritytech/polkadot-sdk/blob/master/substrate/client/network/src/config.rs#L591)\nis `None`. We spawn a new task each time the `interval` \"ticks\" - once\nevery 10 minutes - and it uses `fs::write` (there is also a\n`tokio::fs::write` which requires the `fs` feature flag of `tokio` which\nis not activated and I chose to not use it). If the worker shutsdown we\nwill try to persist without using the `spawner`.\n\n# Changes\n- New crate dependency: `serde_with` for `SerializeDisplay` and\n`DeserialzeFromStr` macros\n- `WorkerConfig` in authority-discovery crate has a new field\n`persisted_cache_directory : Option<PathBuf>`\n- `Worker` in authority-discovery crate constructor now takes a new\nparameter, `spawner: Arc<dyn SpawnNamed>`\n\n## Tests\n- [authority-discovery\ntests](substrate/client/authority-discovery/src/tests.rs) tests are\nchanged to use tokio runtime, `#[tokio::test]` and we pass a test worker\nconfig with a `tempdir` for `persisted_cache_directory `\n\n# `net_config_path`\nHere are the `net_config_path` (from `NetworkConfiguration`) which is\nthe folder used by this PR to save a serialized `AddrCache` in:\n\n## `dev`\n```sh\ncargo build --release && ./target/release/polkadot --dev\n```\n\nshows =>\n\n`/var/folders/63/fs7x_3h16svftdz4g9bjk13h0000gn/T/substratey5QShJ/chains/rococo_dev/network/authority_discovery_addr_cache.json'`\n\n## `kusama`\n```sh\ncargo build --release && ./target/release/polkadot --chain kusama --validator\n```\n\nshows => `~/Library/Application\nSupport/polkadot/chains/ksmcc3/network/authority_discovery_addr_cache.json`\n\n> [!CAUTION]\n> The node shutdown automatically with scary error. \n> ```\n> Essential task `overseer` failed. Shutting down service.\n> TCP listener terminated with error error=Custom { kind: Other, error:\n\"A Tokio 1.x context was found, but it is being shutdown.\" }\n> Installed transports terminated, ignore if the node is stopping\n> Litep2p backend terminated`\n>Error:\n>   0: Other: Essential task failed.\n> ```\n> This is maybe expected/correct, but just wanted to flag it, expand\n`output` below to see log\n> \n> Or did I break anything?\n\n<details><summary>Full Log with scary error (expand me 👈)</summary>\nThe log\n\n```sh\n$ ./target/release/polkadot --chain kusama --validator\n2025-06-19 14:34:35 ----------------------------\n2025-06-19 14:34:35 This chain is not in any way\n2025-06-19 14:34:35       endorsed by the\n2025-06-19 14:34:35      KUSAMA FOUNDATION\n2025-06-19 14:34:35 ----------------------------\n2025-06-19 14:34:35 Parity Polkadot\n2025-06-19 14:34:35 ✌️  version 1.18.5-e6b86b54d31\n2025-06-19 14:34:35 ❤️  by Parity Technologies <admin@parity.io>, 2017-2025\n2025-06-19 14:34:35 📋 Chain specification: Kusama\n2025-06-19 14:34:35 🏷  Node name: glamorous-game-6626\n2025-06-19 14:34:35 👤 Role: AUTHORITY\n2025-06-19 14:34:35 💾 Database: RocksDb at /Users/alexandercyon/Library/Application Support/polkadot/chains/ksmcc3/db/full\n2025-06-19 14:34:39 Creating transaction pool txpool_type=SingleState ready=Limit { count: 8192, total_bytes: 20971520 } future=Limit { count: 819, total_bytes: 2097152 }\n2025-06-19 14:34:39 🚀 Using prepare-worker binary at: \"/Users/alexandercyon/Developer/Rust/polkadot-sdk/target/release/polkadot-prepare-worker\"\n2025-06-19 14:34:39 🚀 Using execute-worker binary at: \"/Users/alexandercyon/Developer/Rust/polkadot-sdk/target/release/polkadot-execute-worker\"\n2025-06-19 14:34:39 Local node identity is: 12D3KooWPVh77R44wZwySBys262Jh4BSbpMFxtvQNmi1EpdcwDDW\n2025-06-19 14:34:39 Running litep2p network backend\n2025-06-19 14:34:40 💻 Operating system: macos\n2025-06-19 14:34:40 💻 CPU architecture: aarch64\n2025-06-19 14:34:40 📦 Highest known block at #1294645\n2025-06-19 14:34:40 〽️ Prometheus exporter started at 127.0.0.1:9615\n2025-06-19 14:34:40 Running JSON-RPC server: addr=127.0.0.1:9944,[::1]:9944\n2025-06-19 14:34:40 🏁 CPU single core score: 1.35 GiBs, parallelism score: 1.44 GiBs with expected cores: 8\n2025-06-19 14:34:40 🏁 Memory score: 63.75 GiBs\n2025-06-19 14:34:40 🏁 Disk score (seq. writes): 2.92 GiBs\n2025-06-19 14:34:40 🏁 Disk score (rand. writes): 727.56 MiBs\n2025-06-19 14:34:40 CYON: 🔮 Good, path set to: /Users/alexandercyon/Library/Application Support/polkadot/chains/ksmcc3/network/authority_discovery_addr_cache.json\n2025-06-19 14:34:40 🚨 Your system cannot securely run a validator.\nRunning validation of malicious PVF code has a higher risk of compromising this machine.\nSecure mode is enabled only for Linux\nand a full secure mode is enabled only for Linux x86-64.\nYou can ignore this error with the `--insecure-validator-i-know-what-i-do` command line argument if you understand and accept the risks of running insecurely. With this flag, security features are enabled on a best-effort basis, but not mandatory.\nMore information: https://docs.polkadot.com/infrastructure/running-a-validator/operational-tasks/general-management/#secure-your-validator\n2025-06-19 14:34:40 Successfully persisted AddrCache on disk\n2025-06-19 14:34:40 subsystem exited with error subsystem=\"candidate-validation\" err=FromOrigin { origin: \"candidate-validation\", source: Context(\"could not enable Secure Validator Mode for non-Linux; check logs\") }\n2025-06-19 14:34:40 Starting workers\n2025-06-19 14:34:40 Starting approval distribution workers\n2025-06-19 14:34:40 👶 Starting BABE Authorship worker\n2025-06-19 14:34:40 Starting approval voting workers\n2025-06-19 14:34:40 Starting main subsystem loop\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"candidate-validation\"\n2025-06-19 14:34:40 Starting with an empty approval vote DB.\n2025-06-19 14:34:40 subsystem finished unexpectedly subsystem=Ok(())\n2025-06-19 14:34:40 🥩 BEEFY gadget waiting for BEEFY pallet to become available...\n2025-06-19 14:34:40 Received `Conclude` signal, exiting\n2025-06-19 14:34:40 Conclude\n2025-06-19 14:34:40 received `Conclude` signal, exiting\n2025-06-19 14:34:40 received `Conclude` signal, exiting\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"availability-recovery\"\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"bitfield-distribution\"\n2025-06-19 14:34:40 Approval distribution worker 3, exiting because of shutdown\n2025-06-19 14:34:40 Approval distribution worker 2, exiting because of shutdown\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"dispute-distribution\"\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"chain-selection\"\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"pvf-checker\"\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"availability-store\"\n2025-06-19 14:34:40 Approval distribution worker 1, exiting because of shutdown\n2025-06-19 14:34:40 Approval distribution worker 0, exiting because of shutdown\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"approval-voting\"\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"approval-distribution\"\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"chain-api\"\n2025-06-19 14:34:40 Approval distribution stream finished, most likely shutting down\n2025-06-19 14:34:40 Approval distribution stream finished, most likely shutting down\n2025-06-19 14:34:40 Approval distribution stream finished, most likely shutting down\n2025-06-19 14:34:40 Approval distribution stream finished, most likely shutting down\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"provisioner\"\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"availability-distribution\"\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"runtime-api\"\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"candidate-backing\"\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"collation-generation\"\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"gossip-support\"\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"approval-voting-parallel\"\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"bitfield-signing\"\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"collator-protocol\"\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"statement-distribution\"\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"network-bridge-tx\"\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"network-bridge-rx\"\n2025-06-19 14:34:41 subsystem exited with error subsystem=\"prospective-parachains\" err=FromOrigin { origin: \"prospective-parachains\", source: SubsystemReceive(Generated(Context(\"Signal channel is terminated and empty.\"))) }\n2025-06-19 14:34:41 subsystem exited with error subsystem=\"dispute-coordinator\" err=FromOrigin { origin: \"dispute-coordinator\", source: SubsystemReceive(Generated(Context(\"Signal channel is terminated and empty.\"))) }\n2025-06-19 14:34:41 Essential task `overseer` failed. Shutting down service.\n2025-06-19 14:34:41 TCP listener terminated with error error=Custom { kind: Other, error: \"A Tokio 1.x context was found, but it is being shutdown.\" }\n2025-06-19 14:34:41 Installed transports terminated, ignore if the node is stopping\n2025-06-19 14:34:41 Litep2p backend terminated\nError:\n   0: Other: Essential task failed.\n\nBacktrace omitted. Run with RUST_BACKTRACE=1 environment variable to display it.\nRun with RUST_BACKTRACE=full to include source snippets.\n```\n\n🤔\n\n</details>\n\n## `kusama -d /my/custom/path`\n```sh\ncargo build --release && ./target/release/polkadot --chain kusama --validator --unsafe-force-node-key-generation -d /my/custom/path\n```\nshows => `./my/custom/path/chains/ksmcc3/network/` for `net_config_path`\n\n## `test`\n\nI've configured a `WorkerConfig` with a `tempfile` for all tests. To my\nsurprise I had to call `fs::create_dir_all` in order for the tempdir to\nactually be created.\n\n---------\n\nCo-authored-by: Alexandru Vasile <60601340+lexnv@users.noreply.github.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: alvicsam <alvicsam@gmail.com>",
          "timestamp": "2025-07-02T12:37:19Z",
          "tree_id": "41d919f06cd54e8f7f16d84be0ad77d08f3b8ea3",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ee6d22b94d9a93ac5989d4cce2f20a604b86214b"
        },
        "date": 1751463086207,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18774009,
            "range": "± 179449",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19205913,
            "range": "± 353926",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20282602,
            "range": "± 193914",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26206870,
            "range": "± 249419",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59836862,
            "range": "± 1012720",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 368716818,
            "range": "± 3918042",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2481099716,
            "range": "± 92685564",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16284340,
            "range": "± 189314",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16167247,
            "range": "± 144641",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16823524,
            "range": "± 190292",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21771555,
            "range": "± 200368",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 55121403,
            "range": "± 563007",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 315813002,
            "range": "± 5962995",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2585297706,
            "range": "± 50009392",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "5588131+kianenigma@users.noreply.github.com",
            "name": "Kian Paimani",
            "username": "kianenigma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1bb16561d96991808cfe56b783af3cb6ea958a82",
          "message": "add try-state check for staking roles -- staker cannot be nominator a… (#9034)\n\nTiny follow-up to\nhttps://github.com/paritytech/polkadot-sdk/pull/8701/files\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-02T14:56:51Z",
          "tree_id": "5fcce81c444c7aaf9c89e16a555d94498ab08b86",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/1bb16561d96991808cfe56b783af3cb6ea958a82"
        },
        "date": 1751471855331,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18509627,
            "range": "± 139415",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 27049366,
            "range": "± 895547",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 29404322,
            "range": "± 903871",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 35585048,
            "range": "± 1920102",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 67373042,
            "range": "± 1860584",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 334064132,
            "range": "± 14712447",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2440323149,
            "range": "± 34375642",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15859595,
            "range": "± 166463",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16037603,
            "range": "± 349956",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16848748,
            "range": "± 496896",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23419192,
            "range": "± 1960401",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 62081933,
            "range": "± 1107953",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 348727045,
            "range": "± 7594282",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2785343806,
            "range": "± 63833842",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "13c89a63ced08a8a53248beda238b8ddd02b999d",
          "message": "`sp-tracing`: Remove `test-utils` feature (#9063)\n\nThe crate is already exposing testing related features by default, so\nthere is no real need to hide the rest behind some feature. Also because\nof feature unification, the feature is enabled always in the workspace.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-02T22:21:51Z",
          "tree_id": "ee36d6b238db7ed1ae04ae802ce20b18c138375a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/13c89a63ced08a8a53248beda238b8ddd02b999d"
        },
        "date": 1751498277385,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18220068,
            "range": "± 113043",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18536160,
            "range": "± 139207",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19952497,
            "range": "± 112852",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25151708,
            "range": "± 357416",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56862090,
            "range": "± 749203",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 347863030,
            "range": "± 14369448",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2434148737,
            "range": "± 83310607",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15641624,
            "range": "± 248588",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15851008,
            "range": "± 204890",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15966073,
            "range": "± 488112",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20967050,
            "range": "± 329439",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53336604,
            "range": "± 750336",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 312145175,
            "range": "± 5572095",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2511287518,
            "range": "± 47670000",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eresav@me.com",
            "name": "Andrei Eres",
            "username": "AndreiEres"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "180fcce69fbddfa1bde9830362d8026340b4b750",
          "message": "Add extra information to the harmless error logs during validate_transaction (#9047)\n\n# Description\n\nFixes https://github.com/paritytech/polkadot-sdk/issues/5936\n\nSince we are still receiving reports about this error, I suggest adding\nan extra line to prevent further questions.\n\n---------\n\nCo-authored-by: Alexander Samusev <41779041+alvicsam@users.noreply.github.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>",
          "timestamp": "2025-07-03T08:04:56Z",
          "tree_id": "96761998cffcd729b6d55e08006d78737aab6742",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/180fcce69fbddfa1bde9830362d8026340b4b750"
        },
        "date": 1751534194138,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17172434,
            "range": "± 475540",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17455094,
            "range": "± 284216",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 18460758,
            "range": "± 94433",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 23075527,
            "range": "± 140357",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 52677361,
            "range": "± 455694",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 302835467,
            "range": "± 1754249",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2147994839,
            "range": "± 45952913",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14273057,
            "range": "± 137812",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14369948,
            "range": "± 127061",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 14964952,
            "range": "± 111018",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19116844,
            "range": "± 165153",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 48345376,
            "range": "± 458944",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 276178858,
            "range": "± 1473293",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2178534879,
            "range": "± 12837812",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "egor@parity.io",
            "name": "Egor_P",
            "username": "EgorPopelyaev"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3bd01b9c89dbef0f57a3c0fb7f600fbb5befff65",
          "message": "[Release|CI/CD] Fix syncing in the release flow (#9092)\n\nThis PR adds a fix for the release pipelines. The sync flow needs a\nsecrete to be passed when it is called from another flow and syncing\nbetween release org and the main repo is needed.\nMissing secrets were added to the appropriate flows.",
          "timestamp": "2025-07-03T15:06:37Z",
          "tree_id": "806f5adc03322aa929b1b29440cb9212f69c9fe8",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/3bd01b9c89dbef0f57a3c0fb7f600fbb5befff65"
        },
        "date": 1751558320451,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19852692,
            "range": "± 243073",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19879379,
            "range": "± 237942",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21701124,
            "range": "± 267617",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26907263,
            "range": "± 467120",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 66230535,
            "range": "± 1421002",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 381459363,
            "range": "± 7214886",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2765422099,
            "range": "± 194933338",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16809032,
            "range": "± 279015",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16849282,
            "range": "± 243156",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17189542,
            "range": "± 392902",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22236449,
            "range": "± 186045",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 57061217,
            "range": "± 873639",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 337512136,
            "range": "± 3166932",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2635593196,
            "range": "± 36301905",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "oliver.tale-yazdi@parity.io",
            "name": "Oliver Tale-Yazdi",
            "username": "ggwpez"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "22714211e4f558abbabae28fc2e8f2c971143638",
          "message": "[AHM] Derive DecodeWithMemTracking and pub fields (#9067)\n\n- Derive `DecodeWithMemTracking` on structs\n- Make some fields public\n\n---------\n\nSigned-off-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>",
          "timestamp": "2025-07-04T10:36:12Z",
          "tree_id": "0dd0655d92d837e407ee908f523b783ecccc626a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/22714211e4f558abbabae28fc2e8f2c971143638"
        },
        "date": 1751628826246,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18151519,
            "range": "± 196864",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18751247,
            "range": "± 116331",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19978194,
            "range": "± 165985",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25166639,
            "range": "± 335268",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55890375,
            "range": "± 901560",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 327725336,
            "range": "± 10271359",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2315826982,
            "range": "± 37118321",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15658632,
            "range": "± 79398",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15605310,
            "range": "± 323842",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16110338,
            "range": "± 162074",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20798270,
            "range": "± 187405",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52506195,
            "range": "± 544361",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 303605968,
            "range": "± 2210332",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2404432584,
            "range": "± 19910638",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "james@jsdw.me",
            "name": "James Wilson",
            "username": "jsdw"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "771c9988e2a636a150d97c10e3122af8068d1687",
          "message": "Bump CI to Rustc 1.88 to support 2024 edition crates (#8592)\n\nAs one example, this allows us to use the latest version of Subxt: 0.42.\nAlso if-let chains :)\n\nMain changes:\n- Update CI image\n- Remove `forklift` from Build step in\n`check-revive-stable-uapi-polkavm`; it seemed to [cause an\nerror](https://github.com/paritytech/polkadot-sdk/actions/runs/16004536662/job/45148002314?pr=8592).\nPerhaps we can open an issue for this to fix/try again after this\nmerges.\n- Bump `polkavm` deps to 0.26 to avoid [this\nerror](https://github.com/paritytech/polkadot-sdk/actions/runs/16004991577/job/45150325849?pr=8592#step:5:1967)\n(thanks @koute!)\n- Add `result_large_err` clippy to avoid a bunch of clippy warnings\nabout a 176 byte error (again, we could fix this later more properly).\n- Clippy fixes (mainly inlining args into `format!`s where possible),\nremove one `#[no_mangle]` on a `#[panic_hook]` and a few other misc\nautomatic fixes.\n- `#[allow(clippy::useless_conversion)]` in frame macro to avoid the\ngenerated `.map(Into::into).map_err(Into::into)` code causing an issue\nwhen not necessary (it is sometimes; depends on the return type in\npallet calls)\n- UI test updates\n\nAs a side note, I haven't added a `prdoc` since I'm not making any\nbreaking changes (despite touching a bunch of pallets), just clippy/fmt\ntype things. Please comment if this isn't ok!\n\nAlso, thankyou @bkchr for the wasmtime update PR which fixed a blocker\nhere!\n\n---------\n\nCo-authored-by: Evgeny Snitko <evgeny@parity.io>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-07-04T21:54:27Z",
          "tree_id": "bbce6a530538cfc5d3328f5239b16d133890b86d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/771c9988e2a636a150d97c10e3122af8068d1687"
        },
        "date": 1751669567153,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18280524,
            "range": "± 162752",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18425695,
            "range": "± 125212",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19364823,
            "range": "± 153464",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24811841,
            "range": "± 294548",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59773785,
            "range": "± 1280987",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 372307923,
            "range": "± 5874950",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2664240959,
            "range": "± 76858875",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14862156,
            "range": "± 257540",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14980966,
            "range": "± 190989",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15512740,
            "range": "± 144436",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20437296,
            "range": "± 241578",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52332598,
            "range": "± 3063935",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 307101381,
            "range": "± 3667431",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2428693433,
            "range": "± 20886096",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "14218860+iulianbarbu@users.noreply.github.com",
            "name": "Iulian Barbu",
            "username": "iulianbarbu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "436b4935b52562f79a83b6ecadeac7dcbc1c2367",
          "message": "`polkadot-omni-node`: pass timestamp inherent data for block import (#9102)\n\n# Description\n\nThis should allow aura runtimes to check timestamp inherent data to\nsync/import blocks that include timestamp inherent data.\n\nCloses #8907 \n\n## Integration\n\nRuntime developers can check timestamp inherent data while using\n`polkadot-omni-node-lib`/`polkadot-omni-node`/`polkadot-parachain`\nbinaries. This change is backwards compatible and doesn't require\nruntimes to check the timestamp inherent, but they are able to do it now\nif needed.\n\n## Review Notes\n\nN/A\n\n---------\n\nSigned-off-by: Iulian Barbu <iulian.barbu@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-06T09:32:11Z",
          "tree_id": "239ba865d190c48c06af7d1fa35ceb411cc31cea",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/436b4935b52562f79a83b6ecadeac7dcbc1c2367"
        },
        "date": 1751797542905,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18732638,
            "range": "± 203870",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19028251,
            "range": "± 239896",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20729786,
            "range": "± 200353",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26100053,
            "range": "± 248131",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 62442885,
            "range": "± 1728427",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 356593059,
            "range": "± 3936451",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2715375683,
            "range": "± 182303220",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16375386,
            "range": "± 227306",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16369531,
            "range": "± 203632",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16947822,
            "range": "± 198346",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21845656,
            "range": "± 370890",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 57217888,
            "range": "± 941640",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 326434160,
            "range": "± 7309061",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2558711248,
            "range": "± 25681109",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "siphamandla@parity.io",
            "name": "Siphamandla Mjoli",
            "username": "Brianspha"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "006a21e3bc338a05a0bddf8d73d0618ae9721ca9",
          "message": "[Xcm Precompile] Remove return value (#9125)\n\nThis PR removes any return value from xcm send and execute. Additionally\nit improves upon the documentation of the interface by reorganising\nwhere comments are placed.",
          "timestamp": "2025-07-08T15:37:30Z",
          "tree_id": "f34062f088de96e8d636033cdbfdcfcac9020345",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/006a21e3bc338a05a0bddf8d73d0618ae9721ca9"
        },
        "date": 1751992507503,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18781002,
            "range": "± 212955",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18764772,
            "range": "± 312735",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20197312,
            "range": "± 240158",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25470418,
            "range": "± 265709",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59621962,
            "range": "± 1031650",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 350049382,
            "range": "± 4492945",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2545165561,
            "range": "± 67083109",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16831321,
            "range": "± 683777",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17141553,
            "range": "± 708090",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17896272,
            "range": "± 1427674",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22187967,
            "range": "± 373947",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 57089927,
            "range": "± 873511",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 332573432,
            "range": "± 5163538",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2648828272,
            "range": "± 37543358",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "cb12563ae4e532876c29b67be9a7f5d06fdc9fc3",
          "message": "Replace `assert_para_throughput` with `assert_finalized_para_throughput` (#9117)\n\nThere is no need to have two functions which are essentially doing the\nsame. It is also better to oberserve the finalized blocks, which also\nsimplifies the code. So, this pull request is replacing the\n`assert_para_throughput` with `assert_finalized_para_throughput`. It\nalso replaces any usage of `assert_finalized_para_throughput` with\n`assert_para_throughput`.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-08T16:04:23Z",
          "tree_id": "faed545176a9de8b004b29e5ee7e4b5c2ccecef6",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/cb12563ae4e532876c29b67be9a7f5d06fdc9fc3"
        },
        "date": 1751994063324,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18769489,
            "range": "± 555497",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18949066,
            "range": "± 182315",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20100009,
            "range": "± 310377",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25043042,
            "range": "± 357049",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 58461735,
            "range": "± 1450135",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 379161713,
            "range": "± 7855093",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2718364655,
            "range": "± 119468001",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16415967,
            "range": "± 278976",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16133065,
            "range": "± 395362",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16282405,
            "range": "± 255794",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21120486,
            "range": "± 372676",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53804510,
            "range": "± 1155698",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 312704837,
            "range": "± 4488706",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2492535010,
            "range": "± 43084952",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "88fc41c9cf5e46277b7cab53a72c650b75377d25",
          "message": "make 0002-parachains-disputes a bit more robust (#9074)\n\nThere is inherently a race between the time we snapshot\nfinality_lag/disputes_finality_lag metrics and if the dispute/approvals\nfinished, so sometimes the test was failing because it was reporting 1\nwhich is in no way a problem, so let's make it a bit more robust by\nsimply waiting more time to reach 0.\n\nFixes: https://github.com/paritytech/polkadot-sdk/issues/8941.\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>",
          "timestamp": "2025-07-08T16:10:51Z",
          "tree_id": "8a90317b0febd3a60f76b56d7a854edcf7a4085d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/88fc41c9cf5e46277b7cab53a72c650b75377d25"
        },
        "date": 1751996096800,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18244865,
            "range": "± 123598",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18546757,
            "range": "± 172172",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19891826,
            "range": "± 240331",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24795164,
            "range": "± 288187",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 60281208,
            "range": "± 1253420",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 367506487,
            "range": "± 9175369",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2357905520,
            "range": "± 40140473",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15603663,
            "range": "± 127444",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15865881,
            "range": "± 155154",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16130813,
            "range": "± 113169",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21222152,
            "range": "± 253508",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53616541,
            "range": "± 690438",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 308026420,
            "range": "± 2276119",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2492182534,
            "range": "± 21529357",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "franciscoaguirreperez@gmail.com",
            "name": "Francisco Aguirre",
            "username": "franciscoaguirre"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4d5e95217831fb75942d8153a22f6864858c1d71",
          "message": "XCM precompile: don't support older xcm versions (#9126)\n\nThe latest XCM version is 5. A lot of parachains are still running V3 or\nV4 which is why we haven't removed them, but the XCM precompile is new\nand should only have to deal with versions 5 and onwards. No need to\nkeep dragging 3 and 4 in contracts.",
          "timestamp": "2025-07-08T17:27:43Z",
          "tree_id": "2944a79e52968a0f54da0a246a07867b8f95dffe",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4d5e95217831fb75942d8153a22f6864858c1d71"
        },
        "date": 1751998866421,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18790434,
            "range": "± 306302",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19154773,
            "range": "± 263557",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20288577,
            "range": "± 246067",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25565921,
            "range": "± 325923",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 58751281,
            "range": "± 925582",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 349436451,
            "range": "± 5524284",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2757907023,
            "range": "± 119471952",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16418581,
            "range": "± 189254",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15911000,
            "range": "± 250845",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16631462,
            "range": "± 221627",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21343867,
            "range": "± 264484",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54007814,
            "range": "± 506258",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 319064168,
            "range": "± 10868283",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2532828872,
            "range": "± 33287615",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "franciscoaguirreperez@gmail.com",
            "name": "Francisco Aguirre",
            "username": "franciscoaguirre"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ba2a8dc536db30397c332a2aa2cd9f9863027093",
          "message": "XCM precompile: small cleanup (#9135)\n\nFollow-up to\nhttps://github.com/paritytech/polkadot-sdk/pull/9125#discussion_r2192896809",
          "timestamp": "2025-07-08T19:47:45Z",
          "tree_id": "e7aeb64bf7cbd7d415bc142f30193c7d6ec3f579",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ba2a8dc536db30397c332a2aa2cd9f9863027093"
        },
        "date": 1752007681273,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19177291,
            "range": "± 228003",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19811027,
            "range": "± 199319",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21129095,
            "range": "± 376321",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25990806,
            "range": "± 266546",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 61433738,
            "range": "± 1368821",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 381281820,
            "range": "± 6460928",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2450508288,
            "range": "± 52330019",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16677535,
            "range": "± 208389",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17074466,
            "range": "± 311367",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17373345,
            "range": "± 178394",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22362929,
            "range": "± 258142",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 55776681,
            "range": "± 721394",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 326291012,
            "range": "± 3994110",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2537744909,
            "range": "± 14175301",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "dharjeezy@gmail.com",
            "name": "dharjeezy",
            "username": "dharjeezy"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cc972542e0df0266cde2ead4cfac3b1558c860af",
          "message": "pallet bounties v2 benchmark (#8952)\n\ncloses #8649\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-07-08T21:47:29Z",
          "tree_id": "92ea303bb8df02e5752f9903f5541e35918ac3a9",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/cc972542e0df0266cde2ead4cfac3b1558c860af"
        },
        "date": 1752014601323,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17841117,
            "range": "± 252239",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18258071,
            "range": "± 164755",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19806346,
            "range": "± 385988",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24783154,
            "range": "± 351601",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59608461,
            "range": "± 2193868",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 359897758,
            "range": "± 14466394",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2757235689,
            "range": "± 182007188",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15389624,
            "range": "± 367135",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15581771,
            "range": "± 229238",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15660415,
            "range": "± 135712",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20350702,
            "range": "± 268357",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51489072,
            "range": "± 878014",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 296060620,
            "range": "± 3546399",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2727428544,
            "range": "± 37792493",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "Sajjon@users.noreply.github.com",
            "name": "Alexander Cyon",
            "username": "Sajjon"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7ab0dcd62887ea3c5e50cfb5b1b01beb09d0ec92",
          "message": "Add `para_ids` Runtime API (#9055)\n\nImplementation of https://github.com/paritytech/polkadot-sdk/issues/9053\n\n---------\n\nCo-authored-by: alindima <alin@parity.io>",
          "timestamp": "2025-07-09T07:17:25Z",
          "tree_id": "efefbe78f8e545dae503496bbc822b03e32d1e13",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/7ab0dcd62887ea3c5e50cfb5b1b01beb09d0ec92"
        },
        "date": 1752048478782,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18660061,
            "range": "± 255603",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19118073,
            "range": "± 264975",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20827151,
            "range": "± 289158",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26322172,
            "range": "± 444122",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 63321642,
            "range": "± 973122",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 366118476,
            "range": "± 4513879",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2563371151,
            "range": "± 146389933",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16817350,
            "range": "± 254223",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16736952,
            "range": "± 336857",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17333446,
            "range": "± 244491",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22384120,
            "range": "± 367721",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 57414390,
            "range": "± 1310568",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 329196369,
            "range": "± 4764244",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2614785572,
            "range": "± 32982769",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "egor@parity.io",
            "name": "Egor_P",
            "username": "EgorPopelyaev"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "cd39c26a4da04693b07b3ed752ea239f452795ea",
          "message": "[Release|CI/CD] Move runtimes build to a separate pipeline and let it trigger the next flow (#9118)\n\nThis PR incudes the following changes:\n- Cut the runtimes build from the Create Draft flow into a standalone\npipeline\n- Add a trigger to the Build Runtimes pipeline that will be starting the\nCreate Draft flow automatically when the runtimes are built\nsuccessfully.\n\nCloses: https://github.com/paritytech/devops/issues/3827 and partially:\nhttps://github.com/paritytech/devops/issues/3828",
          "timestamp": "2025-07-09T08:40:25Z",
          "tree_id": "69aff4dc6192fec945b7a0b030222c92ac453a33",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/cd39c26a4da04693b07b3ed752ea239f452795ea"
        },
        "date": 1752053596240,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 20739837,
            "range": "± 327669",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20772332,
            "range": "± 255601",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22570605,
            "range": "± 233395",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 27947389,
            "range": "± 329036",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 67254793,
            "range": "± 1344373",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 405959512,
            "range": "± 6725131",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2662087794,
            "range": "± 80364462",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17783034,
            "range": "± 252375",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17876010,
            "range": "± 220098",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17805881,
            "range": "± 181055",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23667312,
            "range": "± 236893",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 58826147,
            "range": "± 3736451",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 363685938,
            "range": "± 5692955",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2684718718,
            "range": "± 30169798",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "bkontur@gmail.com",
            "name": "Branislav Kontur",
            "username": "bkontur"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "83afbeeb906131755fdcea3b891ea1883c4d17d0",
          "message": "Expose more constants for pallet-xcm (#9139)\n\nLet's expose more constants, similar as `AdvertisedXcmVersion`.\n\n\n![image](https://github.com/user-attachments/assets/5ddc265f-546b-45a0-8235-3f53c3108823)\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-09T12:29:35Z",
          "tree_id": "6fb2c4c504887609989d96ab44ba1a1afbe03294",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/83afbeeb906131755fdcea3b891ea1883c4d17d0"
        },
        "date": 1752067322515,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18071818,
            "range": "± 163739",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18141022,
            "range": "± 217063",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19529972,
            "range": "± 187319",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24565882,
            "range": "± 197325",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54446366,
            "range": "± 658155",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 305884031,
            "range": "± 11499260",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2382396289,
            "range": "± 48038672",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15611355,
            "range": "± 184643",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15347163,
            "range": "± 259142",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15937601,
            "range": "± 227693",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20578522,
            "range": "± 208418",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51780973,
            "range": "± 872392",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 318462806,
            "range": "± 5487783",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2539509707,
            "range": "± 34465888",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "117115317+lrubasze@users.noreply.github.com",
            "name": "Lukasz Rubaszewski",
            "username": "lrubasze"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7305f96aa8fc68b7249587c21f5fa2d4520c54cd",
          "message": "CI - zombienet cumulus tests zombienet sdk (#8954)\n\n### This PR includes the following changes:\n\n- Migrates Zombienet Cumulus tests to `zombienet-sdk`\n- Re-enables the tests, with the following exceptions (to be addressed\nseparately):\n  - `zombienet-cumulus-0002-pov_recovery` - #8985 \n- `zombienet-cumulus-0006-rpc_collator_builds_blocks` - root cause the\nsame as #8985\n  - `zombienet-cumulus-0009-elastic_scaling_pov_recovery` – #8999\n- `zombienet-cumulus-0010-elastic_scaling_multiple_block_per_slot` –\n#9018\n- Adds the following tests to CI:\n  - `zombienet-cumulus-0011-dht-bootnodes`\n  - `zombienet-cumulus-0012-parachain_extrinsic_gets_finalized`\n  - `zombienet-cumulus-0013-elastic_scaling_slot_based_rp_offset`\n\n---------\n\nSigned-off-by: Iulian Barbu <iulian.barbu@parity.io>\nCo-authored-by: Javier Viola <javier@parity.io>\nCo-authored-by: Javier Viola <363911+pepoviola@users.noreply.github.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Anthony Lazam <xlzm.tech@gmail.com>\nCo-authored-by: Sebastian Kunert <skunert49@gmail.com>\nCo-authored-by: Iulian Barbu <14218860+iulianbarbu@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <info@kchr.de>",
          "timestamp": "2025-07-09T16:01:41Z",
          "tree_id": "7b46e0ac8c2ed95e791c472fb7a82ebbc6a32685",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/7305f96aa8fc68b7249587c21f5fa2d4520c54cd"
        },
        "date": 1752080313799,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19577088,
            "range": "± 222404",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20457517,
            "range": "± 304644",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21674705,
            "range": "± 215274",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26914730,
            "range": "± 316604",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 61564851,
            "range": "± 659823",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 352025669,
            "range": "± 8382731",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2430957985,
            "range": "± 60252596",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16959687,
            "range": "± 197195",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17303171,
            "range": "± 130873",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17967733,
            "range": "± 330512",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22160336,
            "range": "± 275418",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 56601508,
            "range": "± 867861",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 321983061,
            "range": "± 4710706",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2538230343,
            "range": "± 19121878",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "12ddb5a71ddd744e48bbf49a4cc0b44c5381747e",
          "message": "bitfield_distribution: fix subsystem clogged at begining of a session (#9094)\n\n`handle_peer_view_change` gets called on NewGossipTopology with the\nexisting view of the peer to cover for the case when the topology might\narrive late, but in that case in the view will contain old blocks from\nprevious session, so since the X/Y neighbour change because of the\ntopology change you end up sending a lot of messages for blocks before\nthe session changed.\n\nFix it by checking the send message only for relay chains that are in\nthe same session as the current topology.\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-10T10:00:44Z",
          "tree_id": "0adae7550a477fef6b79346b2a017a665b321042",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/12ddb5a71ddd744e48bbf49a4cc0b44c5381747e"
        },
        "date": 1752144767293,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18000727,
            "range": "± 139674",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18041287,
            "range": "± 164860",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19346679,
            "range": "± 220626",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24624090,
            "range": "± 184803",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59267833,
            "range": "± 601258",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 335919471,
            "range": "± 6660665",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2553667553,
            "range": "± 100640386",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14838763,
            "range": "± 213693",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 14915668,
            "range": "± 227409",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15693985,
            "range": "± 157810",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20277047,
            "range": "± 454299",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52438901,
            "range": "± 1314891",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 300439989,
            "range": "± 10850800",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2530096344,
            "range": "± 45148944",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "178801527+raymondkfcheung@users.noreply.github.com",
            "name": "Raymond Cheung",
            "username": "raymondkfcheung"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "466149d0eac8e608a6e6b6db8cda98a555b6c7e8",
          "message": "Replace `log` with `tracing` on XCM-related modules (#8732)\n\nThis PR replaces `log` with `tracing` instrumentation on XCM-related\nmodules to significantly improve debugging capabilities for XCM\nexecution flows.\n\nContinues #8724 and partially addresses #6119 by providing structured\nlogging throughout XCM components, making it easier to diagnose\nexecution failures, fee calculation errors, and routing issues.\n\n## Key Features\n\n- **Consistent targets**: All components use predictable `xcm::*` log\ntargets\n- **Structured fields**: Uses `?variable` syntax for automatic Debug\nformatting\n- **Zero runtime impact**: No behavioural changes, only observability\nimprovements",
          "timestamp": "2025-07-10T12:54:12Z",
          "tree_id": "363cb00f3cfd55c0e8a1f74f8964ebc2e32b0156",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/466149d0eac8e608a6e6b6db8cda98a555b6c7e8"
        },
        "date": 1752155610237,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17896063,
            "range": "± 434635",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18140840,
            "range": "± 309681",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19593666,
            "range": "± 321868",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24945788,
            "range": "± 253237",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57038097,
            "range": "± 683563",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 322297151,
            "range": "± 4636725",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2404362117,
            "range": "± 98635615",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16297034,
            "range": "± 197210",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15815108,
            "range": "± 311711",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17843254,
            "range": "± 436375",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22907006,
            "range": "± 407620",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54680608,
            "range": "± 1046736",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 316028690,
            "range": "± 3511541",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2508580913,
            "range": "± 43851776",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1728078+michalkucharczyk@users.noreply.github.com",
            "name": "Michal Kucharczyk",
            "username": "michalkucharczyk"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "62a9808172832e13ca2ae02c1888491ee74b03fb",
          "message": "`fatxpool`: debug levels adjusted (#9159)\n\nThis PR removes redundant debug message and lowers the info about\ntimeout in `ready_at`.\n\nRelated: #9151\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-10T13:42:24Z",
          "tree_id": "cbedb9094437416e71f65e6fc550c42db2cc5e48",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/62a9808172832e13ca2ae02c1888491ee74b03fb"
        },
        "date": 1752158174786,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17943044,
            "range": "± 186592",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18261054,
            "range": "± 230691",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19441255,
            "range": "± 287494",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24318383,
            "range": "± 285822",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54042045,
            "range": "± 767943",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 306317377,
            "range": "± 2831996",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2157745629,
            "range": "± 29122297",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15325920,
            "range": "± 187564",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15163934,
            "range": "± 96782",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15606909,
            "range": "± 259475",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20065517,
            "range": "± 264628",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51180842,
            "range": "± 2254777",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 287801212,
            "range": "± 1784016",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2295345063,
            "range": "± 11052817",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "psykyodai@gmail.com",
            "name": "psykyo-dai(精神 大)",
            "username": "PsyKyodai"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "874a8dbdd9cbc7fdbfffc4c307f6f21974650a55",
          "message": "Add BlockNumberProvider to PureCreated Event (#9107)\n\n[AHM] [Proxy] Add creation block number to PureCreated event\n\nCloses #9066 \n\n## Problem\nAfter AHM, killing pure proxies requires the relay chain block height at\ncreation time. This information is non-trivial to obtain since the proxy\npallet lives on Asset Hub while the block height refers to Relay Chain.\n\n## Solution\nAdd `at: BlockNumberFor<T>` field to `Event::PureCreated` to include the\ncreation block height. This is populated using the `BlockNumberProvider`\nat creation time.\n\n## Changes\n1. Added `at` field to `Event::PureCreated` containing current block\nnumber\n2. Modified tests and benchmarks to reflect new event structure\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>",
          "timestamp": "2025-07-10T15:19:15Z",
          "tree_id": "e16c795118f66c71b0a031259521c3beef122083",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/874a8dbdd9cbc7fdbfffc4c307f6f21974650a55"
        },
        "date": 1752164507216,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18607842,
            "range": "± 553837",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19511939,
            "range": "± 195326",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20812808,
            "range": "± 350642",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24801612,
            "range": "± 322868",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56120614,
            "range": "± 929037",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 314615280,
            "range": "± 4980987",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2422917752,
            "range": "± 122464381",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16740119,
            "range": "± 704370",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16006092,
            "range": "± 319836",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17185674,
            "range": "± 212347",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23245243,
            "range": "± 242968",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 57893568,
            "range": "± 684664",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 324562180,
            "range": "± 8984006",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2424804182,
            "range": "± 39911894",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "serban@parity.io",
            "name": "Serban Iorga",
            "username": "serban300"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "540941cc654ece30dcd5dfed3cbc93828cd25b81",
          "message": "Improve `pr_8860.prdoc` (#9171)\n\nImproved PR doc for https://github.com/paritytech/polkadot-sdk/pull/8860\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Adrian Catangiu <adrian@parity.io>",
          "timestamp": "2025-07-11T10:53:15Z",
          "tree_id": "8b1fbfcc7a1599623446a446914cc1e37a981b75",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/540941cc654ece30dcd5dfed3cbc93828cd25b81"
        },
        "date": 1752234423941,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 22011483,
            "range": "± 355958",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 22517400,
            "range": "± 355850",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 24483386,
            "range": "± 326112",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 29615405,
            "range": "± 399170",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 72288039,
            "range": "± 974802",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 462630487,
            "range": "± 11124382",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 3027844095,
            "range": "± 657971545",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 18800766,
            "range": "± 392691",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 19641913,
            "range": "± 2614287",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 19806165,
            "range": "± 212909",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 25086357,
            "range": "± 455894",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 62899444,
            "range": "± 1597830",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 397934927,
            "range": "± 5667630",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2975052860,
            "range": "± 51747686",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7058819a45ed5b74cedd6d21698f1c2ac2445d6b",
          "message": "add block hashes to the randomness used by hashmaps and friends in validation context (#9127)\n\nhttps://github.com/paritytech/polkadot-sdk/pull/8606\nhttps://github.com/paritytech/trie/pull/221 replaced the usage of\nBTreeMap with HashMaps in validation context. The keys are already\nderived with a cryptographic hash function from user data, so users\nshould not be able to manipulate it.\n\nTo be on safe side this PR also modifies the TrieCache, TrieRecorder and\nMemoryDB to use a hasher that on top of the default generated randomness\nalso adds randomness generated from the hash of the relaychain and that\nof the parachain blocks, which is not something users can control or\nguess ahead of time.\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-11T15:34:56Z",
          "tree_id": "6b0e66c2eaa94537bb1ed602b345585455da88be",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/7058819a45ed5b74cedd6d21698f1c2ac2445d6b"
        },
        "date": 1752251987440,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18254046,
            "range": "± 169703",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18730578,
            "range": "± 246368",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19467753,
            "range": "± 425252",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24903041,
            "range": "± 330979",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55811042,
            "range": "± 903105",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 310299826,
            "range": "± 4733632",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2549238391,
            "range": "± 95433240",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15733537,
            "range": "± 194504",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15660844,
            "range": "± 171004",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16140718,
            "range": "± 214951",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20842042,
            "range": "± 283808",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53199855,
            "range": "± 674659",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 315917386,
            "range": "± 10825901",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2404631932,
            "range": "± 16454337",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "5588131+kianenigma@users.noreply.github.com",
            "name": "Kian Paimani",
            "username": "kianenigma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "064512ed11042b34ca7330b93e39aa864219d475",
          "message": "pallet-bags-list: Emit `ScoreUpdated` event only if it has changed (#9166)\n\nquick follow-up to https://github.com/paritytech/polkadot-sdk/pull/8684,\nensuring all blocks don't have x events when the feature is enabled (as\nit is now in WAH)\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-12T16:17:44Z",
          "tree_id": "bcdf93b2b053f979c59ad0094670fadf95855c33",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/064512ed11042b34ca7330b93e39aa864219d475"
        },
        "date": 1752340100967,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19083799,
            "range": "± 168182",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19376816,
            "range": "± 222740",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20865268,
            "range": "± 282719",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 27145424,
            "range": "± 252417",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 66791761,
            "range": "± 1982299",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 414348997,
            "range": "± 4635453",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2807970330,
            "range": "± 240661695",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16581423,
            "range": "± 255824",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16916444,
            "range": "± 599762",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17480590,
            "range": "± 196007",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22802643,
            "range": "± 240628",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 59252710,
            "range": "± 1244655",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 346514644,
            "range": "± 5865675",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2664111455,
            "range": "± 47017771",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "cyrill@parity.io",
            "name": "xermicus",
            "username": "xermicus"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fb0d310e07438caafcc2dda4d502eba040ecf06c",
          "message": "emit sparse debug info in unoptimized builds (#8646)\n\nSee\n[here](https://kobzol.github.io/rust/rustc/2025/05/20/disable-debuginfo-to-improve-rust-compile-times.html)\nfor more details.\n\nI found that on my host, this reduces `cargo build` (after `cargo\nclean`) from 19m 35s to 17m 50s, or about 10%.\n\nThanks @pgherveou\n\n---------\n\nSigned-off-by: Cyrill Leutwiler <bigcyrill@hotmail.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-07-13T22:45:18Z",
          "tree_id": "6fa4ad83ce7581d17e6bfc24fc886cf3fe8b40d7",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/fb0d310e07438caafcc2dda4d502eba040ecf06c"
        },
        "date": 1752449939671,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17663259,
            "range": "± 246030",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 17889982,
            "range": "± 105181",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19017319,
            "range": "± 83872",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24309699,
            "range": "± 218737",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57189272,
            "range": "± 829119",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 322026539,
            "range": "± 7205783",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2469300316,
            "range": "± 67249695",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14874465,
            "range": "± 188357",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15329426,
            "range": "± 168718",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15641043,
            "range": "± 622497",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20625535,
            "range": "± 498222",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 50987002,
            "range": "± 955395",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 286607050,
            "range": "± 4035039",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2341002763,
            "range": "± 40439916",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "109800286+StackOverflowExcept1on@users.noreply.github.com",
            "name": "StackOverflowExcept1on",
            "username": "StackOverflowExcept1on"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e98c88e297f58fa0a28b85bc8eee68fcf5cdaec3",
          "message": "feat(binary-merkle-tree): add `merkle_root_raw` and `merkle_proof_raw` methods (#9105)\n\n# Description\n\nResolves [#9103](https://github.com/paritytech/polkadot-sdk/issues/9103)\n\nAdded `merkle_root_raw` and `merkle_proof_raw` methods, which allow\ndevelopers to avoid double hashing when working with sequences like\n`Vec<H256>`, where `H256` is already hash of some message.\n\n## Integration\n\nThere were no breaking changes.\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-07-14T06:42:30Z",
          "tree_id": "0c3604f400a15e405af3ecb3b31b480883e07235",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e98c88e297f58fa0a28b85bc8eee68fcf5cdaec3"
        },
        "date": 1752479258484,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 21024199,
            "range": "± 494959",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20933851,
            "range": "± 329486",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 23353936,
            "range": "± 417219",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 28782300,
            "range": "± 418209",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 67737561,
            "range": "± 1008276",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 406239542,
            "range": "± 13055793",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2641456519,
            "range": "± 198980531",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 17447404,
            "range": "± 398439",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17765909,
            "range": "± 181644",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18135877,
            "range": "± 334804",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23799574,
            "range": "± 237338",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 59865262,
            "range": "± 973045",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 366815914,
            "range": "± 4715579",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2737734278,
            "range": "± 30468399",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "serban@parity.io",
            "name": "Serban Iorga",
            "username": "serban300"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f8a1fe64c29b1ddcb5824bbb3bf327f528f18d40",
          "message": "Deduplicate client-side inherents checking logic (#9175)\n\nStumbled upon this while working on other issue\n(https://github.com/paritytech/polkadot-sdk/pull/7902). I thought I\nmight need to change the `CheckInherentsResult` and this deduplication\nwould have made everything easier. Probably changing\n`CheckInherentsResult` won't be needed in the end, but even so it would\nbe nice to reduce the duplication.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-14T08:22:53Z",
          "tree_id": "bfca803819835b7f3000ebe25955951078a64f09",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f8a1fe64c29b1ddcb5824bbb3bf327f528f18d40"
        },
        "date": 1752485480133,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18528417,
            "range": "± 216507",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18845405,
            "range": "± 180206",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20601543,
            "range": "± 301303",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26008791,
            "range": "± 339771",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 60397124,
            "range": "± 847647",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 367854748,
            "range": "± 3423131",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2458183737,
            "range": "± 60879135",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16292030,
            "range": "± 427448",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16295399,
            "range": "± 234107",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17107809,
            "range": "± 269602",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21564517,
            "range": "± 119806",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 55480489,
            "range": "± 883241",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 316158027,
            "range": "± 4825000",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2512044685,
            "range": "± 12941874",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "evgeny@parity.io",
            "name": "Evgeny Snitko",
            "username": "AndWeHaveAPlan"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8f4d80071a4f478a4540aa8ab63dc1a1b26a8187",
          "message": "Update forklift to 0.14.1 (#9163)\n\ncc https://github.com/paritytech/polkadot-sdk/issues/9123\n\ncc https://github.com/paritytech/devops/issues/4151\n\n---------\n\nCo-authored-by: Alexander Samusev <41779041+alvicsam@users.noreply.github.com>\nCo-authored-by: alvicsam <alvicsam@gmail.com>",
          "timestamp": "2025-07-14T10:59:34Z",
          "tree_id": "ed66147a2d1d0f7bcd93cfeaa94fba29aacdfe07",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/8f4d80071a4f478a4540aa8ab63dc1a1b26a8187"
        },
        "date": 1752494953951,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18979534,
            "range": "± 191389",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19569527,
            "range": "± 116470",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21168811,
            "range": "± 300104",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26512997,
            "range": "± 321417",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 63158200,
            "range": "± 733674",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 357811461,
            "range": "± 6223268",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2627446568,
            "range": "± 60072479",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16605097,
            "range": "± 192429",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16664572,
            "range": "± 221782",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17422553,
            "range": "± 193961",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22648564,
            "range": "± 399626",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 58427639,
            "range": "± 982149",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 335257561,
            "range": "± 4575564",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2653785177,
            "range": "± 51669057",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "franciscoaguirreperez@gmail.com",
            "name": "Francisco Aguirre",
            "username": "franciscoaguirre"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "efa765b6d9fbab59dd9bab944f99b40a157d0d64",
          "message": "Pallet XCM - `transfer_assets` pre-ahm patch (#9137)\n\nAddresses https://github.com/paritytech/polkadot-sdk/issues/9054\n\n`transfer_assets` automatically figures out the reserve for a\ncross-chain transfer\nbased on on-chain configurations like `IsReserve` and the asset ids.\nThe Asset Hub Migration (AHM) will make it unable to return the correct\nreserve for\nthe network native asset (DOT, KSM, WND, PAS) since its reserve will\nmove from the\nRelay Chain to the Asset Hub.\n\nBefore the migration, it'll be disabled to do network native reserve\ntransfers\nvia `transfer_assets`. After the migration, once everything is\nconfigured properly,\nit'll be patched to use the correct reserve.\n\n## TODO\n\n- [x] Patch\n- [x] Tests\n- [x] PRDoc",
          "timestamp": "2025-07-14T19:28:37Z",
          "tree_id": "13bb2dff7ac3a2f86d6b38b9817c02e34410e467",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/efa765b6d9fbab59dd9bab944f99b40a157d0d64"
        },
        "date": 1752524441686,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 21344842,
            "range": "± 187739",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 21711954,
            "range": "± 223143",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 23382656,
            "range": "± 295977",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 28771856,
            "range": "± 286318",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 69598993,
            "range": "± 1237859",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 452395943,
            "range": "± 12360024",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2763785688,
            "range": "± 112823199",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 18228061,
            "range": "± 193816",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 18316083,
            "range": "± 191822",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 18914592,
            "range": "± 111873",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 24503819,
            "range": "± 424007",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 60566854,
            "range": "± 1098133",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 390178378,
            "range": "± 4766284",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2830721148,
            "range": "± 28619364",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ismailov.m.h@gmail.com",
            "name": "muharem",
            "username": "muharem"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ec6e6843b847de92be649073317fa729898d0e1b",
          "message": "Asset Hub Westend: nfts block provider is RC (#9141)\n\nAsset Hub Westend: nfts block provider is Relay Chain.\n\nnfts pallet uses the blocks to define `mint.start_block` and\n`mint.end_block` for collections. therefor the RC is a better choice\nhere since its more time accurate.\n\nthis does not requires a migration since there is no single collection\nwith the start and end block set.\n\nit would be nice to deploy this change asap to let clients test this\nbefore it hit production on Kusama and Polkadot.",
          "timestamp": "2025-07-14T20:25:23Z",
          "tree_id": "06fb447dd706c0508dbf8c601711dc3d56a98d56",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ec6e6843b847de92be649073317fa729898d0e1b"
        },
        "date": 1752527677938,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18160099,
            "range": "± 314486",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18445247,
            "range": "± 157066",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20051147,
            "range": "± 368654",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24709364,
            "range": "± 428345",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 54490629,
            "range": "± 554648",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 323527547,
            "range": "± 4250536",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2525371928,
            "range": "± 149198713",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15711599,
            "range": "± 270112",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15501135,
            "range": "± 249549",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16035713,
            "range": "± 208809",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20697031,
            "range": "± 1046751",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52739090,
            "range": "± 1383017",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 295886632,
            "range": "± 1934062",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2410378356,
            "range": "± 14556005",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "32168055+antkve@users.noreply.github.com",
            "name": "Anthony Kveder",
            "username": "antkve"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "999b4fa90ea0073a193662b1162b5f1f25f3beb6",
          "message": "Fixed westend asset hub ID (#9191)\n\nAddresses #9190 by adding cumulus_primitives_core::GetParachainInfo impl\nto the AHW runtime.\n\n---------\n\nCo-authored-by: Karol Kokoszka <karol@parity.io>",
          "timestamp": "2025-07-15T10:47:05Z",
          "tree_id": "db38b696266f561a16f37e601e33a516a9086616",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/999b4fa90ea0073a193662b1162b5f1f25f3beb6"
        },
        "date": 1752579471016,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18845365,
            "range": "± 113485",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19043122,
            "range": "± 243157",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20460518,
            "range": "± 178993",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25405170,
            "range": "± 218540",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57455524,
            "range": "± 520972",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 337698770,
            "range": "± 3096386",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2446055511,
            "range": "± 72278719",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16119568,
            "range": "± 123449",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16088233,
            "range": "± 259301",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16530232,
            "range": "± 213900",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21353335,
            "range": "± 197538",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53854136,
            "range": "± 416334",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 315585149,
            "range": "± 4502704",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2505493653,
            "range": "± 38652083",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "607a1b24b7902a657426ce2412e316a57b61894b",
          "message": "`apply_authorized_force_set_current_code` does not need to consume the whole block (#9202)\n\nThere is no need that this dispatchable consumes the full block as this\nis just writing the given value to storage. On a chain this is done,\nbecause the runtime changes and thus, a lot of stuff potentially\nchanges. In the case of the relay chain only on parachain changes and\nnot the relay chain runtime itself.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>\nCo-authored-by: Adrian Catangiu <adrian@parity.io>",
          "timestamp": "2025-07-15T11:47:13Z",
          "tree_id": "275460b2842ffe07aa0ea2d00e95f080163d9b74",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/607a1b24b7902a657426ce2412e316a57b61894b"
        },
        "date": 1752583029048,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18417214,
            "range": "± 91101",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18535540,
            "range": "± 232397",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20036172,
            "range": "± 170307",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25109485,
            "range": "± 175108",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57761448,
            "range": "± 669317",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 337915050,
            "range": "± 8111955",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2440391660,
            "range": "± 139237691",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15710774,
            "range": "± 210218",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15936480,
            "range": "± 184265",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16144714,
            "range": "± 135496",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21086263,
            "range": "± 271957",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 54275697,
            "range": "± 951612",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 317663577,
            "range": "± 4125748",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2474275560,
            "range": "± 32152833",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "14218860+iulianbarbu@users.noreply.github.com",
            "name": "Iulian Barbu",
            "username": "iulianbarbu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "495d5a24c8078a0da1eb5e0fe8742a09f1f1bd5c",
          "message": "fix(minimal): pre-seal a first block to trigger maintain (#9207)\n\n# Description\n\nAfter making fork aware txpool the default, instant seal of minimal node\nstopped working as expected because any transaction sent to it got stuck\nin mempool , since there are no active views to include the tx in.\n\nTo overcome this we can create a first view by pre-sealing a first empty\nblock, which triggers the `maintain` phase and view building logic. This\nis compatible with single-state tx pool too.\n\n## Integration\n\nN/A\n\n## Review Notes\n\nN/A\n\n---------\n\nSigned-off-by: Iulian Barbu <iulian.barbu@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-16T06:51:33Z",
          "tree_id": "7fac401304e67f49b7999d7b132e8d00bd241316",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/495d5a24c8078a0da1eb5e0fe8742a09f1f1bd5c"
        },
        "date": 1752651730746,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18406517,
            "range": "± 198967",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18925858,
            "range": "± 136824",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20145163,
            "range": "± 224396",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25235786,
            "range": "± 454387",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 60165956,
            "range": "± 397869",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 365631374,
            "range": "± 12485332",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2434839225,
            "range": "± 133744798",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15693109,
            "range": "± 179637",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15742462,
            "range": "± 151681",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16131285,
            "range": "± 214149",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21225723,
            "range": "± 453029",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53374985,
            "range": "± 1031405",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 319588594,
            "range": "± 4527240",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2534131419,
            "range": "± 50656198",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "22591718+RomarQ@users.noreply.github.com",
            "name": "Rodrigo Quelhas",
            "username": "RomarQ"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6ecd83761b4fcac8c2c02ee05e8ec7213bacbc30",
          "message": "feat(pallet-xcm): Add supported_version to pallet-xcm genesis config (#9225)\n\nRelates to: https://github.com/polkadot-fellows/runtimes/issues/544\nCloses https://github.com/paritytech/polkadot-sdk/issues/9075\n\nAdds a `supported_version` field to the pallet-xcm genesis config. Which\nallows specifying versioned locations at genesis.",
          "timestamp": "2025-07-17T08:34:46Z",
          "tree_id": "4c37cf3bac9a7da5b7949782b000a08141fc207b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/6ecd83761b4fcac8c2c02ee05e8ec7213bacbc30"
        },
        "date": 1752744606007,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19752940,
            "range": "± 490294",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19402643,
            "range": "± 409037",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20726842,
            "range": "± 225571",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25855990,
            "range": "± 327792",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 63991333,
            "range": "± 1143572",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 415657108,
            "range": "± 14325997",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2688144081,
            "range": "± 111747445",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16885108,
            "range": "± 131480",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16742024,
            "range": "± 302707",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17594306,
            "range": "± 180792",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23295295,
            "range": "± 435088",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 60486943,
            "range": "± 1586538",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 357406492,
            "range": "± 7317452",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2844902674,
            "range": "± 101168670",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "egor@parity.io",
            "name": "Egor_P",
            "username": "EgorPopelyaev"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "86d2a410ca95643e589f270808a6fa57de41369f",
          "message": "Don't use labels for branch names creation in the backport bot (#9243)",
          "timestamp": "2025-07-17T10:25:22Z",
          "tree_id": "438b192e6b4d0c685f1c5920b5081911a4e5283b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/86d2a410ca95643e589f270808a6fa57de41369f"
        },
        "date": 1752752206917,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 21952069,
            "range": "± 574030",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 22216936,
            "range": "± 418831",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 23241406,
            "range": "± 368774",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 30249595,
            "range": "± 625222",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 72936304,
            "range": "± 2385033",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 450202688,
            "range": "± 10449457",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 3140183478,
            "range": "± 246414508",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 18962131,
            "range": "± 561229",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 18538365,
            "range": "± 272701",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 19176941,
            "range": "± 657018",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 23915816,
            "range": "± 256903",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 60690782,
            "range": "± 1103177",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 384518557,
            "range": "± 4365598",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2759594767,
            "range": "± 28551724",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "diego2737@gmail.com",
            "name": "Diego",
            "username": "dimartiro"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6b17df5ae96f7970109ec3934c7d288f05baa23b",
          "message": "Remove unused deps (#9235)\n\n# Description\n\nRemove unused deps using `cargo udeps`\n\nPart of: #6906\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>",
          "timestamp": "2025-07-17T14:18:53Z",
          "tree_id": "20c94cc5015d6ff1c010a46fd69c90c70442033b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/6b17df5ae96f7970109ec3934c7d288f05baa23b"
        },
        "date": 1752766071571,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18277521,
            "range": "± 127643",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18566434,
            "range": "± 392673",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19884877,
            "range": "± 181999",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25133448,
            "range": "± 365223",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 59566613,
            "range": "± 1130625",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 343688321,
            "range": "± 10292929",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2340471700,
            "range": "± 59445190",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15979049,
            "range": "± 211118",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16034418,
            "range": "± 154428",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16624468,
            "range": "± 234855",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21225674,
            "range": "± 263394",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53963099,
            "range": "± 737718",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 308878035,
            "range": "± 4002139",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2468024198,
            "range": "± 41667703",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "32168055+antkve@users.noreply.github.com",
            "name": "Anthony Kveder",
            "username": "antkve"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0ae5c5bbd96a600aed81358339be2f16bade4a81",
          "message": "Fixed genesis config presets for bridge tests (#9185)\n\nCloses: https://github.com/paritytech/polkadot-sdk/issues/9116\n\n---------\n\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Karol Kokoszka <karol@parity.io>",
          "timestamp": "2025-07-17T16:04:44Z",
          "tree_id": "19d750bba6685e132f90c471118eb1342e943c9f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/0ae5c5bbd96a600aed81358339be2f16bade4a81"
        },
        "date": 1752773172192,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18755553,
            "range": "± 338385",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19096417,
            "range": "± 173110",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20290680,
            "range": "± 234096",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25149509,
            "range": "± 198635",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 56362984,
            "range": "± 680734",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 344173344,
            "range": "± 5224245",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2328125580,
            "range": "± 65874536",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15887457,
            "range": "± 164959",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16026680,
            "range": "± 241001",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16694414,
            "range": "± 210838",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21142386,
            "range": "± 137707",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53577469,
            "range": "± 395829",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 310050662,
            "range": "± 2056283",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2479910956,
            "range": "± 25860765",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b9fd81b1d511c1b82d44129ae6e3592620508d85",
          "message": "Remove `subwasmlib` (#9252)\n\nThis removes `subwasmlib` and replaces it with some custom code to fetch\nthe metadata. Main point of this change is the removal of some external\ndependency.\n\nCloses: https://github.com/paritytech/polkadot-sdk/issues/9203\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-18T11:26:43Z",
          "tree_id": "8158e2688a0180b1512385a845c592f5319d7f2d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/b9fd81b1d511c1b82d44129ae6e3592620508d85"
        },
        "date": 1752841440864,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18480493,
            "range": "± 179754",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18943677,
            "range": "± 210332",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20447677,
            "range": "± 211795",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26028256,
            "range": "± 237897",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 63013717,
            "range": "± 1240745",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 361010451,
            "range": "± 5994756",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2671163466,
            "range": "± 126662280",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16461161,
            "range": "± 249273",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16740176,
            "range": "± 167610",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17326115,
            "range": "± 242173",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22302293,
            "range": "± 326490",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 56328101,
            "range": "± 949641",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 323712901,
            "range": "± 13351578",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2556756106,
            "range": "± 27300272",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "363911+pepoviola@users.noreply.github.com",
            "name": "Javier Viola",
            "username": "pepoviola"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8b21416986049b26bf99e61bf1c43b7347ed564f",
          "message": "zombienet, make logs for para works (#9230)\n\nFix for correctly display the logs (urls) for paras.",
          "timestamp": "2025-07-18T15:25:49Z",
          "tree_id": "2bf2a30b19851859a8c1db0ac7e145031cf773ed",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/8b21416986049b26bf99e61bf1c43b7347ed564f"
        },
        "date": 1752855678825,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18244108,
            "range": "± 110609",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18696899,
            "range": "± 328730",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20003405,
            "range": "± 216564",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24737714,
            "range": "± 302607",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 55736509,
            "range": "± 611511",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 322547955,
            "range": "± 7279125",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2236477917,
            "range": "± 53959054",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15610459,
            "range": "± 98391",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15703390,
            "range": "± 196134",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15878009,
            "range": "± 223605",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 20567041,
            "range": "± 266171",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 52097694,
            "range": "± 458355",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 295473365,
            "range": "± 4412346",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2431005588,
            "range": "± 37962563",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "22591718+RomarQ@users.noreply.github.com",
            "name": "Rodrigo Quelhas",
            "username": "RomarQ"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e007db09171dd5248f5d8663a56be679b92fdbe7",
          "message": "feat(cumulus): Adds support for additional relay state keys in parachain validation data inherent (#9262)\n\nAdds the possibility for parachain clients to collect additional relay\nstate keys into the validation data inherent.\n\nWith this change, other consensus engines can collect additional relay\nkeys into the parachain inherent data:\n```rs\nlet paras_inherent_data = ParachainInherentDataProvider::create_at(\n  relay_parent,\n  relay_client,\n  validation_data,\n  para_id,\n  vec![\n     relay_well_known_keys::EPOCH_INDEX.to_vec() // <----- Example\n  ],\n)\n.await;\n```",
          "timestamp": "2025-07-18T21:26:30Z",
          "tree_id": "12ecd4a047e3074ed0ff7953b85e24443d9a7332",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e007db09171dd5248f5d8663a56be679b92fdbe7"
        },
        "date": 1752877157131,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 17930796,
            "range": "± 486073",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18325724,
            "range": "± 370717",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20750092,
            "range": "± 865699",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 24833983,
            "range": "± 827049",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 53675719,
            "range": "± 1638474",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 305380272,
            "range": "± 13675682",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2354366856,
            "range": "± 97112989",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 14918197,
            "range": "± 499625",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 15048471,
            "range": "± 526782",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 15644715,
            "range": "± 182718",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 19558464,
            "range": "± 293483",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 51129624,
            "range": "± 1124568",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 283051429,
            "range": "± 2564001",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2318024731,
            "range": "± 29843987",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "5588131+kianenigma@users.noreply.github.com",
            "name": "Kian Paimani",
            "username": "kianenigma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0d2106685025a0dad542b0980aab763ce0352755",
          "message": "Allow locking to bump consumer without limits (#9176)\n\nLocking is a system-level operation, and can only increment the consumer\nlimit at most once. Therefore, it should use\n`inc_consumer_without_limits`. This behavior is optional, and is only\nused in the call path of `LockableCurrency`. Reserves, Holds and Freezes\n(and other operations like transfer etc.) have the ability to return\n`DispatchResult` and don't need this bypass. This is demonstrated in the\nunit tests added.\n\nBeyond this, this PR: \n\n* uses the correct way to get the account data in tests\n* adds an `Unexpected` event instead of a silent `debug_assert!`. \n* Adds `try_state` checks for correctness of `account.frozen` invariant.\n\n---------\n\nCo-authored-by: Ankan <10196091+Ank4n@users.noreply.github.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-20T08:51:04Z",
          "tree_id": "f4835fef77bc77f12a7b25e5789a72edb66a8110",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/0d2106685025a0dad542b0980aab763ce0352755"
        },
        "date": 1753004701917,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 20467527,
            "range": "± 472524",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20960856,
            "range": "± 385360",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22456687,
            "range": "± 151137",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 28005316,
            "range": "± 188406",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 68561602,
            "range": "± 1706511",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 449885403,
            "range": "± 7040307",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 3084200530,
            "range": "± 230774857",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16775642,
            "range": "± 230451",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 17170126,
            "range": "± 301350",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17620663,
            "range": "± 260047",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22862274,
            "range": "± 256520",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 58876553,
            "range": "± 1480270",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 370487031,
            "range": "± 4647873",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2769615165,
            "range": "± 25419373",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "enntheprogrammer@gmail.com",
            "name": "sistemd",
            "username": "sistemd"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b17f06bf06dbee585bbd8dc6d070c5edf56916e1",
          "message": "babe: keep stateless verification in `Verifier`, move everything else to the import queue (#9147)\n\nWe agreed to split https://github.com/paritytech/polkadot-sdk/pull/8446\ninto two PRs: one for BABE (this one) and one for AURA. This is the\neasier one.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-20T16:43:16Z",
          "tree_id": "c968ceb147b12e27e9ff5063f8c4303d14b3aeb9",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/b17f06bf06dbee585bbd8dc6d070c5edf56916e1"
        },
        "date": 1753033312932,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19270615,
            "range": "± 130775",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19653716,
            "range": "± 178274",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20958470,
            "range": "± 166160",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26407749,
            "range": "± 216430",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 60713222,
            "range": "± 919279",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 365731919,
            "range": "± 4958019",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2640782790,
            "range": "± 41709467",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16624354,
            "range": "± 191299",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16635167,
            "range": "± 154278",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17288632,
            "range": "± 170097",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21922518,
            "range": "± 210312",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 55515411,
            "range": "± 597389",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 329274214,
            "range": "± 2973213",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2665342093,
            "range": "± 21426841",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "40807189+AlexandruCihodaru@users.noreply.github.com",
            "name": "Alexandru Cihodaru",
            "username": "AlexandruCihodaru"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "13950eeb99e2ab13adfde8a89fe53f3c6cd74296",
          "message": "Fix CandidateDescriptor debug logs (#9255)\n\nRegardless of the descriptor version, the CandidateDescriptor was logged\nas a CandidateDescriptorV2 instance.\n\nTo address this issue we now derive RuntimeDebug only when std is not\nenabled so we can have that empty implementation that does not bloat the\nruntime WASM. When std is enabled we implement core::fmt::Debug by hand\nand print the\nstructure differently depending on the CandidateDescriptor version.\n\nFixes: #8457\n\n---------\n\nSigned-off-by: Alexandru Cihodaru <alexandru.cihodaru@parity.io>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-07-21T08:45:17Z",
          "tree_id": "bfb383ff2879b5dba2dbdbfc1415869215289025",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/13950eeb99e2ab13adfde8a89fe53f3c6cd74296"
        },
        "date": 1753091011140,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19833772,
            "range": "± 138820",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 20209823,
            "range": "± 378584",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 22138428,
            "range": "± 587772",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 27256278,
            "range": "± 241632",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 66613296,
            "range": "± 1342314",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 391600734,
            "range": "± 6266638",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2991076285,
            "range": "± 191577064",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16843800,
            "range": "± 199390",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16928072,
            "range": "± 252378",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17551590,
            "range": "± 214793",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22582523,
            "range": "± 331007",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 58167289,
            "range": "± 1340632",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 359312891,
            "range": "± 4020508",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2665360238,
            "range": "± 36933140",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c7f9908c2eeb1be70e57819537058beb53664446",
          "message": "gossip-support: make low connectivity message an error (#9264)\n\nAll is not well when a validator is not properly connected, e.g: of\nthings that might happen:\n- Finality might be slightly delay because validator will be no-show\nbecause they can't retrieve PoVs to validate approval work:\nhttps://github.com/paritytech/polkadot-sdk/issues/8915.\n- When they author blocks they won't back things because gossiping of\nbacking statements happen using the grid topology:, e.g blocks authored\nby validators with a low number of peers:\n\nhttps://polkadot.js.org/apps/?rpc=wss%3A%2F%2Frpc-polkadot.helixstreet.io#/explorer/query/26931262\n\nhttps://polkadot.js.org/apps/?rpc=wss%3A%2F%2Frpc-polkadot.helixstreet.io#/explorer/query/26931260\n\nhttps://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fpolkadot.api.onfinality.io%2Fpublic-ws#/explorer/query/26931334\n\nhttps://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fpolkadot-public-rpc.blockops.network%2Fws#/explorer/query/26931314\n\nhttps://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fpolkadot-public-rpc.blockops.network%2Fws#/explorer/query/26931292\n\nhttps://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fpolkadot-public-rpc.blockops.network%2Fws#/explorer/query/26931447\n\n\nThe problem is seen in `polkadot_parachain_peer_count` metrics, but it\nseems people are not monitoring that well enough, so let's make it more\nvisible nodes with low connectivity are not working in good conditions.\n\nI also reduced the threshold to 85%, so that we don't trigger this error\nto eagerly.\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-21T09:57:39Z",
          "tree_id": "472c2b031140ce823b7947201ff39347eaf6dbee",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c7f9908c2eeb1be70e57819537058beb53664446"
        },
        "date": 1753095108959,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 19247627,
            "range": "± 197518",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19477195,
            "range": "± 378895",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 21057814,
            "range": "± 171323",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26476757,
            "range": "± 406217",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 62905203,
            "range": "± 1395563",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 378930772,
            "range": "± 5472810",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2651703251,
            "range": "± 43357583",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16585755,
            "range": "± 278924",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16703242,
            "range": "± 269522",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16994193,
            "range": "± 148271",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22049150,
            "range": "± 246831",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 56528360,
            "range": "± 1252772",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 339273202,
            "range": "± 7226396",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2619855747,
            "range": "± 18938462",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "dmitry@markin.tech",
            "name": "Dmitry Markin",
            "username": "dmitry-markin"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b4f1cc63c56633baae6ff8a4a9c656ed2206f63a",
          "message": "Allow setting idle connection timeout value in custom node implementations (#9251)\n\nAllow setting idle connection timeout value. This can be helpful in\ncustom networks to allow maintaining long-lived connections.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-21T13:06:27Z",
          "tree_id": "8081f35c326dde155f7a80bcb6e9f793e5338120",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/b4f1cc63c56633baae6ff8a4a9c656ed2206f63a"
        },
        "date": 1753106320076,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18298651,
            "range": "± 208289",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 18551016,
            "range": "± 150187",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 19966308,
            "range": "± 237485",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25013207,
            "range": "± 272662",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 57038227,
            "range": "± 1073913",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 335860814,
            "range": "± 14000315",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2559381727,
            "range": "± 101798978",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 15926566,
            "range": "± 265486",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16078129,
            "range": "± 197028",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16492045,
            "range": "± 193613",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21221556,
            "range": "± 165262",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53467428,
            "range": "± 1562327",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 311269435,
            "range": "± 5747540",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2469045491,
            "range": "± 15674557",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "7a747ffbe6dcaa83e5a1e76d2b752a5b4669e7c3",
          "message": "[revive] eth-decimals (#9101)\n\nOn Ethereum, 1 ETH is represented as 10^18 wei (wei being the smallest\nunit).\nOn Polkadot 1 DOT is defined as 1010 plancks. It means that any value\nsmaller than 10^8 wei can not be expressed with the native balance. Any\ncontract that attempts to use such a value currently reverts with a\nDecimalPrecisionLoss error.\n\nIn theory, RPC can define a decimal representation different from\nEthereum mainnet (10^18). In practice tools (frontend libraries,\nwallets, and compilers) ignore it and expect 18 decimals.\n\nThe current behaviour breaks eth compatibility and needs to be updated.\nSee issue #109 for more details.\n\n\nFix  https://github.com/paritytech/contract-issues/issues/109\n[weights\ncompare](https://weights.tasty.limo/compare?unit=weight&ignore_errors=true&threshold=10&method=asymptotic&repo=polkadot-sdk&old=master&new=pg/eth-decimals&path_pattern=substrate/frame/**/src/weights.rs,polkadot/runtime/*/src/weights/**/*.rs,polkadot/bridges/modules/*/src/weights.rs,cumulus/**/weights/*.rs,cumulus/**/weights/xcm/*.rs,cumulus/**/src/weights.rs)\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>\nCo-authored-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>",
          "timestamp": "2025-07-21T13:17:27Z",
          "tree_id": "3b1a5a0eb0c4e7ce87204b0c2f9c9a6cdbbbf648",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/7a747ffbe6dcaa83e5a1e76d2b752a5b4669e7c3"
        },
        "date": 1753107549024,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18910515,
            "range": "± 196918",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19081850,
            "range": "± 235536",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20399204,
            "range": "± 312074",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25442590,
            "range": "± 340437",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 58389568,
            "range": "± 1064646",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 345130562,
            "range": "± 6717053",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2649460953,
            "range": "± 96611306",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16094918,
            "range": "± 152609",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16166555,
            "range": "± 163017",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16596954,
            "range": "± 235249",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21454989,
            "range": "± 183450",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 53627491,
            "range": "± 811844",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 306089464,
            "range": "± 3540142",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2527415010,
            "range": "± 33432829",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "40807189+AlexandruCihodaru@users.noreply.github.com",
            "name": "Alexandru Cihodaru",
            "username": "AlexandruCihodaru"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "161e7f4d8b9b6908694d0ccc9bd0ef4a1674e860",
          "message": "Rewrite old disputes test with zombienet-sdk (#9257)\n\nFixes: #9256\n\n---------\n\nSigned-off-by: Alexandru Cihodaru <alexandru.cihodaru@parity.io>",
          "timestamp": "2025-07-21T13:46:01Z",
          "tree_id": "24c826bb9c1c557cd72bf46b1b000eea42cc3c0f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/161e7f4d8b9b6908694d0ccc9bd0ef4a1674e860"
        },
        "date": 1753108640461,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18987628,
            "range": "± 143004",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19136518,
            "range": "± 213791",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20481477,
            "range": "± 198372",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 25924865,
            "range": "± 204810",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 61380730,
            "range": "± 1439239",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 393370923,
            "range": "± 4081040",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2629788956,
            "range": "± 124408126",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16350234,
            "range": "± 402117",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16475677,
            "range": "± 120235",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17284796,
            "range": "± 174392",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22150319,
            "range": "± 244542",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 56485323,
            "range": "± 649518",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 338434536,
            "range": "± 5810750",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2605808698,
            "range": "± 19982263",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "117115317+lrubasze@users.noreply.github.com",
            "name": "Lukasz Rubaszewski",
            "username": "lrubasze"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b4b019e4db0ef47b0952638388eba4958e1c4004",
          "message": "Zombienet CI improvements (#9172)\n\n## 🔄 Zombienet CI Refactor: Matrix-Based Workflows\n\nThis PR refactors the Zombienet CI workflows to use a **matrix-based\napproach**, resulting in:\n\n- ✅ **Easier test maintenance** – easily add or remove tests without\nduplicating workflow logic.\n- 🩹 **Improved flaky test handling** – flaky tests are excluded by\ndefault but can be explicitly included by pattern.\n- 🔍 **Pattern-based test selection** – run only tests matching a name\npattern, ideal for debugging.\n\n---\n\n## 🗂️ Structure Changes\n\n- **Test definitions** are now stored in `.github/zombienet-tests/`.\n- Each workflow (`Cumulus`, `Substrate`, `Polkadot`, `Parachain\nTemplate`) has its own YAML file with test configurations.\n\n---\n\n## 🧰 Added Scripts\n\n### `.github/scripts/parse-zombienet-tests.py`\n- Parses test definitions and generates a GitHub Actions matrix.\n- Filters out flaky tests by default.\n- If a `test_pattern` is provided, matching tests are **included even if\nflaky**.\n\n### `.github/scripts/dispatch-zombienet-workflow.sh`\n- Triggers a Zombienet workflow multiple times, optionally filtered by\ntest name pattern.\n- Stores results in a **CSV file** for analysis.\n- Useful for debugging flaky tests or stress-testing specific workflows.\n- Intended to be run from the local machine.\n\n---------\n\nCo-authored-by: Javier Viola <363911+pepoviola@users.noreply.github.com>\nCo-authored-by: Alexander Samusev <41779041+alvicsam@users.noreply.github.com>\nCo-authored-by: Javier Viola <javier@parity.io>",
          "timestamp": "2025-07-21T16:28:18Z",
          "tree_id": "b6ee4c0f3e3cb8b9bd8a8cadc045014f1ac0fd77",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/b4b019e4db0ef47b0952638388eba4958e1c4004"
        },
        "date": 1753118554938,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18882717,
            "range": "± 232674",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19176241,
            "range": "± 283122",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20507623,
            "range": "± 175811",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26396045,
            "range": "± 764693",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 65291697,
            "range": "± 1107699",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 376714565,
            "range": "± 6747632",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2512384459,
            "range": "± 19704289",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16786308,
            "range": "± 243657",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16806991,
            "range": "± 295318",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 17487612,
            "range": "± 164373",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 22645233,
            "range": "± 232867",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 58308305,
            "range": "± 1157244",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 339568556,
            "range": "± 7435829",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2602138822,
            "range": "± 29345876",
            "unit": "ns/iter"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "60601340+lexnv@users.noreply.github.com",
            "name": "Alexandru Vasile",
            "username": "lexnv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "2f8d2a2b875a3f08aae5dd82c09ffe65932d2e62",
          "message": "consensus/grandpa: Fix high number of peer disconnects with invalid justification (#9015)\n\nA grandpa race-casse has been identified in the versi-net stack around\nauthority set changes, which leads to the following:\n\n- T0 / Node A: Completes round (15)\n- T1 / Node A: Applies new authority set change and increments the SetID\n(from 0 to 1)\n- T2 / Node B: Sends Precommit for round (15) with SetID (0) -- previous\nset ID\n- T3 / Node B: Applies new authority set change and increments the SetID\n(1)\n\nIn this scenario, Node B is not aware at the moment of sending\njustifications that the Set ID has changed.\nThe downstream effect is that Node A will not be able to verify the\nsignature of justifications, since a different SetID is taken into\naccount. This will cascade through the sync engine, where the Node B is\nwrongfully banned and disconnected.\n\nThis PR aims to fix the edge-case by making the grandpa resilient to\nverifying prior setIDs for signatures.\nWhen the signature of the grandpa justification fails to decode, the\nprior SetID is also verified. If the prior SetID produces a valid\nsignature, then the outdated justification error is propagated through\nthe code (ie `SignatureResult::OutdatedSet`).\n\nThe sync engine will handle the outdated justifications as invalid, but\nwithout banning the peer. This leads to increased stability of the\nnetwork during authority changes, which caused frequent disconnects to\nversi-net in the past.\n\n### Review Notes\n- Main changes that verify prior SetId on failures are placed in\n[check_message_signature_with_buffer](https://github.com/paritytech/polkadot-sdk/pull/9015/files#diff-359d7a46ea285177e5d86979f62f0f04baabf65d595c61bfe44b6fc01af70d89R458-R501)\n- Sync engine no longer disconnects outdated justifications in\n[process_service_command](https://github.com/paritytech/polkadot-sdk/pull/9015/files#diff-9ab3391aa82ee2b2868ece610100f84502edcf40638dba9ed6953b6e572dfba5R678-R703)\n\n### Testing Done\n- Deployed the PR to versi-net with 40 validators\n- Prior we have noticed 10/40 validators disconnecting every 15-20\nminutes, leading to instability\n- Over past 24h the issue has been mitigated:\nhttps://grafana.teleport.parity.io/goto/FPNWlmsHR?orgId=1\n- Note: bootnodes 0 and 1 are currently running outdated versions that\ndo not incorporate this SetID verification improvement\n\nCloses: https://github.com/paritytech/polkadot-sdk/issues/8872\nCloses: https://github.com/paritytech/polkadot-sdk/issues/1147\n\n---------\n\nSigned-off-by: Alexandru Vasile <alexandru.vasile@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Dmitry Markin <dmitry@markin.tech>",
          "timestamp": "2025-07-22T12:08:36Z",
          "tree_id": "e83cda247a4ac590cf45c24390e0736eea169d4c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/2f8d2a2b875a3f08aae5dd82c09ffe65932d2e62"
        },
        "date": 1753189809015,
        "tool": "cargo",
        "benches": [
          {
            "name": "request_response_protocol/libp2p/serially/64B",
            "value": 18690305,
            "range": "± 93532",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/512B",
            "value": 19434776,
            "range": "± 600911",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/4KB",
            "value": 20670892,
            "range": "± 362342",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/64KB",
            "value": 26959527,
            "range": "± 1045067",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/256KB",
            "value": 62151244,
            "range": "± 1144184",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/2MB",
            "value": 383921636,
            "range": "± 18611628",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/libp2p/serially/16MB",
            "value": 2731895286,
            "range": "± 87941033",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64B",
            "value": 16513709,
            "range": "± 237456",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/512B",
            "value": 16242171,
            "range": "± 184846",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/4KB",
            "value": 16758067,
            "range": "± 226230",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/64KB",
            "value": 21929877,
            "range": "± 179252",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/256KB",
            "value": 55474463,
            "range": "± 1074129",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/2MB",
            "value": 330060649,
            "range": "± 4130099",
            "unit": "ns/iter"
          },
          {
            "name": "request_response_protocol/litep2p/serially/16MB",
            "value": 2567727365,
            "range": "± 19001834",
            "unit": "ns/iter"
          }
        ]
      }
    ]
  }
}