window.BENCHMARK_DATA = {
  "lastUpdate": 1760120015291,
  "repoUrl": "https://github.com/paritytech/polkadot-sdk",
  "entries": {
    "availability-distribution-regression-bench": [
      {
        "commit": {
          "author": {
            "email": "60601340+lexnv@users.noreply.github.com",
            "name": "Alexandru Vasile",
            "username": "lexnv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "899ac75049d3e1b35e5b6faf2c6f7dd0850ec423",
          "message": "tx/broadcast: Use client info for fetching the best block (#8162)\n\nThis PR modifies the tx broadcast logic. Previously, we relied on the\nimport notification stream to fetch the latest available block. In this\nrevision, we use the available information of the `client.info()` to\nprefix the import notification stream.\n\nThe change is needed because chains could be started with `InstantSeal`,\nwhich would not produce blocks until they encounter transactions.\n\nCloses: https://github.com/paritytech/polkadot-sdk/issues/8157\n\ncc @paritytech/subxt-team\n\n---------\n\nSigned-off-by: Alexandru Vasile <alexandru.vasile@parity.io>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-04-10T16:21:48Z",
          "tree_id": "5a1834823764ff5b0071d28974fe80514c5ff38d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/899ac75049d3e1b35e5b6faf2c6f7dd0850ec423"
        },
        "date": 1744305684117,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02217002402,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008646627046666746,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012643511593333337,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15579012180000007,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "46a656f82c5494a37567f0f4308d3665c6e480df",
          "message": "[pallet-revive] fix bn128 benchmark (#8212)\n\nUpdate bn128 benchmarks\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-04-10T17:35:40Z",
          "tree_id": "0246b5d0e4afcb03f057d2462d9b11e967269dc8",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/46a656f82c5494a37567f0f4308d3665c6e480df"
        },
        "date": 1744310276129,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.1560114248,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012712448826666669,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022143181593333335,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00838325188666675,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "363911+pepoviola@users.noreply.github.com",
            "name": "Javier Viola",
            "username": "pepoviola"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6eac16cf5011fdfebb12def6882b0f8d5c7d87bb",
          "message": "Migrate pipeline to gha (#8068)\n\nMigrate pipeline from gitlab to gha.\n\n---------\n\nCo-authored-by: Alexander Samusev <41779041+alvicsam@users.noreply.github.com>",
          "timestamp": "2025-04-10T18:51:15Z",
          "tree_id": "db39bde376a417b4d7edd7de6a21a05c82ff508a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/6eac16cf5011fdfebb12def6882b0f8d5c7d87bb"
        },
        "date": 1744314646320,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008567937740000078,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022240373953333333,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15638822861333332,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012784141880000002,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "evgeny@parity.io",
            "name": "Evgeny Snitko",
            "username": "AndWeHaveAPlan"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "38e93b570f156068786150700e741b85af82cedb",
          "message": "Allow /cmd run with --clean flag (#8220)\n\n/cmd with the `--clean` flag should clean up the old comments but still\nrun the job",
          "timestamp": "2025-04-11T12:43:12Z",
          "tree_id": "d8fe52900ed5d5fcbc6b658dc3d7fafe114dd090",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/38e93b570f156068786150700e741b85af82cedb"
        },
        "date": 1744378887847,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008869126286666753,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02227593122,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15648719133333328,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013133017293333335,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "14218860+iulianbarbu@users.noreply.github.com",
            "name": "Iulian Barbu",
            "username": "iulianbarbu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fc0fcbaecab7dc7e0c3a0ff380c8a81af8b7c48b",
          "message": "Use `TryFrom` impls instead of `as` operator in `polkadot-runtime-parachains` (#8118)\n\n# Description\n\n- changed conversions based on `as` operator to `usize::try_from` in\n`polkadot-runtime-parachains`\n\n## Integration\n\nN/A\n\n## Review Notes\n\nN/A\n\n---------\n\nSigned-off-by: Iulian Barbu <iulian.barbu@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <info@kchr.de>\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: teor <teor@riseup.net>\nCo-authored-by: Guillaume Thiolliere <guillaume.thiolliere@parity.io>",
          "timestamp": "2025-04-11T17:06:48Z",
          "tree_id": "8573c97f57de68a1dc3ba52529f5d48b6b78bcc1",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/fc0fcbaecab7dc7e0c3a0ff380c8a81af8b7c48b"
        },
        "date": 1744394900318,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.00863308322000008,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15674636807333342,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013125349693333338,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022345644173333335,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ludovic.domingues96@gmail.com",
            "name": "Ludovic_Domingues",
            "username": "Krayt78"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f3be5315d2bb93b7a91e8aba0bad0a79add8ae82",
          "message": "Added locked flag to readmes that were missing it (#8187)\n\n# Description\nFrom issue #8028 \n\nAdd --locked flag to cargo install occurrences in README files across\nthe repository. This change helps prevent dependency resolution issues\nthat can occur when using cargo install without version locking,\nensuring more consistent and predictable builds for users.\n\nThe --locked flag ensures cargo uses the exact dependency versions from\nCargo.lock rather than recalculating dependencies, which can sometimes\nresult in breaking changes if a minor update occurs in a dependency.\nThis PR adds the flag to multiple READMEs that become public-facing for\ncrates published on crates.io.\n\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-04-11T18:14:28Z",
          "tree_id": "4b598320ad0bfe0f2f59826cec9c0b38d90a298a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f3be5315d2bb93b7a91e8aba0bad0a79add8ae82"
        },
        "date": 1744400158015,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15857794576,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022338857013333338,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01289832941333333,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00860585492666675,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "110032223+kR1s0147@users.noreply.github.com",
            "name": "kR1s_0147",
            "username": "kR1s0147"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6ce6110199a429ce449841fe7222a5ba96eafb5c",
          "message": "Migrate pallet-nft-fractionalization to umbrella crate (#7970)\n\nPart of #6504\n\n---------\n\nCo-authored-by: Giuseppe Re <giuseppe.re@parity.io>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-04-11T21:45:04Z",
          "tree_id": "2c9836947ae88c13657aef3eaa7ad3ec2a9cbdd1",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/6ce6110199a429ce449841fe7222a5ba96eafb5c"
        },
        "date": 1744411357969,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008866057073333404,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012915356526666666,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15829984754666673,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02237166488666666,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "5588131+kianenigma@users.noreply.github.com",
            "name": "Kian Paimani",
            "username": "kianenigma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c36d3066c082b769f20c31dfdbae77d8fd027a0d",
          "message": "silent nomination-pools try-state check (#8246)\n\nAdding this for now to unblock the CI. I will investigate if it is a\nreal issue or not after or during\nhttps://github.com/paritytech/polkadot-sdk/pull/8127",
          "timestamp": "2025-04-15T09:50:35Z",
          "tree_id": "a57b04ac995bea9a479c251c299b8691f2bb8059",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c36d3066c082b769f20c31dfdbae77d8fd027a0d"
        },
        "date": 1744714201680,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012803984499999997,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15722625543333332,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008514049600000075,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022232654206666664,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "jesse.chejieh@gmail.com",
            "name": "Doordashcon",
            "username": "Doordashcon"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4bbcf4211bceaa10feb6ee69bb4ae8137bb0e51c",
          "message": "Clamp benchmark ranks to respect MaxRank (#7720)\n\nresolves #7517 \n\n### Issues\n\n#### 1. Compile-Time vs Runtime Rank Mismatch\n- **`promote_fast` Benchmark** uses mock runtime's `MaxRank` during\nbenchmark generation while allowing runtime overrides. Creating\npotential parameter mismatch between benchmark metadata(i.e. generated\n`r` values) and runtime configuration(i.e. `T::MaxRank`).\n\n\n#### 2. Static Rank Assumptions\n- **`bump_demote` Benchmark** initialized members at rank 2, making it\nincompatible with `MaxRank=1` configurations\n- **`promote` Benchmark** contained hardcoded rank values (1 → 2) which\nfails for `MaxRank=1`\n\n\n## Changes\n\n#### Dynamic Rank Clamping\n```rust\n// promote_fast\n// Get target rank for promotion.\nlet max_rank = T::MaxRank::get();\nlet target_rank = (r as u16).min(max_rank);\n\n// promote\n// Set `to_rank` dynamically based on `max_rank`.\nlet to_rank = (current_rank + 1).min(max_rank);\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>",
          "timestamp": "2025-04-15T12:13:36Z",
          "tree_id": "ea843acd3defd1ef554e96887b1d56931089e78d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4bbcf4211bceaa10feb6ee69bb4ae8137bb0e51c"
        },
        "date": 1744722695451,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02243850726666666,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00849333353333343,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012715217066666668,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15799253148666673,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "44604217+tmpolaczyk@users.noreply.github.com",
            "name": "tmpolaczyk",
            "username": "tmpolaczyk"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4f95d677ec9e4c8d2b185e90e26e00b09a04f891",
          "message": "Make min_peers_to_start_warp_sync configurable (#8102)\n\n# Description\n\nClose #496\n\nMake min_peers_to_start_warp_sync configurable.\n\nIn our project we want to use this to allow warp syncing a parachain\nusing only 1 trusted bootnode. Currently we are overriding the\n`MIN_PEERS_TO_START_WARP_SYNC` variable directly, but that also changes\nthe value when warp syncing the relaychain, and that doesn't look safe.\n\n## Integration\n\nThis PR keeps the old behavior by default, but parachain configs that\nuse `prepare_node_config` function from cumulus will use 1 peer.\n\n## Review Notes\n\nIntentionally not adding this to the CLI because I don't need it to be\nconfigurable by users, only by project developers.\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-04-15T14:23:32Z",
          "tree_id": "4b7a029af79664e97c98f67e7bebea1ecc973a4c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4f95d677ec9e4c8d2b185e90e26e00b09a04f891"
        },
        "date": 1744730630501,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15682482193333336,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012656798026666664,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00855563971333341,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022211858066666673,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48632512+s0me0ne-unkn0wn@users.noreply.github.com",
            "name": "s0me0ne-unkn0wn",
            "username": "s0me0ne-unkn0wn"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "def2273e17ce065f0874ddf66630b8cb1291c707",
          "message": "YAP NG FTW! (#7220)\n\nYet Another Parachain ported onto the latest master branch.\n\n---------\n\nSigned-off-by: georgepisaltu <george.pisaltu@parity.io>\nSigned-off-by: Alexandru Vasile <alexandru.vasile@parity.io>\nCo-authored-by: command-bot <>\nCo-authored-by: georgepisaltu <george.pisaltu@parity.io>\nCo-authored-by: Alexandru Vasile <alexandru.vasile@parity.io>\nCo-authored-by: ordian <noreply@reusable.software>\nCo-authored-by: Michal Kucharczyk <1728078+michalkucharczyk@users.noreply.github.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: ordian <write@reusable.software>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-04-16T08:56:59Z",
          "tree_id": "4d6aabe44c25a2b6d9dd4493e5e1816145a1313f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/def2273e17ce065f0874ddf66630b8cb1291c707"
        },
        "date": 1744798309296,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022484719099999998,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008662219666666755,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01288552647333333,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1577648521666668,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e5bb4f9fc8b1528cd15efb0c20497bdefa194e0d",
          "message": "Frame: Authorize pallet::error int discriminant (#8248)\n\nAuthorize int discriminants for pallet::error\n\nWhy?\nThe raw hex value shows up in tools like polkadotjs, being able to\nquiclkly scan the src code to find out what error was triggered can be\nvery useful, especially when the enum is large like in pallet-revive\n\ne.g:\n\n```rust\n\n#[pallet::error]\n#[repr(u8)]\npub enum Error<T> {\n    /// Invalid schedule supplied, e.g. with zero weight of a basic operation.\n    InvalidSchedule = 0x01,\n    /// Invalid combination of flags supplied to `seal_call` or `seal_delegate_call`.\n    InvalidCallFlags = 0x02,\n    /// The executed contract exhausted its gas limit.\n    OutOfGas = 0x03,\n    /// ...\n}\n```\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-04-16T09:59:13Z",
          "tree_id": "65ceee141dd9869e97aa3e405805b2ddb3d9c462",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e5bb4f9fc8b1528cd15efb0c20497bdefa194e0d"
        },
        "date": 1744801804825,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012891866893333334,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008662337946666753,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1574636817266667,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02236983466666667,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alistair.singh7@gmail.com",
            "name": "Alistair Singh",
            "username": "alistair-singh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "13cb4a31f77a14ea1bec880a7369a59432afaec9",
          "message": "Update transfer token gas and fee (#7947)\n\nUpdate the gas allowance of the `TransferToken` related commands. This\nalso means that the default fee needs to be increased as well as a\nmigration.\n\n# Migration\nIn production mainnet to ensure no downtime, instead of increasing the\nfee to account for the new gas fee, we will instead decrease the gas\ncost so that it will not require a fee increase.\n\nThe pre remote fee in Wei:\n```python\n(185_000 + 100_000) * 10_000_000_000 + 250_000_000_000_000\n> 3100000000000000\n```\nWe are increasing the gas to 200k. \n\nThe post remote fee Wei:\n```python\n(185_000 + 200_000) * 10_000_000_000 + 250_000_000_000_000\n> 4100000000000000\n```\n\nThis effectively increases the price for the end users transaction by\n32%. Taking the inverse of 32 percent means we can decrease the gas cost\nby ~74%. The migration script plays it safe and decreases it to 70%. The\npost migration `try-runtime` check asserts that the new fee calculated\nwith the increased gas can is less than or equal to the old fee pre the\ngas change.\n\n# TODO\n- [x] Add migration to half fee on bridge on start-up\n- [x] Test in prod with chopsticks\n\n# Testing\nTested with chopsticks on westend.\n\n```console\n$ npx @acala-network/chopsticks try-runtime \\\n  --endpoint wss://westend-bridge-hub-rpc-tn.dwellir.com \\\n  --runtime bridge_hub_westend_runtime.compact.wasm \\\n  --checks PreAndPost \\\n  --db westend-cache.sqllite \\\n  --disable-spec-check\n```\n\nOutput\n```console\n$ cat output.log | grep ethereum_system\n  ethereum_system::migration   INFO: Agents and channels are initialized. Initialization will not run.\n  ethereum_system::migration   INFO: Ethereum system already initialized. Skipping.\n  ethereum_system::migration   INFO: Pre fee per gas migration: pricing parameters = PricingParameters { exchange_rate: , rewards: Rewards { local: 1000000000000, remote: 1000000000000000 }, fee_per_gas: 20000000000, multiplier:  }, remote_fee_v1 = 8700000000000000, remote_fee_v2 = 5000000000000000\n  ethereum_system::migration   INFO: Fee per gas migrated from 20000000000 to 14000000000.\n  ethereum_system::migration   INFO: Post fee per gas migration: pricing parameters = PricingParameters { exchange_rate: , rewards: Rewards { local: 1000000000000, remote: 1000000000000000 }, fee_per_gas: 14000000000, multiplier:  } remote_fee_v1 = 6390000000000000 remote_fee_v2 = 3800000000000000\n```\n\n---------\n\nCo-authored-by: Adrian Catangiu <adrian@parity.io>\nCo-authored-by: ron <yrong1997@gmail.com>",
          "timestamp": "2025-04-16T12:07:26Z",
          "tree_id": "b0b096bc2699bcc20742122e3fa2ad58aa196288",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/13cb4a31f77a14ea1bec880a7369a59432afaec9"
        },
        "date": 1744809240120,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15824460582000005,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008658451913333427,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01297296976666666,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02227990710666667,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "egor@parity.io",
            "name": "Egor_P",
            "username": "EgorPopelyaev"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "79b2faa6e474490ad79756261f0129ab01201a2a",
          "message": "[Release|CI/CD] Fix sha256 checksum for mac bins (#8241)\n\nThis PR fixes an issue with the sha256 checksums generated for the macOS\nbins, as after the bins renaming it needs to be re-generated.",
          "timestamp": "2025-04-16T13:56:33Z",
          "tree_id": "4e9af68b78d20c07d51d53e9cc4af47b390fda57",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/79b2faa6e474490ad79756261f0129ab01201a2a"
        },
        "date": 1744815361161,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022387675180000004,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01304218935333333,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15750834711333336,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008775756673333406,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "88332432+dastansam@users.noreply.github.com",
            "name": "Dastan",
            "username": "dastansam"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "44ae6a8bebd23a8ffac02d71c6e74ee889c3ab00",
          "message": "[FRAME] Simplify pallet config definition:  remove `RuntimeEvent` associated type (#7229)\n\npart of https://github.com/paritytech/polkadot-sdk/issues/3743\n\n## Motivation\n\nThis PR removes the need for defining `RuntimeEvent` in the `Config`\ntrait of a pallet. It uses associated type bound feature under the hood\nto make sure that `Event` of the pallet is convertible to the aggregated\nruntime event type `frame_system::RuntimeEvent`.\n\nThis is an initial PR for `RuntimeEvent` type and will be followed with\nother types, e.g `RuntimeCall`. As a demo, example pallets' config\ndefinition is updated to use this feature.\n\nWith this change, we can do this (and have support for events):\n\n```rs\n#[pallet::config]\npub trait Config: frame_system::Config {\n}\n```\n\ninstead of this:\n\n```rs\n#[pallet::config]\npub trait Config: frame_system::Config {\n        /// Overarching event type.\n       type RuntimeEvent: From<Event<Self>> + IsType<<Self as frame_system::Config>::RuntimeEvent>;\n}\n```\n\nThe latter will emit deprecation warnings and is redundant.\n\npolkadot address: 16FqwPZ8GRC5U5D4Fu7W33nA55ZXzXGWHwmbnE1eT6pxuqcT\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-04-16T20:15:50Z",
          "tree_id": "b373598df3adfaa0641cc6e29aa05caa527fdebd",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/44ae6a8bebd23a8ffac02d71c6e74ee889c3ab00"
        },
        "date": 1744839574482,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.1573190184933334,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02234613792666667,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012888842320000005,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00853679154666675,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "giuseppe.re@parity.io",
            "name": "Giuseppe Re",
            "username": "re-gius"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "431e06839addf318d1c251ec50097c748d423073",
          "message": "Stabilize pallet view functions (#7960)\n\nPallet view functions are no longer marked as experimental, and their\nuse is suggested starting from this PR.\n\nYour feedback is more than welcome.\n\nSee\n[docs](https://paritytech.github.io/polkadot-sdk/master/frame_support/pallet_macros/attr.view_functions_experimental.html)\nfor a quick introduction. For more context, you can look at:\n\n- #4722 \n- #7412 \n- #7830 : discussion on possible changes to pallet view functions\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-04-17T09:31:42Z",
          "tree_id": "95b63e0184d2a4c1e57621e966206a8b09d0eab7",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/431e06839addf318d1c251ec50097c748d423073"
        },
        "date": 1744886978700,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012861320479999999,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008627571340000082,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15814471939333338,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022402836699999998,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "developer@andrzej-sulkowski.com",
            "name": "Andrzej Sulkowski",
            "username": "andrzejSulkowski"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d3128dc679a089750a8569acc6e0834787a7b87c",
          "message": "Refactor: Remove unused variable assignments for fallible functions (#8247)\n\n# Description\nThis PR resolves issue #8236.\n\nI recently graduated from PBA, and during one of our sessions,\n[@shawntabrizi](https://github.com/shawntabrizi) pointed out an\nimportant issue related to error handling in Rust.\n\nWhen using let _ = some_fallible_function();, if the result is not\nfollowed by a ?, the error is silently swallowed without any warning or\ncompiler feedback.\n\nIn contrast, if we don’t use let _ = and forget to add a ?, the compiler\nwill correctly emit a warning or error — helping the developer catch the\nissue early.\n\nThis behavior can easily lead to bugs going unnoticed and makes error\nhandling less reliable, especially for beginners following examples.\n\n\n## Integration\nThis PR introduces no functional or logical changes, and therefore can\nsafely be integrated into existing downstream projects without\nadditional adjustments.\n\nFrom my point of view, this issue can be classified as something like\n`I4-Silent`.\n\n## Review Notes\n\nI went through all occurrences of `let _ =` with a fallible function.\nSome of them return values tagged as `#[must_use]`. In these cases, I\nretained the underscore operator intentionally _(see:\n`polkadot/node/core/av-store/src/lib.rs` lines: 1099 & 1108,\n`polkadot/xcm/xcm-builder/src/currency_adapter.rs` line: 217,\n`substrate/frame/contracts/src/wasm/mod.rs` line: 360,\n`substrate/frame/revive/src/wasm/mod.rs` line: 307)_.\n\nCo-authored-by: Shawn Tabrizi <shawntabrizi@gmail.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-04-17T19:10:46+02:00",
          "tree_id": "1cac47bf6245e6d4b1b2dc33973b29013316251f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d3128dc679a089750a8569acc6e0834787a7b87c"
        },
        "date": 1744911976153,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.1585606581866667,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022565207199999993,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008485595220000076,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013121362266666667,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eskimor@users.noreply.github.com",
            "name": "eskimor",
            "username": "eskimor"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "153738c2baef5fb7a211f2a4d6462a0d1108fff7",
          "message": "Document transactional extrinsic behavior. (#8263)\n\nJust a small doc improvement.\n\n---------\n\nCo-authored-by: Robert <robert@gonimo.com>\nCo-authored-by: command-bot <>",
          "timestamp": "2025-04-17T17:18:01Z",
          "tree_id": "c1975af9a47df4f1b4a795a7a943105195ff8486",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/153738c2baef5fb7a211f2a4d6462a0d1108fff7"
        },
        "date": 1744915289267,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15646364912000005,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02234228893333333,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012784203900000003,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008480890126666769,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b53f6c62df09e23e86ece728c96091fa5c0c7a4c",
          "message": "Fix defensive public repo link (#8277)",
          "timestamp": "2025-04-17T19:04:49Z",
          "tree_id": "c5efe8df21ca67a3613854e478c88bf05b5b5998",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/b53f6c62df09e23e86ece728c96091fa5c0c7a4c"
        },
        "date": 1744921261713,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022495400599999993,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15809157637333335,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008466765100000098,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01318251513333334,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "14218860+iulianbarbu@users.noreply.github.com",
            "name": "Iulian Barbu",
            "username": "iulianbarbu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ade1b9ce18ea4c9a919cf854bc855fd147377998",
          "message": "sc-tracing-proc-macro: missing bump due to incomplete prdoc (#8276)\n\n# Description\n\nWe made changes to `sc-tracing-proc-macro` in #7464 which weren't\ncarried to the prdoc, so once stable2503 got released there wasn't a\nbump for `sc-tracing-proc-macro`, and now it is needed for updating\n`parachain-template` repo to 2503. It seems that the prdoc check did not\ncatch the missing required bump (it might be because the change was in a\n`proc-macro` crate).\n\n## Integration\n\nN/A\n\n## Review Notes\n\nPlanning to update stable2503 prdocs retroactively (so the change itself\ndoesn't count for next patch release), and we should request either way\na force bump for the following crates:\n\n1. `sc-tracing-proc-macro`\n2. `sc-tracing` (depends on 1.)\n3. `polkadot-sdk` (depends on 1. & 2.)\n\nSigned-off-by: Iulian Barbu <iulian.barbu@parity.io>",
          "timestamp": "2025-04-17T22:46:43Z",
          "tree_id": "434c2c30a5ff0a33f4d487e5373f89e24fb9b80c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ade1b9ce18ea4c9a919cf854bc855fd147377998"
        },
        "date": 1744933834556,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.01279503334,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008762697146666765,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15819346043333335,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022460253599999994,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "10196091+Ank4n@users.noreply.github.com",
            "name": "Ankan",
            "username": "Ank4n"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f0aed8eed5d764b247d877fa8e952bb1e25f0a3d",
          "message": "Remove the redundant FRAME coders substrate rule (#8100)\n\nCore devs should be okay to review everything under `substrate/frame/*`?\ncc: @kianenigma\n\n---------\n\nCo-authored-by: Kian Paimani <5588131+kianenigma@users.noreply.github.com>",
          "timestamp": "2025-04-18T11:36:30Z",
          "tree_id": "96082b2b0d7d10fdf72a0b3f87cc98132875e890",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f0aed8eed5d764b247d877fa8e952bb1e25f0a3d"
        },
        "date": 1744980016025,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022373922360000003,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012938766926666657,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00875666824666675,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15759734450666668,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "hetterich.charles@gmail.com",
            "name": "charlesHetterich",
            "username": "charlesHetterich"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1b76f99e12e9751703417fdb58097a1860aa20b7",
          "message": "Added `checked_sqrt` to the `FixedPointNumber` trait (#8238)\n\nAdds `checked_sqrt` function to `FixedPointNumber` and renames `const fn\ntry_sqrt` in the `implement_fixed` macro to `const fn checked_sqrt`.\n\nCLOSES: #8214 \n\n## Integration\n\nAny projects that use the **const** function `try_sqrt` from `FixedI64`,\n`FixedU64`, `FixedI128`, `FixedU128` should now use `checked_sqrt`.\n\n## Review Notes\n\n- renamed the const `try_sqrt` with `checked_sqrt`\n- updated tests for new name\n- added `checked_sqrt` to impl of `FixedPointNumber`\n\nWe keep both the const version along with adding the non-const version\nof `checked_sqrt` so that we can now access `checked_sqrt` from\nassociated types that implement `FixedPointNumber` without breaking all\nof the uses of `sqrt` that rely on it being const.\n\n---------\n\nCo-authored-by: Shawn Tabrizi <shawntabrizi@gmail.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-04-18T22:18:01Z",
          "tree_id": "53335fb1e622014622254b4531633e37e9cb793b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/1b76f99e12e9751703417fdb58097a1860aa20b7"
        },
        "date": 1745018373973,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008742439913333407,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022358715773333336,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15758488450666674,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013070412273333333,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "dharjeezy@gmail.com",
            "name": "dharjeezy",
            "username": "dharjeezy"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fe46832890db51c06ecebeac6c60c3edcbaf85e9",
          "message": "Full Unbond in Staking (#3811)\n\ncloses https://github.com/paritytech/polkadot-sdk/issues/414\n\nPolkadot address: 12GyGD3QhT4i2JJpNzvMf96sxxBLWymz4RdGCxRH5Rj5agKW\n\n---------\n\nCo-authored-by: Ankan <10196091+Ank4n@users.noreply.github.com>\nCo-authored-by: command-bot <>\nCo-authored-by: Gonçalo Pestana <g6pestana@gmail.com>\nCo-authored-by: Ankan <ankan.anurag@gmail.com>",
          "timestamp": "2025-04-21T08:56:09Z",
          "tree_id": "22cb5016f88e095d1c6270c1959eb3d469e9e5eb",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/fe46832890db51c06ecebeac6c60c3edcbaf85e9"
        },
        "date": 1745229745885,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012620178026666665,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008350351086666756,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15734829716666668,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02234994488666667,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "10196091+Ank4n@users.noreply.github.com",
            "name": "Ankan",
            "username": "Ank4n"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3cf51f631da8eebbdaeff01a037c7be82b1a70ca",
          "message": "[AHM] Async Staking module across AH and RC (#8127)\n\nMoved from: #7601.\nFollow ups to: https://github.com/paritytech/polkadot-sdk/pull/7282.\nCloses: https://github.com/paritytech/polkadot-sdk/issues/8146\n\n---\n\nThis PR is the final outcome of a multi-month development period, with a\nlot of background work\nsince 2022. Its main aim is to make pallet-staking, alongside its `type\nElectionProvider`\ncompatible to be used in a parachain, and report back the validator set\nto a relay-chain.\n\nThis setup is intended to be used for Polkadot, Kusama and Westend\nrelay-chains, with the\ncorresponding AssetHubs hosting the staking system.\n\nWhile this PR is quite big, a lot of the diffs are due to adding a relay\nand parachain runtime\nfor testing. The following is a guide to help reviewers/auditors\ndistinguish what has actually\nchanged in this PR.\n\n> Additional reading: See\nhttps://github.com/polkadot-js/apps/issues/11401, and the hackmd shared\nin there, which contains more in-depth explanation of how RC <> AH\ncommunicate.\n\n## Added\n\n> [This shows the partial\ndiff](https://github.com/paritytech/polkadot-sdk/compare/ankn/diff-staking-async...ankn/diff-staking-async-1)\nintroduced in pallet-staking-async and election-provider-multi-block\nrelative to the existing (in master) pallet-staking and\nelection-provider-multi-phase.\n\nThis PR adds the following new pallets, all of which are not used\nanywhere yet, with the\nexception of one (see `westend-runtime` changes below).\n\n#### `pallet-election-provider-multi-block`\n\nThis is a set of 4 pallets, capable of implementing an async, multi-page\n`ElectionProvider`.\nThis pallet is not used in any real runtime yet, and is intended to be\nused in `AssetHub`, next\nto `pallet-staking-async`.\n\n#### `pallet-staking-async`\n\nA fork of the old `pallet-staking`, with a number of key differences,\nmaking it suitable to be\nused in a parachain:\n\n1. It no longer has access to a secure timestamp, previously used to\ncalculate the duration of an era.\n2. It no longer has access to a `pallet-session`. \n3. It no longer has access to a `pallet-authorship`. \n5. It is capable of working with a multi-page `ElectionProvider`, aka.\n`pallet-election-provider-multi-block`.\n\nTo compensate for the above, this pallet relies on XCM messages coming\nfrom the relay-chain,\ninforming the pallet of:\n\n* When a new era should be activated, and how long its duration was\n* When an offence has happened on the relay relay-chain\n* When a session ends on the relay-chain, and how many reward points\nwere accumulated for each\nvalidators during that period.\n\n#### `pallet-staking-async-ah-client` and\n`pallet-staking-async-rc-client`\n\nAre the two new pallets that facilitate the above communication.\n\n#### `pallet-ahm-test`\n\nA test-only crate that contains e2e rust-based unit test for all of the\nabove.\n\n#### `pallet-staking-async-rc-runtime` and\n`pallet-staking-async-parachain-runtime`\n\nForks of westend and westend-asset-hub, customized to be used for\ntesting all of the above with\nZombienet. It contains a lot of unrelated code as well.\n\n## Changed\n\n> [This shows the partial\ndiff](https://github.com/paritytech/polkadot-sdk/compare/ankn/8127-diff-changed-base...ankn/8127-diff-changed-compare)\nthat shows the changes to existing pallets used in prod runtimes as well\nas westend runtime changes.\n\n#### `Identification`\n\nThis mechanism, which lives on the relay-chain, is expressed by `type\nFullIdentification` and `type FullIdentificationOf` in runtimes. It is a\nway to identify the full data needed to slash a validator. Historically,\nit was pointing to a validator, and their `struct Exposure`. With the\nmove to Asset-Hub, this is no longer possible for two reasons:\n\n1. Relay chain no longer knows the full exposures\n2. Even if, the full exposures are getting bigger and bigger and relying\nthe entirety of it is not scalable.\n\nInstead, runtimes now move to a new `type FullIdentificationOf =\nDefaultExposureOf`, which will identify a validator with a\n`Exposure::default()`. This is suboptimal, as it forces us to still\nstore a number of bytes. Yet, it allows any old `FullIdentification`,\npertaining to an old slash, to be decoded. This compromise is only\nneeded to cater for slashes that happen around the time of AHM.\n\n#### `westend-runtime`\n\nThis runtime already has the `pallet-staking-async-ah-client`,\nintegrated into all the places such that:\n\n1. It handles the validator reward points\n2. It handles offences\n5. It is the `SessionManager`\n\nYet, it is delegating all of the above to its `type Fallback`, which is\nthe old `pallet-staking`. This is a preparatory step for AHM, and should\nnot be any logical change.\n\n#### `pallet-election-provider-multi-phase`\n\nThis is the old single-page `ElectionProvider`. It has been updated to\nwork with multi-page traits, yet it only supports `page-size = 1` for\nnow. It should not have seen any logical changes.\n\n\n#### `pallet-bags-list`\n\nNow has two new features. 1. It can be `Locked`, in which case all\nupdates to it fail with an\n`Err(_)`, even deletion of a node. This is needed because we cannot\nalter any nodes in this\npallet during a multi-page iteration, aka. multi-page snapshot. 2. To\ncombat this, the same\n`rebag` transaction can be also be used to remove a node from the list,\nor add a node to the\nlist. This is done through the `score_of` api.\n\nSee the file changes and tests under `./substrate/frame/bags-list` for\nmore info.\n\n#### RuntimeDebug -> Debug\n\nTo facilitate debugging, a number of types' `RuntimeDebug` impl has been\nchanged to `Debug`. See\nhttps://github.com/paritytech/polkadot-sdk/pull/3107\n\n\n## Weights \n\nBelow is a summary of the weights. These are generated using\n`staking-async/runtimes/parachain`, which assumes 22_500 nominators\ndivided by `32` pages for Polkadot, and 12_500 nominators divided by\n`16` pages in Kusama, both leading to ~700 nominators snapshotted and\nexported per page. Doubling these parameters would easily slash the PoV\nweights by half, but with 10MB PoV, these numbers should be good. Also\nnoting that with PoV clawback, we migth get even more proof_size weight\nback in the runtime. Although, afaik this reclaimed value does not take\ncompression into account.\n\n```\n#### new: polkadot/pallet_election_provider_multi_block.rs old: kusama\n+-----------------------------------------+--------------------------------------+---------+---------+-----------------+\n| File                                    | Extrinsic                            | Old     | New     | Change [%]      |\n+======================================================================================================================+\n| pallet_election_provider_multi_block.rs | on_initialize_into_snapshot_msp      | 2.41MiB | 2.41MiB | -0.03  |\n|-----------------------------------------+--------------------------------------+---------+---------+-----------------|\n| pallet_election_provider_multi_block.rs | on_initialize_into_snapshot_rest     | 3.24MiB | 3.06MiB | -5.53  |\n|-----------------------------------------+--------------------------------------+---------+---------+-----------------|\n| pallet_election_provider_multi_block.rs | on_initialize_into_signed            | 3.36MiB | 3.12MiB | -7.12  |\n|-----------------------------------------+--------------------------------------+---------+---------+-----------------|\n| pallet_election_provider_multi_block.rs | export_non_terminal                  | 2.12MiB | 1.32MiB | -37.60 |\n|-----------------------------------------+--------------------------------------+---------+---------+-----------------|\n| pallet_election_provider_multi_block.rs | export_terminal                      | 4.08MiB | 2.25MiB | -44.82 |\n|-----------------------------------------+--------------------------------------+---------+---------+-----------------|\n| pallet_election_provider_multi_block.rs | on_initialize_nothing                | 3.53KiB | 3.53KiB | Unchanged       |\n|-----------------------------------------+--------------------------------------+---------+---------+-----------------|\n| pallet_election_provider_multi_block.rs | on_initialize_into_unsigned          | 3.71KiB | 3.71KiB | Unchanged       |\n|-----------------------------------------+--------------------------------------+---------+---------+-----------------|\n| pallet_election_provider_multi_block.rs | on_initialize_into_signed_validation | 3.71KiB | 3.71KiB | Unchanged       |\n|-----------------------------------------+--------------------------------------+---------+---------+-----------------|\n| pallet_election_provider_multi_block.rs | manage                               | 0B      | 0B      | Unchanged       |\n+-----------------------------------------+--------------------------------------+---------+---------+-----------------+\n#### new: polkadot/pallet_election_provider_multi_block_signed.rs old: kusama\n+------------------------------------------------+----------------------+----------+----------+-----------------+\n| File                                           | Extrinsic            | Old      | New      | Change [%]      |\n+===============================================================================================================+\n| pallet_election_provider_multi_block_signed.rs | bail                 | 43.61KiB | 82.74KiB | +89.72 |\n|------------------------------------------------+----------------------+----------+----------+-----------------|\n| pallet_election_provider_multi_block_signed.rs | register_eject       | 46.54KiB | 85.80KiB | +84.35 |\n|------------------------------------------------+----------------------+----------+----------+-----------------|\n| pallet_election_provider_multi_block_signed.rs | clear_old_round_data | 85.23KiB | 85.17KiB | -0.06  |\n|------------------------------------------------+----------------------+----------+----------+-----------------|\n| pallet_election_provider_multi_block_signed.rs | submit_page          | 6.95KiB  | 6.90KiB  | -0.70  |\n|------------------------------------------------+----------------------+----------+----------+-----------------|\n| pallet_election_provider_multi_block_signed.rs | register_not_full    | 6.45KiB  | 6.39KiB  | -1.00  |\n|------------------------------------------------+----------------------+----------+----------+-----------------|\n| pallet_election_provider_multi_block_signed.rs | unset_page           | 20.76KiB | 18.55KiB | -10.67 |\n+------------------------------------------------+----------------------+----------+----------+-----------------+\n#### new: polkadot/pallet_election_provider_multi_block_unsigned.rs old: kusama\n+--------------------------------------------------+-------------------+----------+-----------+------------------+\n| File                                             | Extrinsic         | Old      | New       | Change [%]       |\n+================================================================================================================+\n| pallet_election_provider_multi_block_unsigned.rs | submit_unsigned   | 63.56KiB | 696.00KiB | +995.01 |\n|--------------------------------------------------+-------------------+----------+-----------+------------------|\n| pallet_election_provider_multi_block_unsigned.rs | validate_unsigned | 1.81KiB  | 3.66KiB   | +102.65 |\n+--------------------------------------------------+-------------------+----------+-----------+------------------+\n#### new: polkadot/pallet_election_provider_multi_block_verifier.rs old: kusama\n+--------------------------------------------------+------------------------------------+-----------+-----------+-----------------+\n| File                                             | Extrinsic                          | Old       | New       | Change [%]      |\n+=================================================================================================================================+\n| pallet_election_provider_multi_block_verifier.rs | on_initialize_invalid_terminal     | 1.18MiB   | 1.69MiB   | +42.87 |\n|--------------------------------------------------+------------------------------------+-----------+-----------+-----------------|\n| pallet_election_provider_multi_block_verifier.rs | on_initialize_valid_terminal       | 1.18MiB   | 1.69MiB   | +42.71 |\n|--------------------------------------------------+------------------------------------+-----------+-----------+-----------------|\n| pallet_election_provider_multi_block_verifier.rs | on_initialize_invalid_non_terminal | 1.30MiB   | 450.82KiB | -66.08 |\n|--------------------------------------------------+------------------------------------+-----------+-----------+-----------------|\n| pallet_election_provider_multi_block_verifier.rs | on_initialize_valid_non_terminal   | 279.93KiB | 62.22KiB  | -77.77 |\n+--------------------------------------------------+------------------------------------+-----------+-----------+-----------------+\n```\n\n<summary> \n\nnote for PR authors\n\n<details>\n\n<br>\n\n## TODO\n\n- [x] Finalize weights\n- [x] Lock voter list when snapshot being taken \n- [x] push based election\n- [x] OffchainWorker miner can now run on multiple pages \n- [x] Trimming is improved, all bounds are respected.\n- [x] clients pallets: add ID\n- [x] make election prolonged\n- [x] bring westend-next and ah-next to staking-next\n- [x] Test pre-migration to post-migration state in ahm-test.\n- [x] Offence reporting works without exposure info on RC (done but\nrecheck).\n- [ ] staking-async fix tests\n- [ ] root offence testing (minimally done in migration test)\n- [ ] Run benchmarking\n- [x] ~~Add custom decoder for OffenceDetails~~.\n\n## TODO before finalizing PR\n- [x] Go over again and ensure no interaction with staking-classic\nexcept by AhClient (and pallets that are going away) in Westend. Make\nany non used apis private.\n- [ ] Create diff with changes from staking-classic.\n\n## Migration Notes\n- At the start of the AHM migration, trigger:\n`RC::pallet_staking_async_ah_client::on_migration_start()`\n- At the start of the AHM migration, trigger the following:\n  - definitely filter `staking::bond`\n  - RC: set `staking::Forcing` to `ForceNone`. \n- At the end of the AHM migration, trigger the following\n  - `RC::pallet_staking_async_ah_client::on_migration_end()`\n  - Set `AH::pallet_staking_async::ForceEra` to `Forcing::NotForcing`.\n  - Set RC staking and pool min bond to be u32::max.\n\n## Follow-up\n- [ ] Offence generation e2e test (zombienet)\n\n</details>\n</summary>\n\n---------\n\nCo-authored-by: kianenigma <kian@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Kian Paimani <5588131+kianenigma@users.noreply.github.com>\nCo-authored-by: Tsvetomir Dimitrov <tsvetomir@parity.io>",
          "timestamp": "2025-04-22T09:02:08Z",
          "tree_id": "70c2513ca2fbb0738f2fd7982f5e2476c84bb325",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/3cf51f631da8eebbdaeff01a037c7be82b1a70ca"
        },
        "date": 1745316205422,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022431231799999996,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013189153886666664,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15671152385333342,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00877003947333343,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "adb4130960b9a9cad2bbbb3cf1af3b9d606691f6",
          "message": "[revive] eth-rpc refactoring (#8148)\n\nRefactor eth-rpc\n- Get rid of the in memory-cache, we can just store receipts logs into\nsqlite, and use in-memory db for non archive node.\n- Track both best and finalized blocks so that we can properly index\ntransaction receipts in case of a relay chain re-org.\n- Keep reference to the latest finalized block so that we can use that\nfor queries that use the `finalized` block tag\n- use `--index-last-n-blocks` cli parameter to re-index the last n block\nwhen the server start\n- Fix issue related to gas estimate calculation for EIP1559 transaction\ntypes\n\ntested changes with https://github.com/paritytech/evm-test-suite/pull/87\n\nfix https://github.com/paritytech/contract-issues/issues/35\nhttps://github.com/paritytech/contract-issues/issues/33\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-04-22T09:33:04Z",
          "tree_id": "ed62eb7a8ba66cb24974c6604d95a96e94899b1c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/adb4130960b9a9cad2bbbb3cf1af3b9d606691f6"
        },
        "date": 1745321673701,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013040147260000003,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1561395419933333,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00835924505333343,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022340870999999998,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "dharjeezy@gmail.com",
            "name": "dharjeezy",
            "username": "dharjeezy"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "38a4dfe0a97c541f8c388fc43a18b547bd273c67",
          "message": "`txpool`: use tracing for structured logging (#8001)\n\nFollow up on https://github.com/paritytech/polkadot-sdk/pull/6897 cc:\n@michalkucharczyk\n\nPolkadot address: 12GyGD3QhT4i2JJpNzvMf96sxxBLWymz4RdGCxRH5Rj5agKW\n\nFixes: #5490\n\n---------\n\nCo-authored-by: Iulian Barbu <14218860+iulianbarbu@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: Michal Kucharczyk <1728078+michalkucharczyk@users.noreply.github.com>",
          "timestamp": "2025-04-22T13:15:34Z",
          "tree_id": "48d81af1a2470b439bb5d3bcdc59d0433ad5e75b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/38a4dfe0a97c541f8c388fc43a18b547bd273c67"
        },
        "date": 1745331457409,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022303546020000002,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15670456402000008,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012908128466666663,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00875863598666676,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ub2262000@gmail.com",
            "name": "Utkarsh Bhardwaj",
            "username": "UtkarshBhardwaj007"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "79b28b3185d01f2e43e098b1f57372ed9df64adf",
          "message": "add poke_deposit extrinsic to pallet-recovery (#7882)\n\n# Description\n\n* This PR adds a new extrinsic `poke_deposit` to `pallet-recovery`. This\nextrinsic will be used to re-adjust the deposits made in the pallet\nafter AHM.\n* Part of #5591 \n\n## Review Notes\n\n* Added a new extrinsic `poke_deposit` in `pallet-recovery`.\n* Added a new event `DepositPoked` to be emitted upon a successful call\nof the extrinsic.\n* Added a new enum `DepositKind` to differentiate between the 2 kinds of\ndeposits in the pallet.\n* Although the immediate use of the extrinsic will be to give back some\nof the deposit after the AH-migration, the extrinsic is written such\nthat it can work if the deposit decreases or increases (both).\n* The call to the extrinsic would be `free` if an actual adjustment is\nmade to the deposit and `paid` otherwise.\n* Added tests to test all scenarios.\n* Added benchmark\n* **Fixed bug** in benchmark helper function `insert_recovery_config`\nwhere funds were being reserved from the wrong account.\n* Minor refactoring to avoid code duplication.\n* Had to re-organise imports to make the code more readable and modular.\nIn the process, I removed unnecessary dependencies and imported\neverything from the frame umbrella crate. So this PR also solves: #6504\nfor `pallet-recovery`\n\n## TO-DOs\n* [x] Run CI cmd bot to benchmark\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>",
          "timestamp": "2025-04-22T16:22:15Z",
          "tree_id": "51ff806f6f165fdb9fcf4d85a22ecc5d9a677f22",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/79b28b3185d01f2e43e098b1f57372ed9df64adf"
        },
        "date": 1745342858060,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02241586614,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008714884713333424,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012884897166666666,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1561696921266668,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "gorka.irazoki@gmail.com",
            "name": "girazoki",
            "username": "girazoki"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c800a0dd2adefbee24c916e702058897588e7a85",
          "message": "Allow configuration of worst case buy execution weight (#7944)\n\nAdds `worst_case_buy_execution` to the Config trait of\n`pallet-xcm-benchmarks` with a default implementation that mimics the\ncode that existed previous to this PR.\n\nRationale: not allowing to set the `WeightLimit` and the `FeeAsset`\nmight mean that we dont benchmark the worst case, as with\n`WeightLimit::Unlimited` the `Trader` does not even execute:\nhttps://github.com/paritytech/polkadot-sdk/blob/c01dbebeaa6394691974de46dd2d41a582f6a4c2/polkadot/xcm/xcm-executor/src/lib.rs#L833\n\nThe new configurable function allows projects to customize the\nparameters with which the benchmark is run to make sure they account for\nthe worst-case scenario\n\n**This is very likely the case of the assethub system chain**, with\nseveral traders being analyzed and possibly several reads being made:\n\n\nhttps://github.com/paritytech/polkadot-sdk/blob/38d2fa859861005157ccb249dca1378f015e0b06/cumulus/parachains/runtimes/assets/asset-hub-rococo/src/xcm_config.rs#L403\n\n---------\n\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>\nCo-authored-by: Adrian Catangiu <adrian@parity.io>",
          "timestamp": "2025-04-23T10:45:20Z",
          "tree_id": "2b78a92c783a38b62f3d387e7000a1e2bca6e06c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c800a0dd2adefbee24c916e702058897588e7a85"
        },
        "date": 1745410381465,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.01320482962666667,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15796930701333337,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008648974773333432,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022599230626666668,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "claravanstaden64@gmail.com",
            "name": "Clara van Staden",
            "username": "claravanstaden"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7032c84c699df5bea2c4fd9d72ae51dba318f2d0",
          "message": "Snowbridge - Tests refactor (#8014)\n\n- Moves Weth and Chain ID constants to a common module\n- Changes Ether on Rococo's owner to Westend AH, to simulate double\nbridging\n- Removes Rococo integration tests, since Snowbridge is now only\ndeployed to Westend and will support double bridging to Rococo only\n\nResolves: [SNO-1427](https://linear.app/snowfork/issue/SNO-1427)\nCloses: https://github.com/paritytech/polkadot-sdk/issues/7977",
          "timestamp": "2025-04-23T12:09:09Z",
          "tree_id": "b69bd9849e39690442298045eda043f7acf08d57",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/7032c84c699df5bea2c4fd9d72ae51dba318f2d0"
        },
        "date": 1745414923190,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008782161773333434,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012970183560000004,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1590369936133333,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02268167083333333,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "serban@parity.io",
            "name": "Serban Iorga",
            "username": "serban300"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "bff1ae9728440cb3f1d7b49adeb810e5d7038110",
          "message": "XCMP: use batching when enqueuing inbound messages (#8021)\n\nThis is a follow-up for\nhttps://github.com/paritytech/polkadot-sdk/pull/7963\n\nhttps://github.com/paritytech/polkadot-sdk/pull/7963 introduced some\n[performance improvements for the message_queue enqueuing\nlogic](https://github.com/paritytech/polkadot-sdk/pull/7963/commits/ae657d631422b11acf129229e1aeb19580dba788).\nThis PR leverages those improvements by implementing batching in the\nXCMP queue pallet.\n\nAlso the PR increases the weight metering accuracy for the enqueuing\nlogic.\n\nThe performance difference can be seen in [this\ncommit](https://github.com/paritytech/polkadot-sdk/commit/1d6c4266e2ee06368cb697084ffd0cc9b47dcdb0):\n\n```\n\tfn enqueue_1000_small_xcmp_messages() -> Weight {\n\t\t// Proof Size summary in bytes:\n\t\t//  Measured:  `151`\n\t\t//  Estimated: `5487`\n\t\t// Minimum execution time: 134_166_000 picoseconds.\n\t\tWeight::from_parts(138_915_000, 5487)\n\t\t\t.saturating_add(T::DbWeight::get().reads(4_u64))\n\t\t\t.saturating_add(T::DbWeight::get().writes(3_u64))\n\t}\n\n\tfn enqueue_1000_small_xcmp_messages_individually() -> Weight {\n\t\t// Proof Size summary in bytes:\n\t\t//  Measured:  `151`\n\t\t//  Estimated: `5487`\n\t\t// Minimum execution time: 10_181_142_000 picoseconds.\n\t\tWeight::from_parts(10_200_139_000, 5487)\n\t\t\t.saturating_add(T::DbWeight::get().reads(4_u64))\n\t\t\t.saturating_add(T::DbWeight::get().writes(3_u64))\n\t}\n``` \n\nFor 1000 messages of 3 bytes each it takes `134us` to enqueue them using\nbatching and `10181us` to enqueue them individually. This is a ~75x\nimprovement.\n\n---------\n\nSigned-off-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>",
          "timestamp": "2025-04-23T15:34:08Z",
          "tree_id": "5e241652458c7831d52be3ac8ace09d769e8f944",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/bff1ae9728440cb3f1d7b49adeb810e5d7038110"
        },
        "date": 1745426275898,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.00852174018000009,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01268453446666667,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022215739426666662,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15562045861333335,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "claravanstaden64@gmail.com",
            "name": "Clara van Staden",
            "username": "claravanstaden"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e8e8d6ecba5eafd4835748cdc807789ba59061cd",
          "message": "Extract create_pool_with_native_on macro to common crate (#8289)\n\nMoves macro to a common crate so that it can be reused in the polkadot\nruntimes repo.",
          "timestamp": "2025-04-23T21:58:30Z",
          "tree_id": "89f6cc8a75fe43acaf4c5f53ec0f20c2e31babbe",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e8e8d6ecba5eafd4835748cdc807789ba59061cd"
        },
        "date": 1745448952120,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022306562386666666,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012896902933333334,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008467983733333434,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1562616672266667,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "dev@shiposha.com",
            "name": "Daniel Shiposha",
            "username": "mrshiposha"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8730f3c2fa1d36161fccdc6a318e175eda459d0f",
          "message": " New NFT traits: granular and abstract interface (#5620)\n\nThis PR introduces a new set of traits that represent different asset\noperations in a granular and abstract way.\n\nThe new abstractions provide an interface for collections and tokens for\nuse in general and XCM contexts.\n\nTo make the review easier and the point clearer, this PR's code was\nextracted from #4300 (which contains the new XCM adapters). The #4300 is\nnow meant to become a follow-up to this one.\n\nNote: Thanks to @franciscoaguirre for a very productive discussion in\nMatrix. His questions are used in the Q&A notes.\n\n## Motivation: issues of the existing traits v1 and v2\n\nThis PR is meant to solve several issues and limitations of the existing\nframe-support nonfungible traits (both v1 and v2).\n\n### Derivative NFTs limitations\n\nThe existing v1 and v2 nonfungible traits (both\ncollection-less—\"nonfungible.rs\", singular; and\nin-collection—\"nonfungible**s**.rs\", plural) can create a new token only\nif its ID is already known.\n\nCombined with the corresponding XCM adapters implementation for v1\n[collection-less](https://github.com/paritytech/polkadot-sdk/blob/4057ccd7a37396bc1c6d1742f418415af61b2787/polkadot/xcm/xcm-builder/src/nonfungible_adapter.rs#L208-L212),\n[in-collection](https://github.com/paritytech/polkadot-sdk/blob/4057ccd7a37396bc1c6d1742f418415af61b2787/polkadot/xcm/xcm-builder/src/nonfungibles_adapter.rs#L225-L229)\n(and [the unfinished one for\nv2](https://github.com/paritytech/polkadot-sdk/blob/3b401b02115e08f38f33ce8f3b3825e773a6113e/polkadot/xcm/xcm-builder/src/nonfungibles_v2_adapter.rs#L249-L254)),\nthis means that, in general, _**the only**_ supported derivative NFTs\nare those whose chain-local IDs can be derived by the `Matcher` and the\nNFT engine can mint the token with the provided ID. It is presumed the\nchain-local ID is derived without the use of storage (i.e., statelessly)\nbecause all the standard matcher's implementations aren't meant to look\ninto the storage.\n\nTo implement an alternative approach where chain-local derivative IDs\nare derived statefully, workarounds are needed. In this case, a custom\nstateful Matcher is required, or the NFT engine must be modified if it\ndoesn't support predefined IDs for new tokens.\n\nIt is a valid use case if a chain has exactly one NFT engine, and its\nteam wants to provide NFT derivatives in a way consistent with the rest\nof the NFTs on this chain.\nUsually, if a chain already supports NFTs (Unique Network, Acala,\nAventus, Moonbeam, etc.), they use their own chain-local NFT IDs.\nOf course, it is possible to introduce a separate NFT engine just for\nderivatives and use XCM IDs as chain-local IDs there.\nHowever, if the chain has a related logic to the NFT engine (e.g.,\nfractionalizing), introducing a separate NFT engine for derivatives\nwould require changing the related logic or limiting it to originals.\n\nAlso, in this case, the clients would need to treat originals and\nderivatives differently, increasing their maintenance burden.\n\n**The more related logic for a given NFT engine exists on-chain, the\nmore changes will be required to support another instance of the NFT\nengine for derivatives.**\n\n<details>\n<summary><i>Q&A: AssetHub uses the two pallets approach local and\nforeign assets. Why is this not an issue there?</i></summary>\n\t\n\n>Since the primary goal of AssetHub (as far as I understand) is to host\nassets and not provide rich functionality around them (which is the task\nof other parachains), having a specialized NFT engine instance for\nderivatives is okay. Even if AssetHub would provide NFT-related\noperations (e.g., fractionalization), I think the number of different\nkinds of such operations would be limited, so it would be pretty easy to\nmaintain them for two NFT engines. I even believe that supporting\nchain-local derivative IDs on AssetHub would be needlessly more\ncomplicated than having two NFT engines.\n\n</details>\n\n<details>\n<summary><i>Q&A: New traits open an opportunity for keeping derivatives\non the same pallet. Thus, things like NFT fractionalization are reused\nwithout effort. Does it make sense to fractionalize a\nderivative?</i></summary>\n\t\n>I think it makes sense. Moreover, it could be one of the reasons for\nemploying reserve-based transfer for an NFT. Imagine a chain with no\nsuch functionality, and you have an NFT on that chain. And you want to\nfractionalize that NFT. You can transfer the NFT to another chain that\nprovides NFT fractionalization. This way, you can model shared ownership\nof the original asset via its derivative. The same would be true for any\nNFT operation not provided by the chain where the NFT is located, while\nanother chain can provide the needed functionality.\n</details>\n\nAnother thing about chain-local NFT IDs is that an NFT engine could\nprovide some guarantees about its NFT IDs, such as that they are always\nsequential or convey some information. The chain's team might want to do\nthe same for derivatives. In this case, it might be impossible to derive\nthe derivative ID from the XCM ID statelessly (so the workarounds would\nbe needed).\n\nThe existing adapters and traits don't directly support all of these\ncases. Workarounds could exist, but using them will increase the\nintegration cost, the review process, and maintenance efforts.\n\nThe Polkadot SDK tries to provide general interfaces and tools, so it\nwould be good to provide NFT interfaces/tools that are consistent and\neasily cover more use cases.\n\n\n### Design issues\n\n#### Lack of generality\n\nThe existing traits (v1 and v2) are too concrete, leading to code\nduplication and inconvenience.\n\nFor example, two distinct sets of traits exist for collection-less and\nin-collection NFTs. The two sets are nearly the same. However, having\ntwo sets of traits necessitates providing two different XCM adapters.\nFor instance, [this\nPR](https://github.com/paritytech/polkadot-sdk/pull/2924) introduced the\n`NonFungibleAdapter` (collection-less). The description states that the\n`NonFungibleAdapter` \"will be useful for enabling cross-chain Coretime\nregion transfers, as the existing `NonFungiblesAdapter`[^1] is\nunsuitable for this purpose\", which is true. It is unsuitable (without\nworkarounds, at least).\n\nThe same will happen with any on-chain entity that wants to use NFTs via\nthese interfaces. Hence, the very structure of the interfaces makes\nusing NFTs as first-class citizens harder (due to code duplication).\nThis is sad since NFTs could be utility objects similar to CoreTime\nregions. For instance, they could be various capability tokens, on-chain\nshared variables, in-game characters and objects, and all of that could\ninteroperate.\n\nAnother example of this issue is the methods of collections, which are\nvery similar to the corresponding methods of tokens: `create_collection`\n/ `mint_into`, `collection_attribute` / `attribute`, and so on. In many\nways, a collection could be considered a variant of a non-fungible\ntoken, so it shouldn't be surprising that the methods are analogous.\nTherefore, there could be a universal interface for these things.\n\n<details>\n<summary><i>Q&A: there's a lot of duplication between nonfungible and\nnonfungibles. The SDK has the same with fungible and fungibles. Is this\nalso a problem with fungible tokens?</i></summary>\n\n>I could argue that it is also a problem for fungibles, but I believe\nthey are okay as they are. Firstly, fungible tokens are a simpler\nconcept since, in one way or another, they represent the money-like\nvalue abstraction. It seems the number of different kinds of related\noperations is bound (in contrast to NFTs, which could be various utility\nobjects with different related operations, just like objects in OOP).\n\n>Also, not all things that induce duplication apply to fungible(s)\ntraits. For example, \"a fungible collection\" can not be viewed as a\n\"fungible asset\"—that's impossible, so having additional methods for\n\"fungible collections\" is okay. But at the same time, any collection\n(fungible or not) **can** be viewed as an NFT. It's not a \"token\" in the\nstrict sense, but it is a unique object. This is precisely what NFTs\nrepresent.\nAn NFT collection often has a similar interface to NFTs:\ncreate/transfer/destroy/metadata-related operations, etc.\nOf course, collections can have more methods that make sense only for\ncollections but not their tokens, but this doesn't cancel the fact that\ncollections can be viewed as another \"kind\" of NFTs.\n\n>Secondly, the fungible(s) trait sets are already granular. For example,\nmultiple Inspect and Mutate traits are categorized by operation kind.\nHere is the Inspect/Mutate for\n[metadata](https://github.com/paritytech/polkadot-sdk/blob/master/substrate/frame/support/src/traits/tokens/fungibles/metadata.rs)\nand here is the separate traits for\n[holds](https://github.com/paritytech/polkadot-sdk/blob/master/substrate/frame/support/src/traits/tokens/fungibles/hold.rs).\nFor comparison, the nonfungible(_v2)(s) trait sets have all the kinds of\noperations in uncategorized Inspect/Mutate/Transfer traits.\n\n>The fungible(s) traits are granular but not too abstract. I believe it\nis a good thing.\nUsing the abstract traits from this PR, even for fungibles, is possible,\nbut I see no reason to do so. A more concrete interface for fungibles\nseems even better because the very notion of fungibles outlines the\npossible related operations.\n</details>\n\n<details>\n<summary><i>Q&A: If it is not an issue for fungibles, why would this be\nan issue for NFTs?</i></summary>\n\t\n>Unlike fungibles, different NFTs could represent any object-like thing.\nJust like with objects in OOP, it is natural to expect them to have\ndifferent inherent operations (e.g., different kinds of attributes,\npermission-based/role-based modification, etc.). The more abstract\ntraits should help maintain interoperability between any NFT engine and\nother pallets. Even if we'd need some \"adapters,\" they could be made\neasily because of the abstract traits.\n</details>\n\n#### An opinionated interface\n\nBoth v1 and v2 trait sets are opinionated.\n\nThe v1 set is less opinionated than v2, yet it also has some issues. For\ninstance, why does the `burn` method provide a way to check if the\noperation is permitted, but `transfer` and `set_attribute` do not? In\nthe `transfer` case, there is already an induced\n[mistake](https://github.com/paritytech/polkadot-sdk/issues/4073) in the\nXCM adapter. Even if we add an ownership check to all the methods, why\nshould it be only the ownership check? There could be different\npermission checks. Even in this trait set, we can see that, for example,\nthe `destroy` method for a collection\n[takes](https://github.com/paritytech/polkadot-sdk/blob/4057ccd7a37396bc1c6d1742f418415af61b2787/substrate/frame/support/src/traits/tokens/nonfungibles.rs#L161-L165)\na witness parameter additional to the ownership check.\n\nThe same goes for v2 and even more.\n\nFor instance, the v2 `mint_into`, among other things,\n[takes](https://github.com/paritytech/polkadot-sdk/blob/7e7c33453eeb14f47c6c4d0f98cc982e485edc77/substrate/frame/support/src/traits/tokens/nonfungibles_v2.rs#L249)\n`deposit_collection_owner`, which is an implementation detail of\npallet-nfts that shouldn't be part of a general interface.\n\nIt also introduces four different attribute kinds: metadata, regular\nattributes, custom attributes, and system attributes.\nThe motivation of why these particular attribute kinds are selected to\nbe included in the general interface is unclear.\nMoreover, it is unclear why not all attribute kinds are mutable (not all\nhave the corresponding methods in the `Mutate` trait). And even those\nthat can be modified (`attribute` and `metadata`) have inconsistent\ninterfaces:\n* `set_attribute` sets the attribute without any permission checks.\n*\n[in-collection](https://github.com/paritytech/polkadot-sdk/blob/7e7c33453eeb14f47c6c4d0f98cc982e485edc77/substrate/frame/support/src/traits/tokens/nonfungibles_v2.rs#L265-L273)\n*\n[collection-less](https://github.com/paritytech/polkadot-sdk/blob/7e7c33453eeb14f47c6c4d0f98cc982e485edc77/substrate/frame/support/src/traits/tokens/nonfungible_v2.rs#L143-L146)\n*\n[`set_metadata`](https://github.com/paritytech/polkadot-sdk/blob/7e7c33453eeb14f47c6c4d0f98cc982e485edc77/substrate/frame/support/src/traits/tokens/nonfungible_v2.rs#L161-L164)\nsets the metadata using the `who: AccountId` parameter for a permission\ncheck.\n* `set_metadata` is a collection-less variant of\n[`set_item_metadata`](https://github.com/paritytech/polkadot-sdk/blob/7e7c33453eeb14f47c6c4d0f98cc982e485edc77/substrate/frame/support/src/traits/tokens/nonfungibles_v2.rs#L313-L316),\nwhile `set_attribute` has the same name in both trait sets.\n* In contrast to `set_metadata`, other methods (even the\n`set_item_metadata`!) that do the permission check use\n`Option<AccountId>` instead of `AccountId`.\n* The same goes for the corresponding `clear_*` methods.\n\nThis is all very confusing. I believe this confusion has already led to\nmany inconsistencies in implementation and may one day lead to bugs.\nFor example, if you look at the implementation of v2 traits in\npallet-nfts, you can see that `attribute`\n[returns](https://github.com/paritytech/polkadot-sdk/blob/8d81f1e648a21d7d14f94bc86503d3c77ead5807/substrate/frame/nfts/src/impl_nonfungibles.rs#L44-L62)\nan attribute from `CollectionOwner` namespace or metadata, but\n`set_attribute`\n[sets](https://github.com/paritytech/polkadot-sdk/blob/8d81f1e648a21d7d14f94bc86503d3c77ead5807/substrate/frame/nfts/src/impl_nonfungibles.rs#L266-L280)\nan attribute in `Pallet` namespace (i.e., it sets a system attribute!).\n\n### Future-proofing\n\nSimilar to how the pallet-nfts introduced new kinds of attributes, other\nNFT engines could also introduce different kinds of NFT operations. Or\nhave sophisticated permission checks. Instead of bloating the general\ninterface with the concrete use cases, I believe it would be great to\nmake it granular and flexible, which this PR aspires to achieve. This\nway, we can preserve the consistency of the interface, make its\nimplementation for an NFT engine more straightforward (since the NFT\nengine will implement only what it needs), and the pallets like\npallet-nft-fractionalization that use NFT engines would work with more\nNFT engines, increasing the interoperability between NFT engines and\nother on-chain mechanisms.\n\n## New frame-support traits\n\nThe new `asset_ops` module is added to `frame_support::traits::tokens`.\nIt defines several \"asset operations\".\n\nWe avoid duplicating the interfaces with the same idea by providing the\npossibility to implement them on different structures representing\ndifferent asset kinds. For example, similar operations can be performed\non Collections and NFTs, such as creating Collections/NFTs, transferring\ntheir ownership, managing their metadata, etc.\n\nThe following \"operations\" are defined:\n* Create\n* Inspect\n* Update\n* Destroy\n* Stash\n* Restore\n\n<details>\n\t<summary>Q&A: What do Inspect and Update operations mean?</summary>\n\n>Inspect is an interface meant to inspect any information about an\nasset. This information could be 1) asset owner, 2) attribute bytes, 3)\na flag representing the asset's ability to be transferred, or 4) any\nother \"feature\" of the asset.\n\n>The Update is the corresponding interface for updating this\ninformation.\n\n</details>\n\n<details>\n\t<summary>Q&A: What do Stash/Restore operations mean?</summary>\n\n>This can be considered a variant of \"Locking,\" but I decided to call it\n\"Stash\" because the actual \"lock\" operation is represented by the\n`CanUpdate<Owner<AccountId>>` update strategy. \"Stash\" implies losing\nownership of the token to the chain itself. The symmetrical \"Restore\"\noperation may restore the token to any location, not just the\nbefore-stash owner. It depends on the particular chain business logic.\n\n</details>\n\nEach operation can be implemented multiple times using different\nstrategies associated with this operation.\n\nThis PR provides the implementation of the new traits for\npallet-uniques.\n\n### A generic example: operations and strategies\n\nLet's illustrate how we can implement the new traits for an NFT engine.\n\nImagine we have an NftEngine pallet (or a Smart Contract accessible from\nRust; it doesn't matter), and we need to expose the following to other\non-chain mechanisms:\n* Collection \"from-to\" transfer and a transfer without a check.\n* The similar transfers for NFTs\n* NFT force-transfers\n* A flag representing the ability of a collection to be transferred\n* The same flag for NFTs\n* NFT byte data\n* NFT attributes like in the pallet-uniques (byte data under a byte key)\n\nHere is how this will look:\n\n```rust\npub struct Collection<PalletInstance>(PhantomData<PalletInstance>);\npub struct Token<PalletInstance>(PhantomData<PalletInstance>);\n\nimpl AssetDefinition for Collection<NftEngine> { type Id = /* the collection ID type */; }\nimpl AssetDefinition for Token<NftEngine> { type Id = /* the *full* NFT ID type */; }\n\n// --- Collection operations ---\n\n// The collection transfer without checks \nimpl Update<Owner<AccountId>> for Collection<NftEngine> {\n\tfn update(\n             class_id: &Self::Id,\n             _strategy: Owner<AccountId>,\n             new_owner: &AccountId,\n        ) -> DispatchResult {\n\t\ttodo!(\"use NftEngine internals to perform the collection transfer to the `new_owner`\")\n\t}\n}\n\n// The collection \"from-to\" transfer\nimpl Update<ChangeOwnerFrom<AccountId>> for Collection<NftEngine> {\n\tfn update(\n            class_id: &Self::Id,\n            strategy: ChangeOwnerFrom<AccountId>,\n            new_owner: &AccountId,\n        ) -> DispatchResult {\n\t\tlet CheckState(from, ..) = strategy;\n\t\t\n\t\ttodo!(\"check if `from` is the current owner\");\n\t\t\n\t\t// Reuse the previous impl\n\t\tSelf::update(class_id, Owner::default(), new_owner)\n\t}\n}\n\n// A flag representing the ability of a collection to be transferred\nimpl Inspect<CanUpdate<Owner<AccountId>>> for Collection<NftEngine> {\n\tfn inspect(\n\t\tclass_id: &Self::Id,\n\t\t_can_transfer: CanUpdate<Owner<AccountId>>,\n\t) -> Result<bool, DispatchError> {\n\t\ttodo!(\"use NftEngine internals to learn if the collection can be transferred\")\n\t}\n}\n\n// --- NFT operations ---\n\n// The NFT transfer implementation is similar in structure.\n\n// The NFT transfer without checks\nimpl Update<Owner<AccountId>> for Token<NftEngine> {\n\tfn update(\n            instance_id: &Self::Id,\n            _strategy: Owner<AccountId>,\n            new_owner: &AccountId,\n        ) -> DispatchResult {\n\t\ttodo!(\"use NftEngine internals to perform the NFT transfer\")\n\t}\n}\n\n// The NFT \"from-to\" transfer\nimpl Update<ChangeOwnerFrom<AccountId>> for Token<NftEngine> {\n\tfn update(\n            instance_id: &Self::Id,\n            strategy: ChangeOwnerFrom<AccountId><AccountId>,\n            new_owner: &AccountId,\n        ) -> DispatchResult {\n\t\tlet CheckState(from, ..) = strategy;\n\n\t\ttodo!(\"check if `from` is the current owner\");\n\n\t\t// Reuse the previous impl\n\t\tSelf::transfer(instance_id, Owner::default(), new_owner)\n\t}\n}\n\n// There are meta-strategies like CheckOrigin, which carries an Origin and any internal strategy.\n// It abstracts origin checks for any possible operation.\n// For example, we can do this to implement NFT force-transfers\nimpl Update<CheckOrigin<RuntimeOrigin, Owner<AccountId>>> for Token<NftEngine> {\n\tfn update(\n\t\tinstance_id: &Self::Id,\n\t\tstrategy: CheckOrigin<RuntimeOrigin, Owner<AccountId>>,\n                new_owner: &AccountId,\n\t) -> DispatchResult {\n\t\tlet CheckOrigin(origin, owner_strategy) = strategy;\n\n\t\tensure_root(origin)?;\n\t\tSelf::transfer(instance_id, owner_strategy, new_owner)\n\t}\n}\n\n// A flag representing the ability of an NFT to be transferred\nimpl Inspect<CanUpdate<Owner<AccountId>>> for Token<NftEngine> {\n\tfn inspect(\n\t\tinstance_id: &Self::Id,\n\t\t_can_transfer: CanUpdate<Owner<AccountId>>,\n\t) -> Result<bool, DispatchError> {\n\t\ttodo!(\"use NftEngine internals to learn if the NFT can be transferred\")\n\t}\n}\n\n// The NFT bytes (notice that we have a different return type because of the \"Bytes\" strategy).\nimpl Inspect<Bytes> for Token<NftEngine> {\n\tfn inspect(\n\t\tinstance_id: &Self::Id,\n\t\t_bytes: Bytes,\n\t) -> Result<Vec<u8>, DispatchError> {\n\t\ttodo!(\"use NftEngine internals to get the NFT bytes\")\n\t}\n}\n\n// Some strategies like Bytes and CanUpdate are generic so that they can have different \"parameters\".\n// We can add a custom byte request called \"Attribute\" to make the attribute logic for NFTs. Its parameter carries the key.\n// Note: in this PR, pallet-uniques provides the Attribute request: https://github.com/UniqueNetwork/polkadot-sdk/blob/fb55a66a657b9e357a0b0a9490773221d3ef03bf/substrate/frame/uniques/src/types.rs#L151.\n// For self-containment, let's declare the pallet-uniques' `Attribute` here.\npub struct Attribute<'a>(pub &'a [u8]);\n\n// The NFT attributes implementation\nimpl<'a> Inspect<Bytes<Attribute<'a>>> for Token<NftEngine> {\n\tfn inspect(\n\t\tinstance_id: &Self::Id,\n\t\tstrategy: Bytes<Attribute>,\n\t) -> Result<Vec<u8>, DispatchError> {\n\t\tlet Bytes(Attribute(attribute_key)) = strategy;\n\n\t\ttodo!(\"use NftEngine internals to get the attribute bytes\")\n\t}\n}\n```\n\nFor further examples, see how pallet-uniques implements these operations\nfor\n[collections](https://github.com/UniqueNetwork/polkadot-sdk/blob/feature/asset-ops-traits-only/substrate/frame/uniques/src/asset_ops/collection.rs)\nand\n[items](https://github.com/UniqueNetwork/polkadot-sdk/blob/feature/asset-ops-traits-only/substrate/frame/uniques/src/asset_ops/item.rs).\n\nThe usage examples can be found in the `asset_ops` module docs (which is\nbased on [this\ncomment](https://github.com/paritytech/polkadot-sdk/pull/5620#issuecomment-2809794032))\nand in the pallet-uniques tests.\n\n[^1]: Don't confuse `NonFungibleAdapter` (collection-less) and\n`NonFungiblesAdapter` (in-collection; see \"s\" in the name).\n\n---------\n\nCo-authored-by: Francisco Aguirre <franciscoaguirreperez@gmail.com>",
          "timestamp": "2025-04-24T08:42:59Z",
          "tree_id": "0bad53d7a92f981b440d4f1cb68ddfe3b5bd38a3",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/8730f3c2fa1d36161fccdc6a318e175eda459d0f"
        },
        "date": 1745489888552,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012771481613333331,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1558768469999999,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022284875086666666,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00859179290000008,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "paolo@parity.io",
            "name": "Paolo La Camera",
            "username": "sigurpol"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "7e65abb1808126994339b9990a543378c6f2af4c",
          "message": "staking-async: add missing new_session_genesis (#8310)\n\nFix issue #8302 (introduced by #8127), where the staking-async module\ncould fail during genesis.\n\nThe issue was related to the staking-async module in the Polkadot SDK,\nspecifically with the implementation of the `historical::SessionManager`\ntrait in the `ah-client` pallet with missing implementations of the\nnew_session_genesis method in two different places:\n- In the pallet_session::SessionManager<T::AccountId> implementation\n- In the historical::SessionManager<T::AccountId,\nsp_staking::Exposure<T::AccountId, BalanceOf<T>>> implementation\n\nNote: the SessionManager trait requires the implementation of\nnew_session_genesis for proper functioning, especially during chain\ninitialization.\n\nThe pallet-staking-async/ah-client has different operating modes:\n- Passive: Delegates operations to a fallback implementation\n- Buffered: Buffers operations for later processing\n- Active: Performs operations directly\n\nThe fix ensures that in Passive mode, the new_session_genesis method\ncorrectly delegates to the fallback implementation, while in other modes\nit returns None.\n\n---------\n\nCo-authored-by: kianenigma <kian@parity.io>",
          "timestamp": "2025-04-25T08:51:49Z",
          "tree_id": "3bdbf4f74503a7d64369f2267050bfaf64adc664",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/7e65abb1808126994339b9990a543378c6f2af4c"
        },
        "date": 1745574683752,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022276073200000003,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01283053400666667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008604603046666763,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1558551507333334,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "363911+pepoviola@users.noreply.github.com",
            "name": "Javier Viola",
            "username": "pepoviola"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "116472ec1d813cb17a036b5fbcab5a82f9d5d11e",
          "message": "migrate parachain-templates tests to `gha` (#8226)\n\nmigrate\n[parachain-template](https://github.com/paritytech/polkadot-sdk/blob/master/.gitlab/pipeline/zombienet/parachain-template.yml)\npipeline to gha.",
          "timestamp": "2025-04-25T09:03:23Z",
          "tree_id": "3a7aa53b04e7ba7813ba82cd247d27a01975ee63",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/116472ec1d813cb17a036b5fbcab5a82f9d5d11e"
        },
        "date": 1745581978542,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022404750106666666,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013153820620000008,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1558497606333334,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008863863406666747,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "jesse.rafters@gmail.com",
            "name": "Jesse Rafters",
            "username": "Wolfenheimm"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c854f7c6b7291154072d8e931eddb426f98217fc",
          "message": "Check umbrella version (#8250)\n\n# Description\n\nThis PR fixes the issue where check-umbrella fails unless the proper\numbrella crate version is hardcoded into the workflow. The solution adds\nthe version detection logic to properly determine the umbrella crate\nversion by:\n\n1. Using cargo metadata & jq to extract the version, specifying\numbrella/cargo.toml\n2. Falling back to using version 0.1.0 if metadata fails\n\nFixes https://github.com/paritytech/polkadot-sdk/issues/8029\n\n## Integration\n\nNo integration changes are required for downstream projects.  \nThe workflow will now always use the version from `cargo metadata` if\navailable, or fallback to `0.1.0` if not.\nNo environment variables or external configuration changes are needed.\n\n## Review Notes\n\n- Modified version extraction logic in `check-umbrella` job to\ndynamically determine the correct version\n\n# Checklist\n\n* [x] My PR includes a detailed description as outlined in the\n\"Description\" and its two subsections above.\n* [x] My PR follows the labeling requirements of this project (at\nminimum one label for `T` required)\n* [ ] I have made corresponding changes to the documentation (if\napplicable)\n* [ ] I have added tests that prove my fix is effective or that my\nfeature works (if applicable)\n\n---------\n\nCo-authored-by: Iulian Barbu <14218860+iulianbarbu@users.noreply.github.com>",
          "timestamp": "2025-04-25T11:57:33Z",
          "tree_id": "2bf8afab83106ddae4ec228812760ea03d3abc5b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c854f7c6b7291154072d8e931eddb426f98217fc"
        },
        "date": 1745588083247,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02235412098,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012935435373333328,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15648804687333337,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008821311393333413,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "claravanstaden64@gmail.com",
            "name": "Clara van Staden",
            "username": "claravanstaden"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8da42e8faeba3e0ae55d6983c12ba5676d9e14de",
          "message": "Snowbridge - V1 - Adds 2 hop transfer to Rococo (#7956)\n\nAdds a test to demonstrate a 2-hop (Ethereum to Westend AH, second\ntransaction from Westend AH to Rococo AH) transfer to Rococo AH (and\nback to Ethereum in a 2-hop fashion as well).",
          "timestamp": "2025-04-25T13:16:45Z",
          "tree_id": "de56c889b287517fcf993e8d4b4b2bdb0b3cbf1e",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/8da42e8faeba3e0ae55d6983c12ba5676d9e14de"
        },
        "date": 1745594650122,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008696185940000104,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01285862174666667,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15745606920000008,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022555468073333335,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "evgeny@parity.io",
            "name": "Evgeny Snitko",
            "username": "AndWeHaveAPlan"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "0171ff8f070bf6b805dfa922af552283782f3309",
          "message": "push to dockerhub (#8322)\n\nPush images to dockerhub paritypr org in addition to private google\nregistry\nfix https://github.com/paritytech/devops/issues/3976",
          "timestamp": "2025-04-25T15:30:01Z",
          "tree_id": "64a2e7031b5220c0f3b9c97c059efe80ed8b919e",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/0171ff8f070bf6b805dfa922af552283782f3309"
        },
        "date": 1745598879721,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15800008990666675,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013005085366666667,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02256656847333333,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008796997613333427,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "hrishav@parity.io",
            "name": "castillax",
            "username": "castillax"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7e5b993c32565f753e7904074ed3e5775a2838d5",
          "message": "Add new host APIs set_storage_or_clear and get_storage_or_zero (#7857)\n\n# Description\n\n*This PR introduces two new storage API functions—set_storage_or_clear\nand get_storage_or_zero—which provide fixed‑size (32‑byte) storage\noperations. These APIs are an attempt to match Ethereum’s SSTORE\nsemantics. These APIs provide additional functionality for setting and\nretrieving storage values and clearing storage when a zero value is\nprovided and returning zero bytes when a key does not exist.*\n\nFixes #6944 \n## Review Notes\n\n* Changes in `runtime.rs`\nAdded the set_storage_or_clear function to set storage at a fixed\n256-bit key with a fixed 256-bit value. If the provided value is all\nzeros, the key is cleared.\nAdded the get_storage_or_zero function to read storage at a fixed\n256-bit key and write back a fixed 256-bit value. If the key does not\nexist, 32 bytes of zero are written back.\n* Changes in `storage.rs`\nAdded test cases to cover the new set_storage_or_clear and\nget_storage_or_zero APIs.\n.\n\n```\n// Example usage of the new set_storage_or_clear function\nlet existing = api::set_storage_or_clear(StorageFlags::empty(), &KEY, &VALUE_A);\nassert_eq!(existing, None);\n\n// Example usage of the new get_storage_or_zero function\nlet mut stored: [u8; 32] = [0u8; 32];\nlet _ = api::get_storage_or_zero(StorageFlags::empty(), &KEY, &mut stored);\nassert_eq!(stored, VALUE_A);\n```\n\n*All existing tests pass*\n\n# Checklist\n\n* [x] My PR includes a detailed description as outlined in the\n\"Description\" and its two subsections above.\n* [x] My PR follows the [labeling requirements](\n\nhttps://github.com/paritytech/polkadot-sdk/blob/master/docs/contributor/CONTRIBUTING.md#Process\n) of this project (at minimum one label for `T` required)\n* External contributors: ask maintainers to put the right label on your\nPR.\n* [x] I have made corresponding changes to the documentation (if\napplicable)\n* [x] I have added tests that prove my fix is effective or that my\nfeature works (if applicable)\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>\nCo-authored-by: xermicus <cyrill@parity.io>",
          "timestamp": "2025-04-25T16:17:27Z",
          "tree_id": "ad4cf14d66c3be4ce7fc4ac8ec8c23ccfc6af0af",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/7e5b993c32565f753e7904074ed3e5775a2838d5"
        },
        "date": 1745602410351,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012892285433333331,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022365030926666675,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15782645570000006,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008512207960000087,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "egor@parity.io",
            "name": "Egor_P",
            "username": "EgorPopelyaev"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "aa67e2dbda7d68238b62325dec791af157c7ccaf",
          "message": "[CI/CD] Use original PR name in prdoc check for the backport PR's to the stable branches (#8329)\n\nThis PR adjusts the `check-prdoc` flow so that if it runs for the\nbackport PR's, the PR number will be extracted from the PR title and the\nrenaming of the prdoc file won't be needed.\n\nCloses: https://github.com/paritytech/release-engineering/issues/258",
          "timestamp": "2025-04-25T18:06:23Z",
          "tree_id": "e15080408b6875550386755116462fabdc37c26f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/aa67e2dbda7d68238b62325dec791af157c7ccaf"
        },
        "date": 1745607852753,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008646653846666753,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15578793288666667,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022327844173333337,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012719908266666665,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "117115317+lrubasze@users.noreply.github.com",
            "name": "Lukasz Rubaszewski",
            "username": "lrubasze"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2460ec55149d6b4253cbed7391df77c30026dde6",
          "message": "[CI] Improve GH build status checking (#8331)\n\nThis is to address cases, when `gh run ls` returns more than one status\n(when the GH workflow was triggered multiple times for given SHA).\nOtherwise multiple statuses are stored within STATUS variable preventing\nthe workflow from finishing.\n \neg.\nOld command:\n```bash\ngh run ls -c 678cbe5d4fcb89d166ea0e75bfeb146789795fd0 -w \"Build and push images\" \\\n    --json name,status --jq '.[] | select(.name == \"Build and push images\") | .status'\n```\nOutputs:\n```\ncompleted\ncompleted\n```\n\nNew command:\n```bash\ngh run ls -c 678cbe5d4fcb89d166ea0e75bfeb146789795fd0 -w \"Build and push images\" \\\n    --json status,databaseId --jq 'max_by(.databaseId) | .status'\n```\nOutputs:\n```\ncompleted\n```\n\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-04-26T22:51:04Z",
          "tree_id": "c3fe53ad233ac31d106220fe7e2f098fac387b43",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/2460ec55149d6b4253cbed7391df77c30026dde6"
        },
        "date": 1745711305483,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008589044506666746,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15583663944666667,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022380874386666662,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012964098186666663,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alin@parity.io",
            "name": "Alin Dima",
            "username": "alindima"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5340da2f37374cabe299d66aabe3d6f959f121c9",
          "message": "fix synchronous backing test (#8338)\n\nFixes https://github.com/paritytech/polkadot-sdk/issues/8131\n\nAdds a synchronous backing test runtime to `test-parachain`. The test\nwas flaky due to bugs in the old cumulus image being used (pre async\nbacking)",
          "timestamp": "2025-04-28T13:06:13Z",
          "tree_id": "dcee5b588b06f21cc191cbf94e54d598b1f1092d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/5340da2f37374cabe299d66aabe3d6f959f121c9"
        },
        "date": 1745849256121,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013142022313333333,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022463121406666668,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15669187489333333,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00865007367333342,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alex.theissen@me.com",
            "name": "Alexander Theißen",
            "username": "athei"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "398bbfccf752200d7aaeb75fddb099c5606c0bbd",
          "message": "pallet_revive: Replace adhoc pre-compiles with pre-compile framework (#8262)\n\nThis PRs adds the ability to define custom pre-compiles from outside the\npallet. Before, all pre-compiles were hard coded as part of the pallet.\n\n## Design\n1. Adding a pre-compile is as easy as implementing the new `Precompile`\ntrait on any type. It can be added to the pallet by passing it into\n`Config::Precompiles`. This config know excepts a tuple of multiple\ntypes that each implement `Precompile`.\n2. Each pre-compile has to implement Solidity ABI. Meaning its inputs\nand outputs are encoded according to Eth ABI. This makes writing a\npre-compile much simpler since it doesn't have to implement its own\ndecoding logic. More importantly: It makes it trivial to consume the API\nfrom a Solidity contract.\n3. We constrain the address space of pre-compiles to a safe range so\nthat they cannot accidentally match a wide range creating a collision\nwith real contracts.\n4. We check that pre-compile address ranges do not overlap at compile\ntime.\n5. Pre-compiles behave exactly as a normal contract. They exist as\nframes on the call stack and the environment they observe is their own\n(not the one of the calling contract). They can also be delegate called\nwhich changes the semantics in the same way as for normal contracts:\nThey observe the environment of the calling contract.\n6. They can also be called by the origin without any other contract\nin-between.\n\nCheck the rustdocs of the `precompile` module on how to write a\npre-compile.\n\n## Changes\n1. A new module `precompiles` is added that contains the framework to\nwrite pre-compiles. It also contains the sub module `builtin` that\ncontains hard coded pre-compiles which exist Ethereum.\n2. The `pure_precompiles` module was deleted since all its pre-compiles\nwere ported over to the new framework and are now housed in `builtin`.\n4. The `CallSetup` type is moved outside of the `benchmarking` module\nbecause it is also needed for testing code now. It is intended to be\nused for implementors outside of the crate to test the pre-compiles (in\naddition to benchmarking them).\n\n## Follow Ups\n- https://github.com/paritytech/polkadot-sdk/issues/8363\n- https://github.com/paritytech/polkadot-sdk/issues/8364\n- https://github.com/paritytech/polkadot-sdk/issues/8362\n\nFixes [#6716](https://github.com/paritytech/polkadot-sdk/issues/6716)\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: PG Herveou <pgherveou@gmail.com>\nCo-authored-by: xermicus <cyrill@parity.io>",
          "timestamp": "2025-04-28T17:29:47Z",
          "tree_id": "bcd8512efbab68b00025d0055779d5651f6f06c7",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/398bbfccf752200d7aaeb75fddb099c5606c0bbd"
        },
        "date": 1745864901738,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15614801552666674,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01313768098666667,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02229946961999999,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008793471426666742,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alexandre.balde@parity.io",
            "name": "Alexandre R. Baldé",
            "username": "rockbmb"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4da143e714fd5a64a35168e74150765a1592258a",
          "message": "Add event to pure proxy deletion (#7995)\n\n# Description\n\n~~The `PureCreated` event, used in the `pure_proxy` extrinsic, is used\nto track the creation of pure proxies.\nIt now has the `extrinsic_index` of the `pure_proxy` call from the block\nin which it was executed, which is required to kill the pure proxies\nlater.~~\n\nThe `pallet_proxy::kill_pure` extrinsic now emits an event.\n\n## Integration\n\nN/A\n\n## Review Notes\n\nN/A",
          "timestamp": "2025-04-29T01:10:02Z",
          "tree_id": "ac92d42efdb5a7d8d5ba3789bb035ec6f5b490fa",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4da143e714fd5a64a35168e74150765a1592258a"
        },
        "date": 1745892518121,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02229709380666668,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008643572086666766,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15539929389333337,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012664516299999998,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2ae2779a07524be05c3ee40cb8b5e341ec1ca15d",
          "message": "slot-based-collator: Do not skip slots (#8243)\n\nEnsure that we do not skip a slot. This could for example happen if the\nwork being done in the previous slot was taking until the end of the\nlast slot or a little bit longer.",
          "timestamp": "2025-04-29T07:01:27Z",
          "tree_id": "03fc24890caf10c78a72b9872290fe6e4c251d80",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/2ae2779a07524be05c3ee40cb8b5e341ec1ca15d"
        },
        "date": 1745913959959,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008596355560000104,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013188626799999997,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15705186822000006,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022485690566666668,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e1aedc15b1b4bb835c4bba8153c86021fdf8fbfa",
          "message": "pallet-revive: Add net-listening rpc (#8273)\n\nAdd\n[net_listening](https://ethereum.org/en/developers/docs/apis/json-rpc/#net_listening)\nrpc method\nDoes not seem to be required but is used by some wallet like subwallet\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>",
          "timestamp": "2025-04-29T09:29:25Z",
          "tree_id": "dccded93271c3880ebe4fb6d9967a8bebf3bdb20",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e1aedc15b1b4bb835c4bba8153c86021fdf8fbfa"
        },
        "date": 1745922469354,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15608495913333337,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022320685193333332,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012991257599999997,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008544949893333424,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aman@parity.io",
            "name": "Aman",
            "username": "aman4150"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9abe25d974f6045d1e97537e0f1e860459053722",
          "message": "wasm-builder: Fix crate patching logic for the runtime blob (#8244)\n\nthe current code overwrites the patches already applied to the final\nruntime blob workspace toml.\n\nNo pr-doc is required because this change is for riscv backend which is\nnot released yet.\n\n---------\n\nSigned-off-by: Aman <aman@parity.io>\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-04-29T11:35:18Z",
          "tree_id": "984f19001781045abadbdc7c149b5ef0467cad43",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/9abe25d974f6045d1e97537e0f1e860459053722"
        },
        "date": 1745930893011,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012856933366666672,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022265519526666666,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15622455803333343,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00844030067333342,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "37865735+clangenb@users.noreply.github.com",
            "name": "clangenb",
            "username": "clangenb"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ebacdc2264139c18062a189f83eebc120ee9a34b",
          "message": "Allow genesis-presets to be patched and remove native runtime calls from the staging-node-cli (#8323)\n\nThis allows that we can update the hardcoded genesis-presets with some\njson-values, closes\nhttps://github.com/paritytech/polkadot-sdk/issues/7748.\n\nIdeally, we should be able to remove calls into the native runtime with\nthis (i.e., don't link the runtime in the node's code).\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Michal Kucharczyk <1728078+michalkucharczyk@users.noreply.github.com>",
          "timestamp": "2025-04-29T15:14:38Z",
          "tree_id": "8efdca0b10297c7d46c4b44b1eb84cdd4f8d13ad",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ebacdc2264139c18062a189f83eebc120ee9a34b"
        },
        "date": 1745943328520,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022478970319999993,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15686276564,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008774370526666762,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013195201666666665,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1431590+nkpar@users.noreply.github.com",
            "name": "Nikolai Kozlov",
            "username": "nkpar"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0c05af0400e21a666969abfcb73ff50bdda59612",
          "message": "Update URLs to use `polkadot.com` instead of outdated domains (#8361)\n\nUpdate URLs to use `polkadot.com` instead of outdated domains\n\nReplaced most of instances of `polkadot.network` and old Polkadot URL\nstructures with the updated `polkadot.com` equivalents where applicable.\n\nAlso added user-agent parameters to lychee for better link checking.\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: Dónal Murray <donal.murray@parity.io>",
          "timestamp": "2025-04-29T20:58:19+02:00",
          "tree_id": "dce49c16067386f36ede6bd6258684443688d2fa",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/0c05af0400e21a666969abfcb73ff50bdda59612"
        },
        "date": 1745954786510,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012878875546666668,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02247585584666666,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008534544460000081,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15681969031333337,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d88a7e4be7fdbab462d9ea3a9c98c9f7a9cfb66a",
          "message": "[pallet-revive] add fee_history (#8197)\n\nAdd eth_feeHistory method to the eth-rpc\nfix https://github.com/paritytech/contract-issues/issues/39\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: xermicus <cyrill@parity.io>",
          "timestamp": "2025-04-29T21:56:28Z",
          "tree_id": "023241dd9936cd622ac727ec75aaef432bdea8c1",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d88a7e4be7fdbab462d9ea3a9c98c9f7a9cfb66a"
        },
        "date": 1745967612385,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012817611406666662,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022293377886666663,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15545538330666667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008507101113333419,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48632512+s0me0ne-unkn0wn@users.noreply.github.com",
            "name": "s0me0ne-unkn0wn",
            "username": "s0me0ne-unkn0wn"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c1a246aabfae090261198bb8d3d6e5cf1e0fef84",
          "message": "Fix FFI type diversion (#8261)\n\nA #7375 follow-up fix",
          "timestamp": "2025-04-30T09:38:55Z",
          "tree_id": "d54159867d9e531b316b3b7988526b2f25a88903",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c1a246aabfae090261198bb8d3d6e5cf1e0fef84"
        },
        "date": 1746010361224,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 432.5133333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022347021233333333,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15745391270000014,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012933126960000003,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008515517786666772,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "james@jsdw.me",
            "name": "James Wilson",
            "username": "jsdw"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7d49f74632f1499bb0c835e3a9d4714d8733250c",
          "message": "Update to frame-metadata 22 (#8327)\n\nThe main change in [the proposed\n`frame-metadata@22`](https://github.com/paritytech/frame-metadata/pull/101)\nis that the deprecation information was tidied to remove some possible\nbut confusing states, which simplifies making use of it in client code.\n\nOne change made in the process is that **the ability to deprecate the\nentire of the Call/Error/Event enum was removed**.\n\nIn other words, prior to this change a pallet author could do either of\nthese:\n\n```rust\n/// Deprecate the entire enum (but this is ignored if any variants are deprecated):\n#[deprecated(note = \"This is deprecated\")]\n#[pallet::event]\n#[pallet::generate_deposit(pub(super) fn deposit_event)]\npub enum Event<T: Config<I>, I: 'static = ()> {\n    /// An account was created with some free balance.\n    Endowed { account: T::AccountId, free_balance: T::Balance },\n    /// An account was removed whose balance was non-zero but below ExistentialDeposit,\n    /// resulting in an outright loss.\n    DustLost { account: T::AccountId, amount: T::Balance },\n}\n\n/// Deprecate individual variants:\n#[pallet::event]\n#[pallet::generate_deposit(pub(super) fn deposit_event)]\npub enum Event<T: Config<I>, I: 'static = ()> {\n    /// An account was created with some free balance.\n    #[deprecated(note = \"This is deprecated\")]\n    Endowed { account: T::AccountId, free_balance: T::Balance },\n    /// An account was removed whose balance was non-zero but below ExistentialDeposit,\n    /// resulting in an outright loss.\n    #[deprecated(note = \"This is deprecated too\")]\n    DustLost { account: T::AccountId, amount: T::Balance },\n}\n```\n\nAfter this PR, **a pallet author can still deprecate individual\nvariants, but not the entire enum**.\n\nSome reasoning behind this change:\n1. It's unlikely that the entire of these enums would ever be entirely\ndeprecated.\n2. In the case of calls, there is no obvious place to put such a warning\nanyway.\n3. Sticking to just deprecating variants makes it a little simpler for\nclient code; fewer cases to handle during codegen or whatever.\n4. Avoid a confusing state where `#[deprecation]` can be put on the\nentire enum _and_ some variants, which leads to the enum-wide\ndeprecation warning being ignored.\n\nSee https://github.com/paritytech/frame-metadata/issues/100 for some\nmore context on the changes.\n\n# Notes\n\nThis PR currently pulls `frame-metadata` via a github branch, for\ntesting purposes. If we are happy here, I'll merge that PR, release\n`frame-metadata` and remove the github dependency before we merge this.",
          "timestamp": "2025-04-30T11:48:55Z",
          "tree_id": "360f9780e673f09ff942eb4f8f90915892388b2d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/7d49f74632f1499bb0c835e3a9d4714d8733250c"
        },
        "date": 1746019240296,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.01276953754,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02261819317333333,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008655515933333422,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15822911902666667,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "dmitry@markin.tech",
            "name": "Dmitry Markin",
            "username": "dmitry-markin"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3ff1b1db36260cbc47297ab753e2dcec1f5999fd",
          "message": "RFC-0008: Store parachain bootnodes in the relay chain DHT (#8072)\n\nImplement [RFC-0008 \"DHT\nbootnodes\"](https://polkadot-fellows.github.io/RFCs/approved/0008-parachain-bootnodes-dht.html).\nClose https://github.com/paritytech/polkadot-sdk/issues/1825.\n\nWith this mechanism, every parachain node is eligible to act as a\nbootnode. If its peer ID is close to the parachain key for the current\nrelay chain epoch, it becomes discoverable by other parachain nodes via\nthe relay chain DHT. This removes the need to specify bootnodes in the\nparachain chainspec, eliminating a single point of failure and\nsimplifying things for parachain operators.\n\nThe mechanism is enabled by default. The embedded DHT bootnode can be\ndisabled using the `--no-dht-bootnode` flag, and discovery of such nodes\ncan be disabled with the `--no-dht-bootnode-discovery` flag.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-04-30T13:09:42Z",
          "tree_id": "a8443fbc2d8d4551eb75f5a4139f52c9351c868d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/3ff1b1db36260cbc47297ab753e2dcec1f5999fd"
        },
        "date": 1746025525218,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008736139813333422,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15625718909333336,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012785708540000001,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022288876059999994,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "216b81ab6b615a35c6b0d9ab8d533d1c77c9ae56",
          "message": "Update tests-evm.yml (#8387)\n\nUpdate the sha for the evm-test suite\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-04-30T18:37:37Z",
          "tree_id": "2725c6183c9674a2f5e49238d0749f5d692b8d08",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/216b81ab6b615a35c6b0d9ab8d533d1c77c9ae56"
        },
        "date": 1746041765937,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012656472793333335,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15554766163333328,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008592346800000077,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02224795828666666,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "60601340+lexnv@users.noreply.github.com",
            "name": "Alexandru Vasile",
            "username": "lexnv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9869517b4dc851469e6d854a263f82ff32133524",
          "message": "networking: Update litep2p network backend to v0.9.4 (#8373)\n\n# Litep2p Release\n\nThis release brings several improvements and fixes to litep2p, advancing\nits stability and readiness for production use.\n\n### Performance Improvements\n\nThis release addresses an issue where notification protocols failed to\nexit on handle drop, lowering CPU usage in scenarios like\nminimal-relay-chains from 7% to 0.1%.\n\n### Robustness Improvements\n\n- Kademlia:\n- Optimized address store by sorting addresses based on dialing score,\nbounding memory consumption and improving efficiency.\n- Limited `FIND_NODE` responses to the replication factor, reducing data\nstored in the routing table.\n- Address store improvements enhance robustness against routing table\nalterations.\n\n- Identify Codec:\n- Enhanced message decoding to manage malformed or unexpected messages\ngracefully.\n\n- Bitswap:\n- Introduced a write timeout for sending frames, preventing protocol\nhangs or delays.\n\n### Testing and Reliability\n\n- Fuzzing Harness: Added a fuzzing harness by SRLabs to uncover and\nresolve potential issues, improving code robustness. Thanks to @R9295\nfor the contribution!\n\n- Testing Enhancements: Improved notification state machine testing.\nThanks to Dominique (@Imod7) for the contribution!\n\n### Dependency Management\n\n- Updated all dependencies for stable feature flags (default and\n\"websocket\") to their latest versions.\n\n- Reorganized dependencies under specific feature flags, shrinking the\ndefault feature set and avoiding exposure of outdated dependencies from\nexperimental features.\n\n### Fixed\n\n- notifications: Exit protocols on handle drop to save up CPU of\n`minimal-relay-chains`\n([#376](https://github.com/paritytech/litep2p/pull/376))\n- identify: Improve identify message decoding\n([#379](https://github.com/paritytech/litep2p/pull/379))\n- crypto/noise: Set timeout limits for the noise handshake\n([#373](https://github.com/paritytech/litep2p/pull/373))\n- kad: Improve robustness of addresses from the routing table\n([#369](https://github.com/paritytech/litep2p/pull/369))\n- kad: Bound kademlia messages to the replication factor\n([#371](https://github.com/paritytech/litep2p/pull/371))\n- codec: Decode smaller payloads for identity to None\n([#362](https://github.com/paritytech/litep2p/pull/362))\n\n### Added\n\n- bitswap: Add write timeout for sending frames\n([#361](https://github.com/paritytech/litep2p/pull/361))\n- notif/tests: check test state\n([#360](https://github.com/paritytech/litep2p/pull/360))\n- SRLabs: Introduce simple fuzzing harness\n([#367](https://github.com/paritytech/litep2p/pull/367))\n- SRLabs: Introduce Fuzzing Harness\n([#365](https://github.com/paritytech/litep2p/pull/365))\n\n### Changed\n\n- features: Move quic related dependencies under feature flag\n([#359](https://github.com/paritytech/litep2p/pull/359))\n- tests/substrate: Remove outdated substrate specific conformace testing\n([#370](https://github.com/paritytech/litep2p/pull/370))\n- ci: Update stable dependencies\n([#375](https://github.com/paritytech/litep2p/pull/375))\n- build(deps): bump hex-literal from 0.4.1 to 1.0.0\n([#381](https://github.com/paritytech/litep2p/pull/381))\n- build(deps): bump tokio from 1.44.1 to 1.44.2 in /fuzz/structure-aware\n([#378](https://github.com/paritytech/litep2p/pull/378))\n- build(deps): bump Swatinem/rust-cache from 2.7.7 to 2.7.8\n([#363](https://github.com/paritytech/litep2p/pull/363))\n- build(deps): bump tokio from 1.43.0 to 1.43.1\n([#368](https://github.com/paritytech/litep2p/pull/368))\n- build(deps): bump openssl from 0.10.70 to 0.10.72\n([#366](https://github.com/paritytech/litep2p/pull/366))\n\n---------\n\nSigned-off-by: Alexandru Vasile <alexandru.vasile@parity.io>\nCo-authored-by: Dmitry Markin <dmitry@markin.tech>",
          "timestamp": "2025-05-01T09:44:22Z",
          "tree_id": "3dd45fb88c52f648592907b2962ad9eb03658ace",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/9869517b4dc851469e6d854a263f82ff32133524"
        },
        "date": 1746098015329,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15797395954000001,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012919264013333334,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022643429673333337,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008653532160000093,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "5588131+kianenigma@users.noreply.github.com",
            "name": "Kian Paimani",
            "username": "kianenigma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "03f3c2991d1175913bf9d66e0e5b54e543a34ca4",
          "message": "fix westend's election currency to vote conversion (#8307)\n\nWithin the staking elections, while the balance is `u128`, we want to\ndownscale all of them to `u64` for further calculations (e.g. within ).\nFor this, we divide total issuance by u64::max, and downscale everyone\nby that. This is what `u128CurrencyToVote` is doing, which is fed to\n`pallet-staking` as `type CurrencyToVote`.\n\natm, the `wnd` total issuance is around 100 times more than `u64::MAX`,\nso all stakes in the election process get downscaled by a 100. Note that\nthis downscaled version is also used in `voter-list`, which is why we\nsee (reported by Nova) that a nominator with 100 WND is in the\n`voter-list` bag associated with `1 WND`.\n\nThe fix proposed here is also a sane way to fix this: even if the total\nissuance is more than u64::max, the likelihood of a single staker's\nstake being more than u64::max is super low. And if it is, so be it.\nThis would mean that whatever stake they have above u64::max cannot be\nused in the staking election process and would remain unused.\n\nBeyond changing westend, this PR will add a check to the `try-state` of\nboth `pallet-staking` and `pallet-staking-async` to warn us about this.\n\nLong term fix: https://github.com/paritytech/polkadot-sdk/issues/406\n\n---------\n\nCo-authored-by: Ankan <10196091+Ank4n@users.noreply.github.com>",
          "timestamp": "2025-05-01T11:03:41Z",
          "tree_id": "8e7a6eb9c3665c913fa355bc97db9f2e44e52a74",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/03f3c2991d1175913bf9d66e0e5b54e543a34ca4"
        },
        "date": 1746102064849,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012821328246666663,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008567248480000077,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15564741370666674,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02230493438,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "5588131+kianenigma@users.noreply.github.com",
            "name": "Kian Paimani",
            "username": "kianenigma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fc9addabf310dc86f8e6752a131748a85af7a685",
          "message": "[AHM] add election-provider-multi-block::minimum-score to genesis config (#8339)\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Ankan <10196091+Ank4n@users.noreply.github.com>",
          "timestamp": "2025-05-01T20:56:43Z",
          "tree_id": "f9bae5fdf065fa41a05ca64e7223a62e41f4e2a6",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/fc9addabf310dc86f8e6752a131748a85af7a685"
        },
        "date": 1746136519969,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012779188426666666,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00888260658000006,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022289544273333337,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1562167355733334,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "5588131+kianenigma@users.noreply.github.com",
            "name": "Kian Paimani",
            "username": "kianenigma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e7ca25fe2b29434a62df8f493a7b4f63f6bc71c7",
          "message": "add staking/election related view functions (#8337)\n\nAdds two self-explanatory view functions to staking/election related\npallets. To be used by wallets wishing to perform rebag operation, and\nuse by staking miner(s) to know how much deposit they need in advance.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Ankan <10196091+Ank4n@users.noreply.github.com>\nCo-authored-by: Giuseppe Re <giuseppe.re@parity.io>",
          "timestamp": "2025-05-02T10:37:44Z",
          "tree_id": "ca37acdb45eb604a7003d320a317db2f993f6150",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e7ca25fe2b29434a62df8f493a7b4f63f6bc71c7"
        },
        "date": 1746186690418,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022384301979999997,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008676976500000079,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15663948960666665,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013084209746666664,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41779041+alvicsam@users.noreply.github.com",
            "name": "Alexander Samusev",
            "username": "alvicsam"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "98cefb870b0fe6dbc7fa6d02ffefd1268ff2a5b7",
          "message": "[cmd-bot] Move cmd output to artifacts  (#8407)\n\nPR removes some output for cmd-bot and moves it into artifacts.\n\ncc https://github.com/paritytech/polkadot-sdk/issues/8195",
          "timestamp": "2025-05-02T12:21:10Z",
          "tree_id": "8e9b6c4331838b5697bf8a93b185eb09f55f2f5f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/98cefb870b0fe6dbc7fa6d02ffefd1268ff2a5b7"
        },
        "date": 1746192429455,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15772520756000005,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012967798913333333,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022493788006666668,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008582427833333423,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ndk@parity.io",
            "name": "Andrii",
            "username": "x3c41a"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e85f0ad7d49e25eb3f641481cd40042b8ff9d204",
          "message": "Remove TakeFirstAssetTrader from AH Westend and Rococo (#8376)\n\n## Description\n\nRemoved `TakeFirstAssetTrader` from Asset Hub Westend and Rococo.\nImproved macros, fixed tests.\n\nThis implies asset sufficiency no longer guarantees that weight can also\nbe bought with it. `SwapFirstAssetTrader` is used instead which will\nattempt to swap some of the given asset for the required amount of\nnative asset to buy weight. This may or may not succeed depending on\nwhether there is a local pool present with enough liquidity to serve the\nswap.\n\n## Review notes\n\nAdditionally parametrised macro and fixed Westend test: weight swapping\nwas failing at [this\nline](https://github.com/paritytech/polkadot-sdk/blob/44ae6a8bebd23a8ffac02d71c6e74ee889c3ab00/substrate/frame/asset-conversion/src/lib.rs#L903)\nwith around 100x difference thus had to modify the macro.\n\nFixes #8233\n\n---------\n\nCo-authored-by: Adrian Catangiu <adrian@parity.io>",
          "timestamp": "2025-05-02T17:08:43Z",
          "tree_id": "e58778ad894b25476c0bb71e86f408abf3e1309c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e85f0ad7d49e25eb3f641481cd40042b8ff9d204"
        },
        "date": 1746209114219,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022305833499999997,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008410849986666734,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15607509281333326,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012960957619999998,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "gui.thiolliere@gmail.com",
            "name": "Guillaume Thiolliere",
            "username": "gui1117"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "db5ee7daaf34566263a91819f0db731bb8a2b273",
          "message": "Add methods in the statement store RPCs to get the statements and not just the statement data. (#8314)\n\nSome statement contain a proof with the signature of the statement, this\nproof is useful to assert that the statement comes from the expected\naccount.\n\nAlternatively we can always add some signature inside the encrypted\ndata, but this means we sign 2 times and it isn't necessary in some\ncases.\n\nWhat do you think @arkpar ?\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-05T03:57:03Z",
          "tree_id": "5a257091a319bc843e49e03757ad2e8137830c59",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/db5ee7daaf34566263a91819f0db731bb8a2b273"
        },
        "date": 1746420841924,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.1569380908066667,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013154952853333336,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02238010311333333,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00855900269333343,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "claravanstaden64@gmail.com",
            "name": "Clara van Staden",
            "username": "claravanstaden"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "632eed96b4560a45ce41c6f6bedec9a4c745a604",
          "message": "Snowbridge V2 Audit Fixes (#8240)\n\nThis PR contains the following fixes after the Snowbridge V2 audit issue\nwere found.\n\n## Failure to advance nonce on error allows repeated execution of failed\nevents without relayer incentives (issue 1)\n\n_Severity: Critical_\n\nIn `bridges/snowbridge/pallets/inbound-queue-v2/src/lib.rs:216`, the\nsubmit extrinsic allows submission of inbound events originating from\nEthereum. These events are decoded into messages and processed by the\nprocess_message function.\n\nHowever, if the send_xcm operation fails, the transaction reverts\nwithout storing the nonce or registering rewards. Consequently, the same\ninbound message remains unmarked and eligible for re-execution.\n\nThis creates multiple risks: the same message can be replayed multiple\ntimes, potentially in varying orders and at a specific timing decided by\nthe relayer under diff erent conditions, potentially causing unintended\nstate transitions.\n\nAdditionally, since rewards are only registered upon successful\nexecution, relayers are incentivized to reorder messages to maximize\nsuccessful transactions, potentially at the expense of the user and\nsystem fairness.\n\n**Recommendation**\nWe recommend storing the nonce and reward relayers also in case the\nsend_xcm operation fails.\n\n**Snowbridge notes:**\nWe dispute this finding, because the inbound-queue can never replay\nmessages because it checks the nonce. Also, by allowing send_xcm to fail\nwithout reverting the whole transaction, we are essentially killing the\nmessage and preventing it from being retried at a later time. This will\nlead to a loss of user funds. Message sends can fail for a number of\nreasons, like if the HRMP queues between parachains are full, and that's\nsomething we don't have control over. So we need to allow processing a\nmessage again if the send XCM fails. We did however move setting the\nnonce to before the send XCM method, even though it does not make a\ndifference functionally, it is better semantically.\n\n## Reward misallocation due to ignored `reward_address` field (issue 5)\n_Severity: Major_\n\nIn `bridges/snowbridge/pallets/outbound-queue-v2/src/lib.rs:374`, the\nprocess_delivery_receipt function processes a DeliveryReceipt parameter.\n\nHowever, while the function correctly validates the gateway and nonce\nfields, it disregards the `reward_address` field contained within the\nDeliveryReceipt structure.\n\nAs a result, delivery rewards are always assigned to the transaction\nsender rather than to the beneficiary specified by the `reward_address`.\n\n**Recommendation**\nWe recommend validating and utilizing all fields of the DeliveryReceipt\nstructure to correctly allocate rewards.\n\n## Non-sequential call indexes in systemv2 pallet (issue 15)\n_Severity: Informational_\n\nIn `bridges/snowbridge/pallets/system-v2/src/lib.rs`, the call indexes\nfor extrinsics are inconsistently assigned.\n\nSpecifically, while indexes 0, 3, and 4 are implemented, indexes 1 and 2\nremain undefined.\n\nAlthough this does not currently pose a functional or security risk, the\nnon-sequential indexing undermines the clarity and consistency of the\ncodebase. In the context of a newly developed pallet, maintaining\norderly call indexes aids in readability, developer experience, and\nfuture maintainability.\n\n**Recommendation:**\nWe recommend assigning sequential call indexes to all implemented\nextrinsics within the `systemv2` pallet.\n\n---\n\n## Incorrect NatSpec in register_token function (issue 17)\n_Severity: Informational_\n\nIn `bridges/snowbridge/pallets/system-v2/src/lib.rs:182`, the\n`register_token` function is documented to include a `fee` parameter,\nbut no such parameter is actually used in the function.\n\n**Recommendation:**\nWe recommend updating the NatSpec documentation to accurately reflect\nthe function parameters and behavior, removing any reference to a\nnon-existent fee.\n\n---\n\n## Potentially confusing message hashing implementation (issue 21)\n_Severity: Informational_\n\nIn `bridges/snowbridge/pallets/system-v2/src/lib.rs:230-235`, the\n`Message` struct includes an id field, which is intended to store the\n`blake2_256` hash of the message itself.\n\nHowever, during the hash computation, the `id` field is first\ninitialized with its default value. The hash is then calculated over the\nstruct containing this default `id`, and only afterward is the computed\nhash assigned back to the id field.\n\nThis approach, while functional, introduces complexity for external\nsystems or tools attempting to verify the message. Verifiers must\nreplicate this specific sequence: extract the `id` value from the\nmessage, reset the `id` field in the struct to its default value,\ncompute the hash, and then compare it against the originally extracted\n`id`.\n\n**Recommendation:**\nWe recommend implementing a wrapper data structure over the Message that\nwould contain its hash as a separate member, not part of the Message\nitself.\n\n**Snowbridge notes:**\nWe used unique_id to generate an ID instead.\n\n---\n\n## Optimize SparseBitmap (issue 22)\n_Severity: Informational_\n\nIn `bridges/snowbridge/primitives/core/src/sparse_bitmap.rs:9`, the\nmapping from buckets to masks is declared, used to define the\nSparseBitmap structure. The type of keys in this mapping is u128.\n\nThen, within lines 22-27, the function `compute_bucket_and_mask` is\ndefined, which accepts a parameter index of type u128. This function is\ncalled both from get and set functions, which are called only with\nnonces of type `u64`. The type of the parameter index can be replaced by\n`u64`.\n\nThe function compute_bucket_and_mask computes the index of the\ncorresponding bucket by dividing the index by 128, so the value range of\nthe output is less than the value range of the input. Hence, the return\ntype of the function, as well as the type of keys in the mapping\ndeclared on line 9, can be declared as `u64`.\n\nCurrently, the Rust implementation of SparseBitmap utilizes 128 times\nmore space than it could.\n\n**Recommendation:**\nWe recommend optimizing the storage consumption by adopting `u64` as the\ntypes of keys in the internal mappings of both Rust and Solidity\nimplementations of SparseBitmap.\n\n---\n\n## Misleading implementation details (issue 25)\n_Severity: Informational_\n\nIn `bridges/snowbridge/primitives/inbound-queue/src/lib.rs:23`, the\ncommentary states that the structure `EthereumLocationsConverterFor` is\ndeprecated. However, it is still used in the V2 source file:\nbridges/snowbridge/primitives/inbound-queue/src/v2/converter.rs.\n\n**Recommendation:**\nWe recommend resolving the aforementioned misleading implementation\ndetails.\n\n---\n\n---------\n\nCo-authored-by: Ron <yrong1997@gmail.com>\nCo-authored-by: Vincent Geddes <117534+vgeddes@users.noreply.github.com>\nCo-authored-by: Adrian Catangiu <adrian@parity.io>\nCo-authored-by: Francisco Aguirre <franciscoaguirreperez@gmail.com>",
          "timestamp": "2025-05-05T14:36:00Z",
          "tree_id": "fa09b0e72a9915c58f1491c20d9833a8b4a37df8",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/632eed96b4560a45ce41c6f6bedec9a4c745a604"
        },
        "date": 1746461011582,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008772193380000076,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022408840713333333,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012804638233333337,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1563327343933334,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "64627729+gap-editor@users.noreply.github.com",
            "name": "Maximilian Hubert",
            "username": "gap-editor"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f32368cb09eafa5d92ed19bbf3ca2269838be8f4",
          "message": "docs (DOCUMENTATION_GUIDELINES.md): fix invalid links  (#8390)\n\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-05-05T23:13:28Z",
          "tree_id": "cb92be5e60fb4a1ac2bfd9ead4da232651ff7b41",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f32368cb09eafa5d92ed19bbf3ca2269838be8f4"
        },
        "date": 1746490602126,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008694725286666753,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15729414894000007,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022607548019999993,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012970359293333327,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "gui.thiolliere@gmail.com",
            "name": "Guillaume Thiolliere",
            "username": "gui1117"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "26ab4113a141dc00fcf3956f1838fbc7784ebe1e",
          "message": "[Tx ext stage 2: 2/4] Introduce `#[pallet::authorize(...)]` macro attribute and `AuthorizeCall` system transaction extension (#6324)\n\n## Meta \n\nThis PR is part of 4 PR:\n* https://github.com/paritytech/polkadot-sdk/pull/6323\n* https://github.com/paritytech/polkadot-sdk/pull/6324\n* https://github.com/paritytech/polkadot-sdk/pull/6325\n* https://github.com/paritytech/polkadot-sdk/pull/6326\n\n## Description\n\n* new attribute `#[pallet::authorize(..)]`, this attributes takes a\nfunction which returns the validity of the call.\n* new attribute `#[pallet::weight_of_authorize(..)]`, same as\n`#[pallet::weight(..)]` defines the pre dispatch weight of the\n`authorize` function. It can also be retrieved from `WeightInfo` under\nthe name: `authorize_$call_name`.\n* new trait `Authorize` in frame-support: implemented on the call for\npallets and runtime, and used by `AuthorizeCall` transaction extension\nin frame-system.\n* new origin variant in frame origin: `Origin::Authorized`: a bit\nsimilar to `Unsigned` but used for general transactions.\n* new transaction extension: `AuthorizeCall` in frame system. This is\nmeant to be used first in the transaction extension pipeline. It will\ncall the authorize function and change the origin to authorized\n* new method: `ensure_authorized`.\n\n## Usage\n\n```rust\n# #[allow(unused)]\n#[frame_support::pallet]\npub mod pallet {\n    use frame_support::pallet_prelude::*;\n    use frame_system::pallet_prelude::*;\n                                                                                   \n    #[pallet::pallet]\n    pub struct Pallet<T>(_);\n                                                                                   \n    #[pallet::config]\n    pub trait Config: frame_system::Config {}\n                                                                                   \n    #[pallet::call]\n    impl<T: Config> Pallet<T> {\n        #[pallet::weight(Weight::zero())]\n        #[pallet::authorize(|_source, foo| if *foo == 42 {\n            let refund = Weight::zero();\n            let validity = ValidTransaction::default();\n            Ok((validity, refund))\n        } else {\n            Err(TransactionValidityError::Invalid(InvalidTransaction::Call))\n        })]\n        #[pallet::weight_of_authorize(Weight::zero())]\n        #[pallet::call_index(0)]\n        pub fn some_call(origin: OriginFor<T>, arg: u32) -> DispatchResult {\n            ensure_authorized(origin)?;\n                                                                                   \n            Ok(())\n        }\n                                                                                   \n        #[pallet::weight(Weight::zero())]\n        // We can also give the callback as a function\n        #[pallet::authorize(Pallet::<T>::authorize_some_other_call)]\n        #[pallet::weight_of_authorize(Weight::zero())]\n        #[pallet::call_index(1)]\n        pub fn some_other_call(origin: OriginFor<T>, arg: u32) -> DispatchResult {\n            ensure_authorized(origin)?;\n                                                                                   \n            Ok(())\n        }\n    }\n                                                                                   \n    impl<T: Config> Pallet<T> {\n        fn authorize_some_other_call(\n            source: TransactionSource,\n            foo: &u32\n        ) -> TransactionValidityWithRefund {\n            if *foo == 42 {\n                let refund = Weight::zero();\n                let validity = ValidTransaction::default();\n                Ok((validity, refund))\n            } else {\n                Err(TransactionValidityError::Invalid(InvalidTransaction::Call))\n            }\n        }\n    }\n                                                                                   \n    #[frame_benchmarking::v2::benchmarks]\n    mod benchmarks {\n        use super::*;\n        use frame_benchmarking::v2::BenchmarkError;\n                                                                                   \n        #[benchmark]\n        fn authorize_some_call() -> Result<(), BenchmarkError> {\n            let call = Call::<T>::some_call { arg: 42 };\n                                                                                   \n            #[block]\n            {\n                use frame_support::pallet_prelude::Authorize;\n                call.authorize(TransactionSource::External)\n                    .ok_or(\"Call must give some authorization\")??;\n            }\n                                                                                   \n            Ok(())\n        }\n    }\n}\n```\n\n---------\n\nCo-authored-by: GitHub Action <action@github.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-06T01:09:15Z",
          "tree_id": "8cc68edbc8c7001f45e148a3aec17f34a310ed62",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/26ab4113a141dc00fcf3956f1838fbc7784ebe1e"
        },
        "date": 1746498274715,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15652136156000004,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.0087815710733334,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01277505993333333,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02222923050666667,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1431590+nkpar@users.noreply.github.com",
            "name": "Nikolai Kozlov",
            "username": "nkpar"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3fca6939199b436400425b2bd129c39319a1b843",
          "message": "Properly fix template generation (#8434)\n\nThis one properly addresses\nhttps://github.com/paritytech/polkadot-sdk/pull/8378\nNow template `Cargo.toml` wll be populated during release time so we\ndont need to alter it in sdk\n\n---------\n\nCo-authored-by: Iulian Barbu <14218860+iulianbarbu@users.noreply.github.com>",
          "timestamp": "2025-05-06T06:47:33Z",
          "tree_id": "c8238af63a2ea2dab6fb8332cf5121234ea46b15",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/3fca6939199b436400425b2bd129c39319a1b843"
        },
        "date": 1746517954210,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008497978540000076,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013219464013333338,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1584717695133334,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02240726002,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "egor@parity.io",
            "name": "Egor_P",
            "username": "EgorPopelyaev"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "bf1ca6f537a996d27a2261562d774ba3a8ce3e04",
          "message": "[CI] Adjust `check-semver` job so that it uses original PR number to check prdoc for the backports PRs (#8435)\n\nThis PR makes the same adjustment, that was done for the `check-prdoc`\njob:\n- In the backports PRs will be used original PR number to check the\nprdoc and introduced changes",
          "timestamp": "2025-05-06T08:09:39Z",
          "tree_id": "03866c81b44dd13d478dda22acfee2243be97904",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/bf1ca6f537a996d27a2261562d774ba3a8ce3e04"
        },
        "date": 1746522981010,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012707363686666672,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02230538200666667,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15635390595333337,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008748671893333403,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "dev@shiposha.com",
            "name": "Daniel Shiposha",
            "username": "mrshiposha"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5802306a39a5845f2b1e566355f2ce8344c7c7b1",
          "message": "XcmPaymentApi::query_weight_to_asset_fee simple common impl (#8281)\n\n# Description\n\nAdd a common implementation for\n`XcmPaymentApi::query_weight_to_asset_fee` to `pallet-xcm`.\n\nThis PR is a simple alternative to #8202 (which could still be useful\nfor other reasons).\nIt uses a workaround instead of a big refactoring.\n\nThe workaround is:\nComputes the weight cost using the provided `WeightTrader`.\nThis function is supposed to be used ONLY in\n`XcmPaymentApi::query_weight_to_asset_fee`\nRuntime API implementation, as it can introduce a massive change to the\ntotal issuance.\nThe provided `WeightTrader` must be the same as the one used in the\nXcmExecutor to ensure\nuniformity in the weight cost calculation.\n\nNOTE: Currently this function uses a workaround that should be good\nenough for all practical\nuses: passes `u128::MAX / 2 == 2^127` of the specified asset to the\n`WeightTrader` as\npayment and computes the weight cost as the difference between this and\nthe unspent amount.\nSome weight traders could add the provided payment to some account's\nbalance. However,\nit should practically never result in overflow because even currencies\nwith a lot of decimal digits\n(say 18) usually have the total issuance of billions (`x * 10^9`) or\ntrillions (`x * 10^12`) at max,\nmuch less than `2^127 / 10^18 =~ 1.7 * 10^20` (170 billion billion).\nThus, any account's balance\nmost likely holds less than `2^127`, so adding `2^127` won't result in\n`u128` overflow.\n\n\n## Integration\n\nThe Runtime builders can use the `query_weight_to_asset_fee` provided by\n`pallet-xcm` in\ntheir XcmPaymentApi implementation.\n\n---------\n\nCo-authored-by: Adrian Catangiu <adrian@parity.io>",
          "timestamp": "2025-05-06T10:26:49Z",
          "tree_id": "ddb81f91f910c3fc75f153b85684d2bdf077624a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/5802306a39a5845f2b1e566355f2ce8344c7c7b1"
        },
        "date": 1746530816181,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15856648997333334,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013138111013333334,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022271267586666664,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008727613933333428,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "dmitry@markin.tech",
            "name": "Dmitry Markin",
            "username": "dmitry-markin"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f2835be96a89f6ba684b657be931fc52a946d0ad",
          "message": "DHT bootnodes: get randomness from the next epoch descriptor (#8405)\n\nUse runtime calls to get epoch randomness only on startup, and later get\nit from the next epoch descriptor at the first block of every epoch.\n\nResolves https://github.com/paritytech/polkadot-sdk/issues/8377.\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-05-06T13:14:19Z",
          "tree_id": "3ea65529d8b93a560833644f1889e7fa7d8814ea",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f2835be96a89f6ba684b657be931fc52a946d0ad"
        },
        "date": 1746541661900,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013229098066666669,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008910338666666746,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15790603733333344,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022585718413333334,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "32275622+seemantaggarwal@users.noreply.github.com",
            "name": "seemantaggarwal",
            "username": "seemantaggarwal"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b2bc5c1388259333f67b7e3c456b3f1ada460d31",
          "message": "adding command export_chain_spec for polkadot-omni node (#7719)\n\nFollow-up from: #5567\nRead comment here: \n\nhttps://github.com/paritytech/polkadot-sdk/issues/5567#issuecomment-2678325683\n\n1. Idea is introduce a function export-chain-spec that does the\nchain-spec exporting. build-spec will work as before, but have a\ndeprecation message on usage.\n2. For now, this new command will focus on the ability to take the\nchain-specs embedded in the node and \"exports\" them to a json file\n3. We will not include the addition of boot node functionality, that the\nbuild-spec command has right now into the new command, if along the\nprocess, we decide otherwise, we can include it\n4. Part of this PR will also be to display the message the build-spec\nwill soon be on deprecation path\n5. It also exports a trait that allows extra subcommands definition and\nusage for a `polkadot-omni-node-lib` based node\n\n---------\n\nSigned-off-by: Iulian Barbu <iulian.barbu@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Iulian Barbu <14218860+iulianbarbu@users.noreply.github.com>\nCo-authored-by: Iulian Barbu <iulian.barbu@parity.io>\nCo-authored-by: Serban Iorga <serban300@gmail.com>\nCo-authored-by: Serban Iorga <serban@parity.io>",
          "timestamp": "2025-05-06T13:41:46Z",
          "tree_id": "0e83b66dfb019aed3042d3bafa9672cf99259790",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/b2bc5c1388259333f67b7e3c456b3f1ada460d31"
        },
        "date": 1746543635138,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02218937514666667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008382154586666737,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012959797953333338,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1561198335133334,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ludovic.domingues96@gmail.com",
            "name": "Ludovic Domingues",
            "username": "Krayt78"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ea61b4afbe850d6cfa406b53ab04397301dc3b4d",
          "message": "Migrate pallet-paged-list to umbrella crate (#6931)\n\nPart of #6504\n\n---------\n\nCo-authored-by: Kian Paimani <5588131+kianenigma@users.noreply.github.com>\nCo-authored-by: Guillaume Thiolliere <guillaume.thiolliere@parity.io>\nCo-authored-by: Giuseppe Re <giuseppe.re@parity.io>",
          "timestamp": "2025-05-06T15:06:41Z",
          "tree_id": "aaab2198e2cadab0d22051a17501993f01d7ff6b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ea61b4afbe850d6cfa406b53ab04397301dc3b4d"
        },
        "date": 1746547465226,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008591707220000076,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013037497946666667,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02242802544,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15737625052666668,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "james@jsdw.me",
            "name": "James Wilson",
            "username": "jsdw"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f8c0f09e2981049093ddc4a93f45b20278d44c79",
          "message": "Add all touched crates in #8327 to prdoc to fix release issue (#8441)\n\nThe prdoc from #8327 did not reference all crates that were touched. I\nadded them here.",
          "timestamp": "2025-05-06T15:42:13Z",
          "tree_id": "4d37db5e1fa86ff87d6548811f4c90ef72574105",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f8c0f09e2981049093ddc4a93f45b20278d44c79"
        },
        "date": 1746551645753,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15971691041333336,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008816732600000085,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02266162962,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013123394213333332,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eskimor@users.noreply.github.com",
            "name": "eskimor",
            "username": "eskimor"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "be71f89d42f04633a72b3b6a4da23e1c2e797dcd",
          "message": "Drop useless rep change. (#8447)\n\nNot the root cause of the block time issue, but the rep change is\ncertainly not helping.\n\n---------\n\nCo-authored-by: Robert <robert@gonimo.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-06T17:32:17Z",
          "tree_id": "f37558a0682269f7eaf40583eeab1cfaf2900134",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/be71f89d42f04633a72b3b6a4da23e1c2e797dcd"
        },
        "date": 1746556247848,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013061225726666672,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008946436773333415,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15767084857333333,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022449055079999995,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "serban@parity.io",
            "name": "Serban Iorga",
            "username": "serban300"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fce302443ba93bf367f84ea12b7dd2c57f33dac4",
          "message": "BEEFY: adjust equivocation slash fraction (#8427)\n\nUse 50% slash fraction for fork voting and future block voting (in\naccordance with the https://eprint.iacr.org/2025/057.pdf paper).\n\nIn order to account for the possible risk of accidental/non-malicious\ndouble voting, keep the current formula for double voting proof.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Adrian Catangiu <adrian@parity.io>",
          "timestamp": "2025-05-06T19:16:59Z",
          "tree_id": "861c2849355250f1180a5c26895c6032e14a6861",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/fce302443ba93bf367f84ea12b7dd2c57f33dac4"
        },
        "date": 1746563222190,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008676810820000071,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012952603386666666,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15693969971333338,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02233436105333334,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ludovic.domingues96@gmail.com",
            "name": "Ludovic Domingues",
            "username": "Krayt78"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "bee448b580f3de140cf591c899999f09dde33f2c",
          "message": "Migrate pallet safe mode to umbrella crate (#6905)\n\nPart of #6504",
          "timestamp": "2025-05-07T12:58:52Z",
          "tree_id": "6d9e1b3952bdb8357433d9ac453811607c913005",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/bee448b580f3de140cf591c899999f09dde33f2c"
        },
        "date": 1746627378078,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022524383893333333,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013267334326666668,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008643442460000062,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15723648437333337,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1431590+nkpar@users.noreply.github.com",
            "name": "Nikolai Kozlov",
            "username": "nkpar"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d846ad1b078b8ff3df6450963f593c3cd28e5dd1",
          "message": "Replace broken lectures links (#8456)\n\nReplaced broken links to corresponding new sources",
          "timestamp": "2025-05-07T14:13:23Z",
          "tree_id": "ee46a52f1398512f7c221421738a106e8e6f2135",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d846ad1b078b8ff3df6450963f593c3cd28e5dd1"
        },
        "date": 1746630758567,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15769068689333335,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013044672580000005,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008740164126666741,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022581697299999995,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1431590+nkpar@users.noreply.github.com",
            "name": "Nikolai Kozlov",
            "username": "nkpar"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2567a5ac3a22fe669279277d32561a918a07ae58",
          "message": "Fix template generation (#8459)\n\nPopulate build profiles only after all other modifications is done\n\n---------\n\nCo-authored-by: Iulian Barbu <14218860+iulianbarbu@users.noreply.github.com>",
          "timestamp": "2025-05-07T16:40:18Z",
          "tree_id": "a4347b8aac1e2aa13076f14bf38b697e841f433a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/2567a5ac3a22fe669279277d32561a918a07ae58"
        },
        "date": 1746639529541,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15717256223333342,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012878266506666665,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008398393620000085,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022423855566666664,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "10196091+Ank4n@users.noreply.github.com",
            "name": "Ankan",
            "username": "Ank4n"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5b8b5aa0bd6e21f2addd8a28fab92392575b41e2",
          "message": "[StakingAsync] Remove SlashingSpan Logic (#8316)\n\nalso closes https://github.com/paritytech/polkadot-sdk/issues/2650\n\n## Summary\n\nThis PR removes the concept of slashing spans (`SlashingSpans`,\n`SpanSlash`) and all related metadata from `pallet-staking-async`.\n\nWhile working on this, I noticed some issues with the current span\nlogic:\n- Spans were always starting and ending during the processing of an\noffence, meaning they never actually spanned across multiple eras\n(likely due to changes in logic over time).\n- We don’t chill validators either, so the core reason for slashing span\nisn't exercised.\n\nBecause of these factors, slashing spans were not serving their intended\npurpose. Removing them simplifies the slashing logic significantly and\nallows us to drop a good chunk of unnecessary code.\n\n## API Changes (pallet-staking-async)\n### Removed\n- StorageMap SlashingSpans\n- StorageMap SpanSlash.\n- Error IncorrectSlashingSpans.\n\n### Deprecated\nFor the following extrinsic, the parameter `num_slashing_spans` is\ndeprecated and has no effect. It is left for backward compatibility.\n- withdraw_unbonded\n- force_unstake\n- reap_stash\n\n\n## Functional Changes:\nThe key functional change is around slashing rewards:\n\nPreviously:\n- The reward was 50% of 10% (`SlashRewardFraction`) of the slashed\namount.\n- For each successive slash in the same era, the reward would halve\nagain (e.g., 50%, then 25%, then 12.5%, etc.).\n\nWith this PR:\n- Successive offences are still filtered to only keep the highest slash\nper validator/nominator per era.\n- Halving the reward on successive offences is removed.\n- My take: this seems reasonable, since we already filter out weaker\noffences.\n- However, if we want to preserve this behaviour, we could still add a\ncounter of slashes per validator/nominator per era to implement the\nhalving logic.\n\n## TODO\n- [x] Race condition of offence test: Second offence comes before first\nis applied : This is doing this already `offence_discarded_correctly`.\n- [x] Preserve extrinsic signatures.\n\n---------\n\nCo-authored-by: Tsvetomir Dimitrov <tsvetomir@parity.io>",
          "timestamp": "2025-05-08T10:14:53Z",
          "tree_id": "fad4424da71cef7409c75274bbb6d16dd5776b18",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/5b8b5aa0bd6e21f2addd8a28fab92392575b41e2"
        },
        "date": 1746703008290,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15654550074,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01288318746,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02227361161333333,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008673426980000076,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "egor@parity.io",
            "name": "Egor_P",
            "username": "EgorPopelyaev"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "4b83d24f4bc96a7b17964be94b178dd7b8f873b5",
          "message": "[Backport] Version bumps and prdocs reordering from the stable2503-2 release (#8469)\n\nThis PR backports regular version bumps and prdocs reordering from the\nstable2503 branch back to master",
          "timestamp": "2025-05-08T15:33:25Z",
          "tree_id": "c1d258b34e96a0d3974cf2c2796cc41b57ea6a58",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4b83d24f4bc96a7b17964be94b178dd7b8f873b5"
        },
        "date": 1746723666899,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012883336673333334,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008614811426666745,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15625489882000004,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02240732180666667,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "egor@parity.io",
            "name": "Egor_P",
            "username": "EgorPopelyaev"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f73c228b7a1a4a6b7d80ae7917a61df62f2359b8",
          "message": "[Release] Scripts to align stable branch with CI checks after the crates releases (#8468)\n\nThis PR adds few scripts to revert changes done by `parity-publish` tool\nduring the crates release to align the state of the stable branches with\nthe CI checks running in\n[checks-quick.yml](https://github.com/paritytech/polkadot-sdk/blob/master/.github/workflows/checks-quick.yml)\nflow. Scripts are doing following changes:\n- replace path deps with `workspace = true`\n- delete versions from the root Cargo.toml\n- delete versions from umbrella/Cargo.toml",
          "timestamp": "2025-05-09T11:37:34Z",
          "tree_id": "c4c976fef30a2d6d998b5d83ec63200e90abd9eb",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f73c228b7a1a4a6b7d80ae7917a61df62f2359b8"
        },
        "date": 1746794342838,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008749205420000083,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01311718837333334,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022742797859999993,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15802010743333336,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "117115317+lrubasze@users.noreply.github.com",
            "name": "Lukasz Rubaszewski",
            "username": "lrubasze"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f331a447ca698b3f14389f7e4a2f912152d7544c",
          "message": "Align `zombienet-sdk`-based tests with breaking change (#8442)\n\nThis PR updates the tests so they are compatible with latest changes in\n`zombienet-sdk`.\n\n# Description\n\nTests that use `wait_log_line_count_with_timeout()` method have been\nupdated accordingly to the new signature of the method.\nDetails in https://github.com/paritytech/zombienet-sdk/pull/333\n\nAdditionally:\n- bumped `zombienet-sdk` to `v0.3.0`\n- Set `RUN_IN_CI=1` flag for `zombienet-sdk` tests",
          "timestamp": "2025-05-12T09:22:28Z",
          "tree_id": "39b13c9701634b4c4ac9a55e48b32a1316879640",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f331a447ca698b3f14389f7e4a2f912152d7544c"
        },
        "date": 1747045181375,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008723245900000072,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1575692097266667,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01286973854666667,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022610222906666665,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "serban@parity.io",
            "name": "Serban Iorga",
            "username": "serban300"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ca9f4a7e60cdedbd97d68e7b5d53bf4e1944d7e7",
          "message": "FeeTracker deduplications (#8477)\n\nRelated to https://github.com/paritytech/polkadot-sdk/issues/8462\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-12T11:53:06Z",
          "tree_id": "396473873afea91a1c572e8b8e5678566f66e6eb",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ca9f4a7e60cdedbd97d68e7b5d53bf4e1944d7e7"
        },
        "date": 1747054495768,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012728867499999994,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022206588313333334,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008388261413333415,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15579771290666672,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "14218860+iulianbarbu@users.noreply.github.com",
            "name": "Iulian Barbu",
            "username": "iulianbarbu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e453db03522be0905e4e73e5f6c05eaf5a02f4a1",
          "message": "`fatxpool`: optimize txs prunning based on inactive views provides tags  (#7980)\n\n# Description\n\nIterate through the tree route block hashes, get their inactive views in\nthe view store, and considering the list of all txs on the enacted fork,\nget their provides tags if found in the inactive views, and use them\nwhen prunning txs from the enacted fork tip's active view based on tags,\nif needed in case the txs tags can not be found in the active view,\ninstead of revalidating the txs to get their 'provides' tag.\n\nCloses #7399 \n\n## Integration\n\nN/A\n\n## Review Notes\n\nThe data below corresponds to a test where we send 50k ready & 50k\nfuture txs to a single validator in a two validators relaychain network.\nIt can be seen that the optimized version performs better: doing only 2\nrevalidations with each prune invocation, even when forking. The\noverhead for computing the map of txs -> provides tags when the map has\nmaximum length is in the order of 2 ms. Down the line the complexity of\ncomputing the map is around enacted + retracted forks lengths * txs per\nblock. The assumption is that the overhead is still negligible when\ncompared to the revalidation (which we can't tell really for how many\ntxs can be done, I think).\n\nRevalidations for the unoptimized versions happen when forking\n(active_views >1), while optimized version is kept close to zero in\nterms of revalidations even when forking The optimized chart contains\nalso the number of unknown txs (usually revalidated in unoptimized\ncontext), and how many txs are reused in terms of existing provides tags\n(in comparison to the unknown txs count). The data points for the\nunknown and reused overlap in all cases, meaning the optimization is at\nwork when forking happens.\n\n1. With optimizations:\n\n![alice](https://github.com/user-attachments/assets/d13d2c5c-070b-4484-85e3-fa135204773b)\n\n3. Without:\n\n![alice](https://github.com/user-attachments/assets/a049f91c-9ef9-4779-8909-3205135b0993)\n\n**NOTE:**\nI stopped the investigation of how to pick which inactive views to\nsearch for the txs provides tags (currently iterating through enacted +\nretracted + common block - tip of enacted - tip of retracted), since tbh\nI don't have a good idea for how to investigate it. Hence, while\nthinking about a good way to optimize even more, I feel that the\nendeavor would bring diminishing returns - since the optimization works\nwell enough already for the synthetic tests, reducing the revalidations\ncount, and implicitly `prune` duration, which in the end can reduce\n`maintain` duration.\n\n---------\n\nSigned-off-by: Iulian Barbu <iulian.barbu@parity.io>\nCo-authored-by: Michal Kucharczyk <1728078+michalkucharczyk@users.noreply.github.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Sebastian Kunert <mail@skunert.dev>",
          "timestamp": "2025-05-12T14:40:39Z",
          "tree_id": "2ee202f61e5107e75b7a9b78d820241465a108ff",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e453db03522be0905e4e73e5f6c05eaf5a02f4a1"
        },
        "date": 1747064492958,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022183797566666667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008684012386666723,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01291113898,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15688203167333334,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "117115317+lrubasze@users.noreply.github.com",
            "name": "Lukasz Rubaszewski",
            "username": "lrubasze"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c679ed79a1de575d4c3d5b8878b3e401b024f2f2",
          "message": "Migrate sync block test to zombienet sdk (#8358)\n\nSummary: This PR migrates test\n`sync_blocks_from_tip_without_connected_collator` from `zombienet` to\n`zombienet-sdk`.\n\nNOTE!\nThis PR replaces https://github.com/paritytech/polkadot-sdk/pull/8284\n\nAdditionally:\n- Bumped `zombienet-sdk` to `v0.3.0`\n- Switched to `zombienet-sdk` GH action\n\n## Review Notes\n\n### Nodes referencing another nodes\nThe test requires some nodes to connect only to specified nodes. \nThe way we specify such nodes differs between `zombienet` and\n`zombienet-sdk`.\n- `zombienet`\nExamples: `{{'dave'|zombie('multiAddress')}}` or\n`{{'alice'|zombie('wsUri')}}`\n- `zombienet-sdk`\nExamples: `{{ZOMBIE:dave:multi_address}}` or `{{ZOMBIE:alice:ws_uri}}`\n(`multiAddress` or `wsUri` is also possible) \nThe feature was introduced in `0.2.31`\nMore details: https://github.com/paritytech/zombienet-sdk/pull/327\n\n---------\n\nCo-authored-by: Javier Viola <javier@parity.io>",
          "timestamp": "2025-05-13T11:34:09Z",
          "tree_id": "e8dbbc3e63f3e7ae95d26f7101f18c10131c6690",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c679ed79a1de575d4c3d5b8878b3e401b024f2f2"
        },
        "date": 1747139465109,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012922711413333334,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1561102501466667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008608859000000088,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02227652188,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "60601340+lexnv@users.noreply.github.com",
            "name": "Alexandru Vasile",
            "username": "lexnv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1849b3563d4ad1884bbfd5ee92b3daf87f50e8fb",
          "message": "cumulus/fix: Allow block-announce to exist in the background of minimal relay chains (#8514)\n\nThis PR fixes an issue with the collators that would not get advertised.\n\nThe issue relates to the `/block-announces/1` protocol for the litep2p\nnetwork backends.\nPreviously, the notification service handle was dropped, causing the\nlitep2p backend to terminate the long-running task that handled the\n`/block-announces/1` protocol. This represents a subtle difference\nbetween libp2p and litep2p, where libp2p would continue to operate the\nprotocol under the hood even without the respective handle:\n\n```\n// Logs extracted from the libp2p node showing that \nsub-libp2p::notification::service: [Relaychain] /b0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe/block-announces/1: notification received from PeerId(\"12D3KooWBjWQRpVLUWMUuDVcYEDokuReQHMxqMJrrHjwTve2CGhG\")\n```\n\nThe downstream effect of stopping the notification protocol is that full\nnodes that attempt to negotiate the protocol would disconnect and ban\nminimal relay chain nodes that do not handle the process. This cascades\ninto the ability of the collators to advertise blocks:\n\n```\n[Parachain] Authority Discovery couldn't resolve Public(70c2e207db27de34e4aff1dcf370419e575e7712bda507b9ca8e3bd1ddf8bf6e (5EcZ7UwY...))\n\nparachain::validator-discovery: [Parachain] New ConnectToValidators request peer_set=Collation requested=5 failed_to_resolve=5\n```\n## Testing Done\n\nThe CPU is still reduced from 7.5% to 1.87%:\n![Screenshot 2025-05-13 at 18 30\n37](https://github.com/user-attachments/assets/2d75fad9-71a2-4806-91c7-ac17aad2f77b)\n\nThanks to @paulormart for confirming the fix 🙏 \n\nCloses: https://github.com/paritytech/polkadot-sdk/issues/8474\n\n---------\n\nSigned-off-by: Alexandru Vasile <alexandru.vasile@parity.io>",
          "timestamp": "2025-05-13T18:08:24Z",
          "tree_id": "becd04e7e82d8fbf0eff5658d3e815047b183df9",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/1849b3563d4ad1884bbfd5ee92b3daf87f50e8fb"
        },
        "date": 1747164033602,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013178821933333338,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15727857362000006,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022542089926666665,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008738061406666728,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "write@reusable.software",
            "name": "ordian",
            "username": "ordian"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ae1785cd7454c2212bb558ddabc4496050aa7b2f",
          "message": "dispute-coordinator: populate disabled state on startup (#8503)\n\nPopulating off-chain disabled state on startup from the disputes\ndatabase makes the disputes spam handling more resilient wrt. validator\nrestarts.",
          "timestamp": "2025-05-14T06:27:21Z",
          "tree_id": "37d842fe201945df9e53acd4d664d1424b93eef1",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ae1785cd7454c2212bb558ddabc4496050aa7b2f"
        },
        "date": 1747207421346,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013102873739999996,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022359949179999998,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15656238888666668,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00846313558000007,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c4ba6e0288a127f7f452e09e872960837aa313c0",
          "message": "statement-distribution: skip leafs where we can't fetch the state (#8510)\n\nObserved during https://github.com/paritytech/polkadot-sdk/issues/8414\non polkadot and https://github.com/paritytech/polkadot-sdk/issues/8481\non kusama, that in the presence of disputes, backing starts to lag, this\nhappens because statement-distribution tries to fetch the disabled\nvalidators for leafs that have been discarded:\n\nLogs kusama:  https://grafana.teleport.parity.io/goto/7CB8AI-Ng?orgId=1\n```\nDEBUG tokio-runtime-worker parachain::statement-distribution: error=FetchDisabledValidators(NotSupported { runtime_api_name: \"disabled_validators\" })\n```\n\nLogs from polkadot incident\nhttps://github.com/paritytech/polkadot-sdk/issues/8414#issuecomment-2855958086:\n```\n2025-05-06 16:39:36 🏆 Imported #25889143 (0x4ea4…8ee8 → 0xe88b…12ff)    \n2025-05-06 16:39:36 cannot query the runtime API version: Api called for an unknown Block: State already discarded for 0x0b157597a3703df7237ddec737da2ff8149d51c2b99245f1293b2b86fa9b4a0c api=\"disabled_validators\"\n2025-05-06 16:39:39 💤 Idle (28 peers), best: #25889143 (0xe88b…12ff), finalized #25889140 (0x34e4…298d), ⬇ 2.4MiB/s ⬆ 943.2kiB/s    \n2025-05-06 16:39:42 🏆 Imported #25889144 (0xe88b…12ff → 0x9af4…db4b)    \n2025-05-06 16:39:42 cannot query the runtime API version: Api called for an unknown Block: State already discarded for 0x0b157597a3703df7237ddec737da2ff8149d51c2b99245f1293b2b86fa9b4a0c api=\"disabled_validators\"\n2025-05-06 16:39:44 💤 Idle (28 peers), best: #25889144 (0x9af4…db4b), finalized #25889141 (0x8634…1521), ⬇ 2.2MiB/s ⬆ 816.5kiB/s    \n2025-05-06 16:39:48 🏆 Imported #25889145 (0x9af4…db4b → 0x19a6…cef3)    \n2025-05-06 16:39:48 cannot query the runtime API version: Api called for an unknown Block: State already discarded for 0x0b157597a3703df7237ddec737da2ff8149d51c2b99245f1293b2b86fa9b4a0c api=\"disabled_validators\"\n2025-05-06 16:39:49 💤 Idle (28 peers), best: #25889145 (0x19a6…cef3), finalized #25889141 (0x8634…1521), ⬇ 1.7MiB/s ⬆ 526.6kiB/s    \n2025-05-06 16:39:54 🏆 Imported #25889146 (0x19a6…cef3 → 0x4f7a…9d2c) \n```\n\n## Root-cause\n1. Relay-chain has forks something like this.\n```\nA -> B -> C -> D -> F\n| -> E\n```\n\n2. Relay-chain finalises block C.\n3. New block F is created and statement-distribution receives\nActiveLeave update for it.\n4. This logic\nhttps://github.com/paritytech/polkadot-sdk/blob/c679ed79a1de575d4c3d5b8878b3e401b024f2f2/polkadot/node/network/statement-distribution/src/v2/mod.rs#L566\nreturns all possible leafs `E` included, [because of\nthis](https://github.com/paritytech/polkadot-sdk/blob/c679ed79a1de575d4c3d5b8878b3e401b024f2f2/polkadot/node/subsystem-util/src/backing_implicit_view.rs#L272)\n5. E has been discarded and request fails here:\nhttps://github.com/paritytech/polkadot-sdk/blob/c679ed79a1de575d4c3d5b8878b3e401b024f2f2/polkadot/node/network/statement-distribution/src/v2/mod.rs#L577.\n6. At first error we bail-out so the active leafs for `E` is not\nproperly process, so no candidate will be backed that is based on `E`\n7. This continues on until a new block is finalized and `E` gets cleanup\nbecause it falls behind.\n\n## Fix\n\nThe proposed fix is to not fail hard on this type of errors and continue\nwith the processing.\n\n## ~Open questions~\n~Why does this appear only when there are a lot of disputes in the\nsystem, instead of every time there is a fork ? My theory is that\ndisputes impact somehow the order of some blocks getting discarded.~\n\nTested with a smaller cache size\nhttps://github.com/paritytech/polkadot-sdk/blob/c679ed79a1de575d4c3d5b8878b3e401b024f2f2/polkadot/node/core/runtime-api/src/cache.rs#L113,\nso the reason this works without dispute is that the\n`request_disabled_validators` is hitting the runtime-api cache, but when\nyou have a lot of disputes in the system the leafs on forks got evicted.\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: ordian <write@reusable.software>\nCo-authored-by: ordian <noreply@reusable.software>",
          "timestamp": "2025-05-14T06:49:41Z",
          "tree_id": "15421aeb98ff1d9d1b74966db85ae011647ac970",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c4ba6e0288a127f7f452e09e872960837aa313c0"
        },
        "date": 1747209762101,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.1580400875333333,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008704915160000071,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012909802446666669,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022214894913333335,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "giuseppe.re@parity.io",
            "name": "Giuseppe Re",
            "username": "re-gius"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "0488c0434301b50b49f56f877192404dbd8fdb20",
          "message": "Stabilize the FRAME umbrella crate (#8470)\n\nStabilizing the FRAME umbrella crate, which is no longer marked as\nexperimental. Improving the related documentation, including README and\nmaintenance notes.\n\nAfter integrating the FRAME umbrella crate in 17 pallets as tracked in\n#6504 and modifying it in the process, it has reached a good level of\nstability and it can be easily used for pallet development.\n\nKey improvements:\n    - Enhanced documentation with clear usage guidelines\n    - Added comprehensive maintenance notes for future contributors\n- Established clear design principles for prelude usage and module\norganization\n    - Updated documentation links to point to the official hosted docs\n\nThis closes #6504.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-14T10:21:52Z",
          "tree_id": "a4f2e7aded95f1fb9f2fe2f3791dad609bd85434",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/0488c0434301b50b49f56f877192404dbd8fdb20"
        },
        "date": 1747222911817,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013057629680000002,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15925129225999998,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008904205580000072,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022355288966666668,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "enntheprogrammer@gmail.com",
            "name": "sistemd",
            "username": "sistemd"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "fc3a2074df9f22995eec6eb9075dbfca39ed84ff",
          "message": "parachain informant (#8332)\n\nCloses https://github.com/paritytech/polkadot-sdk/issues/8216.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-14T12:29:01Z",
          "tree_id": "4ea33608f09e386133ca7764779a91425d0f229b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/fc3a2074df9f22995eec6eb9075dbfca39ed84ff"
        },
        "date": 1747231602392,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022324833626666672,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012842922419999998,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1576961110533334,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008675789520000067,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9991b1a804202bfa0beee1bdd7f78e0d1fd642a3",
          "message": "Make SharedTrieCache/LocalTrieCache work with entire state in memory  (#7682)\n\nPart of\nhttps://github.com/paritytech/polkadot-sdk/issues/6131#issuecomment-2640012327,\nwe need to make sure that the TrieCache is able to work with the\nassumption that more or less the entire current state fits into memory,\nthis can be split into a few parts:\n\n- [x] Remove the LocalTrieCache hard coded size and make it configurable\nfrom outside.\n- [x] Decided to have two flavours of building the LocalTrieCache, for\nthe import and block authoring we are using a trusted local cache that\ngrow to hold everything in the block and then propagated everything into\nthe shared trie cache.\n- ~[x] Everything from LocalTrieCache needs to be propagated back to the\nSharedTrieCache in a fast and safe manner, so that it doesn't become a\nbottleneck. Currently, that is done on drop, with the function holding\nthe ShareTrieCache write lock while promoting all keys. Decided to move\nthis on a separate worker thread, so that the hot-path does not have to\nwait for drop function to propagate everything from the LocalTrieCache\nto the SharedTrieCache, the flushing of the worker thread happens after\nthe block production and import happens.~ Update this is not need\nbecause authoring and imports is bounded, so the numbers is not\nexaggeratedly big, to make the drop too heavy, see numbers here\nhttps://github.com/paritytech/polkadot-sdk/pull/7682#discussion_r2016046852.\n\n# Todo\n- [x] Stats to prove most of reads/writes hit the shared or the local\ntrie cache.\n- [x] Unit testing  the new changes.\n\nFixes: https://github.com/paritytech/polkadot-sdk/issues/7534\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-05-14T14:51:51Z",
          "tree_id": "3a1090795a903aa356842d972a087042ff81f98f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/9991b1a804202bfa0beee1bdd7f78e0d1fd642a3"
        },
        "date": 1747238659151,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15790052382666667,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01300987596666667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.0090120577333334,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022440939459999996,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "james@jsdw.me",
            "name": "James Wilson",
            "username": "jsdw"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4838fac28ab8e568ee2e5262523ad72ddd2db166",
          "message": "Stabilize V16 metadata (#8443)\n\nThis PR bumps frame-metadata 23.0.0, which stabilizes V16 metadata. This\nwas previously available as the \"unstable\" metadata.\n\nThe main additions provided by V16 metadata are:\n- Information about the Pallet View Functions exposed by pallets.\n- Information about the Config associated types used by each pallet.\n- Support for V5 transactions, including support for a chain providing\nmultiple transaction extension versions and multiple supported\ntransaciton versions.\n- Support for deprecation information, so that mostly anything defined\nin a runtime can be marked as deprecated in order for runtime/pallet\nauthors to communicate to consumers about deprecated items.\n\nTo sanity check this, I've built a polkadot node with this change and\nchecked that using Subxt (this PR\nhttps://github.com/paritytech/subxt/pull/1999), v16 metadata is indeed\navailable, downloads and decodes correctly.\n\n<!--\n✄\n-----------------------------------------------------------------------------\n\nThank you for your Pull Request! 🙏 Please make sure it follows the\ncontribution guidelines outlined in [this\n\ndocument](https://github.com/paritytech/polkadot-sdk/blob/master/docs/contributor/CONTRIBUTING.md)\nand fill out the\nsections below. Once you're ready to submit your PR for review, please\ndelete this section and leave only the text under\nthe \"Description\" heading.\n\n# Description\n\n*A concise description of what your PR is doing, and what potential\nissue it is solving. Use [Github semantic\n\nlinking](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword)\nto link the PR to an issue that must be closed once this is merged.*\n\n## Integration\n\n*In depth notes about how this PR should be integrated by downstream\nprojects. This part is mandatory, and should be\nreviewed by reviewers, if the PR does NOT have the `R0-Silent` label. In\ncase of a `R0-Silent`, it can be ignored.*\n\n## Review Notes\n\n*In depth notes about the **implementation** details of your PR. This\nshould be the main guide for reviewers to\nunderstand your approach and effectively review it. If too long, use\n\n[`<details>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details)*.\n\n*Imagine that someone who is depending on the old code wants to\nintegrate your new code and the only information that\nthey get is this section. It helps to include example usage and default\nvalue here, with a `diff` code-block to show\npossibly integration.*\n\n*Include your leftover TODOs, if any, here.*\n\n# Checklist\n\n* [ ] My PR includes a detailed description as outlined in the\n\"Description\" and its two subsections above.\n* [ ] My PR follows the [labeling requirements](\n\nhttps://github.com/paritytech/polkadot-sdk/blob/master/docs/contributor/CONTRIBUTING.md#Process\n) of this project (at minimum one label for `T` required)\n* External contributors: ask maintainers to put the right label on your\nPR.\n* [ ] I have made corresponding changes to the documentation (if\napplicable)\n* [ ] I have added tests that prove my fix is effective or that my\nfeature works (if applicable)\n\nYou can remove the \"Checklist\" section once all have been checked. Thank\nyou for your contribution!\n\n✄\n-----------------------------------------------------------------------------\n--.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-14T16:19:55Z",
          "tree_id": "c344fd5142d5b2eb364fee2d18a173b23b036da1",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4838fac28ab8e568ee2e5262523ad72ddd2db166"
        },
        "date": 1747244347703,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022348195453333334,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012745674233333336,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1576647037533333,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008673074440000086,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "5588131+kianenigma@users.noreply.github.com",
            "name": "Kian Paimani",
            "username": "kianenigma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "da8c374871cc97807935230e7c398876d5adce62",
          "message": "check XCM size in VMP routing (#8409)\n\nContxt: within AHM, AH and RC need to communicate large-ish payloads of\ndata, such as 1000 validator key and corresponding reward points per\nsession. While the current limits on Polkadot and Kusama allow for such\npayloads, I am putting the code in place such that we\n`SendXcm::validate` any message before sending, and based on that, if\n`MessageSizeExceeded` is returned, we recursively split the messages.\nThis code itself will come in a sparate PR.\n\nSo far, it turned out that in the code bath of a UMP (para -> RC),\n`validate` actually didn't check the message size. This PR adds this. I\nam not super familiar yet with this part of the codebase to know where\nto add unit tests for this, but I can tell that in my ZN experiments,\nthis fixes the issue.\n\nI was expecting a similar hack to also be needed for DMP (RC -> para),\nbut it seems like this is not needed and in this code-path (based on who\nis the router: `ChildParachainRouter` in my case).\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>",
          "timestamp": "2025-05-14T20:34:30Z",
          "tree_id": "743e609685b6201a77f811a4d89e4ea58519852e",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/da8c374871cc97807935230e7c398876d5adce62"
        },
        "date": 1747259792586,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.1581048357266667,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012640767953333331,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008455622106666748,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022332285766666665,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "claravanstaden64@gmail.com",
            "name": "Clara van Staden",
            "username": "claravanstaden"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "d5e7bb4a1928dcf83ebff8f9ce06f7ae8b0497a4",
          "message": "Snowbridge - Message reward topups (#8271)\n\nThis PR enables the ability to add a tip to an Inbound or Outbound\nmessage, in case the relayer reward is too low and not profitable to\nprocess. The tip is added to the relayer reward when processing a\nmessage. In the case where a tip is added to a message that has already\nbeen processed, the tip is added to the LostTips storage in the\n`EthereumSystemV2` pallet, and it can later be refunded to the original\nsender.\n\nThis PR makes the following changes:\n- **snowbridge-pallet-system-frontend:** An `add_tip` extrinsic to the\nEthereumSystemFrontend pallet, indicating the tip and the\nInbound/Outbound nonce that the tip should be added to. Any asset can be\nprovided as tip. Since the relayer rewards are paid in ether, the\nprovided asset will be swapped for ether (if it is not ether already)\nand then burnt from the sender's account. An XCM is then sent from\n`EthereumSystemFrontend` on AH to `EthereumSystemV2` on BH.\n- **snowbridge-pallet-system-v2:** Adds the tip to the relevant pallet\n(Inbound/Outbound)\n\nResolves: [SNO-1353](https://linear.app/snowfork/issue/SNO-1353)\n\n---------\n\nCo-authored-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>\nCo-authored-by: Adrian Catangiu <adrian@parity.io>\nCo-authored-by: Francisco Aguirre <franciscoaguirreperez@gmail.com>",
          "timestamp": "2025-05-15T08:25:17Z",
          "tree_id": "4f2b0c01174f37d36d60cbaf83174aa09a32ae19",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d5e7bb4a1928dcf83ebff8f9ce06f7ae8b0497a4"
        },
        "date": 1747301299407,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.00879016694666675,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02239266372000001,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012900202246666667,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15845808977333337,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d99bafc738266f97bd03807909772b4471e56ce4",
          "message": "[pallet-revive] tracing prepare support for future tracing APIS (#8495)\n\n- Break down eth-rpc client storage and runtime API into separate files\n- Make debug_trace methods Return a composite Trace enum so we can\nintroduce other trace types (in follow up PR)\n- Fix eth_getStorageAt to use BigEndian for key encoding\n\ncompanion evm-test-suite PR\nhttps://github.com/paritytech/evm-test-suite/pull/93\n\nFix https://github.com/paritytech/contract-issues/issues/67\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-15T12:40:14Z",
          "tree_id": "14e628871c9a2b5abdb476a3558e4837d22ab3a3",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d99bafc738266f97bd03807909772b4471e56ce4"
        },
        "date": 1747316485076,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.00856706701333342,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022378012506666666,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01280746863333333,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15796128143333343,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1431590+nkpar@users.noreply.github.com",
            "name": "Nikolai Kozlov",
            "username": "nkpar"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5405e473854b139f1d0735550d90687eaf1a13f9",
          "message": "Make link checker green again  (#8544)\n\nRemoved broken link. The old link\nhttps://polkadot.polkassembly.io/treasury/406 is broken and search\nreturns nothing",
          "timestamp": "2025-05-15T22:43:21Z",
          "tree_id": "af6259d280aa4d2ed9e88b056ec9e917920c84ff",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/5405e473854b139f1d0735550d90687eaf1a13f9"
        },
        "date": 1747352642879,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008918954220000075,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022698508220000004,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013310607499999995,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1611003636933334,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "23c41b237b262b3ddf0d6842792959cde234385b",
          "message": "Disable check-runtime-migration (#8547)\n\nwestend state is fully broken since we dropped some messages on latest\nupgrade\nI am disabling this job for now until we can resolve the issue\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-16T12:47:04Z",
          "tree_id": "75e3295c63e81f98c81f4e5064cc8d5c7ce9c3f3",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/23c41b237b262b3ddf0d6842792959cde234385b"
        },
        "date": 1747403163792,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15898143350666671,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02250541434000001,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008621429366666752,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012896965353333335,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "leonardo@custodio.me",
            "name": "Leonardo Custodio",
            "username": "leonardocustodio"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3681bd8f56fbc555dea1760c119e10d0938d449f",
          "message": "Use correct polkadot repository (#8488)\n\nThe link provided in the `Documentation` argument, leads to the old\nrepository that is on `read-only` state\n\nCo-authored-by: Nikolai Kozlov <1431590+nkpar@users.noreply.github.com>",
          "timestamp": "2025-05-16T14:12:56Z",
          "tree_id": "2f12d58d68e07843122cd704f51a90c5c48a49b7",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/3681bd8f56fbc555dea1760c119e10d0938d449f"
        },
        "date": 1747408860501,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012936786686666668,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15902458892000002,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008645821546666755,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022460135380000003,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "serban@parity.io",
            "name": "Serban Iorga",
            "username": "serban300"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5edf3d69eec0b60a62f9405b62c90a17bad88c27",
          "message": "FeeTracker: remove `get_min_fee_factor()` (#8528)\n\nRelated to https://github.com/paritytech/polkadot-sdk/issues/8462\n\nFollow-up for https://github.com/paritytech/polkadot-sdk/pull/8477\n\nThe minimal fee factor should always be 1\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-16T15:28:24Z",
          "tree_id": "c0133772c2825c1e1ed9eab0d660299691d3d70c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/5edf3d69eec0b60a62f9405b62c90a17bad88c27"
        },
        "date": 1747412953836,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008914598566666748,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022555395953333324,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15851962260666674,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013170431133333329,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aqdrgg19@gmail.com",
            "name": "VolodymyrBg",
            "username": "VolodymyrBg"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "391e6eaf10afa9782fc305231e96140de36fc44f",
          "message": "Fix broken link to call_ext.rs in parachains README (#8558)\n\n# Description\n\nFixed broken link to signed extension file in\nbridges/modules/parachains/README.md:\n- Was: [signed extension](./src/call_ext)\n- Now: [signed extension](./src/call_ext.rs)\n\nNow the link correctly points to the existing call_ext.rs file, which\nimproves navigation and prevents errors when viewing the documentation.\n\n# Checklist\n\n* [ ] My PR includes a detailed description as outlined in the\n\"Description\" and its two subsections above.\n* [ ] My PR follows the [labeling requirements](\n\nhttps://github.com/paritytech/polkadot-sdk/blob/master/docs/contributor/CONTRIBUTING.md#Process\n) of this project (at minimum one label for `T` required)\n* External contributors: ask maintainers to put the right label on your\nPR.\n* [ ] I have made corresponding changes to the documentation (if\napplicable)\n* [ ] I have added tests that prove my fix is effective or that my\nfeature works (if applicable)\n\nYou can remove the \"Checklist\" section once all have been checked. Thank\nyou for your contribution!\n\n✄\n-----------------------------------------------------------------------------",
          "timestamp": "2025-05-19T07:08:05Z",
          "tree_id": "08a1ba84ce2a96742aee8268647ea92757bad65c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/391e6eaf10afa9782fc305231e96140de36fc44f"
        },
        "date": 1747642136887,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013177578466666666,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022457202620000012,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15897540869333335,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00869073796666675,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "serban@parity.io",
            "name": "Serban Iorga",
            "username": "serban300"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "047534b1eadbdea082304d08c34c0fb43c6212ae",
          "message": "UncheckedExtrinsic: limit the decoded call size + simpllifications (#8234)\n\nCloses #7360 \n\nThis PR:\n- sets a memory limit when decoding the `RuntimeCall` inside an\n`UncheckedExtrinsic`\n- simplifies some logic\n\nThis PR splits some logic from #7902. The purpose of doing this is to\nmake it possible to review the logic incrementally, which should be\neasier.",
          "timestamp": "2025-05-19T09:59:40Z",
          "tree_id": "2e94292718b0b4dc6dd5d0dcbd4c526cb0d67188",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/047534b1eadbdea082304d08c34c0fb43c6212ae"
        },
        "date": 1747652988120,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022402800520000002,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008833888660000067,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15795178867999998,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013173636393333334,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "oliver.tale-yazdi@parity.io",
            "name": "Oliver Tale-Yazdi",
            "username": "ggwpez"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "058b4f52fe308697419d590e0a7bd2b520410a2f",
          "message": "pallet scheduler: fix weight and add safety checks (#7785)\n\nChanges:\n- Add runtime integrity test for scheduler pallet to ensure that lookups\nuse sensible weights\n- Check all passed storage names in the omni bencher to be known by\nFRAME metadata\n- Trim storage names in omni bencher to fix V1 bench syntax bug\n- Fix V1 bench syntax storage name sanitization for specific Rust\nversions\n\nI re-ran the benchmarks with the omni-bencher modifications and it did\nnot change the [proof\nsize](https://weights.tasty.limo/compare?repo=polkadot-sdk&threshold=1&path_pattern=substrate%2Fframe%2F**%2Fsrc%2Fweights.rs%2Cpolkadot%2Fruntime%2F*%2Fsrc%2Fweights%2F**%2F*.rs%2Cpolkadot%2Fbridges%2Fmodules%2F*%2Fsrc%2Fweights.rs%2Ccumulus%2F**%2Fweights%2F*.rs%2Ccumulus%2F**%2Fweights%2Fxcm%2F*.rs%2Ccumulus%2F**%2Fsrc%2Fweights.rs&method=asymptotic&ignore_errors=true&unit=proof&old=cc0142510b81dcf1c1a22f7dc164c453c25287e6&new=bb19d78821eaeaf2262f6a23ee45f83dd4f94d29).\nI reverted [the\ncommit](https://github.com/paritytech/polkadot-sdk/pull/7785/commits/bb19d78821eaeaf2262f6a23ee45f83dd4f94d29)\nafterwards to reduce the noise for reviewers.\n\n---------\n\nSigned-off-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-19T11:33:03Z",
          "tree_id": "41256fb76c6f6fb035379bdd269236d8d206628c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/058b4f52fe308697419d590e0a7bd2b520410a2f"
        },
        "date": 1747660024686,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02252713167333334,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013147223953333335,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008913968226666756,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1593274177266667,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "oliver.tale-yazdi@parity.io",
            "name": "Oliver Tale-Yazdi",
            "username": "ggwpez"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e000a5c42c7aee5ce08bb9f5f40bf17ac4005a0e",
          "message": "[FRAME] Omni bencher fixes (#8265)\n\nChanges:\n- Add `--pallets` option to selectively run multiple pallets. In the\npast we only had `--pallet` to run a single one.\n- Add `--exclude-extrinsics [pallet::extrinsic]` to add\n(Pallet,Extrinsic) tuples that should be excluded.\n- Fix storage overlay reversion *before* the benchmark runs.\n- Test root hash for V2 benchmarks to be deterministic\n- <s>Changed DB reps to 1 for speedup since it should not be needed to\nrun multiple times. (TODO test)</s>\n\nChecked that it fixes the Kusama benchmark issue when\n[patching](https://github.com/ggwpez/substrate-scripts/blob/master/diener.py)\nto a fixed stable2412 fork:\n\n(before)\n```pre\nThe following 5 benchmarks failed:\n- pallet_nomination_pools::apply_slash_fail\n- pallet_nomination_pools::migrate_delegation\n- pallet_nomination_pools::pool_migrate\n- pallet_offences::report_offence_babe\n- pallet_offences::report_offence_grandpa\nError: Input(\"5 benchmarks failed\")\n```\n\n(after)\n```pre\nThe following 1 benchmarks failed:\n- pallet_nomination_pools::apply_slash_fail\nError: Input(\"1 benchmarks failed\")\n```\nThis one needs fixing but is not breaking the other ones anymore.\n\n---------\n\nSigned-off-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>",
          "timestamp": "2025-05-19T16:03:55Z",
          "tree_id": "4c0e6ec2609f40851c01fcb5c87071221c9d073d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e000a5c42c7aee5ce08bb9f5f40bf17ac4005a0e"
        },
        "date": 1747678034171,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15823022990000007,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01290153402666667,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022304170293333345,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008742919533333428,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41779041+alvicsam@users.noreply.github.com",
            "name": "Alexander Samusev",
            "username": "alvicsam"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "2836a99fc249e1db95d3beffc50050fdf1a20d65",
          "message": "[cmd-bot] Temporary fix for weights output (#8565)\n\nPR adds a temporary fix for cmd-bot. \n\ncc https://github.com/paritytech/polkadot-sdk/issues/8195",
          "timestamp": "2025-05-20T08:45:18Z",
          "tree_id": "ce3b0308b1072d9204d0f056e570a95268cc8ae6",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/2836a99fc249e1db95d3beffc50050fdf1a20d65"
        },
        "date": 1747734394160,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02273949456,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.009121753726666747,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1618931100866667,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01314557956,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "178801527+raymondkfcheung@users.noreply.github.com",
            "name": "Raymond Cheung",
            "username": "raymondkfcheung"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "803b3463d512327aee6ab0ca13ac368a2256275a",
          "message": "Ensure Consistent Topic IDs for Traceable Cross-Chain XCM (#7691)\n\nThis PR resolves issue #6119 by ensuring consistent topic ID inclusion\nin all XCM messages processed or sent via `XcmExecutor`, addressing\ninstances where message topics were absent or inconsistent across\nmultiple hops. To guarantee topic assignment and enhance traceability,\nthis PR implements:\n\n*\n[**`WithUniqueTopic`**](https://paritytech.github.io/polkadot-sdk/master/staging_xcm_builder/struct.WithUniqueTopic.html):\nThis structure automatically appends a unique topic ID to any XCM that\ndoes not already contain a `SetTopic` instruction, guaranteeing that\nevery message has an identifier.\n*\n[**`XcmContext.topic_or_message_id()`**](https://paritytech.github.io/polkadot-sdk/master/staging_xcm/v5/struct.XcmContext.html):\nThe `topic_or_message_id()` function is used to append a `SetTopic` to\nany outbound XCM that lacks one, ensuring that each message is\nconsistently traceable by falling back to the context’s message ID when\nno topic is set.\n* **Removal of `forward_id_for`**: The `forward_id_for` function, which\nwas used to derive a new ID based on an original, has been removed as\nthe focus is now on maintaining a consistent topic ID throughout the XCM\nlifecycle.\n\nTogether, these changes guarantee that all XCMs—whether executed locally\nor dispatched to other chains—carry an associated topic ID throughout\ntheir journey. This significantly improves debugging and observability\nby enabling comprehensive tracing of message flows within logs and\nevents. This enhancement is particularly beneficial for complex,\nmulti-hop XCM scenarios where topic consistency was previously\nunreliable, making it easier to follow the path and effects of each\ncross-chain message.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Adrian Catangiu <adrian@parity.io>\nCo-authored-by: Serban Iorga <serban@parity.io>",
          "timestamp": "2025-05-20T09:12:58Z",
          "tree_id": "317ae45ee361d4176847abd191727f29c106371d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/803b3463d512327aee6ab0ca13ac368a2256275a"
        },
        "date": 1747736387921,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022690596386666675,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00870225974000007,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012982888026666663,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1601487036,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "rohit.sarpotdar@parity.io",
            "name": "Rohit Sarpotdar",
            "username": "rosarp"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4173aac8abc7e518d4048306c18d4f2176241206",
          "message": "Bridges: Fix - Improve try-state for pallet-xcm-bridge-hub (#8546)\n\nFixing #8215 based on #8185: Improve try-state for pallet-xcm-bridge-hub\n\nIt removes try_as and uses try_from implementation instead.\n\n---------\n\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>",
          "timestamp": "2025-05-20T10:53:09Z",
          "tree_id": "618564688f2403b3fecb42cca092fd3df4877eaa",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4173aac8abc7e518d4048306c18d4f2176241206"
        },
        "date": 1747742275483,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008715830100000085,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022438923693333338,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1588453652533334,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01304667987333333,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "serban@parity.io",
            "name": "Serban Iorga",
            "username": "serban300"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ff5c67c8a3d60ccb3f0af114a07db8f4bec485a0",
          "message": "Update `parity-scale-codec` to `v3.7.5` (#8577)\n\nUpdate `parity-scale-codec` to `v3.7.5`\n\n---------\n\nCo-authored-by: Andrii <ndk@parity.io>",
          "timestamp": "2025-05-21T07:08:43Z",
          "tree_id": "9d42fbfd00fb915b93f470ec77a7ad9308ef082e",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ff5c67c8a3d60ccb3f0af114a07db8f4bec485a0"
        },
        "date": 1747815018923,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02238686403333333,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1579310402866667,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01300142198,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008905501806666745,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "hrishav@parity.io",
            "name": "castillax",
            "username": "castillax"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "2863b7a9a879935ff16987d0e95065d088dad9f8",
          "message": "Fix generated address returned by Substrate RPC runtime call (#8504)\n\n## Description\n\nWhen dry-running a contract deployment through the runtime API, the\nreturned address does not match the actual address that will be used\nwhen the transaction is submitted. This inconsistency occurs because the\naddress derivation logic doesn't properly account for the difference\nbetween transaction execution and dry-run execution contexts.\n\nThe issue stems from the `create1` address derivation logic in\n`exec.rs`:\n\n```rust\naddress::create1(\n    &deployer,\n    // the Nonce from the origin has been incremented pre-dispatch, so we\n    // need to subtract 1 to get the nonce at the time of the call.\n    if origin_is_caller {\n        account_nonce.saturating_sub(1u32.into()).saturated_into()\n    } else {\n        account_nonce.saturated_into()\n    },\n)\n```\n\nThe code correctly subtracts 1 from the account nonce during a\ntransaction execution (because the nonce is incremented pre-dispatch),\nbut doesn't account for execution context - whether it's a real\ntransaction or a dry run through the RPC.\n\n## Review Notes\n\nThis PR adds a new condition to check for the `IncrementOnce` when\ncalculating the nonce for address derivation:\n\n```rust\naddress::create1(\n    &deployer,\n    // the Nonce from the origin has been incremented pre-dispatch, so we\n    // need to subtract 1 to get the nonce at the time of the call.\n    if origin_is_caller && matches!(exec_context, IncrementOnce::AlreadyIncremented) {\n        account_nonce.saturating_sub(1u32.into()).saturated_into()\n    } else {\n        account_nonce.saturated_into()\n    },\n)\n```\n\n\n## Before Fix\n\n- Dry-run contract deployment returns address derived with nonce N\n- Actual transaction deployment creates contract at address derived with\nnonce N-1\n- Result: Inconsistent addresses between simulation and actual execution\n\n## After Fix\n\n- Dry-run and actual transaction deployments both create contracts at\nthe same address\n- Result: Consistent contract addresses regardless of execution context\n- Added test case to verify nonce handling in different execution\ncontexts\n\nThis fix ensures that users can rely on the address returned by a dry\nrun to match the actual address that will be used when the transaction\nis submitted.\n\nFixes https://github.com/paritytech/contract-issues/issues/37\n\n# Checklist\n\n* [x] My PR includes a detailed description as outlined in the\n\"Description\" and its two subsections above.\n* [x] My PR follows the [labeling requirements](\n\nhttps://github.com/paritytech/polkadot-sdk/blob/master/docs/contributor/CONTRIBUTING.md#Process\n) of this project (at minimum one label for `T` required)\n* External contributors: ask maintainers to put the right label on your\nPR.\n* [x] I have made corresponding changes to the documentation (if\napplicable)\n* [x] I have added tests that prove my fix is effective or that my\nfeature works (if applicable)\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: pgherveou <pgherveou@gmail.com>",
          "timestamp": "2025-05-21T12:10:48Z",
          "tree_id": "125db6986b5403c0de8a90e570a8254b6130fe95",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/2863b7a9a879935ff16987d0e95065d088dad9f8"
        },
        "date": 1747833536621,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008578999453333416,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1585453624266667,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022366289286666667,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013140091293333338,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "5588131+kianenigma@users.noreply.github.com",
            "name": "Kian Paimani",
            "username": "kianenigma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5d71d474ab78dacc37f89698a71baa45b41d0302",
          "message": "fix epmb solution duplicate issue + add remote mining apparatus to epm (#8585)\n\nBackports a part of https://github.com/paritytech/polkadot-sdk/pull/8422\nto master so it can be included in ongoing releases sooner.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Dónal Murray <donal.murray@parity.io>",
          "timestamp": "2025-05-21T15:32:43Z",
          "tree_id": "a7bd1cae9323f52b92c423acb9f2760612cbbf79",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/5d71d474ab78dacc37f89698a71baa45b41d0302"
        },
        "date": 1747845060788,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15754398028000002,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022273566833333334,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008527558860000072,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013089938466666675,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "14218860+iulianbarbu@users.noreply.github.com",
            "name": "Iulian Barbu",
            "username": "iulianbarbu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e44b89fb7ca3385f314803c733ad97b26cd14e9f",
          "message": "txpool: fix tx removal from unlocks set (#8500)\n\n# Description\n\nRemoving a tx subtree means partly removing some txs from the unlocks\nset of other txs. This logic is buggy and the PR attempts to fix it.\n\nCloses #8498 \n\n## Integration\n\nN/A\n\n## Review Notes\n\nThis doesn't seem to be an important bug. Unit tests for txpool still\npass after the fix, so txpool behavior isn't changing much.\n\n### TODOs\n\n- [x] test with a heavy load test (5 millions txs) - all txs were\nvalidated successfully\n- [x] added a unit test\n\n---------\n\nSigned-off-by: Iulian Barbu <iulian.barbu@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-21T17:39:58Z",
          "tree_id": "f58d28e8d71b185f26380c0de28160f7576545bb",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e44b89fb7ca3385f314803c733ad97b26cd14e9f"
        },
        "date": 1747853087749,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013034972313333337,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008691578840000073,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15854377800666666,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022377010166666666,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "14218860+iulianbarbu@users.noreply.github.com",
            "name": "Iulian Barbu",
            "username": "iulianbarbu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "26afcd65438f5518bb6a0c281cfcc6159a60587e",
          "message": "`fatxpool`: add fallback for ready at light (#8533)\n\n# Description\n\nProposing a new block on top of an existing parent block considers the\nbest ready transactions provided by the txpool to be included in the new\nblock. Whenever the given parent hash to build on top of is part of a\nfork up to the finalized block which has no best block notified to the\npool, it might be the case that the proposer will rely on\n`ready_at_light` (due to various reason not in our control), and when\nthat's the case, the ready transactions set will be empty.\n\nThis PR adds a fallback for the `ready_at_light` where we consider the\nready txs of the most recent view processed by the txpool, even if those\ntxs might be invalid\n\nCloses #8213 \nCloses #6056\n\n## Integration\n\nN/A\n\n## Review Notes\n\nIn terms of testing, I updated an existing test which already exercises\n`ready_at_light` in the scope of the newly added fallback.\n\n---------\n\nSigned-off-by: Iulian Barbu <iulian.barbu@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Michal Kucharczyk <1728078+michalkucharczyk@users.noreply.github.com>",
          "timestamp": "2025-05-22T12:59:45Z",
          "tree_id": "69051a21be9fa9579a069ec0926808bd3cd4f529",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/26afcd65438f5518bb6a0c281cfcc6159a60587e"
        },
        "date": 1747922801591,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15762624428000005,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013061550086666665,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02238560696,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008646040060000068,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "363911+pepoviola@users.noreply.github.com",
            "name": "Javier Viola",
            "username": "pepoviola"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "36c11a7e6f9a19ecef28af72590806da088cfffe",
          "message": "Revert 7934 es/remove tj changes (#8611)\n\nrevert to use changed files action (pointing to commit of latest\nrelease).\n\ncc: @alvicsam\n\n---------\n\nCo-authored-by: Alexander Samusev <41779041+alvicsam@users.noreply.github.com>",
          "timestamp": "2025-05-22T15:48:24Z",
          "tree_id": "437cf28913d64763a45614e15d7b3cc527bfc173",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/36c11a7e6f9a19ecef28af72590806da088cfffe"
        },
        "date": 1747933159057,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008787724100000083,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022390645633333324,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15747300808000012,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01287042926666667,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eresav@me.com",
            "name": "Andrei Eres",
            "username": "AndreiEres"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "48d149b9032edf84bd2c1759152a40d7b40ab1fb",
          "message": "Benchmark storage access on block validation (#8069)\n\nFixes https://github.com/paritytech/polkadot-sdk/issues/7987\nFixes https://github.com/paritytech/polkadot-sdk/issues/7868\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>\nCo-authored-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>\nCo-authored-by: Alexandru Gheorghe <49718502+alexggh@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-05-22T17:07:00Z",
          "tree_id": "a697cf66e45b7ab1952ff93fdfcd2bf34aa48a43",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/48d149b9032edf84bd2c1759152a40d7b40ab1fb"
        },
        "date": 1747937252935,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.01301953616666667,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022867587106666663,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.16108481158666674,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00883447203333342,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "oliver.tale-yazdi@parity.io",
            "name": "Oliver Tale-Yazdi",
            "username": "ggwpez"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e723cfa2030586f968bb37dd094a61912573a13c",
          "message": "🔪 flaky and Zombienet tests (#8600)\n\nCommenting out all flaky tests and tracking them here\nhttps://github.com/paritytech/polkadot-sdk/issues/48\n\nChanges:\n- Disable flaky Rust tests by adding a new disabled feature. `#[ignore]`\nattribute is not possible since CI runs with `--ignored`\n- Disable all Zombienet tests\n\n- [ ] Waiting for CI what other tests fail.\n\n---------\n\nSigned-off-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>",
          "timestamp": "2025-05-22T22:29:20Z",
          "tree_id": "7fda3db009e3e15d9fae760d1fa967b927f9f496",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e723cfa2030586f968bb37dd094a61912573a13c"
        },
        "date": 1747956746576,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022412886873333336,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15839032255333332,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013033948966666669,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008751755026666742,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41779041+alvicsam@users.noreply.github.com",
            "name": "Alexander Samusev",
            "username": "alvicsam"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dd97d10c52965496c1ccfce6960267294818ea6c",
          "message": "ci: rm gitlab config (#8622)\n\nSince zombienet [has been\ndisabled](https://github.com/paritytech/polkadot-sdk/pull/8600) to\nimprove stability, it makes no sense to keep the GitLab configuration.",
          "timestamp": "2025-05-23T12:03:14Z",
          "tree_id": "35a50df041b5c56bc177caaf1fe256e8b8b8ad98",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/dd97d10c52965496c1ccfce6960267294818ea6c"
        },
        "date": 1748005599780,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022470554873333336,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008879455893333386,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013301519026666668,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15815550580000004,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "85f5dc72e3825c189f7cd0fdffd1e463ccf946e1",
          "message": "Use hashbrown hashmap/hashset in validation context (#8606)\n\nDiscovered while profiling\nhttps://github.com/paritytech/polkadot-sdk/issues/6131#issuecomment-2891523233\nwith the benchmark https://github.com/paritytech/polkadot-sdk/pull/8069\nthat when running in validation a big chunk of the time is spent\ninserting and retrieving data from the BTreeMap/BTreeSet.\n\nBy switching to hashbrown HashMap/HashSet in validation TrieCache and\nTrieRecorder and the memory-db\nhttps://github.com/paritytech/trie/pull/221 read costs improve with\naround ~40% and write with about ~20%\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-23T14:53:14Z",
          "tree_id": "ade5b4ef80478c623bc008c8bb3d5ea06199a2ad",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/85f5dc72e3825c189f7cd0fdffd1e463ccf946e1"
        },
        "date": 1748015692362,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02251542928666667,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1584412143666667,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013022887700000003,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008486977380000083,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "gui.thiolliere@gmail.com",
            "name": "Guillaume Thiolliere",
            "username": "gui1117"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2d1883f12755152eaf3d315cd4042cbf04a5d6e7",
          "message": "Introduce CreateBare, deprecated CreateInherent (#7597)\n\nRename `CreateInherent` to `CreateBare`, add method `create_bare` and\ndeprecate `create_inherent`.\nBoth unsigned transaction and inherent use the extrinsic type `Bare`.\nBefore this PR `CreateInherent` trait was use to generate unsigned\ntransaction, now unsigned transaction can be generated using a proper\ntrait `CreateBare`.\nHow to upgrade:\n* Change usage of `CreateInherent` to `CreateBare` and `create_inherent`\nto `create_bare`.\n* Implement `CreateBare` for the runtime, the method `create_bare` is\nusually implemented using `Extrinsic::new_bare`.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-26T05:13:04Z",
          "tree_id": "4ad5f6bee8bf332251c23f613a03869585a63248",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/2d1883f12755152eaf3d315cd4042cbf04a5d6e7"
        },
        "date": 1748240084886,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02262080542666667,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.0131318543,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.16028861664666674,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008883813360000055,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "60601340+lexnv@users.noreply.github.com",
            "name": "Alexandru Vasile",
            "username": "lexnv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8d1782e381313477892c3943eccd608fcbaa6e91",
          "message": "tx/metrics: Add metrics for the RPC v2 `transactionWatch_v1_submitAndWatch` (#8345)\n\nThis PR adds metrics for the following RPC subscription:\n[transactionWatch_v1_submitAndWatch](https://paritytech.github.io/json-rpc-interface-spec/api/transactionWatch_v1_submitAndWatch.html)\n\nMetrics are exposed in two ways:\n- simple counters of how many events we've seen globally\n- a histogram vector of execution times, which is labeled by `initial\nevent` -> `final event`\n- This helps us identify how long it takes the transaction pool to\nadvance the state of the events, and further debug issues\n  \nPart of: https://github.com/paritytech/polkadot-sdk/issues/8336\n\n### (outdated) PoC Dashboards\n\n![Screenshot 2025-04-28 at 17 50\n48](https://github.com/user-attachments/assets/9fd0bf30-a321-4362-a10b-dfc3de1eb474)\n\n\n### Next steps\n- [x] initial dashboards with a live node\n- [x] adjust testing\n\n---------\n\nSigned-off-by: Alexandru Vasile <alexandru.vasile@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-26T12:51:17Z",
          "tree_id": "6d8b137db98ddfdd936bfe38b3078b7212a8ce64",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/8d1782e381313477892c3943eccd608fcbaa6e91"
        },
        "date": 1748269571568,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022499572899999997,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.009030979180000072,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15745228825333338,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013094573259999999,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2102fdf4e27e04f24b1735b558205eb58473aca2",
          "message": "[pallet-revive] make subscription task panic on error (#8587)\n\n- subscription task are \"essential tasks\" and the service should go down\nwhen they fail.\n- Upgrade subxt to 0.41\n- Update zombienet-sdk to use the subxt re-export of subxt so it does\nnot conflict with the workspace version\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-26T13:59:52Z",
          "tree_id": "9be1f8fce584875744ec5e3ccf81f8df8cea5704",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/2102fdf4e27e04f24b1735b558205eb58473aca2"
        },
        "date": 1748271651165,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.00876846086000007,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02235635532,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15648099421333334,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01306956740666666,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alex.theissen@me.com",
            "name": "Alexander Theißen",
            "username": "athei"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e1428b03aada0a74e879b7f80ad3c5903924f026",
          "message": "Charge deposit based on key length (#8648)\n\nWe were only charging storage deposit based on value length but not\nbased on key length. Since we allow for variable length keys this has to\nbe done. Needs to be back ported since changing this in an already\ndeployed system will be nasty.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-26T16:23:25Z",
          "tree_id": "df38ba88e3eafe01536bd8ced2f50b174d6c8bb2",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e1428b03aada0a74e879b7f80ad3c5903924f026"
        },
        "date": 1748280607774,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012994687493333332,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022326714953333333,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15705002474000004,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.009031296760000059,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "60601340+lexnv@users.noreply.github.com",
            "name": "Alexandru Vasile",
            "username": "lexnv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e82b4dbc6f82d5fe4f69bd615c40a6781776aa36",
          "message": "litep2p/peerset: Reject non-reserved peers in the reserved-only mode (#8650)\n\nThis PR rejects non-reserved peers in the reserved-only mode of the\nlitep2p notification peerset.\n\nPreviously, litep2p ignored completely the reserved-only state while\naccepting inbound connections. However, it handled it properly during\nthe slot allocation phase.\n- the main changes are in the `report_inbound_substream` function, which\nnow propagated a `Rejected` response to litep2p on the reserved-only\nstate\n- in response, litep2p should never open an inbound substream after\nreceiving the rejected response\n- the state of peers is not advanced while in `Disconnected` or\n`Backoff` states\n  - the opening state is moved to `Cancelled` \n- for consistency purposes (and fuzzing purposes), the\n`report_substream_opened` is more robustly handling the `Disconnected`\nstate\n- while at it have replaced a panic with `debug_assert` and an instant\nreject\n  \n## Testing Done\n- started 2 nodes in Kusama and Polkadot with litep2p\n- added the `reserved_only_rejects_non_reserved_peers` test to ensure\nlitep2p handles peers properly from different states\n\n\nThis PR has been extracted from\nhttps://github.com/paritytech/polkadot-sdk/pull/8461 to ease the review\nprocess\n\ncc @paritytech/networking\n\n---------\n\nSigned-off-by: Alexandru Vasile <alexandru.vasile@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Dmitry Markin <dmitry@markin.tech>",
          "timestamp": "2025-05-26T18:15:10Z",
          "tree_id": "c59377b91550224da7fdd78d982d4620e8c2d373",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e82b4dbc6f82d5fe4f69bd615c40a6781776aa36"
        },
        "date": 1748287053757,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008691073786666748,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022674229633333338,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15846466214000007,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013172221893333334,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ub2262000@gmail.com",
            "name": "Utkarsh Bhardwaj",
            "username": "UtkarshBhardwaj007"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "7b224d3bf9ce1e8eebeac4cc33a06a702cae3501",
          "message": "add poke_deposit extrinsic to pallet-bounties (#8382)\n\n# Description\n\n* This PR adds a new extrinsic `poke_deposit` to `pallet-bounties`. This\nextrinsic will be used to re-adjust the deposits made in the pallet to\ncreate a new bounty.\n* Part of #5591 \n\n## Review Notes\n\n* Added a new extrinsic `poke_deposit` in `pallet-bounties`.\n* This extrinsic checks and adjusts the deposits made for creating a\nbounty.\n* Added a new event `DepositPoked` to be emitted upon a successful call\nof the extrinsic.\n* Although the immediate use of the extrinsic will be to give back some\nof the deposit after the AH-migration, the extrinsic is written such\nthat it can work if the deposit decreases or increases (both).\n* The call to the extrinsic would be `free` if an actual adjustment is\nmade to the deposit and `paid` otherwise (when no deposit is changed).\n* Added tests to test all scenarios.\n* Added benchmarks\n\n## TO-DOs\n* [x] Run CI cmd bot to benchmark\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-26T19:12:11Z",
          "tree_id": "1433bd45f52e24115d7c233c569607061b6a478e",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/7b224d3bf9ce1e8eebeac4cc33a06a702cae3501"
        },
        "date": 1748290593722,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008736954906666735,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022618056099999995,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15837995999333343,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01342827612666667,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "yrong1997@gmail.com",
            "name": "Ron",
            "username": "yrong"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "64aed49226dc592c456cb7aac126c84d5c0d78e8",
          "message": "Snowbridge: Remove asset location check for compatibility (#8473)\n\nThe `TokenIdOf`\n[convert](https://github.com/paritytech/polkadot-sdk/blob/4b83d24f4bc96a7b17964be94b178dd7b8f873b5/bridges/snowbridge/primitives/core/src/location.rs#L40)\nis XCM version-agnostic, meaning we will get the same token ID for both\nV5 and legacy V4 asset.\n\nHowever, the extra check is unnecessary, as\nthe`ConvertAssetId::convert(&token_id).ok_or(InvalidAsset)?;` alone is\nsufficient to verify whether the token is registered.",
          "timestamp": "2025-05-27T08:09:12Z",
          "tree_id": "56b2ff03bba5069b04087e104f45369a3498c4fa",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/64aed49226dc592c456cb7aac126c84d5c0d78e8"
        },
        "date": 1748337047190,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15770505643333338,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008602362966666754,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022457027133333335,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013149661380000002,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "73a0bca9cbcadb6798b72a5ebc18cf714b3fca25",
          "message": "[pallet-revive] impl_revive_api macro (#8652)\n\nMove pallet-revive runtime api implementation in a macro, so that we\ndon't repeat the code for every runtime.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-27T10:54:53Z",
          "tree_id": "b8d94aa8954f74f977ab2c1044c4bd9f099530e7",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/73a0bca9cbcadb6798b72a5ebc18cf714b3fca25"
        },
        "date": 1748347607556,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.0090117561133334,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022602096966666665,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1570187961266667,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013259463013333335,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alex.theissen@me.com",
            "name": "Alexander Theißen",
            "username": "athei"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b6f48bf9872f1f7b0306ed8f4c57f2964c844e33",
          "message": "revive: Simplify the storage meter (#8667)\n\nHistorically, the collection of storage deposits was running in an\ninfallible context. Meaning we needed to make sure that the caller was\nable to pay the deposits when the last contract execution returns. To\nachieve that, we capped the storage deposit limit to the maximum balance\nof the origin. This made the code more complex: It conflated the deposit\n**limit** with the amount of balance the origin has.\n\nIn the meantime, we changed code around to make the deposit collection\nfallible. But never changed this aspect.\n\nThis PR rectifies that by doing:\n- The root storage meter and all its nested meter's limits are\ncompletely independent of the origin's balance. This makes it way easier\nto argue about the limit that a nested meter has at any point.\n- Consistently use `StorageDepositNotEnoughFunds` (limit not reached)\nand `StorageDepositLimitExhausted` (limit reached).\n- Origin not being able to pay the ed for a new account is now\n`StorageDepositNotEnoughFunds` and traps the caller rather then being a\n`TransferFailed` return code. Important since we are hiding the ed from\ncontracts. So it should also not be an error code that must be handled.\n\nIm preparation for:\nhttps://github.com/paritytech/contract-issues/issues/38\n\n---------\n\nCo-authored-by: xermicus <cyrill@parity.io>\nCo-authored-by: PG Herveou <pgherveou@gmail.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-27T13:21:07Z",
          "tree_id": "b7f2df2d1a2ed6d30866df16a40f67ee8388f694",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/b6f48bf9872f1f7b0306ed8f4c57f2964c844e33"
        },
        "date": 1748355530240,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.00864501534000008,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1567812648333333,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022357094006666665,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013105304646666663,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9dc13377ded3ed8bb4447906ac6cc6375f4698c8",
          "message": "cumulus-aura: Improve equivocation checks (#8669)\n\nInstead of just checking for the slot, we also take the block number and\nthe relay parent into account (as we actually allow to build multiple\nblocks per slot). Then this pr also ensures that we are still able to\nimport blocks from availability recovery. This ensures that a network\ndoesn't get stuck on a storm of equivocations. The next step after this\npull request would be to implement on chain slashing for equivocations\nand probably disabling of the offending author.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-27T15:45:46Z",
          "tree_id": "99133b51f90729e7c348f3ec91b5cbf958df71d3",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/9dc13377ded3ed8bb4447906ac6cc6375f4698c8"
        },
        "date": 1748364520432,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008718676333333415,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012952198806666664,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02261690866,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15758602556000004,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4baf234cfa8da5e79c920dfd23a1e2344a0dfb84",
          "message": "Bump memory-db (#8607)\n\nBump memory-db to pick up\nhttps://github.com/paritytech/polkadot-sdk/pull/8606 and\nhttps://github.com/paritytech/trie/pull/221\n\nAdditionally, polkavm needs to be bumped to get rid of to get rid of\nhttps://github.com/paritytech/polkadot-sdk/actions/runs/15180236627/job/42688141374#step:5:1869\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>",
          "timestamp": "2025-05-27T17:42:18Z",
          "tree_id": "9d6e906560e7caba6fa586e6e897f1127b7b361c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4baf234cfa8da5e79c920dfd23a1e2344a0dfb84"
        },
        "date": 1748372364501,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15947702490000001,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013075290926666665,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02237966673333333,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.009055429913333395,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eresav@me.com",
            "name": "Andrei Eres",
            "username": "AndreiEres"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "10cde1f6119068cc2b1d71b536cf5e4c442b77b2",
          "message": "Add trie cache warmup (#7556)\n\n# Description\nFixes https://github.com/paritytech/polkadot-sdk/issues/7533.\n\nPart of launching smart contracts on AssetHub. The current task involves\nwarming up the state and performing sanity checks to ensure that memory\nusage remains within reasonable limits; otherwise, it should abort\ngracefully.\n\nHere is a breakdown of the task by parts: \n- **Configuration.** We use a CLI flag to trigger the warm up. To\nincrease the cache size, we use an existing flag.\n- **Warm-up.** We populate the trie cache with values from the database\nusing a best hash as a storage root. For normal use we spawn a\nbackground task for it, for testing purposes we warm up in a blocking\nmanner.\n- **Sanity checks.** If we find that the configured cache size is too\nlarge, we warn.\n\nVariants of the added flag:\n| Flag | Meaning |\n\n|---------------------------------|---------------------------------------------|\n| [no flag] | no warm-up |\n| warm-up-trie-cache | non-blocking warmup |\n| warm-up-trie-cache non-blocking | non-blocking warmup (same as just\nthe flag) |\n| —warm-up-trie-cache blocking | blocking warmup |\n\n## Integration\nTested on a snapshot from polkadot-asset-hub: 5426064 keys, ~900MIB\nstate. Populating Trie cache takes 1.5–2 minutes on Macbook Pro M2.\n\n## Aditional Notes\nInitially, we thought about putting the entire state into memory using a\nCLI flag or a runtime parameter, but decided against it. That’s up to\ncollators to decide on which setup run their machines, they can use the\ncurrent cache size setting to increase the throughput.\n\n## Todos\nTesting moved to https://github.com/paritytech/polkadot-sdk/pull/8644\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Alexandru Gheorghe <49718502+alexggh@users.noreply.github.com>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>",
          "timestamp": "2025-05-28T07:25:44Z",
          "tree_id": "d0651e283a76fa6c43f7ced7520471aba8e1c904",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/10cde1f6119068cc2b1d71b536cf5e4c442b77b2"
        },
        "date": 1748420827043,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008385735966666759,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15667583454000003,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022273463853333335,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012865066266666664,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4b5a9ad94c192731e8a2c927fe003de85e2f3225",
          "message": "asset-hub-westend: use inmemorydb weights (#8359)\n\nModify asset-hub-westend to use the read/write costs in validate block\non validator reference hardware, since these are\nweights that guarantee the blocks will pass validation and make it on\nthe relay chain.\n\nThis were obtained with the benchmark created here:\nhttps://github.com/paritytech/polkadot-sdk/pull/8069 and it contains all\nthe optimisation brought by\nhttps://github.com/paritytech/polkadot-sdk/pull/8607.\n\nFixes: https://github.com/paritytech/polkadot-sdk/issues/7537\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>",
          "timestamp": "2025-05-28T07:52:32Z",
          "tree_id": "e509d535444cfaf8f3f8804954fde729b8ea2078",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4b5a9ad94c192731e8a2c927fe003de85e2f3225"
        },
        "date": 1748422893797,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.01292960132,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15764072958666667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008844630200000076,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022623020073333337,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "35698397+drskalman@users.noreply.github.com",
            "name": "drskalman",
            "username": "drskalman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b4b7439e6f7bdd61a0a0d9fc3949b1f50a8dcfb6",
          "message": "Implement Proof Of Possession capability for all public key crypto types (#6010)\n\n- Implement `ProofOfPossession` traits with default implementation.\n- Implement their derive macro in a new proc-macro crate in\n`pubkeycrypto` create which eventually should contains all pubkey crypto\nscheme as recommended by #1975\n- Derive ProofOfPossession for all pubkey crypto type beside BLS.\n\n- [x] Implement Nugget BLS proof of possession which should certifies\nthat the unique secret key known to the prover is used to generate both\npublic keys in G1 and G2.\n- [x] Implement sign Host function for BLS12-381 necessary to be able to\ngenerate proof of possion through runtime.\n- [x] Implement generation and verification of proof of possession\nfunctions in all RuntimeApp and RuntimeAppPublic s.\n\n---------\n\nCo-authored-by: Andrew Burger <andrewburger1991@gmail.com>\nCo-authored-by: Davide Galassi <davxy@datawok.net>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-05-28T10:23:48Z",
          "tree_id": "a0ecb6b5ff85adc5aba7ca79a715bfbc154a77c6",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/b4b7439e6f7bdd61a0a0d9fc3949b1f50a8dcfb6"
        },
        "date": 1748433037701,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022562581760000006,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008844702640000085,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15763123751333333,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013015179006666669,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "178801527+raymondkfcheung@users.noreply.github.com",
            "name": "Raymond Cheung",
            "username": "raymondkfcheung"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "38b7581fc04aebc7d68983cee28a6a21367de8fd",
          "message": "CI: Enforce SemVer restrictions on backport PRs with optional override via `validate: false` (#8632)\n\nThis PR enforces SemVer policies on backport branches by ensuring crate\nversion bumps in `.prdoc` files are limited to `minor`, `patch`, or\n`none` unless explicitly overridden.\n\n## Key Points\n\n* Backport PRs targeting stable branches must restrict crate bumps to\n`minor`, `patch`, or `none` to maintain stability.\n* `major` bumps are disallowed unless explicitly overridden by adding\n`validate: false` to the crate entry in `prdoc/pr_$PR.prdoc`.\n* Developers must also provide a justification in the PR description\nwhen using `validate: false`.\n* The CI validates that any `major` bump is only allowed if accompanied\nby `validate: false`; otherwise, the backport check fails with a clear\nerror message.\n\nThis validation prevents accidental inclusion of breaking changes in\nbackports while allowing informed exceptions with documented\njustification.\n\nTo summarise the logic:\n\n| bump level | validate | backport result |\n|------------|----------|-----------------|\n| none       | (nil)    | allowed         |\n| patch      | (nil)    | allowed         |\n| minor      | (nil)    | allowed         |\n| major      | false    | allowed         |\n| major      | (nil)    | failed          |\n\nCloses: #8629\n\n---------\n\nCo-authored-by: Adrian Catangiu <adrian@parity.io>",
          "timestamp": "2025-05-28T13:20:48Z",
          "tree_id": "1f016293bf66c4a10d611c94291eae7ed3d35b28",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/38b7581fc04aebc7d68983cee28a6a21367de8fd"
        },
        "date": 1748442939577,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013128263659999995,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022531436500000005,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008837796753333413,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1583290279666667,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "178801527+raymondkfcheung@users.noreply.github.com",
            "name": "Raymond Cheung",
            "username": "raymondkfcheung"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fed35af5cd7398e64e60fb3578fe4f0732856c11",
          "message": "Make `WeightBounds` return `XcmError` to surface failures (#8535)\n\nThis PR partially addresses #8419 by improving error handling and\ntraceability for XCM weight calculation failures in `WeightInfoBounds`\nand `FixedWeightBounds`.\n\n## Why change\n\nThe vague \"Failed to prepare message\" error in #8419 makes debugging\nextremely difficult. The current implementation drops detailed errors\nand omits log context, especially for cases like decoding instructions\nor violating instruction count limits. Previously, XCM weight\ncalculation errors were surfaced only as `Result<Weight, ()>`, losing\nvaluable error information and forcing all upstream consumers to treat\nthem as opaque failures.\n\n## How change\n\n* Updates return types: Changes `WeightBounds::weight` and\n`instr_weight` to return `Result<Weight, XcmError>` instead of\n`Result<Weight, ()>`\n* Improves internal error handling: Uses `Result<Weight, XcmError>`\ninternally for:\n    - Instruction decoding failures → `FailedToDecode`\n    - Message/instruction weight overflows → `Overflow`\n    - Excessive instruction count → `ExceedsStackLimit`\n* Adds structured debug logging:\n    - `weight`: logs error type, instructions remaining, message length\n    - `instr_weight`: logs error type, instruction, and limit\n* Updates consumers: Ensures downstream callers (e.g., `XcmExecutor`,\n`ExecuteXcm`) properly handle the structured errors\n\nThis enables better structured error handling and debugging while\nproviding detailed context for XCM weight calculation failures.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-29T05:59:07Z",
          "tree_id": "4e295d0d3ca3ad39f9423bad940624bccfae1d22",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/fed35af5cd7398e64e60fb3578fe4f0732856c11"
        },
        "date": 1748502646214,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02232279102,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008705331746666732,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012819440326666664,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15689371475333344,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "117115317+lrubasze@users.noreply.github.com",
            "name": "Lukasz Rubaszewski",
            "username": "lrubasze"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4a930d69bf4cda914e516d308348e6584a2e4e06",
          "message": "ci: trigger zombienet tests if 'T18-zombienet_tests' label set (#8696)\n\n# Description\nZombienet tests are no longer automatically triggered with polkadot-sdk\nCI because of their flakiness (see\nhttps://github.com/paritytech/polkadot-sdk/pull/8600).\nThis PR allows to conditionally trigger Zombienet tests if label\n'T18-zombienet_tests' is set.\nThis is to have an option to trigger them anyway until they are\nstabilized.\nIt will help us to monitor the current status of the tests while\nstabilizing.\n\n---------\n\nCo-authored-by: Javier Viola <javier@parity.io>\nCo-authored-by: Javier Viola <363911+pepoviola@users.noreply.github.com>",
          "timestamp": "2025-05-29T06:56:25Z",
          "tree_id": "3b461a9e1ad892cd4e31c78fc7856e0fccb68ed3",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4a930d69bf4cda914e516d308348e6584a2e4e06"
        },
        "date": 1748505980492,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008833534000000089,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022407226420000002,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012964587586666665,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15644999247333338,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1db9f930a56be566a6bd39bc9e6c47628f7c8b76",
          "message": "bound trusted local cache to shared limits sizes (#8688)\n\nThis\nhttps://github.com/paritytech/polkadot-sdk/pull/7556#discussion_r2107732009\nmade me think that we can have some miss-uses of the trusted cache, so\nit needs some reasonable bounds for the size.\n\nSince there is no point in letting it grow past the shared cache limits,\nbecause the items will be discarded anyways when we propagate them back\nto the share cache so I decided to bound it to those limits.\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-05-29T07:53:20Z",
          "tree_id": "e659e8690ff4b91351ec4724e495e296dde74adb",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/1db9f930a56be566a6bd39bc9e6c47628f7c8b76"
        },
        "date": 1748509251254,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008527834093333426,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012739882906666666,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1564523839333334,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022333551220000004,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "karol.k91@gmail.com",
            "name": "Karol Kokoszka",
            "username": "karolk91"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "477595ff951be6218c9a70857572959f02e1eb1c",
          "message": "transfer_assets benchmarking and weights for people chains (#8700)\n\nRelates to:\nhttps://github.com/paritytech/polkadot-sdk/pull/8369#discussion_r2111743837\n\nIntroduces implementation of `set_up_complex_asset_transfer()` to\ncorrectly benchmark weights for `transfer_assets` extrinsics on Rococo\nPeople and Westend People\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Adrian Catangiu <adrian@parity.io>",
          "timestamp": "2025-05-29T09:58:36Z",
          "tree_id": "812bad752aac8ad5c5e91037b8bcc9f8dc7e06d0",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/477595ff951be6218c9a70857572959f02e1eb1c"
        },
        "date": 1748516415617,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012847485926666664,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022594708520000003,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15800424071333338,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008636050073333405,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "bkontur@gmail.com",
            "name": "Branislav Kontur",
            "username": "bkontur"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d6b9159cde1c30b98764db0596edb2ce1bdaf5be",
          "message": "Add `Paras` `authorize_code_hash` + `apply_authorized_code` feature (#7592)\n\nCloses: https://github.com/paritytech/polkadot-sdk/issues/7574\nRelates to: https://github.com/paritytech/polkadot-sdk/issues/7591\n\n## Motivation\n\nThis feature is useful when triggering a `Paras` pallet call from a\ndifferent chain than the one where the `Paras` pallet is deployed. For\nexample, we may want to send `Paras::force_set_current_code(para, code)`\nfrom the Collectives and/or AssetHub to the relay chain (because the\nrelaychain governance will be migrated to the AssetHub as a part of\nAHM).\n\nThe primary reason for this approach is to avoid transferring the entire\n`new_code` Wasm blob between chains. Instead, we authorize the\n`code_hash` using `root` via `fn\nauthorize_force_set_current_code_hash(new_authorization, expire_at)`.\nThis authorization can later be applied by anyone using\n`Paras::apply_authorized_force_set_current_code(para, new_code)`. If\n`expire_at` is reached without the authorization being used, it is\nautomatically removed.\n\n## Usage\n\nThis feature is intended for use in two scenarios:\n\n- The D-Day scenario, where we can restart AssetHub from Collectives —\nsee the PoC: https://github.com/paritytech/polkadot-sdk/pull/8141\n- Using `force_set_current_code` for any parachain from migrated\ngovernance to AssetHub (AHM)\n\n## TODO\n- [x] ~cover also `add_trusted_validation_code` or\n`force_schedule_code_upgrade` - see comment bellow:\nhttps://github.com/paritytech/polkadot-sdk/pull/7592#issuecomment-2678092104~\nno see other\n[comment](https://github.com/paritytech/polkadot-sdk/pull/7592#discussion_r1978344413)\n\n\n## Open questions\n\n- [ ] ~Do we need something like `poke_authorized_code_hash`? E.g. in\ncase that we authorize code hash, but nobody would apply it and the\nparachain starts working with old/other_new code? Is this possible?~\n- [ ] Do we need something similar for `frame_system` pallet and\n`set_code` / `set_code_without_checks`?\n- [ ] Can we achieve the same with `pallet-whitelist`?\n- [ ] Do we have other extrinsics over chains which has `code`\nattribute?\n- [x] Do we need to add `validate_unsigned` for `apply_authorized_code`?\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: Kian Paimani <5588131+kianenigma@users.noreply.github.com>\nCo-authored-by: Adrian Catangiu <adrian@parity.io>",
          "timestamp": "2025-05-29T10:36:46Z",
          "tree_id": "99befc0e7f10f0b0c3540c594eeca5424060ab67",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d6b9159cde1c30b98764db0596edb2ce1bdaf5be"
        },
        "date": 1748518935281,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.1557404681733333,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008485126106666742,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01267359904,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02227980040666667,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "karol.k91@gmail.com",
            "name": "Karol Kokoszka",
            "username": "karolk91"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "05649f110fdbdadd024eb38784a2a37aa1aac087",
          "message": "Sync xcm related test utils impls with runtimes repo (#8369)\n\n# Description\n\nThis PR covers an effort to sync some utils implementations that were\ncreated/modified for the purpose of using them in [runtimes\nrepo](https://github.com/polkadot-fellows/runtimes) with the intention\nto introduce there first and then upstream back to polkadot-sdk\n\n# Checklist\n\n* [x] `test_parachain_is_trusted_teleporter` utilizng dry-run as in\n[PR](https://github.com/polkadot-fellows/runtimes/pull/673/files/dc3f9cdd588e62f3a4abd5b0ca08262fcb568882#diff-7346706278168c97dfec9e73bec1a115274a2be89a3147b914dd2eedec9f6269R344)\n* [x] `test_relay_is_trusted_teleporter` utilizing dry-run as currently\non\n[main](https://github.com/polkadot-fellows/runtimes/blob/f5b3d53f25cf7a78479874badf3aa44c6f7ec49b/integration-tests/emulated/helpers/src/lib.rs#L71)\n* [x] `test_parachain_is_trusted_teleporter_for_relay` utilizing dry-run\nas currently on\n[main](https://github.com/polkadot-fellows/runtimes/blob/f5b3d53f25cf7a78479874badf3aa44c6f7ec49b/integration-tests/emulated/helpers/src/lib.rs#L209)\n* [x] modified `ToParachainDeliveryHelper` to utilize `WithdrawAsset`\nbased worst-case fee estimation instead of `ClearOrigin`, first\nintroduced in [forked\nrepo](https://github.com/karolk91/runtimes/pull/1/files#diff-ef0567d8ca7b55f6f8fa190c7613f343f0ac6c0314492b8db4a1b213f351f7a7R46)\n(to be merged to fellows)\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Adrian Catangiu <adrian@parity.io>\nCo-authored-by: Andrii <ndk@parity.io>",
          "timestamp": "2025-05-29T12:46:16Z",
          "tree_id": "f720787dd58a53362b07e7e6dfa34fa0d22f51e9",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/05649f110fdbdadd024eb38784a2a37aa1aac087"
        },
        "date": 1748526355104,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022511281993333344,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013180821366666666,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15706681858666666,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.009034921253333404,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "skunert49@gmail.com",
            "name": "Sebastian Kunert",
            "username": "skunert"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "4b74df3b36b2d8fb2e87f951bed9604f149dccb8",
          "message": "Allow building on older relay parents (#8299)\n\n## Context\nWith the slot-based collator and elastic-scaling, parachains build\nblocks at a fast pace. A classic example is a chain with 3 cores, which\nwould produce one block every 2 seconds. With such a busy schedule,\ncollator nodes do not have enough time to author their 3 blocks on\nmultiple relay chain forks.\n\nTherefore, we pick the current best relay chain block at block\nproduction as our parent. In most cases, this block will be on the fork\nthat continues. However, it can happen that multiple BABE primary blocks\nare present or we see a secondary block first due to timing issues. In\nthat case, we would build on the wrong block.\n\n## Mitigation\nTo mitigate building on the wrong relay chain forks, the idea emerged to\njust build on an older relay parent. The depth of relay chain forks is\nusually very low, mostly 1 block. By building 1 or 2 blocks behind the\ntip, we can eliminate the impact of the relay chain forks already.\n\n## Changes Overview\nThe PR consists of two larger parts:\n1. Modifications to the block builder task, so that it picks a relay\nchain parent at a given offset and fills the parachain inherent with the\nrequired data.\n2. Modifications to the `set_validation_data` inherent. This is\nnecessary to enforce the relay parent offset. Without these runtime side\nchanges, a parachain author could just build at the tip and skip a\nprevious author. In this PR, I introduce a new runtime API that tells\nthe node side at which offset blocks should be built. It enforces this\noffset by requiring multiple descendants of the relay parent to be\npresent in the `set_validation_data` inherent. If the offset, for\nexample, is 2, the inherent requires 2 descendants and the relay parent\nitself to be present.\n\n## Tradeoffs\n- To verify these descendant headers, the relay chain authorities need\nto be added to the relay chain state proof, which consumes a bit of PoV\nspace.\n- The latency of incoming XCM messages is delayed by `OFFSET * 6s`.\n- The unincluded segment needs to increase by `VELOCITY * RP_OFFSET`.\nThe problem is that from the runtimes perspective, the currently\nproduced block is not included at the relay parent.\n\n## Compatibility\nThe changes here should be backward compatible. The main point of\nfriction is the `ParachainInherent`, where new runtimes expect a\ndifferent format. I am keeping the [legacy\nversion](https://github.com/paritytech/polkadot-sdk/blob/524f9f40f450c27edbe61a838a5d6c6cf64a6cf9/cumulus/primitives/parachain-inherent/src/lib.rs#L64-L64)\naround for now so that we can try to decode it the new version is not\npassed.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: Michal Kucharczyk <1728078+michalkucharczyk@users.noreply.github.com>",
          "timestamp": "2025-05-29T14:16:46Z",
          "tree_id": "61e9867d9090a8d0a5501df27268665bbd659aab",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4b74df3b36b2d8fb2e87f951bed9604f149dccb8"
        },
        "date": 1748533668236,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008775875433333417,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15677886759999998,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02234676726,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012824903466666671,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "yrong1997@gmail.com",
            "name": "Ron",
            "username": "yrong"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "40e3fcb050147c89e80c3dc1d47599ce23c619ed",
          "message": "Snowbridge: Unpaid execution when bridging to Ethereum (#8599)\n\n### Context\n\nCurrently we use\n[SovereignPaidRemoteExporter](https://github.com/paritytech/polkadot-sdk/blob/ff5c67c8a3d60ccb3f0af114a07db8f4bec485a0/cumulus/parachains/runtimes/assets/asset-hub-westend/src/xcm_config.rs#L457-L464),\nwhich is unnecessary since all fees in Snowbridge V2 will be estimated\non the fly and injected into the XCM.\n\nResolves: https://linear.app/snowfork/issue/SNO-1510\n\n---------\n\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>\nCo-authored-by: Adrian Catangiu <adrian@parity.io>",
          "timestamp": "2025-05-29T17:11:02Z",
          "tree_id": "8529f825c120b2fe298320d1643f82d15ee39da4",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/40e3fcb050147c89e80c3dc1d47599ce23c619ed"
        },
        "date": 1748546298666,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15712018872000005,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02240624576666667,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012970395993333337,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00855035331333342,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "paolo@parity.io",
            "name": "Paolo La Camera",
            "username": "sigurpol"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e6b6769d1c524fd55f51bb55fab53dc389dc6e26",
          "message": "Staking (EPMB): update the semantics of elect() and Phase::Extract(N) (#8633)\n\n- Make `elect()` in `election-provider-multi-block` (`EPMB`) the sole\nresponsible for `Phase::Export` transitions:\n- before this change, the handling was split between EPMB's\n`on_initialize()/next()` and `elect()` (e.g. as triggered by\nstaking-async's `on_initialize()`).\n- Update the semantics of elect(N) and of the inner value of Export(N):\n- calling `elect(N)` means now that we are expecting to serve result for\npage N and to transition to `Phase::Export(N-1)` if N > 0 or to\n`Phase::Off` if N == 0.\n\nFor a 4-page election, the flow is the following:\n\n1. **elect(3):**\n   - If in `Done`, serve result for page 3, transition to `Export(2)`.\n2. **elect(2):**\n- If in `Export(2)`, serve result for page 2, transition to `Export(1)`.\n3. **elect(1):**\n- If in `Export(1)`, serve result for page 1, transition to `Export(0)`.\n4. **elect(0):**\n   - If in `Export(0)`, serve result for page 0, transition to `Off`.\n\nThis change fixes the issue for which we were handling multiple\ntransactions in the same block or not depending on the order of\ninitialization of the pallets. E.g. if `staking-async` was initialized\nbefore `EPMB`, in block `X`:\n- when in `Phase::Done`, calling `elect(N)` as coming for\n`staking-async`'s `on_initialize()`, forced the transition `Done` ->\n`Export(N)`\n- the following `next()` triggered by `EPMB`'s `on_initialize()` forced\nthe transition still within block X from `Export(N)` to `Export(N-1)`\n\nThis is fixed now since the transitions around `export` phase are fully\nencapsulated into `EPMB`'s `elect()` function.",
          "timestamp": "2025-05-30T06:48:43Z",
          "tree_id": "22ffc7f19c2cd9e39aa526e62cb3378af62f58e4",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e6b6769d1c524fd55f51bb55fab53dc389dc6e26"
        },
        "date": 1748591672130,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022370556513333337,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008706148293333403,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15699827552666668,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012788263453333336,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "egor@parity.io",
            "name": "Egor_P",
            "username": "EgorPopelyaev"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "10683dd397d3db7429f3f95fdb70b1ffc7c38f35",
          "message": "[Backport] Version bumps and prdocs reordering from the stable2503-4 and stable2503-5 releases (#8706)\n\nThis PR backports regular node version bumps and prdocs reordering from\nthe stable2503 branch back to master",
          "timestamp": "2025-05-30T09:43:39Z",
          "tree_id": "54b218a4d02c865b8b9f0781e5a97c1e8e856e6d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/10683dd397d3db7429f3f95fdb70b1ffc7c38f35"
        },
        "date": 1748601944406,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012807684233333333,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008874469786666766,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1563682361733333,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022426588100000006,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "paolo@parity.io",
            "name": "Paolo La Camera",
            "username": "sigurpol"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3d0c061d5111723cedab73b09e52ddc052dd00a7",
          "message": "Staking (EPMB): Add defensive error handling to voter snapshot creation and solution verification (#8687)\n\n- Refactor snapshot creation to emit events and triggers defensive panic\non failure\n- Replace unwrap() with defensive_unwrap_or(u32::MAX) to ensure solution\nfails verification gracefully when desired_targets is unavailable rather\nthan panicking.\n- Add error events for failed target and voter snapshots\n\nClose #8685.",
          "timestamp": "2025-05-30T15:21:59Z",
          "tree_id": "d462350a619bef86b55b5f3eca050a1d6a1f7849",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/3d0c061d5111723cedab73b09e52ddc052dd00a7"
        },
        "date": 1748622249981,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.1567129043866667,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012845718939999999,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022357718846666673,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00883136575333342,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eskimor@users.noreply.github.com",
            "name": "eskimor",
            "username": "eskimor"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "1a8313fb2f88053e931370811973e8ce0394686a",
          "message": "Broker: Introduce min price + adjust renewals to lower market. (#8630)\n\nThis PR provides:\n\n1. The means for the runtime to configure a minimum price for sales.\n2. Prevents renewals to get detached too much from current market, by\nbumping them at least to the `end_price` of the current sale.\n\nTODO:\n\n- [x] Implement\n- [x] Add tests\n- [x] Fix runtimes/Make Rococo + Westend use the new price controller.\n- [x] prdoc\n- [x] Leave configurability to the runtime\n\n---------\n\nCo-authored-by: Robert <robert@gonimo.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Maciej <maciej.zyszkiewicz@parity.io>",
          "timestamp": "2025-05-30T16:16:57Z",
          "tree_id": "5bae32eea3ff61143198e621ec2d34820a5e931b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/1a8313fb2f88053e931370811973e8ce0394686a"
        },
        "date": 1748625981535,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013000041099999995,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00877359242666676,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15688192488,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02243469373333334,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ae4a242b5439541b223fdb22fa3830886637244b",
          "message": "pallet-assets ERC20 precompile (#8554)\n\nAdd ERC20 precompile for pallet-asset.\n\nSince there can be multiple instances of `pallet-assets`, the Precompile\nis implemented for an `AssetPrecompileConfig` that defines both the\naddress range to match and how to extract the asset_id from the address.\n\nFor now I have only created one `AssetIdExtractor` that pulls an u32\nasset id encoded in the address.\n\nFollow up PR will define stateful extractor to extract the id from\nstorage for foreign assets.\n\nOther solidity traits will be added in follow up PRs\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Francisco Aguirre <franciscoaguirreperez@gmail.com>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>",
          "timestamp": "2025-05-30T17:42:04Z",
          "tree_id": "8035f329361ef0b96b296835493c212f30f658cd",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ae4a242b5439541b223fdb22fa3830886637244b"
        },
        "date": 1748630539860,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013038826653333337,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022247248393333335,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15645622272666668,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00872537622000007,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "franciscoaguirreperez@gmail.com",
            "name": "Francisco Aguirre",
            "username": "franciscoaguirre"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "65ade498b63bf2216d1c444f28c1b48085417f13",
          "message": "Nest errors in pallet-xcm (#7730)\n\nErrors in `pallet-xcm` are frustrating. You execute an XCM instruction\nand get `LocalExecutionIncomplete`: no details, no context. Was it\ninsufficient balance? An account conversion failure? You're left\nguessing.\n\nTo fix this, we introduce `LocalExecutionIncompleteWithError`, which\nnests an `ExecutionError` enum inside `LocalExecutionIncomplete`. This\nprovides specific error details, like insufficient balance or asset\ntransaction failures, making debugging easier for users and\napplications. FRAME errors are limited to 4 bytes, and we were only\nusing one. By nesting `ExecutionError`, we utilize the full 4 bytes with\na compact enum that mirrors `XcmError` for consistency.\n\nTo make this robust, we reworked problematic errors. For instance,\n`FailedToTransactAsset` previously took a string, which couldn’t fit in\n4 bytes. We’ve replaced it with a unit variant in `ExecutionError`,\nlogging the string for debugging while keeping the encoding compact.\nThis ensures detailed, efficient error reporting.\n\n---------\n\nCo-authored-by: Raymond Cheung <178801527+raymondkfcheung@users.noreply.github.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Adrian Catangiu <adrian@parity.io>\nCo-authored-by: Andrii <ndk@parity.io>",
          "timestamp": "2025-05-31T22:03:58Z",
          "tree_id": "dbe1cca0ec02255336bc211c7f25c3e49a7a0e00",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/65ade498b63bf2216d1c444f28c1b48085417f13"
        },
        "date": 1748732535019,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022397424720000007,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15654507908666673,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008525908560000078,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012940289766666667,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "59443568+sw10pa@users.noreply.github.com",
            "name": "Stephane Gurgenidze",
            "username": "sw10pa"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "25d6e88d919030a1eb67fd0df3fac98f3c12ed28",
          "message": "feat: add collator peer ID to ParachainInherentData (#8708)\n\n## Issue\n[[#7749] Collator Protocol Revamp: send PeerId via\nUMP](https://github.com/paritytech/polkadot-sdk/issues/7749)\n\n## Description\nAdds an optional `collator_peer_id` field to the new version of\n`ParachainInherentData` struct from [PR\n#8299](https://github.com/paritytech/polkadot-sdk/pull/8299). This field\nis currently unused and defaults to `None`, but is added proactively to\navoid introducing yet another version of the inherent data after the\ncurrent release.\n\n## Next Steps\n### In a follow-up PR:\n- Populate `collator_peer_id` on the collator side;\n- Handle the field in the `parachain-system` pallet and sends a UMP\nsignal to the relay chain.",
          "timestamp": "2025-06-02T07:32:16Z",
          "tree_id": "4be04c5a73b1ae643f9218b17f8bf144ae5b4a72",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/25d6e88d919030a1eb67fd0df3fac98f3c12ed28"
        },
        "date": 1748855662092,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.01305870624666667,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15723769107333344,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008805189480000076,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022418149266666673,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fb41dde0bbfe6bf003d63eb3abd15e6574c0586c",
          "message": "[pallet-revive] update dry-run logic (#8662)\n\n- Revert #8504\n- Add a `prepare_dry_run` that run before bare_call / bare_instantiate\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-02T12:07:51Z",
          "tree_id": "cb642143591a436af77f34cde891a3843d020691",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/fb41dde0bbfe6bf003d63eb3abd15e6574c0586c"
        },
        "date": 1748870998143,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022302174586666675,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013237053593333332,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1582717303000001,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00878154260000006,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "evgeny@parity.io",
            "name": "Evgeny Snitko",
            "username": "AndWeHaveAPlan"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a251f77f35c4dc261e8ba51327d68a969f0671ca",
          "message": "Docker master image tag fix (#8711)",
          "timestamp": "2025-06-02T13:57:18Z",
          "tree_id": "4929df7843b83068c198ae67ed14aa638dc20086",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/a251f77f35c4dc261e8ba51327d68a969f0671ca"
        },
        "date": 1748876138529,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022398547453333334,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008697394540000068,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1573543952800001,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01298681256,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "tiago.bandeira@parity.io",
            "name": "Tiago Bandeira",
            "username": "tiagobndr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "32ec6096910fbb57686370cbbf83babc94563e07",
          "message": "Remove all XCM dependencies from `pallet-revive` (#8584)\n\nThis PR removes all XCM dependencies from `pallet-revive`, including the\n`mock-network` crate which was primarily used to test the unstable\n`xcm_execute` and `xcm_send` APIs. These APIs (along their respective\ntests) will be moved to the XCM precompile in `pallet-xcm` to avoid\ncyclic dependencies.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Adrian Catangiu <adrian@parity.io>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>",
          "timestamp": "2025-06-02T14:21:17Z",
          "tree_id": "cd8dde1f12d7ad089384e53b29080efb633cf49a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/32ec6096910fbb57686370cbbf83babc94563e07"
        },
        "date": 1748880343862,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022427376679999996,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008582602926666748,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01288593657333333,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15621475207333335,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "5588131+kianenigma@users.noreply.github.com",
            "name": "Kian Paimani",
            "username": "kianenigma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "1dd7cf6c9f454ca184e74dcb48b28304e9e9c88f",
          "message": "[AHM] Report the weights of epmb pallet to expose kusama and polkadot weights (#8704)\n\n- [ ] Use them in WAH once @ggwpez merges the current deployed code on\nWAH to master\n- [x] Run on ref hardware\n\n```\ndisplaying pallet_election_provider_multi_block_dot_size.rs\n+--------------------------------------------------+--------------------------------------+---------+---------+------------+\n| File                                             | Extrinsic                            | Old     | New     | Change [%] |\n+==========================================================================================================================+\n| pallet_election_provider_multi_block_dot_size.rs | on_initialize_nothing                | 3.56KiB | 3.56KiB | Unchanged  |\n|--------------------------------------------------+--------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_dot_size.rs | on_initialize_into_unsigned          | 3.75KiB | 3.75KiB | Unchanged  |\n|--------------------------------------------------+--------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_dot_size.rs | on_initialize_into_snapshot_rest     | 3.06MiB | 3.06MiB | Unchanged  |\n|--------------------------------------------------+--------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_dot_size.rs | on_initialize_into_snapshot_msp      | 2.41MiB | 2.41MiB | Unchanged  |\n|--------------------------------------------------+--------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_dot_size.rs | on_initialize_into_signed_validation | 3.76KiB | 3.76KiB | Unchanged  |\n|--------------------------------------------------+--------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_dot_size.rs | on_initialize_into_signed            | 3.12MiB | 3.12MiB | Unchanged  |\n|--------------------------------------------------+--------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_dot_size.rs | manage                               | 0B      | 0B      | Unchanged  |\n|--------------------------------------------------+--------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_dot_size.rs | export_terminal                      | 2.25MiB | 2.25MiB | Unchanged  |\n|--------------------------------------------------+--------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_dot_size.rs | export_non_terminal                  | 1.32MiB | 1.32MiB | Unchanged  |\n+--------------------------------------------------+--------------------------------------+---------+---------+------------+\n+--------------------------------------------------+--------------------------------------+----------+----------+------------+\n| File                                             | Extrinsic                            | Old      | New      | Change [%] |\n+============================================================================================================================+\n| pallet_election_provider_multi_block_dot_size.rs | on_initialize_nothing                | 251.46us | 251.46us | Unchanged  |\n|--------------------------------------------------+--------------------------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_dot_size.rs | on_initialize_into_unsigned          | 4.29ms   | 4.29ms   | Unchanged  |\n|--------------------------------------------------+--------------------------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_dot_size.rs | on_initialize_into_snapshot_rest     | 127.75ms | 127.75ms | Unchanged  |\n|--------------------------------------------------+--------------------------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_dot_size.rs | on_initialize_into_snapshot_msp      | 35.09ms  | 35.09ms  | Unchanged  |\n|--------------------------------------------------+--------------------------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_dot_size.rs | on_initialize_into_signed_validation | 4.16ms   | 4.16ms   | Unchanged  |\n|--------------------------------------------------+--------------------------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_dot_size.rs | on_initialize_into_signed            | 124.19ms | 124.19ms | Unchanged  |\n|--------------------------------------------------+--------------------------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_dot_size.rs | manage                               | 300.00ns | 300.00ns | Unchanged  |\n|--------------------------------------------------+--------------------------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_dot_size.rs | export_terminal                      | 235.27ms | 235.27ms | Unchanged  |\n|--------------------------------------------------+--------------------------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_dot_size.rs | export_non_terminal                  | 185.57ms | 185.57ms | Unchanged  |\n+--------------------------------------------------+--------------------------------------+----------+----------+------------+\ndisplaying pallet_election_provider_multi_block_signed_dot_size.rs\n+---------------------------------------------------------+----------------------+----------+----------+------------+\n| File                                                    | Extrinsic            | Old      | New      | Change [%] |\n+===================================================================================================================+\n| pallet_election_provider_multi_block_signed_dot_size.rs | unset_page           | 18.56KiB | 18.56KiB | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_dot_size.rs | submit_page          | 6.91KiB  | 6.91KiB  | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_dot_size.rs | register_not_full    | 6.39KiB  | 6.39KiB  | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_dot_size.rs | register_eject       | 85.80KiB | 85.80KiB | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_dot_size.rs | clear_old_round_data | 85.18KiB | 85.18KiB | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_dot_size.rs | bail                 | 82.74KiB | 82.74KiB | Unchanged  |\n+---------------------------------------------------------+----------------------+----------+----------+------------+\n+---------------------------------------------------------+----------------------+----------+----------+------------+\n| File                                                    | Extrinsic            | Old      | New      | Change [%] |\n+===================================================================================================================+\n| pallet_election_provider_multi_block_signed_dot_size.rs | unset_page           | 9.30ms   | 9.30ms   | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_dot_size.rs | submit_page          | 7.06ms   | 7.06ms   | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_dot_size.rs | register_not_full    | 566.44us | 566.44us | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_dot_size.rs | register_eject       | 5.03ms   | 5.03ms   | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_dot_size.rs | clear_old_round_data | 4.63ms   | 4.63ms   | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_dot_size.rs | bail                 | 4.68ms   | 4.68ms   | Unchanged  |\n+---------------------------------------------------------+----------------------+----------+----------+------------+\ndisplaying pallet_election_provider_multi_block_unsigned_dot_size.rs\n+-----------------------------------------------------------+-------------------+---------+---------+------------+\n| File                                                      | Extrinsic         | Old     | New     | Change [%] |\n+================================================================================================================+\n| pallet_election_provider_multi_block_unsigned_dot_size.rs | validate_unsigned | 3.74KiB | 3.74KiB | Unchanged  |\n|-----------------------------------------------------------+-------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_unsigned_dot_size.rs | submit_unsigned   | 1.41MiB | 1.41MiB | Unchanged  |\n+-----------------------------------------------------------+-------------------+---------+---------+------------+\n+-----------------------------------------------------------+-------------------+---------+---------+------------+\n| File                                                      | Extrinsic         | Old     | New     | Change [%] |\n+================================================================================================================+\n| pallet_election_provider_multi_block_unsigned_dot_size.rs | validate_unsigned | 4.87ms  | 4.87ms  | Unchanged  |\n|-----------------------------------------------------------+-------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_unsigned_dot_size.rs | submit_unsigned   | 36.54ms | 36.54ms | Unchanged  |\n+-----------------------------------------------------------+-------------------+---------+---------+------------+\ndisplaying pallet_election_provider_multi_block_verifier_dot_size.rs\n+-----------------------------------------------------------+------------------------------------+-----------+-----------+------------+\n| File                                                      | Extrinsic                          | Old       | New       | Change [%] |\n+=====================================================================================================================================+\n| pallet_election_provider_multi_block_verifier_dot_size.rs | on_initialize_valid_terminal       | 1.25MiB   | 1.25MiB   | Unchanged  |\n|-----------------------------------------------------------+------------------------------------+-----------+-----------+------------|\n| pallet_election_provider_multi_block_verifier_dot_size.rs | on_initialize_valid_non_terminal   | 324.40KiB | 324.40KiB | Unchanged  |\n|-----------------------------------------------------------+------------------------------------+-----------+-----------+------------|\n| pallet_election_provider_multi_block_verifier_dot_size.rs | on_initialize_invalid_terminal     | 1.25MiB   | 1.25MiB   | Unchanged  |\n|-----------------------------------------------------------+------------------------------------+-----------+-----------+------------|\n| pallet_election_provider_multi_block_verifier_dot_size.rs | on_initialize_invalid_non_terminal | 541.11KiB | 541.11KiB | Unchanged  |\n+-----------------------------------------------------------+------------------------------------+-----------+-----------+------------+\n+-----------------------------------------------------------+------------------------------------+---------+---------+------------+\n| File                                                      | Extrinsic                          | Old     | New     | Change [%] |\n+=================================================================================================================================+\n| pallet_election_provider_multi_block_verifier_dot_size.rs | on_initialize_valid_terminal       | 41.04ms | 41.04ms | Unchanged  |\n|-----------------------------------------------------------+------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_verifier_dot_size.rs | on_initialize_valid_non_terminal   | 5.33ms  | 5.33ms  | Unchanged  |\n|-----------------------------------------------------------+------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_verifier_dot_size.rs | on_initialize_invalid_terminal     | 44.94ms | 44.94ms | Unchanged  |\n|-----------------------------------------------------------+------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_verifier_dot_size.rs | on_initialize_invalid_non_terminal | 14.04ms | 14.04ms | Unchanged  |\n+-----------------------------------------------------------+------------------------------------+---------+---------+------------+\ndisplaying pallet_election_provider_multi_block_ksm_size.rs\n+--------------------------------------------------+--------------------------------------+---------+---------+------------+\n| File                                             | Extrinsic                            | Old     | New     | Change [%] |\n+==========================================================================================================================+\n| pallet_election_provider_multi_block_ksm_size.rs | on_initialize_nothing                | 3.56KiB | 3.56KiB | Unchanged  |\n|--------------------------------------------------+--------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_ksm_size.rs | on_initialize_into_unsigned          | 3.75KiB | 3.75KiB | Unchanged  |\n|--------------------------------------------------+--------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_ksm_size.rs | on_initialize_into_snapshot_rest     | 3.24MiB | 3.24MiB | Unchanged  |\n|--------------------------------------------------+--------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_ksm_size.rs | on_initialize_into_snapshot_msp      | 2.41MiB | 2.41MiB | Unchanged  |\n|--------------------------------------------------+--------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_ksm_size.rs | on_initialize_into_signed_validation | 3.76KiB | 3.76KiB | Unchanged  |\n|--------------------------------------------------+--------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_ksm_size.rs | on_initialize_into_signed            | 3.36MiB | 3.36MiB | Unchanged  |\n|--------------------------------------------------+--------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_ksm_size.rs | manage                               | 0B      | 0B      | Unchanged  |\n|--------------------------------------------------+--------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_ksm_size.rs | export_terminal                      | 4.08MiB | 4.08MiB | Unchanged  |\n|--------------------------------------------------+--------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_ksm_size.rs | export_non_terminal                  | 2.12MiB | 2.12MiB | Unchanged  |\n+--------------------------------------------------+--------------------------------------+---------+---------+------------+\n+--------------------------------------------------+--------------------------------------+----------+----------+------------+\n| File                                             | Extrinsic                            | Old      | New      | Change [%] |\n+============================================================================================================================+\n| pallet_election_provider_multi_block_ksm_size.rs | on_initialize_nothing                | 250.77us | 250.77us | Unchanged  |\n|--------------------------------------------------+--------------------------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_ksm_size.rs | on_initialize_into_unsigned          | 2.77ms   | 2.77ms   | Unchanged  |\n|--------------------------------------------------+--------------------------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_ksm_size.rs | on_initialize_into_snapshot_rest     | 139.55ms | 139.55ms | Unchanged  |\n|--------------------------------------------------+--------------------------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_ksm_size.rs | on_initialize_into_snapshot_msp      | 34.79ms  | 34.79ms  | Unchanged  |\n|--------------------------------------------------+--------------------------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_ksm_size.rs | on_initialize_into_signed_validation | 2.75ms   | 2.75ms   | Unchanged  |\n|--------------------------------------------------+--------------------------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_ksm_size.rs | on_initialize_into_signed            | 130.53ms | 130.53ms | Unchanged  |\n|--------------------------------------------------+--------------------------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_ksm_size.rs | manage                               | 340.00ns | 340.00ns | Unchanged  |\n|--------------------------------------------------+--------------------------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_ksm_size.rs | export_terminal                      | 415.86ms | 415.86ms | Unchanged  |\n|--------------------------------------------------+--------------------------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_ksm_size.rs | export_non_terminal                  | 311.80ms | 311.80ms | Unchanged  |\n+--------------------------------------------------+--------------------------------------+----------+----------+------------+\ndisplaying pallet_election_provider_multi_block_signed_ksm_size.rs\n+---------------------------------------------------------+----------------------+----------+----------+------------+\n| File                                                    | Extrinsic            | Old      | New      | Change [%] |\n+===================================================================================================================+\n| pallet_election_provider_multi_block_signed_ksm_size.rs | unset_page           | 20.77KiB | 20.77KiB | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_ksm_size.rs | submit_page          | 6.96KiB  | 6.96KiB  | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_ksm_size.rs | register_not_full    | 6.45KiB  | 6.45KiB  | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_ksm_size.rs | register_eject       | 46.54KiB | 46.54KiB | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_ksm_size.rs | clear_old_round_data | 46.06KiB | 46.06KiB | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_ksm_size.rs | bail                 | 43.61KiB | 43.61KiB | Unchanged  |\n+---------------------------------------------------------+----------------------+----------+----------+------------+\n+---------------------------------------------------------+----------------------+----------+----------+------------+\n| File                                                    | Extrinsic            | Old      | New      | Change [%] |\n+===================================================================================================================+\n| pallet_election_provider_multi_block_signed_ksm_size.rs | unset_page           | 3.97ms   | 3.97ms   | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_ksm_size.rs | submit_page          | 4.03ms   | 4.03ms   | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_ksm_size.rs | register_not_full    | 565.74us | 565.74us | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_ksm_size.rs | register_eject       | 2.99ms   | 2.99ms   | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_ksm_size.rs | clear_old_round_data | 2.60ms   | 2.60ms   | Unchanged  |\n|---------------------------------------------------------+----------------------+----------+----------+------------|\n| pallet_election_provider_multi_block_signed_ksm_size.rs | bail                 | 2.65ms   | 2.65ms   | Unchanged  |\n+---------------------------------------------------------+----------------------+----------+----------+------------+\ndisplaying pallet_election_provider_multi_block_unsigned_ksm_size.rs\n+-----------------------------------------------------------+-------------------+---------+---------+------------+\n| File                                                      | Extrinsic         | Old     | New     | Change [%] |\n+================================================================================================================+\n| pallet_election_provider_multi_block_unsigned_ksm_size.rs | validate_unsigned | 3.74KiB | 3.74KiB | Unchanged  |\n|-----------------------------------------------------------+-------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_unsigned_ksm_size.rs | submit_unsigned   | 1.34MiB | 1.34MiB | Unchanged  |\n+-----------------------------------------------------------+-------------------+---------+---------+------------+\n+-----------------------------------------------------------+-------------------+---------+---------+------------+\n| File                                                      | Extrinsic         | Old     | New     | Change [%] |\n+================================================================================================================+\n| pallet_election_provider_multi_block_unsigned_ksm_size.rs | validate_unsigned | 4.16ms  | 4.16ms  | Unchanged  |\n|-----------------------------------------------------------+-------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_unsigned_ksm_size.rs | submit_unsigned   | 33.74ms | 33.74ms | Unchanged  |\n+-----------------------------------------------------------+-------------------+---------+---------+------------+\ndisplaying pallet_election_provider_multi_block_verifier_ksm_size.rs\n+-----------------------------------------------------------+------------------------------------+-----------+-----------+------------+\n| File                                                      | Extrinsic                          | Old       | New       | Change [%] |\n+=====================================================================================================================================+\n| pallet_election_provider_multi_block_verifier_ksm_size.rs | on_initialize_valid_terminal       | 1.18MiB   | 1.18MiB   | Unchanged  |\n|-----------------------------------------------------------+------------------------------------+-----------+-----------+------------|\n| pallet_election_provider_multi_block_verifier_ksm_size.rs | on_initialize_valid_non_terminal   | 280.00KiB | 280.00KiB | Unchanged  |\n|-----------------------------------------------------------+------------------------------------+-----------+-----------+------------|\n| pallet_election_provider_multi_block_verifier_ksm_size.rs | on_initialize_invalid_terminal     | 1.18MiB   | 1.18MiB   | Unchanged  |\n|-----------------------------------------------------------+------------------------------------+-----------+-----------+------------|\n| pallet_election_provider_multi_block_verifier_ksm_size.rs | on_initialize_invalid_non_terminal | 483.20KiB | 483.20KiB | Unchanged  |\n+-----------------------------------------------------------+------------------------------------+-----------+-----------+------------+\n+-----------------------------------------------------------+------------------------------------+---------+---------+------------+\n| File                                                      | Extrinsic                          | Old     | New     | Change [%] |\n+=================================================================================================================================+\n| pallet_election_provider_multi_block_verifier_ksm_size.rs | on_initialize_valid_terminal       | 37.32ms | 37.32ms | Unchanged  |\n|-----------------------------------------------------------+------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_verifier_ksm_size.rs | on_initialize_valid_non_terminal   | 10.16ms | 10.16ms | Unchanged  |\n|-----------------------------------------------------------+------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_verifier_ksm_size.rs | on_initialize_invalid_terminal     | 38.84ms | 38.84ms | Unchanged  |\n|-----------------------------------------------------------+------------------------------------+---------+---------+------------|\n| pallet_election_provider_multi_block_verifier_ksm_size.rs | on_initialize_invalid_non_terminal | 11.39ms | 11.39ms | Unchanged  |\n+-----------------------------------------------------------+------------------------------------+---------+---------+------------+\n\n```\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Paolo La Camera <paolo@parity.io>",
          "timestamp": "2025-06-02T17:15:50Z",
          "tree_id": "58a2b97623cf09de26ce332512be71eb2b5d13c6",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/1dd7cf6c9f454ca184e74dcb48b28304e9e9c88f"
        },
        "date": 1748888452842,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012888863426666664,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022389752386666663,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008832140633333405,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15609453354000002,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "60601340+lexnv@users.noreply.github.com",
            "name": "Alexandru Vasile",
            "username": "lexnv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f6d18b73c4138cd834c6979be6eed291e63c6f17",
          "message": "client/net: Use litep2p as the default network backend (#8461)\n\n# Litep2p Becomes the Default Network Backend\n\nThis PR finalizes the [litep2p](https://github.com/paritytech/litep2p)\nintegration and makes it the default network backend for substrate-based\nchains.\n\n## Litep2p Improvements\n\nAfter the stabilization, a forum post will follow with up to date\ninformation and more accurate measurements of the live impact of\nlitep2p.\n\n### CPU Usage Reduction\n\n**Litep2p consumes roughly 2x less CPU than the libp2p alternative**.\nThis frees up resources for other usecases (subsystems) and enables\nrunning nodes on more cost-efficient hardware.\n\nThis metric has been collected by the `networking::libp2p-node` metric\nof a live Kusama validator. This represents the CPU time spent on\npolling the networking task. Litep2p CPU consumption is on the left,\nusing roughtly 1.3x CPUs, while libp2p on the right uses roughly 2.9-3x\nCPUs:\n\n![Screenshot 2025-05-26 at 15 23\n22](https://github.com/user-attachments/assets/17bf1ed8-b887-423e-b131-f0bbf146919e)\n\n\nThis metric has been collected by the NodeExporter of a live Kusama\nvalidator. Litep2p CPU consumption is on the left, using roughtly 230\nCPU units, while libp2p on the right uses roughly 350 CPU units. This\nmakes litep2p ~1.52 times more effiecient:\n\n![Screenshot 2025-05-26 at 15 24\n33](https://github.com/user-attachments/assets/8923cb56-241d-4e1d-9593-33c5def2ff4d)\n\n\n\n### DHT Improvements and Authority Discovery\n\nLitep2p is able to discover peers faster via the Kademlia protocol than\nlibp2p. This behavior manifests in faster discovery times for\nvalidators. For context, libp2p discovers 1K DHT records (authority\nrecords) in approximately 10 minutes, while litep2p discovers them in\njust 2.5 minutes (for more info see\nhttps://github.com/paritytech/polkadot-sdk/issues/7077#issuecomment-2575662449).\n\nThis will improve issues we've seen with libp2p that causes validators\nto not receive rewards:\n- https://github.com/paritytech/polkadot-sdk/issues/8548\n\n### Stable Sync Peers\n\nLitep2p presents a more stable peer count in comparison with the libp2p\nbackend. This ensures we can sync up faster than libp2p to the tip of\nthe chain. In an older experiment, litep2p syncs to the tip of the chain\nin 526s, compared to 803s for libp2p. The stability of connections shows\nimprovements for other protocols as well:\n\n![Screenshot 2025-05-26 at 15 01\n59](https://github.com/user-attachments/assets/ac3607ba-a551-49e5-9a50-f5150a6b619f)\n\nThe previous image shows on the left the litep2p version and on the\nright the libp2p version.\n\n\n### Revert Kusama Enablement\nThis PR reverts https://github.com/paritytech/polkadot-sdk/pull/7866.\nLitep2p is now enabled by default, we don't need to selectively enable\nit on different chains.\n\n### Litep2p 0.9.5\n\nThis release primarily focuses on strengthening the stability of the\nwebsocket transport. We've resolved an issue where higher-level\nbuffering was causing the Noise protocol to fail when decoding messages.\n\nWe've also significantly improved connectivity between litep2p and\nSmoldot (the Substrate-based light client). Empty frames are now handled\ncorrectly, preventing handshake timeouts and ensuring smoother\ncommunication.\n\nFinally, we've carried out several dependency updates to keep the\nlibrary current with the latest versions of its underlying components.\n\nFixed:\n- substream/fix: Allow empty payloads with 0-length frame\n([#395](https://github.com/paritytech/litep2p/pull/395))\n- websocket: Fix connection stability on decrypt messages\n([#393](https://github.com/paritytech/litep2p/pull/393))\n\nChanged:\n- crypto/noise: Show peerIDs that fail to decode\n([#392](https://github.com/paritytech/litep2p/pull/392))\n- cargo: Bump yamux to 0.13.5 and tokio to 1.45.0\n([#396](https://github.com/paritytech/litep2p/pull/396))\n- ci: Enforce and apply clippy rules\n([#388](https://github.com/paritytech/litep2p/pull/388))\n- build(deps): bump ring from 0.16.20 to 0.17.14\n([#389](https://github.com/paritytech/litep2p/pull/389))\n- Update hickory-resolver 0.24.2 -> 0.25.2\n([#386](https://github.com/paritytech/litep2p/pull/386))\n\n\n### Fix peerset reserve only mode\n\nThis has been move in PR:\nhttps://github.com/paritytech/polkadot-sdk/pull/8650 for ease of\nreviewing.\nThe PR rejects non-reserved peers in the reserved-only mode of the\nlitep2p notification peerset.\n\n---------\n\nSigned-off-by: Alexandru Vasile <alexandru.vasile@parity.io>",
          "timestamp": "2025-06-03T10:44:02Z",
          "tree_id": "8ce5aa0b4afe6ea5fbe1d90c56dcb5b10f9560b0",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f6d18b73c4138cd834c6979be6eed291e63c6f17"
        },
        "date": 1748952120546,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013078026340000002,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02232090510666667,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15758263384666668,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.009027530840000086,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "52418509+georgepisaltu@users.noreply.github.com",
            "name": "georgepisaltu",
            "username": "georgepisaltu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "82cf2305511459032071302aba96ba82b35b04f8",
          "message": "[PoP] Add personhood tracking pallets (#8164)\n\nThis PR adds the building blocks of a Proof of Personhood system. It\ncontains work contributed and reviewed by members of the PoP team.\n\n## `pallet-people`\n\nThe People pallet stores and manages identifiers of individuals who have\nproven their personhood. It tracks their personal IDs, organizes their\ncryptographic keys into rings, and allows them to use contextual aliases\nthrough authentication in extensions. When transactions include\ncryptographic proofs of belonging to the people set, the pallet's\ntransaction extension verifies these proofs before allowing the\ntransaction to proceed. This enables other pallets to check if actions\ncome from unique persons while preserving privacy through the ring-based\nstructure.\n\nThe pallet implements the `PeopleTrait` interface and accepts new\npersons after they prove their uniqueness elsewhere, stores their\ninformation, and will support removing persons in the future. While\nother systems (e.g., wallets) generate the proofs, this pallet handles\nthe storage of all necessary data and verifies the proofs when used.\n\nPeople are identified through a new cryptographic primitive, as defined\nin the `GenerateVerifiable` interface in the `verifiable` crate. People\nget the privilege of running free transactions for supported calls\nthrough a combination of a new `AsPerson` transaction extension and new\norigin types `PersonalIdentity` and `PersonalAlias`.\n\n## `pallet-origin-restriction`\n\nThis pallet tracks certain origin and limits how much total \"fee usage\"\nthey can accumulate. Usage gradually recovers as blocks pass. This\npallet and its associated transaction extension are used to limit the\namount of on-chain compute people get when they run free transactions,\nsince the fee model does not apply to them.\n\n## `pallet-dummy-dim`\n\nAllows control of a `PeopleTrait` interface through a privileged origin\nby simulating a DIM. It is meant only to help in testing scenarios and\nacts as a control panel for `PeopleTrait` implementers. It is not an\nofficial DIM and should not be used in production, but, like\n`pallet-sudo`, should prove useful on testnets.\n\n---------\n\nSigned-off-by: georgepisaltu <george.pisaltu@parity.io>\nCo-authored-by: gui <gui.thiolliere@gmail.com>\nCo-authored-by: Zebedeusz <michal.gil@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-03T11:41:10Z",
          "tree_id": "affe92e736edc96ca4c9dbbeb6a2a01142553223",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/82cf2305511459032071302aba96ba82b35b04f8"
        },
        "date": 1748955630763,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008743287586666766,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1580705799533334,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01277575438666666,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022404484986666674,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "60601340+lexnv@users.noreply.github.com",
            "name": "Alexandru Vasile",
            "username": "lexnv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "85b71daf7aac59da4d2186b45d589c7c619f0981",
          "message": "sync/fix: Clear gap sync on known imported blocks (#8445)\n\nThis PR ensures that warp sync gaps are properly cleared when known\nblocks are imported. Previously, gaps were only removed in response to\n`ImportedUnknown` events.\n\nThis limitation caused issues for asset-hub and bridge-hub collators,\nwhich remained stuck in the \"Block history\" state without progressing.\n\n\nThe root cause lies in the client.info() reporting a gap during node\nstartup or restart (ie block verification fails). In some cases, a peer\nmay respond with the missing blocks after we’ve already imported them\nlocally, leaving the gap open.\n\nGrafana link: https://grafana.teleport.parity.io/goto/jCcsBLxNg?orgId=1\n\nTraces from production:\n\n```\n2025-05-06 12:55:34.251 DEBUG                 main sync: [Parachain] Starting gap sync #4935955 - #4935955    \n\n2025-05-06 12:55:34.558 TRACE tokio-runtime-worker sync: [Parachain] New gap block request for 12D3KooWAVQMhkXmc5ueSYasdsRWQbKus2YGZ6HDZUB4ViJMCxXy, (best:5103253, common:5103253) BlockRequest { id: 0, fields: HEADER | BODY | JUSTIFICATION, from: Number(4935955), direction: Descending, max: Some(1) }    \n\n2025-05-06 12:55:34.558 TRACE tokio-runtime-worker sync: [Parachain] Processed `SyncingAction::StartRequest` to 12D3KooWAVQMhkXmc5ueSYasdsRWQbKus2YGZ6HDZUB4ViJMCxXy with strategy key StrategyKey(\"ChainSync\").    \n\n2025-05-06 12:55:34.608 TRACE tokio-runtime-worker sync: [Parachain] BlockResponse 0 from 12D3KooWAVQMhkXmc5ueSYasdsRWQbKus2YGZ6HDZUB4ViJMCxXy with 1 blocks  (4935955)    \n\n2025-05-06 12:55:34.608 DEBUG tokio-runtime-worker sync: [Parachain] Drained 1 gap blocks from 4935954    \n\t\n2025-05-06 12:55:35.511 TRACE tokio-runtime-worker sync::import-queue: [Parachain] Starting import of 1 blocks  (4935955)    \n\n2025-05-06 12:55:35.517 TRACE tokio-runtime-worker sync::import-queue: [Parachain] Block already in chain 4935955: 0x63db2b40cccac020fbc922e5e98bb3955f4cdaa823a2be85ecf22776745ccacc    \n\n2025-05-06 12:55:35.517 TRACE tokio-runtime-worker sync::import-queue: [Parachain] Block imported successfully Some(4935955) (0x63db…cacc)    \n\n2025-05-06 12:55:35.517 TRACE tokio-runtime-worker sync: [Parachain] Cleared blocks from 4935955 to 4935956    \n```\n\n### Testing Done\n\nAdded two tests to verify that warp sync gaps are correctly cleared\nunder both block import scenarios. The first test closely follows the\noperations performed by the node, while the second one emulates the\nimports.\n\n### Next Steps\n\nAdded extra debug logs to monitor if the issue persists (pointing\ntowards a corupt database -- ie client.info() always has the gap\npresent).\n\nCloses: https://github.com/paritytech/polkadot-sdk/issues/8416\n\ncc @paritytech/networking\n\n---------\n\nSigned-off-by: Alexandru Vasile <alexandru.vasile@parity.io>\nCo-authored-by: Nikolai Kozlov <1431590+nkpar@users.noreply.github.com>",
          "timestamp": "2025-06-04T11:15:17Z",
          "tree_id": "233a89f158f8e202259e85922b4e2dac282bf7f2",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/85b71daf7aac59da4d2186b45d589c7c619f0981"
        },
        "date": 1749040294735,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013283247399999998,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15787750278000004,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008942099840000085,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022513429866666667,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b24707cae8d09eaa6072b9e0bd0faea09d238f58",
          "message": "[pallet-revive] contract's nonce starts at 1 (#8734)\n\nnonce starting value should be 1 see\nhttps://github.com/ethereum/EIPs/blob/master/EIPS/eip-161.md\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-04T12:43:47Z",
          "tree_id": "d8c7d22f6d97e4acc42c6fa141d1b09607ed6eb8",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/b24707cae8d09eaa6072b9e0bd0faea09d238f58"
        },
        "date": 1749045003001,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.01320538086666667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008938626353333421,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022478044746666676,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15973478283333337,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "178801527+raymondkfcheung@users.noreply.github.com",
            "name": "Raymond Cheung",
            "username": "raymondkfcheung"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "873cd459c66021b5fceb159efcfb01d796419d8b",
          "message": "Implement detailed logging for XCM failures (#8724)\n\nThis PR enhances diagnostics across XCM-related components by\nimplementing more detailed logging, especially for failures. The primary\naim is to improve visibility into XCM errors (e.g., within `map_err`\nblocks), enabling faster troubleshooting for developers and node\noperators.\n\nKey enhancements include:\n* Logging specific error conditions (e.g., `BadVersion`, `BadLocation`,\nexecution errors).\n* Including essential context in error logs (e.g., message hashes,\norigin, destination, relevant parameters).\n* Standardising log targets for easier analysis (e.g.,\n`xcm::module::function_name`).\n* Clarifying log messages.\n\nThis work continues #7003 and partially addresses #6119.\n\n## Integration\n\nDownstream projects using XCM functionalities should see improved\ndiagnostic logs without needing direct integration changes, as this\nprimarily enhances internal logging. Node operators will find new, more\ndetailed XCM error logs, aiding in monitoring and troubleshooting. Log\nparsing scripts might need updates for new log formats.\n\n## Review Notes\n\nThis PR enhances logging throughout XCM-related code paths, particularly\nin error handling (e.g., `map_err` blocks), to improve failure\nvisibility.\n\nReviewers are encouraged to assess:\n* **Clarity & Actionability:** Are logs clear, concise, and actionable\nfor failures?\n* **Context:** Do error logs capture essential context (message hash,\norigin, destination, error specifics, parameters) appropriately for\ntheir level?\n* **Log Levels:** Is the chosen log level (e.g., `error`, `warn`,\n`debug`, `trace`) suitable? Are any level adjustments appropriate?\n* **Targets:** Are `target:` fields (e.g., `xcm::module::function`)\nconsistent and specific?\n* **Error Accuracy:** Do logs accurately reflect the handled error\ncondition?\n* **Impact:** Logging should minimally affect core logic and\nperformance; favour simple logging of existing/easily derived data.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-04T14:08:49Z",
          "tree_id": "732dd354bc223995a654a863647c57ff146faf66",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/873cd459c66021b5fceb159efcfb01d796419d8b"
        },
        "date": 1749051705285,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02247213742666666,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15833751992666673,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012933265066666668,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008899415626666754,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "14218860+iulianbarbu@users.noreply.github.com",
            "name": "Iulian Barbu",
            "username": "iulianbarbu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d9e16fdb471f46b85bf8f89798cdba829f088903",
          "message": "omni-node: fix `benchmark pallet` to work with `--runtime` (#8594)\n\n# Description\n\nThe PR fixes the logic so that `polkadot-omni-node benchmark pallet`\nsubcommand pulls in the appropriate arguments, while not needing to\ninstatiate the full node configuration, which requires always passing\n`--chain` flag.\n\n## Integration\n\nDevelopers will be able to use `polkadot-omni-node benchmark pallet`\nwith `--runtime` flag, same as `frame-omni-bencher`.\n\n## Review Notes\n\nDid a few things in this PR:\n- made `polkadot-omni-node benchmark pallet` not require always the\n`--chain` flag\n- removed the deprecated `run` method for `benchmark pallet` from\n`benchmarking-cli`.\n- removed the check that disallows the chain flag from\n`frame-omni-bencher` since it is allowed and usable\n\nTODO:\n- [x] a few more testing of the commands with both `--runtime` and\n`--chain`.\n- [x] remove `runtime-benchmarks` feature guard for benchmark cmds\n\n---------\n\nSigned-off-by: Iulian Barbu <iulian.barbu@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-04T15:56:14Z",
          "tree_id": "a0a8dca6c7e5909738a46896f5ce720b79697fea",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d9e16fdb471f46b85bf8f89798cdba829f088903"
        },
        "date": 1749057517592,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022532000979999994,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15941977002000005,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013265510640000004,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008812810986666754,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "5588131+kianenigma@users.noreply.github.com",
            "name": "Kian Paimani",
            "username": "kianenigma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3ff2859d78e2a4a7ff9afe855f7863e4ef650068",
          "message": "[AHM] Relax the requirement for RC-Client to receive +1 session reports (#8702)\n\nSomething that we learned in westend: if `ah-client` decides to go to\n`Buffered` mode ever again, it might skip some sessions. Atm, we were\nenforcing sessions to be strictly incremented by one once received by RC\nclient. This could cause us to drop some validator reward points.\n\nAs a simple fix, this PR relaxes this check such that if the last repot\nwas `x`:\n\n1. x+1 is our expected behavior\n2. x+2 and more is still accepted, but we emit warning events\n3. x and below is still dropped. This can only happen due to: unforeseen\nbug in RC, or XCM failing to send messages in order.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-04T22:26:24Z",
          "tree_id": "38c931a8ad22ab2b77ba3fb89cd5a256ec7a601b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/3ff2859d78e2a4a7ff9afe855f7863e4ef650068"
        },
        "date": 1749082805572,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022712288026666666,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012960649333333338,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008835205666666767,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.16031033602666678,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "skunert49@gmail.com",
            "name": "Sebastian Kunert",
            "username": "skunert"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d054ac7dbac54abb692a06e78bd3e5d1a4da5ec9",
          "message": "Actually use RP offset in YAP parachain (#8745)\n\nWhen I merged #8299 I missed this part here, the offset should be set to\n`RELAY_PARENT_OFFSET`.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-05T09:08:53Z",
          "tree_id": "9a03ebdaec2694fe4b5b3459f147d90ce62717a5",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d054ac7dbac54abb692a06e78bd3e5d1a4da5ec9"
        },
        "date": 1749118958263,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008948890606666753,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1577385662733333,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013024914253333339,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022406761626666657,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "maciej.zyszkiewicz@parity.io",
            "name": "Maciej",
            "username": "Overkillus"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5902b54c3e599fa9b4519759fe97164dd14e702a",
          "message": "Introduction of Approval Slashes [Disabling Strategy Stage 4] (#6827)\n\nImplementation of Stage 4 of the new [Disabling\nStrategy](https://github.com/paritytech/polkadot-sdk/issues/4359).\n\nStage 3 needs to be deployed before this goes live. ([Stage 3\nPR](https://github.com/paritytech/polkadot-sdk/pull/5724))\n\nCurrently only backers are ever slashed as a result of disputes.\n\nThis PR creates 3 types of offences with respective slashes:\n- ForInvalidBacked (100%) -> hard punishment as backers bear all the\nresponsbility for validity\n- ForInvalidApproved (2%) -> minor punishment to deter lazy validators\n- AgainstValid (0%) -> very minor punishment (this causes disablement so\nopp cost)\n\nCloses #4746\n\nIMPL details:\n\nThis will require a change to parachains primitives which are used both\non the runtime and node side. Rolling it out is time consuming so the\nplan is to release it in 2 parts.\n\nFirst updade runtime only with new offence types but keep old runtime\napis (mapping from new format to old) so the node logic can remain the\nsame. This will allow us to have the new offences for disputes\nconcluding on-chain. Past session disputes that require proof\nsubmissions will temporarily not support the new slash types (but they\nare rarer). This will make the network more robust in the short term (as\nit is much easier to deploy).\n\nAs the second part we can update the runtime apis and node side to fully\nsupport the new types.\n\nTODOs:\n\n- [x] new offence types\n- [ ] ~~migrations~~ (migration not needed because codec is compatible\nin conversion from old->new)\n- [ ] ~~migration tests~~\n- [x] conversion (new -> old) to preserve old runtime apis\n- [x] conversion of disputeProofs (old -> new) to maintain old past\nsession dispute behaviour\n- [ ] new runtime apis (postponed for later)\n- [x] disabling for spammy validators zombienet test\n- [x] disabling for lazy validators zombienet test\n- [ ] unit tests\n\n---------\n\nCo-authored-by: ordian <write@reusable.software>\nCo-authored-by: Stephane Gurgenidze <59443568+sw10pa@users.noreply.github.com>\nCo-authored-by: ordian <noreply@reusable.software>",
          "timestamp": "2025-06-05T14:36:23Z",
          "tree_id": "03ce5caff5a42acb601a747f005f05546852e835",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/5902b54c3e599fa9b4519759fe97164dd14e702a"
        },
        "date": 1749138671672,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02251161411333334,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008857145120000097,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012905533400000002,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15703697584,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "jose@blockdeep.io",
            "name": "José Molina Colmenero",
            "username": "Moliholy"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6cb6f5b5b22168e8e391d776014174b3731948ee",
          "message": "Do not make pallet-identity benchmarks signature-dependent (#8179)\n\nSimilar to #4756 for `pallet-nfts`, the changes proposed in this PR\nintend to make benchmarks for `pallet-identity` signature-agnostic by\nthe inclusion of a benchmark helper with sane defaults to handle the\nsigning operations.",
          "timestamp": "2025-06-05T18:47:09Z",
          "tree_id": "985fb994e8611430c371af085168f4db8a4d2561",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/6cb6f5b5b22168e8e391d776014174b3731948ee"
        },
        "date": 1749153946320,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022407861693333343,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15639857249333333,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00882810972666675,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012737760973333335,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "37865735+clangenb@users.noreply.github.com",
            "name": "clangenb",
            "username": "clangenb"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a80b5718c38eb2081d33192e866baee84c7f0b55",
          "message": "Add genesis presets for remaining runtimes in polkadot-parachain-bin (#8426)\n\nNamely, this adds the genesis presets for: penpal,\nrococo-parachain-runtime and yet-another-parachain-runtime.\n\nThis is a follow-up issue of\nhttps://github.com/paritytech/polkadot-sdk/issues/5704. Some runtimes\nwere added after the initial refactor was done, and they were still\nfollowing the old, obsolete paradigm.\n\n---------\n\nCo-authored-by: Iulian Barbu <14218860+iulianbarbu@users.noreply.github.com>",
          "timestamp": "2025-06-06T07:46:14Z",
          "tree_id": "fb97b5abc48092d060c1ca0cd330f8c5e60a7b27",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/a80b5718c38eb2081d33192e866baee84c7f0b55"
        },
        "date": 1749199620038,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013180445386666673,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022736444953333337,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15806425310000008,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008896361620000091,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9c9e3f142457d5b041354b770eb695bf0e7cfa92",
          "message": "Move Transaction depth limit checks (#8750)\n\nThis moves the check of the transaction depth limit to `frame-executive`\ninstead of having it hidden in the `sp-api` macros.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-06T09:30:39Z",
          "tree_id": "fb4a39d3d1724b55a245a93ce6f1d972517467b3",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/9c9e3f142457d5b041354b770eb695bf0e7cfa92"
        },
        "date": 1749206068360,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012660913680000002,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008611673153333423,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15620645214666667,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022414759360000005,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "egor@parity.io",
            "name": "Egor_P",
            "username": "EgorPopelyaev"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fdf3d65e4c2d9094915c7fd7927e651339171edd",
          "message": "[Release|CI/CD] Combine branch-off and RC automation flows (#8754)\n\nThis PR combines two release flows that are responsible for the first\nsteps in the release process: Branch-off a stable branch and Create RC\ntag flows.\nBoth actions now can be done from one flow by choosing a needed option\nin the triggering form:\n<img width=\"316\" alt=\"Screenshot 2025-06-05 at 11 30 09\"\nsrc=\"https://github.com/user-attachments/assets/767bc351-918f-41e9-af42-f94a20036a50\"\n/>\n\nThe tagging can be done as part of branch off directly or as an\nindependent action as usually there are some other release activities\n(like crates release) done after the branch is created.\nCloses: https://github.com/paritytech/devops/issues/3825",
          "timestamp": "2025-06-06T11:06:06Z",
          "tree_id": "7b7655e4afc20fad62db062ff068243494110b32",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/fdf3d65e4c2d9094915c7fd7927e651339171edd"
        },
        "date": 1749211486130,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008789290293333425,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022557638846666665,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15674035641333342,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013000214086666666,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "evgeny@parity.io",
            "name": "Evgeny Snitko",
            "username": "AndWeHaveAPlan"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c5ae50f86b8b727428eb86d9b1027a8f56fee19d",
          "message": "Docker hub 'master' image short sha (#8790)",
          "timestamp": "2025-06-07T20:19:10Z",
          "tree_id": "478e15a0ca04335e75e7963583c146bd7c645f2b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c5ae50f86b8b727428eb86d9b1027a8f56fee19d"
        },
        "date": 1749330974670,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15608300146000004,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00881201923333342,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012807690866666667,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022562648953333334,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "yrong1997@gmail.com",
            "name": "Ron",
            "username": "yrong"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "36c3039007866480be258d9645626c56ab168d69",
          "message": "Snowbridge: enforce fee when registering Polkadot native asset (#8725)\n\nResolves: https://linear.app/snowfork/issue/SNO-1497",
          "timestamp": "2025-06-09T11:19:34Z",
          "tree_id": "086d182406d10db5096ed2ba6a5af22cf0031cb5",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/36c3039007866480be258d9645626c56ab168d69"
        },
        "date": 1749471412643,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012782563726666663,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008918076820000087,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02242046467333334,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15625583854666672,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "178801527+raymondkfcheung@users.noreply.github.com",
            "name": "Raymond Cheung",
            "username": "raymondkfcheung"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b3c0259b887a147e1d2bb3e6281a8831c9679bd7",
          "message": "Update `RemoteExporter` docs to reflect removal of `forward_id_for` (#8795)\n\nThis PR updates the doc for `RemoteExporter` to reflect the removal of\nthe `forward_id_for` function, on #7691. The note on how `SetTopic` is\nhandled in forwarding messages has been revised for accuracy. No\nfunctional changes are introduced, only doc comments are updated to\nmaintain correctness and clarity.\n\nPartially addresses #6119.",
          "timestamp": "2025-06-09T12:32:24Z",
          "tree_id": "73b2b6ba37a3ef9b9156e0cf48f37d970dc7fc8e",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/b3c0259b887a147e1d2bb3e6281a8831c9679bd7"
        },
        "date": 1749476051075,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02251310929333334,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008779941280000092,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1564655222066667,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012891961620000003,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "10196091+Ank4n@users.noreply.github.com",
            "name": "Ankan",
            "username": "Ank4n"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b8ccdb45d7e1e8e5058c357f1f7054fd7b781a74",
          "message": "[Staking] Cleanups and some improvements (#8701)\n\n## Changes\n- Introduced a new `min_bond` value, which is the minimum of\n`MinValidatorBond` and `MinNominatorBond`, with a fallback to\n`ExistentialDeposit`. Since ED on AH is much lower than on RC, this\nensures we enforce some min bonds for staking to cover storage costs for\nstaking ledger and related data.\n- Added an upper bound on era duration, protecting against anomalous\nconditions that could otherwise lead to excessive inflation.\n- Some refactors to gracefully handle unexpected validator activation in\nRC.\n\n\n## TODO\n- [ ] Set `MaxEraDuration` in WAH.\n- [ ] Port [full\nunbond](https://github.com/paritytech/polkadot-sdk/pull/3811) (will do\nin a separate PR)\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-10T07:59:43Z",
          "tree_id": "fff45c98ce2b7470fa229f3eddc74809a28e751b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/b8ccdb45d7e1e8e5058c357f1f7054fd7b781a74"
        },
        "date": 1749545917415,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15658817708000003,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022529282306666672,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012890907846666666,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00882349194000009,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "14218860+iulianbarbu@users.noreply.github.com",
            "name": "Iulian Barbu",
            "username": "iulianbarbu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "25552a05d1326f82a38c59f07a1a6c0a527ce567",
          "message": "release-reusable-rc-build: add optional `features` input that can be considered for nodes building (#8755)\n\n# Description\n\n`polkadot-omni-node` & `polkadot-parachain` are currently released\nwithout `runtime-benchmarks` feature. This means they will not support\nrunning `benchmark pallet/storage` subcommands, due to having them\nfeature gated by `runtime-benchmarks` feature.\n\n## Integration\n\nDevelopers/operators wanting to benchmark runtimes via\n`polkadot-omni-node/polkadot-parachain` will be able to do it once we'll\nrelease the binaries based on the release pipeline changes brought in\nthe PR.\n\n## Review Notes\n\nN/A\n\n---------\n\nSigned-off-by: Iulian Barbu <iulian.barbu@parity.io>",
          "timestamp": "2025-06-10T08:54:12Z",
          "tree_id": "6707a38372abe02db86723cbedc50e2f1e35724c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/25552a05d1326f82a38c59f07a1a6c0a527ce567"
        },
        "date": 1749549049043,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02262827356,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01307765716,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15805214112666668,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008875499666666753,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "patrick.mcevoy@moose.run",
            "name": "Patrick McEvoy",
            "username": "firegrass"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "934d5139caf1c3203be0bfca5344fa1dcfd5f13c",
          "message": "Add freebsd sysinfo for telemetry (#7985)\n\n# Description\n\nGathering hardware information on FreeBSD\n\n## Integration\n\nN/A (I think)\n\n## Review Notes\n\nPlease note FreeBSD does not use the linux kernel, nor is it's kernel\nversioned differently as in linux distros.\n\n# Checklist\n\n* [x] My PR includes a detailed description as outlined in the\n\"Description\" and its two subsections above.\n* [ ] My PR follows the [labeling requirements](\n\nhttps://github.com/paritytech/polkadot-sdk/blob/master/docs/contributor/CONTRIBUTING.md#Process\n) of this project (at minimum one label for `T` required)\n* External contributors: ask maintainers to put the right label on your\nPR.\n* [x] I have made corresponding changes to the documentation (if\napplicable)\n* [ ] I have added tests that prove my fix is effective or that my\nfeature works (if applicable)\n\nYou can remove the \"Checklist\" section once all have been checked. Thank\nyou for your contribution!\n\n✄\n-----------------------------------------------------------------------------",
          "timestamp": "2025-06-10T20:40:15Z",
          "tree_id": "e3053bd6ecc7f34bb7e67d94f33bb4b311dbdc71",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/934d5139caf1c3203be0bfca5344fa1dcfd5f13c"
        },
        "date": 1749591746197,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012946205400000004,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02256354599333334,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1567927938133334,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008929186960000099,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "egor@parity.io",
            "name": "Egor_P",
            "username": "EgorPopelyaev"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0157f244d0560d439b73a5aedbfe6bed56376a26",
          "message": "[Release|CI/CD] Exclude test runtimes from the runtimes build (#8820)",
          "timestamp": "2025-06-11T10:29:21Z",
          "tree_id": "23d2e8d96dba309117b9ecd6b553ac0ff718f58c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/0157f244d0560d439b73a5aedbfe6bed56376a26"
        },
        "date": 1749641167555,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15680044938000007,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02258797842,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008916345273333418,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012968475000000002,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "tiago.bandeira@parity.io",
            "name": "Tiago Bandeira",
            "username": "tiagobndr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "37951b676608dce36c7997f2950f7d3a9a21118b",
          "message": "Add XCM Precompile to `pallet-xcm` (#8693)\n\nThis PR adds the XCM precompile (with `xcmSend`, `xcmExecute` and\n`weightMessage` functionalities) to `pallet-xcm`.\n\nThis follows the discussion we had on the now closed\n[PR](https://github.com/paritytech/polkadot-sdk/pull/8471/), which\nattempted to add the precompile to `pallet-revive`, but that approach\nwould have introduced unwanted cyclic dependencies. That's why we\ndecided to migrate the precompile to `pallet-xcm`, avoiding adding\nunnecessary dependencies to `pallet-revive`.\n\nThis PR should also encapsulate unit tests in `precompiles.rs` as well\nas integration tests under\n`cumulus/parachains/integration-tests/emulated/tests`.\n\nSee tracking parent\n[issue](https://github.com/paritytech/polkadot-sdk/issues/6718)\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Siphamandla Mjoli <brianm445@yahoo.com>\nCo-authored-by: Siphamandla Mjoli <siphamandla@parity.io>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>\nCo-authored-by: Francisco Aguirre <franciscoaguirreperez@gmail.com>\nCo-authored-by: PG Herveou <pgherveou@gmail.com>",
          "timestamp": "2025-06-11T12:57:58Z",
          "tree_id": "413c3d93f10ff655360c35656d034658631b6523",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/37951b676608dce36c7997f2950f7d3a9a21118b"
        },
        "date": 1749650279397,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 432.5133333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.009104239973333421,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022580676519999995,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01293877904,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15725262685333335,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "14218860+iulianbarbu@users.noreply.github.com",
            "name": "Iulian Barbu",
            "username": "iulianbarbu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "292368d05eec5d6649607251ab21ed2c96ebd158",
          "message": "release/build-macos-binaries: add missing FEATURES argument  (#8816)\n\n# Description\n\nIn #8755 we enabled release scripts to build binaries with certain\nfeatures too, used especially for `polkadot-omni-node`. I missed to add\nthe `FEATURES` argument to the build script used for macos:\n\nhttps://github.com/paritytech/polkadot-sdk/pull/8755/files#diff-f4ebb5b55e4d2f4ec7ab5674ac3376839b13358d78935f9c388d79e75beeceb8R224\n\n## Integration\n\nN/A\n\n## Review Notes\n\nThis must be merged to be able to build `polkadot-omni-node` binary with\nruntime-benchmarks feature on macos.\nFixed also the macos build per:\nhttps://github.com/paritytech/polkadot-sdk/pull/8815/commits/05502a350b5995c5b3386ef42bd608c88ec8f17c.\n\n---------\n\nSigned-off-by: Iulian Barbu <iulian.barbu@parity.io>",
          "timestamp": "2025-06-11T13:30:59Z",
          "tree_id": "7cf74cf428cf045868c4132fa89faff0364bceda",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/292368d05eec5d6649607251ab21ed2c96ebd158"
        },
        "date": 1749653637945,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15804528537333337,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022667241093333332,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013173518706666672,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.009255485693333431,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "153776336+robertvaneerdewijk@users.noreply.github.com",
            "name": "robertvaneerdewijk",
            "username": "robertvaneerdewijk"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "806888d614f186f2876a670f6ec69cbf9bc027d8",
          "message": "renamed wasm module in pallet-revive to vm (#8794)\n\nfixes https://github.com/paritytech/polkadot-sdk/issues/8341\n\n---------\n\nCo-authored-by: Robert van Eerdewijk <robert@Roberts-MacBook-Pro.local>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-12T11:35:20Z",
          "tree_id": "fb4eeeac7a462a4a5de8479336e429ac4403a57c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/806888d614f186f2876a670f6ec69cbf9bc027d8"
        },
        "date": 1749732923394,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022442992833333338,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012830871046666671,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15631188742666668,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008884715186666763,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0e40bb358fa7ae62d3752c9735e286ff7bab0ea1",
          "message": "dispute-coordinator: increase lru_observed_blocks_capacity (#8831)\n\nUnder increase load with finality lagging behind there is a risk for\nblocks to arrive late or out of sequence in that case we will end up\nscrapping from the received block un till last finalized block and then\nprocess all the dispute in-between.\n\nThis couple with other inefficiencies like\nhttps://github.com/paritytech/polkadot-sdk/issues/8823 will increase\nunnecessarily the load on dispute-coordinator.\n\nDecided to make this super large to err on the cautious side, the Hash\nsize is only 32 bytes, so this will make the LRU grow up to 65k, which I\ndon't think is a significant increase.\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-12T14:31:41Z",
          "tree_id": "4acf7f01505f2f71ef40ce2b7150b32b09b9d603",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/0e40bb358fa7ae62d3752c9735e286ff7bab0ea1"
        },
        "date": 1749742672620,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008863034933333434,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022781333140000002,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15848745283333338,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012955037919999992,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "cadf3ac73893e3d9e1e08ac9f914822375c97a14",
          "message": "increase session index cache (#8832)\n\nA 10 session index cache is not enough when you run under intense\npressure and finality is lagg since you will end requesting the session\nindex for blocks older than that. So let's make this cache larger to\nachieve its purpose even under intense load when it actually matters\nmore to be faster.\n\nThe session_index_cache keeps a Hash and a u32, so that's about 36 bytes\nper entry, with this increase it can grow up to 65k which is not that\nbig in my book.\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>\nCo-authored-by: Andrei Sandu <54316454+sandreim@users.noreply.github.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-12T15:14:26Z",
          "tree_id": "d493466580217c13a7ecddb3780d30470202c766",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/cadf3ac73893e3d9e1e08ac9f914822375c97a14"
        },
        "date": 1749746424151,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013156113266666667,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15719583444666663,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.009158583060000093,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02257317843333333,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "donal.murray@parity.io",
            "name": "Dónal Murray",
            "username": "seadanda"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f96dfb73ff0472a5087451fd0227949b44756478",
          "message": "[pallet-broker] Force-unpool provisionally pooled regions before redispatching them (#4081)\n\nThis PR force removes regions from the pool before allowing them to be\nredispatched (through `partition`/`interlace`/`assign`) in the case that\na region was pooled with `Provisional` finality.\n\nThis PR does not account for the case where a pooled region already\nentitles the benefactor to a contribution reward before the point of it\nbeing redispatched. However, `claim_revenue` should be called before\ntrying to redispatch a region anyway.\nOtherwise there would be ambiguity as to what should be done with the\nfirst part of a partitioned region. The first of the two new regions\nactually has the exact same `region_id` as the original region -- leave\nit pooled/withdraw from pool/claim contribution then withdraw?\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-13T10:33:18Z",
          "tree_id": "9252b4ba357a052894712e133e0ddc077a35254b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f96dfb73ff0472a5087451fd0227949b44756478"
        },
        "date": 1749815851175,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012925199980000003,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15743449511333338,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008976781940000088,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02245022881333333,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5a84a332babf7968569b88034b5e4fc4abead35e",
          "message": "[pallet-revive] prestate tracer (#8742)\n\n- Add prestate tracer, with identical API as\nhttps://geth.ethereum.org/docs/developers/evm-tracing/built-in-tracers#prestate-tracer\n- Add coinbase runtime API to get the miner's address\ntested against geth with\nhttps://github.com/paritytech/evm-test-suite/pull/93\n\nfixes https://github.com/paritytech/revive-differential-tests/issues/7\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-13T11:28:21Z",
          "tree_id": "9a88c8e461debb0a6fb502b48679ebd679f381ad",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/5a84a332babf7968569b88034b5e4fc4abead35e"
        },
        "date": 1749818524390,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012866105813333336,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00878821572000009,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15673554905999998,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022450615826666662,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8e2b6f742a38bb13688e12abacded0aab2dbbb23",
          "message": "[pallet-revive] dev-node (#8746)\n\nThis adds a dev-node that is essentially the minimal template with the\naddition of pallet-revive\n\ncan be launched with\n\n```\ncargo run -p revive-dev-node\n```\n\nGoal: \n- use dev-node instead of kitchensink in\npolkadot-sdk/substrate/frame/revive/rpc/src/tests.rs for faster run and\nbuild time\n- use dev-node in https://github.com/paritytech/evm-test-suite and\nhttps://github.com/paritytech/revive-differential-tests\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-13T12:08:22Z",
          "tree_id": "c95826a81d74bea1a5dca5cacc79c43ce746071d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/8e2b6f742a38bb13688e12abacded0aab2dbbb23"
        },
        "date": 1749820875050,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022469381013333335,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15801047643333338,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01320200704666667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00894699910666675,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4413b73fef7b3c18dd79aaa75322fee6da2e34d7",
          "message": "Eth transaction do not double bump the nonce (#8829)\n\nAdd an extra `eth_instantiate_with_code` dispatchable that is used by\nthe EVM compatibility layer and ensure that the origin's nonce is only\nincremented once\n\nFixes https://github.com/paritytech/contract-issues/issues/64\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>\nCo-authored-by: Francisco Aguirre <franciscoaguirreperez@gmail.com>",
          "timestamp": "2025-06-13T14:29:27Z",
          "tree_id": "3bcdd2b0980e306ab0e381a2ef5238dd74fba94c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4413b73fef7b3c18dd79aaa75322fee6da2e34d7"
        },
        "date": 1749829643189,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02260892061333334,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013096007533333334,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.009172347473333413,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1576212746600001,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "paolo@parity.io",
            "name": "Paolo La Camera",
            "username": "sigurpol"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d0a525301ab8d962e478ed87b8665f30142a879d",
          "message": "EPMB: Handle empty solution pages gracefully in verifier (#8666)\n\n- Treat missing solution pages as empty rather than errors.\n- Updated `get_page` method now returns a default Solution instead of an\nOption when no candidate solutions are available. This simplifies the\nAPI\nand improves code clarity by removing the need to handle None cases.\n- Similarly, updated `get_score` method now returns a default (0) score\nif no leader is available.\n- Removed VerificationDataUnavailable now that `get_page` and\n`get_score` don't return an Option anymore\n- Signed validation phase must now be a multiple of the number of pages\n- Updated tests to reflect new behavior and remove defensive unwraps.\n\nClose security vulnerability found\n[here](https://github.com/paritytech-secops/srlabs_findings/issues/505).\nA malicious miner could trigger panic in the EPMB pallet, submitting a\nvery high score and then intentionally\nfailing in submitting one or more pages.\n\nA unit test replicating the vulnerability ensures that the fix works as\nexpected (i.e. no panic, solution is rejected).\n\n---------\n\nCo-authored-by: kianenigma <kian@parity.io>\nCo-authored-by: Kian Paimani <5588131+kianenigma@users.noreply.github.com>",
          "timestamp": "2025-06-13T21:14:57Z",
          "tree_id": "af343733a89a05442777f0e8f32fbeeeb548ab3e",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d0a525301ab8d962e478ed87b8665f30142a879d"
        },
        "date": 1749852960469,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.00909730231333341,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022384986873333332,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013033226039999998,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1577985453066667,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ludovic.domingues96@gmail.com",
            "name": "Ludovic Domingues",
            "username": "Krayt78"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4a4009589b17267e32983c0f4e0c7f54860b40cb",
          "message": "Add deposit for setting session keys (#7953)\n\n# Description\ncloses #1625\n\nImplement hold balance tracking for test accounts in the session pallet.\nRequires `pallet_session::Config` to specify:\n    * `type Currency`, assigned to an instance of `pallet_balances`.\n* `type RuntimeHoldReason`, almost always set to `RuntimeHoldReason`.\n* `type KeyDeposit`, the amount of deposit. Set to `()` to assert no\ndeposit amount is needed.\n    \nPolkadot address: 14AgwoPjcRiEEJgjfHmvAqkjdERCG26WEvQUoGLuBzcXKMS2\n\n---------\n\nCo-authored-by: Kian Paimani <5588131+kianenigma@users.noreply.github.com>\nCo-authored-by: kianenigma <kian@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-06-14T09:17:53Z",
          "tree_id": "63e297516823da22031454bcad0b74b53ad6347b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4a4009589b17267e32983c0f4e0c7f54860b40cb"
        },
        "date": 1749896372289,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022446495040000004,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15699019684666676,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008760280460000082,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012907508299999997,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ludovic.domingues96@gmail.com",
            "name": "Ludovic Domingues",
            "username": "Krayt78"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2ffee63df61d45b9c7b2c53afb10a9495bee792e",
          "message": "Fix calling nominate on a validator that doesn’t exist silently succeeds (#8436)\n\n# Description\nThis PR fixes a bug where calling nominate on a validator that doesn’t\nexist silently succeeds.\nIt also updates all the tests that had an incorrect setup - they were\nsimulating elections with unregistered validators.\n\npolkadot address: 14AgwoPjcRiEEJgjfHmvAqkjdERCG26WEvQUoGLuBzcXKMS2\n\n---------\n\nCo-authored-by: Kian Paimani <5588131+kianenigma@users.noreply.github.com>\nCo-authored-by: Ankan <10196091+Ank4n@users.noreply.github.com>\nCo-authored-by: kianenigma <kian@parity.io>",
          "timestamp": "2025-06-14T16:47:26Z",
          "tree_id": "0293d0c7a9f22add7fbdf28e59c8ca843c037003",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/2ffee63df61d45b9c7b2c53afb10a9495bee792e"
        },
        "date": 1749923316176,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008879930166666768,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02280339090666667,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013217350753333336,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15893751131333342,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "5588131+kianenigma@users.noreply.github.com",
            "name": "Kian Paimani",
            "username": "kianenigma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9f38b8cfebf8f4e6b51d7a5a267a8b224a494bf7",
          "message": "Mute a lot of logs in Staking-async and EPMB (#8855)",
          "timestamp": "2025-06-15T11:07:11Z",
          "tree_id": "dee4712a2ed13a96a6d6b3b5ca35c7a12a031a8f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/9f38b8cfebf8f4e6b51d7a5a267a8b224a494bf7"
        },
        "date": 1749989303799,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.1568777194800001,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008926969653333422,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013015390586666668,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022429158273333333,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "donal.murray@parity.io",
            "name": "Dónal Murray",
            "username": "seadanda"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "20452a838f4f1970a407aea9e15ba7321684a704",
          "message": "Allow RelaychainDataProvider set_block_number to be used in tests (#8537)\n\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-06-15T15:07:24Z",
          "tree_id": "1c14e417a3e086902c0e82202b2ef5f749766a47",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/20452a838f4f1970a407aea9e15ba7321684a704"
        },
        "date": 1750003632966,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.0130578228,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022433502299999995,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.009069047793333425,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15697601753333335,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c405dda71db4463f55b26a037484274f3ab2e646",
          "message": "[pallet-revive] fix call-trace create calls (#8781)\n\nFix call-traces for CREATE calls.\n\nthese types of calls have a \"CREATE\" and \"CREATE2\" type see\nhttps://geth.ethereum.org/docs/developers/evm-tracing/built-in-tracers#call-tracer\n\nThe input of these trace, should also contain the bytecode or code hash.\n\nfixes https://github.com/paritytech/contract-issues/issues/96\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-15T21:55:13Z",
          "tree_id": "8a6f09d132c61e9bf5e856cf2e7a4aac082610e0",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c405dda71db4463f55b26a037484274f3ab2e646"
        },
        "date": 1750028215649,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013081894186666665,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008771682606666753,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02244975536666667,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15629330996,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "andrew.ahlers@parity.io",
            "name": "andrew-ifrita",
            "username": "andrew-ifrita"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b9fbf243c57939ecadc89b82ed42249703203874",
          "message": "docs: fix XCM docs for AlwaysV4 and AlwaysV5 (#8862)\n\n✄\n-----------------------------------------------------------------------------\n\nThank you for your Pull Request! 🙏 Please make sure it follows the\ncontribution guidelines outlined in [this\n\ndocument](https://github.com/paritytech/polkadot-sdk/blob/master/docs/contributor/CONTRIBUTING.md)\nand fill out the\nsections below. Once you're ready to submit your PR for review, please\ndelete this section and leave only the text under\nthe \"Description\" heading.\n\n# Description\n\nFix docstrings for `AlwaysV4` and `AlwaysV5` in XCM code, both of which\nwrongly stated V3\n\n## Integration\n\nOnly docs are changed.\n\n## Review Notes\n\nNone\n\n\n# Checklist\n\n* [x] My PR includes a detailed description as outlined in the\n\"Description\" and its two subsections above.\n* [x] My PR follows the [labeling requirements](\n\nhttps://github.com/paritytech/polkadot-sdk/blob/master/docs/contributor/CONTRIBUTING.md#Process\n) of this project (at minimum one label for `T` required)\n* External contributors: ask maintainers to put the right label on your\nPR.\n* [x] I have made corresponding changes to the documentation (if\napplicable)\n* [x] (N/A) I have added tests that prove my fix is effective or that my\nfeature works (if applicable)\n\nYou can remove the \"Checklist\" section once all have been checked. Thank\nyou for your contribution!\n\n✄\n-----------------------------------------------------------------------------",
          "timestamp": "2025-06-16T10:02:04Z",
          "tree_id": "c198cb761726325b836a171b765efa7a6ac7fad5",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/b9fbf243c57939ecadc89b82ed42249703203874"
        },
        "date": 1750071731511,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.1564953169866667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00906141341333344,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01302507745333334,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022474368246666664,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "noreply@reusable.software",
            "name": "ordian",
            "username": "ordian"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "da75e7db67ee4a08f3821ef552dc0ca47975cf66",
          "message": "paras_inherent: fix overweight warn (#8861)\n\nFixes #8859 \n\nLong-term fix would be addressing #5520.",
          "timestamp": "2025-06-16T13:28:13Z",
          "tree_id": "3ea47a6d56b14f3ce033d5e3083f9f0b27d40f74",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/da75e7db67ee4a08f3821ef552dc0ca47975cf66"
        },
        "date": 1750085855104,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022674180573333327,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012974149320000006,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008779786546666751,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1576952955733334,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "363911+pepoviola@users.noreply.github.com",
            "name": "Javier Viola",
            "username": "pepoviola"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "bd646008920111d1dd5698dc73f45428f3227d31",
          "message": "[Zombienet] changes for new runners (#8864)\n\nChanges for new CI runners.",
          "timestamp": "2025-06-16T15:40:28Z",
          "tree_id": "0e3bf0f3fe5df49c96e9a110573057454184745d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/bd646008920111d1dd5698dc73f45428f3227d31"
        },
        "date": 1750092016282,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012966870066666669,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022525918180000003,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1573487249866667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008695628446666753,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "dmitry@markin.tech",
            "name": "Dmitry Markin",
            "username": "dmitry-markin"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "fdd9b43a9b9ca28c68f04b7f8cae9db5b2c04687",
          "message": "Add doc for DHT bootnodes mechanism (#8865)\n\nAdd description of the RFC-8 \"DHT bootnodes\" implementation.\n\nRendered:\nhttps://github.com/paritytech/polkadot-sdk/blob/dm-dht-bootnodes-doc/docs/sdk/src/guides/dht_bootnodes.md",
          "timestamp": "2025-06-17T08:45:58Z",
          "tree_id": "89091993c5374d1cea4506ee415a5e7c832ac85a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/fdd9b43a9b9ca28c68f04b7f8cae9db5b2c04687"
        },
        "date": 1750153444845,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02251440656,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00903722853333344,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013022716459999998,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15693577910666673,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "paolo@parity.io",
            "name": "Paolo La Camera",
            "username": "sigurpol"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "509637a61041196d2620419a74f6c3d7efad92df",
          "message": "staking-async runtime: extended duration of the signed phase (#8870)\n\nFor the staking-async test runtime, we extend the duration of the signed\nphase from 2 to 4 minutes, in order to give enough time to the staking\nminer to mine, submit the score, verify it's on chain and then submit\nall pages during the signed phase.\n\nWhile testing on CI / locally for a 32-page solution, the miner ends up\nsubmitting pages pretty close to the end of the signed phase itself.\n\nWhereas this is a valuable scenario to test to prove miner's robustness,\nin the main happy path and while testing locally, we want the miner by\ndefault to have enough time to submit the whole solution and to be able\nto handle a re-tx if one/N pages fail to be submitted still within the\nsame Signed phase cycle.",
          "timestamp": "2025-06-17T09:50:15Z",
          "tree_id": "197703bee5dc435c40a22264535b88245e00eb8d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/509637a61041196d2620419a74f6c3d7efad92df"
        },
        "date": 1750157797236,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012837590986666663,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15671337054666665,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02254401959333334,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008974794873333428,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eresav@me.com",
            "name": "Andrei Eres",
            "username": "AndreiEres"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "310e81d772201491b2a49452adaae7796ac237df",
          "message": "Check artifact integrity before execution (#8833)\n\nFixes https://github.com/paritytech/polkadot-sdk/issues/677\nFixes https://github.com/paritytech/polkadot-sdk/issues/2399 \n\n# Description\n\nTo detect potential corruption of PVF artifacts on disk, we store their\nchecksums and verify if they match before execution. In case of a\nmismatch, we recreate the artifact.\n\n## Integration\n\nIn Candidate Validation, we treat the error similarly to\nPossiblyInvalidError::RuntimeConstruction due to their close nature.\n\n## Review Notes\n\nThe Black3 hashing algorithm has already been used. I believe we can\nswitch to twox, as suggested in the issue, because the checksum does not\nneed to be cryptographically hashed, and we do not reveal the checksum\nin logs.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-17T13:28:32Z",
          "tree_id": "40f6f510c55627c250552908018d8d26604c29f1",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/310e81d772201491b2a49452adaae7796ac237df"
        },
        "date": 1750171112282,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.01320111556,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02261257342,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008653261700000098,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15778810298666668,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "363911+pepoviola@users.noreply.github.com",
            "name": "Javier Viola",
            "username": "pepoviola"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6697fc8ca61a8ac77b42dc1ac1b66e0dcf033197",
          "message": "[zombienet] fix ci for new runners (#8876)\n\nAdd needed env vars to run with the new runners (polkadot workflow) and\nmove cumulus/substrate to zombienet action.",
          "timestamp": "2025-06-17T14:49:04Z",
          "tree_id": "5654c46c22f0eb9cde59441248c7afe3de24a772",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/6697fc8ca61a8ac77b42dc1ac1b66e0dcf033197"
        },
        "date": 1750176169527,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022298052006666666,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008810905833333415,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012888116653333337,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15610023650666668,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6b5a1284e83ed52dfc61f7deb920af41ae1efd31",
          "message": "extend overseer to send priority messages (#8834)\n\nExtend overseer to send priority messages, the new functionality is used\nfor sending messages on the grandpa call path when we call\ndispute-coordinator and approval-voting in\nfinality_target_with_longest_chain to make sure we don't block\nunnecessarily.\n\nDepends on: https://github.com/paritytech/orchestra/pull/87.\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Javier Viola <javier@parity.io>\nCo-authored-by: Javier Viola <363911+pepoviola@users.noreply.github.com>",
          "timestamp": "2025-06-17T16:17:36Z",
          "tree_id": "1bb03dbcc5809a80c347b65df981123f794c92a0",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/6b5a1284e83ed52dfc61f7deb920af41ae1efd31"
        },
        "date": 1750181084614,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15762358133333343,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013129905319999998,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.009280449453333424,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022382717706666666,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "OliverLim818@gmail.com",
            "name": "cuteolaf",
            "username": "cuteolaf"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "79c84d47fc30e365488f5926cbea0d00eb6d3c52",
          "message": "replace `pure` with `create_pure` in comments (#8892)\n\n# Description\n\nFixed some comments in the implementation of proxy pallet.",
          "timestamp": "2025-06-18T08:40:45Z",
          "tree_id": "88412a2b037372def5632f5177debada7b5e77ac",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/79c84d47fc30e365488f5926cbea0d00eb6d3c52"
        },
        "date": 1750239720072,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.01313686371333333,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.009012745346666745,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15640283949333333,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022436305119999996,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "serban@parity.io",
            "name": "Serban Iorga",
            "username": "serban300"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f6cd17e550caeaa1b8184b5f3135ca21f2cb16eb",
          "message": "Fix `zombienet-substrate-0002-validators-warp-sync` (#8878)\n\nCloses https://github.com/paritytech/polkadot-sdk/issues/8871\nRelated to #8748\n\nFix `zombienet-substrate-0002-validators-warp-sync`",
          "timestamp": "2025-06-18T11:08:36Z",
          "tree_id": "44eecdbe6318c8ce6583340f94006ec98f56792f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f6cd17e550caeaa1b8184b5f3135ca21f2cb16eb"
        },
        "date": 1750249781065,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013227345519999998,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15682394705333336,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02234806779333333,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008954728826666756,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f10da5373cde92d9fc63ebfc66b9f62f5ad34a11",
          "message": "[pallet-revive] only record diff if value changed (#8881)\n\nOnly record storage change in diff mode if the value differ from the\ninitial one.\nPrevious implementation would report a diff for example when the old\nvalue was written again.\n\nUpdated tests in https://github.com/paritytech/evm-test-suite/pull/96\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-18T15:29:50Z",
          "tree_id": "c3ae3ee372616e288e1b45aa53082dbd2c513d7c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f10da5373cde92d9fc63ebfc66b9f62f5ad34a11"
        },
        "date": 1750264577770,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012994434773333327,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008978941406666757,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15629523175333332,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022418708986666668,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "86f833bff3c434e6fdd202c0521eb1dcaf7fb31e",
          "message": "[pallet-revive-rpc] fix sqlite in-memory connection pool issue (#8897)\n\nFix in-memory sqlite connection pool issue\nsee https://github.com/launchbadge/sqlx/issues/2510\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-18T17:09:55Z",
          "tree_id": "1b66734bfc6368fd978192f62b5adb847f93f0ec",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/86f833bff3c434e6fdd202c0521eb1dcaf7fb31e"
        },
        "date": 1750270850811,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.01316174724,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.009026970640000102,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15833415083333344,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02257356952666666,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "32168055+antkve@users.noreply.github.com",
            "name": "Anthony Kveder",
            "username": "antkve"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "7d875655ea38b734d6f1a3a79aef227e846f227c",
          "message": "Fix bridge tests (#8900)\n\nFixes: https://github.com/paritytech/polkadot-sdk/issues/8800\n\n# Description\nFixing bridges integration tests by setting up pool\n\n---------\n\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>",
          "timestamp": "2025-06-19T08:01:30Z",
          "tree_id": "c6e34fd12d4d4103f3b1939a1c19acfc7ca43cbe",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/7d875655ea38b734d6f1a3a79aef227e846f227c"
        },
        "date": 1750323699566,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02238890642666666,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013064978866666665,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.009257352840000066,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15667308564666677,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "dmitry@markin.tech",
            "name": "Dmitry Markin",
            "username": "dmitry-markin"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "35d8868a9773cb560f00bd79f644228af6708d8f",
          "message": "DHT bootnodes: rate limit the discovery attempts instead of limiting max retry count (#8792)\n\nInstead of giving up after 5 discovery attempts, keep retrying with a\ndelay of 30 seconds until the discovery succeeds.\n\nThis fixes a DHT bootnodes zombinet test execution on CI where\nindividual nodes may start with a significant delay. This will also help\nshould there be temporary connectivity issues leading to 5 failures in a\nrow.\n\n---------\n\nCo-authored-by: Alexandru Vasile <60601340+lexnv@users.noreply.github.com>",
          "timestamp": "2025-06-19T15:38:11Z",
          "tree_id": "6d51d118fa8225e4896ea6c39f2c73e1572894f8",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/35d8868a9773cb560f00bd79f644228af6708d8f"
        },
        "date": 1750351247034,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.1562915581666668,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012610143566666666,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022446513659999993,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00902821246666674,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "daaaf6b2f70f81eba57ad7a12d87aebc453ab5d0",
          "message": "ParachainSystem: Do not emit the `SelectCore` digest (#8903)\n\nThis will be moved into an inherent digest.\n\nAs preparation for:\nhttps://github.com/paritytech/polkadot-sdk/issues/8893\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-20T08:56:51Z",
          "tree_id": "b641c915158c9f5dcc84a803061e0b8b3cb69d43",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/daaaf6b2f70f81eba57ad7a12d87aebc453ab5d0"
        },
        "date": 1750413719137,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15849727496666668,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022648845953333333,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012779007553333338,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.009034437346666755,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "tsvetomir@parity.io",
            "name": "Tsvetomir Dimitrov",
            "username": "tdimitrov"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "40a005033bc1b67344cc4ac5e594956b583780f3",
          "message": "More deterministic check for polkadot/zombienet_tests/functional/0019-coretime-collation-fetching-fairness.zndsl (#8921)\n\n`polkadot/zombienet_tests/functional/0019-coretime-collation-fetching-fairness.zndsl`\nis flaky on CI. I suspect the reason for this is session changes\nhappening during the measurement step. To make this more predictable\nI've modified the checker to wait for a session change before counting\nthe `CandidateIncluded` events. Hopefully this will stabilize the test\non CI too.",
          "timestamp": "2025-06-20T14:29:07Z",
          "tree_id": "7eb5a00ab10abc5e6c965b171a4effeba046b8bf",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/40a005033bc1b67344cc4ac5e594956b583780f3"
        },
        "date": 1750433993394,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15552982094666665,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00878678780666675,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012887846953333332,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022311202659999994,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "41160dce396fb98be6c2c4664bb2124a57e35a49",
          "message": "[pallet-revive] Make Runtime call dispatchable as eth transaction (#8883)\n\nMake RuntimeCall dispatchable as eth transaction.\n\nBy sending a transaction to\n`0x6d6f646c70792f70616464720000000000000000`, using the encoded runtime\ncall as input, the call will be executed by the origin indicated by the\nEthereum signature (0xEE account_id).\n\nsee https://github.com/paritytech/foundry-polkadot/issues/130\n\ne.g sending a remark_with_event\n```\ncast wallet import dev-account --private-key 5fb92d6e98884f76de468fa3f6278f8807c48bebc13595d45af5bdc4da702133\ncast send --account dev-account 0x6d6f646c70792f70616464720000000000000000 0x0007143132333435\n```\n\nalso merged in #8901 and #8920\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-21T09:32:23Z",
          "tree_id": "52230c17ebc7b6edb9d1aedfb5b806f1fdc31439",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/41160dce396fb98be6c2c4664bb2124a57e35a49"
        },
        "date": 1750501997072,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008827381146666742,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01258404148,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022296907353333336,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15578292224000004,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ismailov.m.h@gmail.com",
            "name": "muharem",
            "username": "muharem"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5072bf9b93dc1c9dff0161ab6efe2799036045e9",
          "message": "Scheduler `on_initialize` supports skipped blocks (#8723)\n\nScheduler `on_initialize` supports skipped blocks.\n\nScheduler correctly handles situations where `on_initialize` is invoked\nwith block numbers that:\n- increase but are not strictly consecutive (e.g., jump from 5 → 10), or\n- are repeated (e.g., multiple blocks are built at the same Relay Chain\nparent block, all reporting the same `BlockNumberProvider` value).\n\nThis situation may occur when the `BlockNumberProvider` is not local -\nfor example, on a parachain using the Relay Chain block number provider.\n\nImplementation notes:\n- The `IncompleteSince` value is always set to the next block `(now +\n1)`.\n- A scheduled task is considered permanently overweight only if it fails\nduring the first agenda processing;",
          "timestamp": "2025-06-21T20:35:41Z",
          "tree_id": "2cd75d8bd1acbb19ed31a2ae5344c840c8fd73cb",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/5072bf9b93dc1c9dff0161ab6efe2799036045e9"
        },
        "date": 1750542167848,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013021330179999997,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1576084023933334,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008851809213333409,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02249008864,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "14218860+iulianbarbu@users.noreply.github.com",
            "name": "Iulian Barbu",
            "username": "iulianbarbu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "764976b5800df633b6ec5904f0ae856e16040524",
          "message": "polkadot-omni-node: add `GetParachainInfo` runtime api  (#8651)\n\n# Description\n\nCloses #7384\nCloses #75\nCloses #8692\nCloses #8739 \n\n## Integration\n\nNode developers, node operators & runtime developers will not need to\ngenerate chain specs that contain a `para_id` field starting with this\nPR, but they'll have to implement the\n`cumulus_primitives_core::GetParachainInfo` runtime API once they drop\nthe `para_id` field, so that new nodes versions will be able to query\nthe runtime for the parachain id.\n\nStarting with `2512` the nodes will not support anymore reading the\nparachain id from chain specs `para_id` field, so it will be mandatory\nfor runtime to implement the `cumulus_primitives_core::GetParachainInfo`\ntrait and be upgraded.\n\n## Review Notes\n\nThis PR is based on prior work here:  #7546. It delivers the following:\n\n### Deprecated `para_id` chain spec extension\n\n- nodes like `polkadot-omni-node`/`polkadot-parachain`) will still\nsupport running chainspecs with `para_id` extension for a while (until\nstable2512)\n- nodes like `test-parachain`/`parachain-template-node` are supporting\nonly runtimes that implement the new runtime API.\n- `chain-spec-builder` will display that `para_id` is deprecated when\ncalling `help`, or when using the flag.\n\n### Additional cleanup/changes\n\n- fixed & renabled some omni-node/parachain-template-node tests from\n`polkadot-sdk-docs` & `templates/zombienet`, which rely on the newly\nadded runtime API as wellI. Tests based on the `para_id` chain spec\nextension are not present anymore, since omni-node will favour taking\nthe para id based on the runtime API if present.\n\n- removed the concept of running `minimal` with omni-node. I returned to\nan old idea of a few of us. At this moment we can't support it anymore\nwith omni-node since we'd need to add `parachain_info` to\n`minimal-template-runtime`, which doesn't make much sense.\n\n- most of the parachains runtimes (hope I haven't missed any relevant)\nthat run by using\n`polkadot-parachain/polkadot-omni-node/test-parachain/parachain-template-node`\nshould fail to work with the previous nodes (that support them) after\n`stable2512`. Probably that will be caught in the CI if I missed them\nduring this PR, but I doubt it.\n\n## Reviewers request\n\n- if there are other nodes used to run parachains runtimes, this is a\ngood moment to highlight them so that I can update them if needed in\nterms of picking up the `parachain_id` from the runtime.\n\n---------\n\nSigned-off-by: Iulian Barbu <iulian.barbu@parity.io>\nCo-authored-by: Steven <stevenlawrence13e@gmail.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Michal Kucharczyk <1728078+michalkucharczyk@users.noreply.github.com>",
          "timestamp": "2025-06-22T18:31:15Z",
          "tree_id": "b58e80b1292e6202f90085c779752e346ca3a764",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/764976b5800df633b6ec5904f0ae856e16040524"
        },
        "date": 1750621093694,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02233205753999999,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15579014186,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008955839093333424,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012741156699999995,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e5ac83cd28610bd10a85638d90a8ee082ef2d908",
          "message": "Multisig::as_multi_threshold_1: Send `MultisigExecuted` event (#8925)\n\nSo the behavior is the same as `as_multi` when it comes to sending an\nevent.\n\nCloses: https://github.com/paritytech/polkadot-sdk/issues/8924\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-23T07:18:44Z",
          "tree_id": "ac0f0719a3eb1ef660b2957dd189143577780b43",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e5ac83cd28610bd10a85638d90a8ee082ef2d908"
        },
        "date": 1750666976077,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15576805254666667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008811873846666757,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022252912660000002,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01296391502666667,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "gorka.irazoki@gmail.com",
            "name": "girazoki",
            "username": "girazoki"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3288aa33b535e66578d93dc1bea6091c572854ad",
          "message": "Add possibility of executing or mocking additional inherents in xcm-emulator (#8809)\n\nWith the addition of\nhttps://github.com/paritytech/polkadot-sdk/pull/8083 there is no\npossibility right now of making the xcm-executor work with custom\ninherents. Custom inherents are usually driven by killing a storage item\nof the form `wasInherentSet` `on_initialize` and asserting that such\ninherent was set `on_finalize`. Before the xcm-emulator worked as these\nhooks were running just for the ParachainSystem pallet, but now, they\nrun for all pallets.\n\nMy proposal is to add an item to the xcm-emulator parachain\nconfiguration of the form `AdditionalInherentCode`, which simply\nexecutes code that returns a `DispatchResult`. Whether users want to\nmock a storage item or run the inherent is up to them, this hook would\nallow them to do both.\n\nThis item is optional, meaning that if it is non-set then it would do\nnothing\n\n---------\n\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-06-23T11:13:33Z",
          "tree_id": "9cc562b27e1fcb51414f72e2007720f4d48101c0",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/3288aa33b535e66578d93dc1bea6091c572854ad"
        },
        "date": 1750681644736,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022456465513333336,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00909483254666675,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15711827020000008,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013065656626666661,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5f3507ec02185e05c96f055d808d8d17d8b969e6",
          "message": "make sure dispute_coordinator/approval-voting parallel can receive priority messages (#8948)\n\nhttps://github.com/paritytech/polkadot-sdk/pull/8834, changed\nrelay_chain_selection to send priority messages, but did not configured\nthe subsystems to tell they can receive priority messages, with\n`can_receive_priority_messages` flag.\n\nIf `can_receive_priority_messages` is not specified orchestra falls back\nwhen sending a priority message to the normal queue, so this resulted in\nthe messages not being processed ahead of the others in the queue.\n\nFix this configuration mistake and add a test to make sure priority\nmessages are consumed ahead of normal ones by the subsystems.\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-24T07:28:49Z",
          "tree_id": "f45b40cb1f5276f7774d77d87f057a36768fedbe",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/5f3507ec02185e05c96f055d808d8d17d8b969e6"
        },
        "date": 1750753797512,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.00904781007333343,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15895175155333344,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02248567225333334,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013225328253333333,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "28b7c7770e9e7abf5b561fc42cfe565baf076cb7",
          "message": "remove enable_approval_voting_parallel cli flag (#8894)\n\nThis has been running on polkadot since\nhttps://github.com/paritytech/polkadot-sdk/pull/7504, so it is time to\nremove the flag that allowed us to run either with\napproval-voting-parallel or with approval-distribution and\napproval-voting subsystems.\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-24T10:20:06Z",
          "tree_id": "73626b2532ace72421a8a57f6cc1ebebd973a764",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/28b7c7770e9e7abf5b561fc42cfe565baf076cb7"
        },
        "date": 1750765878844,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022481227246666662,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15708508226666665,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008795164746666757,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013000009693333335,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "Sajjon@users.noreply.github.com",
            "name": "Alexander Cyon",
            "username": "Sajjon"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "38d3c3074935b9353519a39abdf8f4912c86b196",
          "message": "Link to dev setup guide from README and CONTRIBUTING (#8827)\n\n# Description\nToday the README does not link to how to get started making `cargo\nbuild` succeed. I've made some minor edits making the repo a bit more\n\"welcoming\" to devs who wanna get started building the repo.\n\n## Changes\n* Update `README.md` on how to get started with development (making\n`cargo build` succeed) by linking to [this\nguide](https://docs.polkadot.com/develop/parachains/install-polkadot-sdk/)\n* Update `CONTRIBUTING.md` with the same guide\n* Generalize `DOCUMENTATION_GUIDELINES.md` to not only be about\nSubstrate.\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-06-24T14:20:25+02:00",
          "tree_id": "fd0dab29639ec766763f212ab00a2a1fd5db92ee",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/38d3c3074935b9353519a39abdf8f4912c86b196"
        },
        "date": 1750769168019,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02243470601999999,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012902254406666664,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008826469620000096,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1567553736266667,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "Sajjon@users.noreply.github.com",
            "name": "Alexander Cyon",
            "username": "Sajjon"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a9df491b9717d40dd3a2288d7c9687390433a1f3",
          "message": "Decrease too wide line in markdown (#8965)\n\nIn https://github.com/paritytech/polkadot-sdk/pull/8827 I wrote a line\nwhich was longer than CI markdown linter allowed (max 120 chars, width\nwas 126)\n\nThis causes CI failure:\nhttps://github.com/paritytech/polkadot-sdk/actions/runs/15850370092/job/44682093959?pr=8939",
          "timestamp": "2025-06-24T15:51:27+02:00",
          "tree_id": "f99546f969fd7fde316fc74dffccba669d5b9b7a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/a9df491b9717d40dd3a2288d7c9687390433a1f3"
        },
        "date": 1750775755670,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013479295633333334,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.0225482991,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.009102361626666739,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15792965950666665,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "koute@users.noreply.github.com",
            "name": "Koute",
            "username": "koute"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8339a0f402b520eb39944f9f8b008c4d71629883",
          "message": "Bump PolkaVM to 0.25.0 (#8962)\n\nBump to the newest PolkaVM version. This contains *mostly* many linker\nimprovements/bugfixes, with no real functional changes.",
          "timestamp": "2025-06-24T13:51:44Z",
          "tree_id": "274544f161edeb2b54060a7c36dcdf2191a5e779",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/8339a0f402b520eb39944f9f8b008c4d71629883"
        },
        "date": 1750778855052,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.1585348959866667,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022604286399999993,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013252646613333334,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00897658229333341,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1728078+michalkucharczyk@users.noreply.github.com",
            "name": "Michal Kucharczyk",
            "username": "michalkucharczyk"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6efe9f5c2032140930061c98ca323c71f53958b6",
          "message": "`fatxpool`: limits handling optimizations and fixes (#8596)\n\nThis PR adds some optimization and fixes in handling limits in\nfork-aware transaction pool.\n\n#### Notes for reviewers\n\nChanges made (random order):\n- debug levels adjusted in numerous places places ( `debug -> trace` for\ntx, `trace -> debug` for general flow) for better readablity,\n- internal TxMemPool\n[storage](https://github.com/paritytech/polkadot-sdk/blob/74dafaee5c600fd2c8a59a280f647f94ccf0a755/substrate/client/transaction-pool/src/fork_aware_txpool/tx_mem_pool.rs#L268-L272)\nis now\n[sorted](https://github.com/paritytech/polkadot-sdk/blob/74dafaee5c600fd2c8a59a280f647f94ccf0a755/substrate/client/transaction-pool/src/fork_aware_txpool/tx_mem_pool/tx_mem_pool_map.rs#L123-L132).\nA new helper exposes methods to reduce number of transaction clones\n(e.g.\n[here](https://github.com/paritytech/polkadot-sdk/blob/74dafaee5c600fd2c8a59a280f647f94ccf0a755/substrate/client/transaction-pool/src/fork_aware_txpool/fork_aware_txpool.rs#L1404-L1410),\nsee [previous\nverions](https://github.com/paritytech/polkadot-sdk/blob/2863b7a9a879935ff16987d0e95065d088dad9f8/substrate/client/transaction-pool/src/fork_aware_txpool/fork_aware_txpool.rs#L1352-L1359)).\nThis new structure eliminates the necessity of sorting transactions on\nthe fly which was a not efficient, naive,\n[first](https://github.com/paritytech/polkadot-sdk/blob/e44b89fb7ca3385f314803c733ad97b26cd14e9f/substrate/client/transaction-pool/src/fork_aware_txpool/tx_mem_pool.rs#L384-L400)\nimplementation.\n- some _mutexes_ were migrated to `tokio::sync::Mutex` to avoid tokio\nthreads locking,\n- `sync` to `async`\n_[message](https://github.com/paritytech/polkadot-sdk/blob/74dafaee5c600fd2c8a59a280f647f94ccf0a755/substrate/client/transaction-pool/src/fork_aware_txpool/tx_mem_pool.rs#L743)\nbased_ bridge was implemented. It's purpose is mainly to support\n`LocalTransactionPool / OffchainTransactionPool` infrastucture. `sync`\nmethods can be called from both non-tokio and tokio context. This\nrequires one additional\n[blocking](https://github.com/paritytech/polkadot-sdk/blob/74dafaee5c600fd2c8a59a280f647f94ccf0a755/substrate/client/transaction-pool/src/fork_aware_txpool/fork_aware_txpool.rs#L398-L402)\ntask for transaction pool.\n- `ViewStore::most_recent_view` is now a\n[reference](https://github.com/paritytech/polkadot-sdk/blob/74dafaee5c600fd2c8a59a280f647f94ccf0a755/substrate/client/transaction-pool/src/fork_aware_txpool/view_store.rs#L171)\nto `View`.\n- `TXMEMPOOL_TRANSACTION_LIMIT_MULTIPLIER` removed, there is no point\nfor buffering more. Initially intended to work as buffer accommodating\ntransactions from two different full views (which could have different\nset of transactions), turned out to be a bottleneck in maintain function\n(it still is but aligning sizes reduced the impact),\n-\n[bug](https://github.com/paritytech/polkadot-sdk/blob/74dafaee5c600fd2c8a59a280f647f94ccf0a755/substrate/client/transaction-pool/src/fork_aware_txpool/view_store.rs#L769)\n:see_no_evil: fixed in pre-insert actions removal\n-\n[`ValidateTransactionPriority`](https://github.com/paritytech/polkadot-sdk/blob/045bc6d342620a02ee9b28d8de51f72ae680f06f/substrate/client/transaction-pool/src/graph/pool.rs#L64-L71)\nwas added. The goal is to allow faster processing of validation requests\nthat were made from the `maintain` context. Otherwise all requests were\nlanding in the same queue and maintain requests could be delayed. Now\nthe processing power is evenly 50/50 split between _maintain_ and\n_submit+revalidate_ context.\n\n\nRelated work:\n- https://github.com/michalkucharczyk/tx-test-tool/pull/42,\n- https://github.com/paritytech/polkadot-sdk/pull/8152,\n\nTodo:\n- [x] some run should be done also for parachain,\n\n---------\n\nCo-authored-by: Iulian Barbu <14218860+iulianbarbu@users.noreply.github.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-24T16:06:37Z",
          "tree_id": "af50442b60ceb8c007b5ac7d4eaab7eaaa5a00e5",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/6efe9f5c2032140930061c98ca323c71f53958b6"
        },
        "date": 1750784953736,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012895604966666667,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022612559,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1585125734866667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008807721906666753,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1728078+michalkucharczyk@users.noreply.github.com",
            "name": "Michal Kucharczyk",
            "username": "michalkucharczyk"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "77e73b9b258a94a8c0a43fcc19ee6257100861da",
          "message": "`fatxpool`: some more integration tests (#8152)\n\nSome extra tests for `fatxpool`, including long term test:\n- sending 5M transactions to relay/para,\n- transaction gossiping tests (for network protocol evaluation),\n- yet-another-parachain spemening test (2s / 7k),\n\nThe base directory can be specified by setting `TXPOOL_TEST_DIR` env\nvariable.\n\nIf set every individual test restults will be placed under this path in\na directory name formatted as `test_%Y%m%d_%H%M%S`. e.g.:\n```\nexport TXPOOL_TEST_DIR=/home/miszka/test-results\ncargo test  --release --test integration -- --ignored send_future_and_ready_from_many_accounts_to_parachain\n...\n2025-04-11T07:48:15.324966Z  INFO zombienet_orchestrator: 🧰 base_dir: \"/home/miszka/test-results/test_20250411_094815\"\n...\n```\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Iulian Barbu <14218860+iulianbarbu@users.noreply.github.com>",
          "timestamp": "2025-06-24T19:37:16Z",
          "tree_id": "f169c3e56938a2920569959eef3005f2d3c530cf",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/77e73b9b258a94a8c0a43fcc19ee6257100861da"
        },
        "date": 1750797449379,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022481303473333335,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.009058218533333405,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01277040088,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15663495812666667,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "drewsmpk@gmail.com",
            "name": "Afounso Souza",
            "username": "lechpzn"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "05ca227536c1101e1083b88a9f57c7feccb84442",
          "message": "Fix typo (#8966)\n\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-06-24T21:45:14Z",
          "tree_id": "5b0258a08592886d1b3123703f74d2f8779583a6",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/05ca227536c1101e1083b88a9f57c7feccb84442"
        },
        "date": 1750805200049,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013034608326666666,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15667746597333343,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022295229453333336,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008807816280000078,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1728078+michalkucharczyk@users.noreply.github.com",
            "name": "Michal Kucharczyk",
            "username": "michalkucharczyk"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "63973ccc7108560b2d0a7d882e5c0e232d9396ac",
          "message": "`fatxpool`: fix: remove invalid txs from the dropped stream controller (#8923)\n\nWhile testing mortal transaction I encountered exactly the same problem\nas in #8490.\nThis PR should fix the problem.\n\nfixes: #8490\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-25T06:40:14Z",
          "tree_id": "8c3bd2efc80adf2565c66ce09d2316fdb258f433",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/63973ccc7108560b2d0a7d882e5c0e232d9396ac"
        },
        "date": 1750837260921,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.01282108346,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008637931646666746,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15663278491333338,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022191699433333337,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1728078+michalkucharczyk@users.noreply.github.com",
            "name": "Michal Kucharczyk",
            "username": "michalkucharczyk"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a511802dd8e8ebcb6eda2076a723adfb5436b037",
          "message": "`fatxpool`: fork aware transaction pool is now default (#8838)\n\nThis PR changes the node's default transaction pool to the fork aware\nimplementation.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-25T07:20:36Z",
          "tree_id": "2d0fed1835c46e1aabb10a63086e2c92c749f7d8",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/a511802dd8e8ebcb6eda2076a723adfb5436b037"
        },
        "date": 1750839658853,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012978410860000001,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.0226554195,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1581942728666667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.009114640640000091,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eresav@me.com",
            "name": "Andrei Eres",
            "username": "AndreiEres"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "fe26e9e34c0ac7236202f99720d8cb129d7b6818",
          "message": "[pvf-worker] Refactor execute request handling (#8908)\n\n# Description\n\nFixes https://github.com/paritytech/polkadot-sdk/issues/8886\n\nPVF execution worker communication was organized into a single\nExecuteRequest struct. This should improve performance: one\nencode/decode operation instead of four. Also, no more chance of\nordering mistakes.\n\n\n\n## Integration\n\nThis is an internal refactoring of the PVF execution worker. Downstream\nprojects will not need any code changes.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-25T08:18:13Z",
          "tree_id": "3700ea0539301970f2be67d83b426fcf936cff85",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/fe26e9e34c0ac7236202f99720d8cb129d7b6818"
        },
        "date": 1750843505401,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008831157960000089,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012811112206666659,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022483903900000008,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15650775462000002,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eresav@me.com",
            "name": "Andrei Eres",
            "username": "AndreiEres"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1fcaaa4b8f43d4b31624297a4172eed73458f100",
          "message": "Add polkadot_parachain_peer_connectivity metric (#8973)\n\n# Description\n\nFixes https://github.com/paritytech/polkadot-sdk/issues/8911\n\nAdds `polkadot_parachain_peer_connectivity` histogram metric to better\nunderstand connectivity patterns.\n\n## Integration\n\nDoesn't affect downstream projects.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-25T09:07:00Z",
          "tree_id": "21f9f3b700d0d6af69dd48ec271fe9579c7eab3e",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/1fcaaa4b8f43d4b31624297a4172eed73458f100"
        },
        "date": 1750847361085,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012935210286666667,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15759433180000001,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022683372713333334,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008829489846666759,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "karol.k91@gmail.com",
            "name": "Karol Kokoszka",
            "username": "karolk91"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "cc5065dab6ab4c40d2901981481afdad8e34d4c2",
          "message": "transfer_assets benchmarking and weights for coretime chains (#8752)\n\nIntroduces implementation of `set_up_complex_asset_transfer()` to\ncorrectly benchmark weights for `transfer_assets` extrinsics on Rococo\nCoretime and Westend Coretime. Introducing also test scenarios to cover\ncommon xcm teleport use cases\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-25T10:15:30Z",
          "tree_id": "b73dcd429b1c64f19dff4df585da6daa472bf178",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/cc5065dab6ab4c40d2901981481afdad8e34d4c2"
        },
        "date": 1750851420667,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15592150124,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012989480913333335,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022483566993333336,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008897343533333421,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "oliver.tale-yazdi@parity.io",
            "name": "Oliver Tale-Yazdi",
            "username": "ggwpez"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e774263960d8cb601c3087fb9bb38715ffb401b5",
          "message": "Fix revive-fixtures build script (#8980)\n\nThe .polkavm files are not recompiled when deleting\n`target/pallet-revive-fixtures`. I assume that CI is not caching that\nfolder or the .polkavm file extension. This leads to the\n`include_bytes!` macro to not finding these files.\n\nTested it here https://github.com/polkadot-fellows/runtimes/pull/785\n\n---------\n\nSigned-off-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>",
          "timestamp": "2025-06-25T14:30:51Z",
          "tree_id": "3d61ca0ac619bf952142e25b3d372d6e52ddbfd8",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e774263960d8cb601c3087fb9bb38715ffb401b5"
        },
        "date": 1750865676093,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15695920938000008,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022382350393333333,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012963566546666668,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008912434046666749,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "olivarra1@gmail.com",
            "name": "Victor Oliva",
            "username": "voliva"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4a869b92b7d7397bfbb30bcafce103461714ec08",
          "message": "feat(revive): add contract instantiated event (#8789)\n\n# Description\n\nThis PR adds the `Instantiated` event for pallet-revive for the top\nframe. Addresses issue #8677\n\nThis might need refreshing the weights of bot `instantiate` and\n`instantiate_with_code`, as it emits a new event.\n\n## Integration\n\nNo additional work is needed to integrate this feature. The pallet will\nemit on `Instantiated` event every time `instantiate` or\n`instantiate_with_code` successfully performs an instantiation.\n\n# Checklist\n\n* [x] My PR includes a detailed description as outlined in the\n\"Description\" and its two subsections above.\n* [x] My PR follows the [labeling requirements](\n\nhttps://github.com/paritytech/polkadot-sdk/blob/master/docs/contributor/CONTRIBUTING.md#Process\n) of this project (at minimum one label for `T` required)\n* External contributors: ask maintainers to put the right label on your\nPR.\n* [x] I have made corresponding changes to the documentation (if\napplicable)\n* [x] I have added tests that prove my fix is effective or that my\nfeature works (if applicable)\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>",
          "timestamp": "2025-06-25T16:38:35Z",
          "tree_id": "0f3c48d1688322d218ac8af508e54aa115e30aa3",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4a869b92b7d7397bfbb30bcafce103461714ec08"
        },
        "date": 1750873629591,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.01254736376666667,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15554866826666675,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022337977460000005,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008616377780000087,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1728078+michalkucharczyk@users.noreply.github.com",
            "name": "Michal Kucharczyk",
            "username": "michalkucharczyk"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "caf999310df66b790c7f26b0227a51068ba441fc",
          "message": "`fatxpool`: `ChainApi` is now async (#8875)\n\n[`ChainApi`](https://github.com/paritytech/polkadot-sdk/blob/488072d245763fb059743bf32eea2f48d84054b3/substrate/client/transaction-pool/src/graph/pool.rs#L65-L66)\nis now `async_trait`,\n[`validate_transaction`](https://github.com/paritytech/polkadot-sdk/blob/488072d245763fb059743bf32eea2f48d84054b3/substrate/client/transaction-pool/src/graph/pool.rs#L78)\nand\n[`block_body`](https://github.com/paritytech/polkadot-sdk/blob/488072d245763fb059743bf32eea2f48d84054b3/substrate/client/transaction-pool/src/graph/pool.rs#L112)\nare now `async` methods. This is just cleanup - migrating from returning\n`Future` to `async` method\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-25T21:43:36Z",
          "tree_id": "9d3d2131eb7ed4b84ce7223da3c9fc2191f8ba29",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/caf999310df66b790c7f26b0227a51068ba441fc"
        },
        "date": 1750892815893,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15655430924666677,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008756781826666771,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012845137199999999,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022381901353333334,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "117115317+lrubasze@users.noreply.github.com",
            "name": "Lukasz Rubaszewski",
            "username": "lrubasze"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dbfed5a584d5f16602f0094ae2ac153fd62912be",
          "message": "Make zombienet CI great again (#8748)\n\nThis PR re-enables Zombienet CI tests.\n\n\nChanges:\n- Enable Zombienet Polkadot and Substrate tests\n- Zombienet Cumulus will be enabled separately, when being migrated to\n`zombienet-sdk`\n- Switch zombienet from `k8s` to `native` provider\n`k8s` turned out to be unstable for both `zombienet` and\n`zombienet-sdk`. Issues observed:\n  - problem with launching a pod\n- pods (and thus nodes) were not spawned at the same time (differences\nup to 120s), which affected some tests\n  - `kubectl` command failed \n  Observed many times for:\n    - kubectl cp\n    - kubectl exec\n    - kubectl logs\nIf we ever want to switch back to `k8s` we must ensure above issues no\nlonger exist.\n- Tweaks some tests to make sure they constantly pass\nAuthors of those tests are kindly asked to review the changes.\n- Some improvements and fixes `zombienet` and `zombienet-sdk` frameworks\n- Assign more beefy runners for more demanding tests\nRule of thumb: use large runner if spawned network consist of more than\n4 nodes\n- Disable some tests to let their authors to stabilize them\nCreated a dedicated `.github/zombienet-flaky-tests` file for more\nclarity\nATM there are 16 flaky tests. Their authors are kindly asked to fix them\nand re-enable.\n\n---------\n\nCo-authored-by: Javier Viola <javier@parity.io>\nCo-authored-by: Javier Viola <363911+pepoviola@users.noreply.github.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Anthony Lazam <xlzm.tech@gmail.com>",
          "timestamp": "2025-06-26T10:01:28Z",
          "tree_id": "f2cb70189cb93c0c4946240369572a0947e05f70",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/dbfed5a584d5f16602f0094ae2ac153fd62912be"
        },
        "date": 1750937224636,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.009090629126666751,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1571879249200001,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022522697613333333,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013507431739999997,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "140459108+kilavvy@users.noreply.github.com",
            "name": "kilavvy",
            "username": "kilavvy"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "56234513d1d1b3cc9fb85fcc1a9735ab9df22ef2",
          "message": "Minor Documentation and Comment Corrections (#8997)\n\n**Description:**  \nThis pull request fixes minor typos and improves clarity in code\ncomments and documentation.\n- Corrected spelling errors in `coretime_interface.rs` and `types.rs`.\n- Enhanced comment readability for better developer experience.",
          "timestamp": "2025-06-26T12:16:15Z",
          "tree_id": "c055da89195b5154118af4c81f0797e5e8a60f5a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/56234513d1d1b3cc9fb85fcc1a9735ab9df22ef2"
        },
        "date": 1750943818728,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012715611573333332,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022540390386666675,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008716171666666755,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1568521674533334,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "yrong1997@gmail.com",
            "name": "Ron",
            "username": "yrong"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3bc4d127c52f2d6570c588537d7945b24b61d61c",
          "message": "Snowbridge: Improve local and testnet setup (#8848)\n\n### Context \n\n- The Prague-Electra fork is already live on the mainnet - enables it\nfor the local setup (with feature `fast-runtime`) by default.\n - Improve Penpal Runtime to include `pallet-utility`.\n\n---------\n\nCo-authored-by: Clara van Staden <claravanstaden64@gmail.com>",
          "timestamp": "2025-06-26T12:44:22Z",
          "tree_id": "0b04a7e49f6181884cf881c7fdeb08e3c813d8f0",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/3bc4d127c52f2d6570c588537d7945b24b61d61c"
        },
        "date": 1750945709776,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012969817893333332,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02235369452,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1572581619666667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008766555626666762,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "gui.thiolliere@gmail.com",
            "name": "Guillaume Thiolliere",
            "username": "gui1117"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "18cd0b4d8ff6a2eea379a3b166fe21aec180778f",
          "message": "Enable statement store in polkadot-omni-node and polkadot-parachain (#8076)\n\nIn `polkadot-omni-node-lib`, when starting the node, when the runtime\nfor the best hash contains the runtime api: `ValidateStatement`, then we\nstart the statement store.\n\nThe statement store is an off-chain data-store for signed statements\naccessible via RPC and offchain worker.\nIt uses the runtime api to get the allowance associated to an account.\n\nThis takes effect in `polkadot-omni-node` and `polkadot-parachain` and\nany node depending on `polkadot-omni-node-lib`.\n\n</br>\n\n</br>\n\n ----\n\n### Old description:\n\nWe want to enable statement store for people chain.\n\nThis PR introduces and enables the statement store and add a new\nargument `disable_statement_store` in `polkadot-omni-node-lib`.\nThis takes effect in `polkadot-omni-node` and `polkadot-parachain` and\nany node depending on `polkadot-omni-node-lib`.\n\nThe reasoning is following other service such as `offchain_worker` the\ndefault behavior is to support it, otherwise I expect not many collator\nto explictly opt-in (but I can be wrong assuming this).\nDo system chain collator use `omni-node` or `polkadot-parachain`? we\ncould otherwise only enable it for `polkadot-parachain`. Or we could\nalso create a new binary for people chain and enable it only for this\nnew binary, and remove people chain from `polkadot-parachain`.\n\nIf the runtime doesn't support the API then it any submission will fail\nwith `Error calling into the runtime`.\n\nIt would be ideal to target the next cut-off for this issue/PR given\nthat it can take time for node operator to update their node.\n\nTo have a configurable CLI and default behavior for statement-store, I\ndid in this PR: https://github.com/paritytech/polkadot-sdk/pull/8421\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Sebastian Kunert <skunert49@gmail.com>\nCo-authored-by: Iulian Barbu <14218860+iulianbarbu@users.noreply.github.com>",
          "timestamp": "2025-06-26T14:44:56Z",
          "tree_id": "9d7792b62cc997aad62d005d4685d62689efae28",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/18cd0b4d8ff6a2eea379a3b166fe21aec180778f"
        },
        "date": 1750953291958,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022618867626666667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008997216833333424,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01301274142,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15766696851333337,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "225d1742d4b9d578588daf7fd508d00b002a0de3",
          "message": "pallet-balances: Do not create account in benchmarking (#8932)\n\nThis particular benchmark is about benchmarking the account creation, so\nwe should not create it before :)\n\n\nCloses: https://github.com/paritytech/polkadot-sdk/issues/8927\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-27T08:26:29Z",
          "tree_id": "78dc175eb3b966f16377c0ad0396f2e61dd917d1",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/225d1742d4b9d578588daf7fd508d00b002a0de3"
        },
        "date": 1751017186597,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012776867506666664,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022405672753333335,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008784483100000084,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1566559409333333,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e1026d7ee22a593cf566a99484eee02a03ecc236",
          "message": "RuntimeAllocator: Align returned pointers (#8891)\n\nRust recently switched the default alignment of u128 to 16bytes:\nhttps://blog.rust-lang.org/2024/03/30/i128-layout-update/ This broke the\nassumption of our host allocator that the biggest alignment is 8 bytes.\n\nTo fix the alignment issue, the runtime allocator now takes care of\naligned the returned pointer. We are abusing the fact that we know how\nthe host allocator is working and storing some extra data in its header.\nThis is not a perfect solution as we don't align the host side pointers,\nbut the host side is mainly allocating `u8` arrays that should be fine\nwith the `8byte` alignment. Any node side change would be a consensus\nbreaking change.\n\n\nCloses: https://github.com/paritytech/polkadot-sdk/issues/8818\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-27T10:53:44Z",
          "tree_id": "e70aa26bbd2c4f3a9858fc4b04fb7eca8c10362b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e1026d7ee22a593cf566a99484eee02a03ecc236"
        },
        "date": 1751026653361,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008805733106666767,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1569265581533333,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012894975739999998,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.0223021891,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "oliver.tale-yazdi@parity.io",
            "name": "Oliver Tale-Yazdi",
            "username": "ggwpez"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ffb2fddf5157e478e2df56536475d67c2b770b96",
          "message": "Run SemVer check also with R0 label (#8981)\n\n- **Dont skip semver check for R0 label**\n- **Rename `R0-silent` to `R0-no-crate-publish-required`**\n\n---------\n\nSigned-off-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>",
          "timestamp": "2025-06-27T12:32:13Z",
          "tree_id": "0e4663af28a4c33b98538e48d5ad0fe4957ff18f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ffb2fddf5157e478e2df56536475d67c2b770b96"
        },
        "date": 1751033295627,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008719648060000078,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1569581874866667,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02249437153333334,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01297835658,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "donal.murray@parity.io",
            "name": "Dónal Murray",
            "username": "seadanda"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4e122d496f68a820e0e13f63435b6d74fb53be0d",
          "message": "[AHM] The Asset Hub Migration on Westend (#7997)\n\nPost AHM changes for Westend Relay and Asset Hub.\n\nChanges:\n- Add Async staking pallets to Westend Relay and Asset Hub\n- XCM stuff?\n- Deploy pallet-ah-ops\n- Deprecate pallet function\n`pallet_utility::Pallet::<T>::derivative_account_id` in favour of\nfreestanding function `pallet_utility::derivative_account_id`.\n\n---------\n\nSigned-off-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>\nSigned-off-by: Iulian Barbu <iulian.barbu@parity.io>\nCo-authored-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>\nCo-authored-by: muharem <ismailov.m.h@gmail.com>\nCo-authored-by: polka.dom <polkadotdom@gmail.com>\nCo-authored-by: Ankan <ankan.anurag@gmail.com>\nCo-authored-by: Kian Paimani <5588131+kianenigma@users.noreply.github.com>\nCo-authored-by: Adrian Catangiu <adrian@parity.io>\nCo-authored-by: kianenigma <kian@parity.io>\nCo-authored-by: Ankan <10196091+Ank4n@users.noreply.github.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Karol Kokoszka <karol.k91@gmail.com>\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>\nCo-authored-by: Paolo La Camera <paolo@parity.io>\nCo-authored-by: ordian <noreply@reusable.software>\nCo-authored-by: Javier Viola <363911+pepoviola@users.noreply.github.com>\nCo-authored-by: Dmitry Markin <dmitry@markin.tech>\nCo-authored-by: Andrei Eres <eresav@me.com>\nCo-authored-by: Tsvetomir Dimitrov <tsvetomir@parity.io>\nCo-authored-by: Javier Viola <javier@parity.io>\nCo-authored-by: Alexandru Gheorghe <49718502+alexggh@users.noreply.github.com>\nCo-authored-by: cuteolaf <OliverLim818@gmail.com>\nCo-authored-by: Michal Kucharczyk <1728078+michalkucharczyk@users.noreply.github.com>\nCo-authored-by: Serban Iorga <serban@parity.io>\nCo-authored-by: PG Herveou <pgherveou@gmail.com>\nCo-authored-by: Anthony Kveder <32168055+antkve@users.noreply.github.com>\nCo-authored-by: Alexandru Vasile <60601340+lexnv@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: Alin Dima <alin@parity.io>\nCo-authored-by: Iulian Barbu <14218860+iulianbarbu@users.noreply.github.com>\nCo-authored-by: Steven <stevenlawrence13e@gmail.com>\nCo-authored-by: girazoki <gorka.irazoki@gmail.com>\nCo-authored-by: Evgeny Svirsky <e.svirsky@tut.by>\nCo-authored-by: Alexander Cyon <Sajjon@users.noreply.github.com>\nCo-authored-by: Koute <koute@users.noreply.github.com>\nCo-authored-by: Afounso Souza <drewsmpk@gmail.com>\nCo-authored-by: Alexandre R. Baldé <alexandre.balde@parity.io>\nCo-authored-by: Doordashcon <jesse.chejieh@gmail.com>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>\nCo-authored-by: Victor Oliva <olivarra1@gmail.com>\nCo-authored-by: Karol Kokoszka <karol@parity.io>",
          "timestamp": "2025-06-27T15:21:49Z",
          "tree_id": "e07b89123d6ec10848381da7ac02a652e1b8edf9",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4e122d496f68a820e0e13f63435b6d74fb53be0d"
        },
        "date": 1751041516242,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022549398519999996,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15756637281333333,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013353596586666678,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.009057846553333424,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ab81eee9c67e1be6a6bab4cad484786dc653c4db",
          "message": "contracts-fixtures: Rebuild `core` and `alloc` for MVP (#9014)\n\nWe are using the MVP target of Wasm, which means that newer language\nfeatures are disabled by default. However the build script was failing\nwith the following error:\n```\n  Caused by:\n      Unknown opcode 252\n```\n\nThis is caused by the `core` and `alloc` crate being precompiled, but\nnot for the MVP target. The pull request is fixing this by explicetly\ncompiling these crates for MVP. We are doing the same with the\n`wasm-builder`.",
          "timestamp": "2025-06-28T09:18:29Z",
          "tree_id": "e8102af9f5ebc4b5c0d0c34e62bd3950c64b802f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ab81eee9c67e1be6a6bab4cad484786dc653c4db"
        },
        "date": 1751105817961,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15823042208000002,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.009041445280000074,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012930564353333339,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022786463213333344,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "220b5aa6446b3fc0e5accefed96abfc7d45f9a18",
          "message": "Fix prestate create traces (#8935)\n\nFix an issue on the prestate tracer, for CREATE trace.\nThe tracer was not reporting the created properly in the created trace.\n\nAlso added tests in evm-test-suite\nhttps://github.com/paritytech/evm-test-suite/pull/97\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>\nCo-authored-by: xermicus <cyrill@parity.io>",
          "timestamp": "2025-06-29T20:51:48Z",
          "tree_id": "1e6f2d483f0f3e3fece691fdea354a7b89de0942",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/220b5aa6446b3fc0e5accefed96abfc7d45f9a18"
        },
        "date": 1751239737184,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008719403746666741,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012971452793333336,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15744494044666665,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022641356813333333,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0511431bf95ae81b284887100444bd1c560188e0",
          "message": "Add address revive runtime API (#8851)\n\nThis gives an easy way for substrate user to convert an Account ID into\nthe mapped H160 address, by calling a new `address` runtime API\nfunction.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-30T04:07:31Z",
          "tree_id": "6edc783272386590f5912f28df95c8afc764d3e5",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/0511431bf95ae81b284887100444bd1c560188e0"
        },
        "date": 1751260154489,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.1568078115933334,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008945446780000086,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012788481366666674,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02246104926,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "44604217+tmpolaczyk@users.noreply.github.com",
            "name": "tmpolaczyk",
            "username": "tmpolaczyk"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "d30a5fbbd973035893a1a25e1bcf9d9fb2c24d53",
          "message": "Fix pallet_migrations benchmark when FailedMigrationHandler emits events (#8694)\n\nWhen FailedMigrationHandler emits events, the `UpgradeFailed` event is\nnot the last one, so `assert_last_event` fails. Fixed by checking that\nthe `UpgradeFailed` event is emitted, even if it is not the last one.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-06-30T07:38:13Z",
          "tree_id": "55c79a51c2be86abbf231a1611a4ef1332748aed",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d30a5fbbd973035893a1a25e1bcf9d9fb2c24d53"
        },
        "date": 1751273268696,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15668499307333333,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008896860493333426,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012967118953333332,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02233457990666667,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alex.theissen@me.com",
            "name": "Alexander Theißen",
            "username": "athei"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3515d4af2993ada853fc8a5d11b2474241545840",
          "message": "revive: Precompiles should return dummy code when queried (#9001)\n\nFixes https://github.com/paritytech/contract-issues/issues/111\n\nThis fixes both the RPC and the opcodes `EXTCODESIZE` and `EXTCODEHASH`.\n\nAlso removed the disabled host function `is_contract`. Contracts do use\n`EXTCODESIZE` to determine if something is a contract exclusively.\n\nNeed to add some differential tests to our test suite to make sure that\nthe RPC matches geth behaviour:\n\nOn kitchensink:\n\n```shell\n# primitive precompiles should not return error but 0x\n$ cast code 0x0000000000000000000000000000000000000001\n0x\n\n# this is the erc pre-compile\n$ cast code 0x0000000000000000000000000000000000010000\n0x60006000fd\n```\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-30T08:40:16Z",
          "tree_id": "4e458f071d2f268d819085a75a9426821bf63be3",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/3515d4af2993ada853fc8a5d11b2474241545840"
        },
        "date": 1751277879257,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.1565591969200001,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012972819980000001,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022510557653333336,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008685058793333401,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "Sajjon@users.noreply.github.com",
            "name": "Alexander Cyon",
            "username": "Sajjon"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "0447d26148ef5b97f40fc01bce2d5156ab335eca",
          "message": "Always send full parent header, not only hash, part of collation response (#8939)\n\nImplementation of https://github.com/paritytech/polkadot-sdk/issues/7733\n\n# Description\nInstead of **conditionally** sending the full parent header in the\ncollation response we now **always** send it (never the hash of it).\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-30T12:55:05Z",
          "tree_id": "5dd8260c081bcdeac6c260c80aea6e5d93f81d63",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/0447d26148ef5b97f40fc01bce2d5156ab335eca"
        },
        "date": 1751294301972,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012779273186666669,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008874011386666748,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022389072653333324,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15647874782666668,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "paolo@parity.io",
            "name": "Paolo La Camera",
            "username": "sigurpol"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "75deaab1061bf740a3c3f172668922b0a5c54344",
          "message": "EPMB/unsigned: fixed multi-page winner computation (#8987)\n\n## The issue \n\nIn `FullSupportsOfMiner`, we initially considered `MaxWinnersPerPage` as\nthe overall maximum number of winners across pages. However, it should\nbe calculated as `Pages * MaxWinnersPerPage` to prevent the computed\nsolution from having a low overall total of winners, which could result\nin a `WrongWinnerCount` error.\n\nThis bug was identified in\n\n[#staking-miner-1074](https://github.com/paritytech/polkadot-staking-miner/issues/1074)\nwhile testing the staking miner in a setup with aggressive trimming to\nevaluate backer bounding.\n\n## How to test \n\nA test has been added to replicate this scenario:\n\nTest configuration:\n- `Pages=2`\n- `MaxWinnersPerPage=2`\n- `desired_targets=3` (3 or 4 doesn't matter here, the key point is that\nis strictly > `MaxWinnersPerPage`)\n- `MaxBackersPerWinner=1`\n\nBefore the fix in this PR: \n- `FullSupportsOfMiner` could only hold 2 winners in total (bounded by\n`MaxWinnersPerPage`)\n- But the mining algorithm needed to hold 3 winners across multiple\npages\n- This would cause a `WrongWinnerCount` error during verification\n\nWith the fix:\n- `FullSupportsOfMiner` can now hold `Pages * MaxWinnersPerPage = 2 * 2\n= 4` winners\n- The test passes with 3 winners across 2 pages (proving it can hold\nmore than `MaxWinnersPerPage=2`)\n- No `WrongWinnerCount` errors occur\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-06-30T14:07:56Z",
          "tree_id": "c8956a48b2e8cb156ae38ceb128b344e27666883",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/75deaab1061bf740a3c3f172668922b0a5c54344"
        },
        "date": 1751316981873,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013129577186666663,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022502602880000003,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15756941038666672,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008852072880000068,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "serban@parity.io",
            "name": "Serban Iorga",
            "username": "serban300"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a51c31246a789078f6109428974a31e2af55e6b2",
          "message": "XCMP and DMP improvements (#8860)\n\nRelated to https://github.com/paritytech/polkadot-sdk/issues/489\n\nThis PR changes the parachain receiving logic for XCMP and DMP by adding\nsome offchain processing before forwarding the messages to the parachain\n`set_validation_data` inherent. This enables us to relax the advancement\nrule.",
          "timestamp": "2025-07-01T07:19:38Z",
          "tree_id": "cbeb4c88307b11c741d5dcd44a9351ff7594f5cf",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/a51c31246a789078f6109428974a31e2af55e6b2"
        },
        "date": 1751358120240,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022440178646666666,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012883205493333327,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1564807716400001,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008786516246666737,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "diego2737@gmail.com",
            "name": "Diego",
            "username": "dimartiro"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "20510c488198e8ee72b241fd2d0f6d1784982734",
          "message": "chore: Bump bounded-collections dep (#9004)\n\n# Description\n\nBump bounded-collections dep from `0.2.3` to `0.3.2` based on the latest\n[release](https://crates.io/crates/bounded-collections/0.3.2)\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-07-01T08:03:09Z",
          "tree_id": "44744a795008b71ae5174e1747ef796272b08505",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/20510c488198e8ee72b241fd2d0f6d1784982734"
        },
        "date": 1751361566186,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15745942507333335,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022501387546666658,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008998027920000073,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013224846533333336,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "10196091+Ank4n@users.noreply.github.com",
            "name": "Ankan",
            "username": "Ank4n"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8546b7ab14b469cdc66bfb596f8dd899aced26b7",
          "message": "[Staking] [AHM] Fixes insufficient slashing of nominators (and some other small issues). (#8937)\n\nChanges to pallet-staking-async\n\n## Removed\n- Config constant `MaxDisabledValidators`: This constant was removed\nsince validator disabling logic has been moved to pallet-session, making\nit redundant in staking-async.\n- Storage DoubleMap `NominatorSlashInEra`: This was used to track\nper-era maximum slashes for nominators. It’s no longer required — we now\nonly track the highest slash per validator per era.\n- Call `withdraw_overstake`: This was a temporary extrinsic meant to fix\noverstake issues, but with fungible migration of staking funds, this is\nno longer possible and the extrinsic is obsolete.\n\n## Changed\n- Nominator slashing logic: The logic now aggregates slashes from\ndistinct offending validators nominated by a nominator within the same\nera. For repeated offences by the same validator, only the highest slash\nfraction is applied. Previously, the pallet applied only the highest\nslash across all validators, regardless of how many were slashed.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-01T14:17:55Z",
          "tree_id": "eab2686cd5968c2ae624a59303bc754c3bebe353",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/8546b7ab14b469cdc66bfb596f8dd899aced26b7"
        },
        "date": 1751386118835,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008754445060000086,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15752768726,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012868596473333334,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022494970073333332,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1431590+nkpar@users.noreply.github.com",
            "name": "Nikolai Kozlov",
            "username": "nkpar"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "6824a6782354e274cf308be314f142551c5457ab",
          "message": "Add optional auto-rebag within on-idle (#8684)\n\nImplemented an `on_idle` hook for automatic rebagging of accounts,\nenabling incremental correction of account positions within the\nbags-list during the idle phase of block execution. Introduced new\nstorages and configurable constants to support this functionality, along\nwith improvements in logging and internal helpers.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Ankan <10196091+Ank4n@users.noreply.github.com>\nCo-authored-by: Kian Paimani <5588131+kianenigma@users.noreply.github.com>",
          "timestamp": "2025-07-01T17:34:56Z",
          "tree_id": "d7d7c3d9377a77baccd6e32ad81ac989e50d8655",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/6824a6782354e274cf308be314f142551c5457ab"
        },
        "date": 1751394904906,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022310690713333338,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15753637962666667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008708540660000097,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012883720000000001,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "tsvetomir@parity.io",
            "name": "Tsvetomir Dimitrov",
            "username": "tdimitrov"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "6e3f91210275d8dc1ef98e1911cda870573d31f4",
          "message": "Cleanup and improvements for `ControlledValidatorIndices` (#8896)\n\nImprovements for `ControlledValidatorIndices` from\nhttps://github.com/paritytech/polkadot-sdk/pull/8837:\n      - remove unneeded dependency\n- more readable implementations for `get` and\n`find_controlled_validator_indices`",
          "timestamp": "2025-07-02T09:01:41Z",
          "tree_id": "2e2ecc850e21e724983c6838b3f6ea2ca55be082",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/6e3f91210275d8dc1ef98e1911cda870573d31f4"
        },
        "date": 1751450798245,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008854421680000092,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022787835886666667,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15802248858666668,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013314871193333334,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "178801527+raymondkfcheung@users.noreply.github.com",
            "name": "Raymond Cheung",
            "username": "raymondkfcheung"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b7a48fcfdcc38c4ac2799275d02991759ab18ab9",
          "message": "Align parameters for `EventEmitter::emit_sent_event` (#9057)\n\nCorrected markdown and indentation for the `emit_sent_event` function\nparameters in the `EventEmitter` trait documentation for better\nreadability.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-02T10:06:47Z",
          "tree_id": "f96377f6f5877c2360da59fe5e3694f7324c55ed",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/b7a48fcfdcc38c4ac2799275d02991759ab18ab9"
        },
        "date": 1751455088959,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.009232008106666748,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013349074873333332,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02267321726,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15795198327333335,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "4211399+ordian@users.noreply.github.com",
            "name": "ordian",
            "username": "ordian"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "87a8fb03886485c6e0f5125ddfc7211ca9947803",
          "message": "dispute-coordinator: handle race with offchain disabling (#9050)\n\nFixes a potential race with off-chain disabling when we learned about\ndisablement after importing a dispute from that validator.\n\nI think there's no need to handle startup to do deactivation. This will\nbe only relevant for when a node upgrades to the release with a fix and\nwriting a migration for that seems like an overkill since this scenario\nis very low probability.",
          "timestamp": "2025-07-02T11:38:00Z",
          "tree_id": "80d69b0fb439b35bd22fb88d94e7e7bfa85f0efa",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/87a8fb03886485c6e0f5125ddfc7211ca9947803"
        },
        "date": 1751460083908,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008695201073333422,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012972722446666664,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02237010529333334,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1566199441933334,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "Sajjon@users.noreply.github.com",
            "name": "Alexander Cyon",
            "username": "Sajjon"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ee6d22b94d9a93ac5989d4cce2f20a604b86214b",
          "message": "net/discovery: File persistence for `AddrCache` (#8839)\n\nImplementation of https://github.com/paritytech/polkadot-sdk/issues/8758\n\n# Description\nAuthority Discovery crate has been changed so that the `AddrCache` is\npersisted to `persisted_cache_file_path` a `json` file in\n`net_config_path` folder controlled by `NetworkConfiguration`.\n\n`AddrCache` is JSON serialized (`serde_json::to_pretty_string`) and\npersisted to file:\n- periodically (every 10 minutes)\n- on shutdown\n\nFurthermore, this persisted `AddrCache` on file will be read from upon\nstart of the worker - if it does not exist, or we failed to deserialize\nit a new empty cache is used.\n\n`AddrCache` is made Serialize/Deserialize thanks to `PeerId` and\n`Multiaddr` being made Serialize/Deserialize.\n\n# Implementation\nThe worker use a spawner which is used in the [run loop of the worker,\nwhere at an interval we try to persist the\n[AddrCache](https://github.com/paritytech/polkadot-sdk/blob/cyon/persist_peers_cache/substrate/client/authority-discovery/src/worker.rs#L361-L372).\nWe won't persist the `AddrCache` if `persisted_cache_file_path:\nOption<PathBuf>` is `None` - which it would be if\n[`NetworkConfiguration`\n`net_config_path`](https://github.com/paritytech/polkadot-sdk/blob/master/substrate/client/network/src/config.rs#L591)\nis `None`. We spawn a new task each time the `interval` \"ticks\" - once\nevery 10 minutes - and it uses `fs::write` (there is also a\n`tokio::fs::write` which requires the `fs` feature flag of `tokio` which\nis not activated and I chose to not use it). If the worker shutsdown we\nwill try to persist without using the `spawner`.\n\n# Changes\n- New crate dependency: `serde_with` for `SerializeDisplay` and\n`DeserialzeFromStr` macros\n- `WorkerConfig` in authority-discovery crate has a new field\n`persisted_cache_directory : Option<PathBuf>`\n- `Worker` in authority-discovery crate constructor now takes a new\nparameter, `spawner: Arc<dyn SpawnNamed>`\n\n## Tests\n- [authority-discovery\ntests](substrate/client/authority-discovery/src/tests.rs) tests are\nchanged to use tokio runtime, `#[tokio::test]` and we pass a test worker\nconfig with a `tempdir` for `persisted_cache_directory `\n\n# `net_config_path`\nHere are the `net_config_path` (from `NetworkConfiguration`) which is\nthe folder used by this PR to save a serialized `AddrCache` in:\n\n## `dev`\n```sh\ncargo build --release && ./target/release/polkadot --dev\n```\n\nshows =>\n\n`/var/folders/63/fs7x_3h16svftdz4g9bjk13h0000gn/T/substratey5QShJ/chains/rococo_dev/network/authority_discovery_addr_cache.json'`\n\n## `kusama`\n```sh\ncargo build --release && ./target/release/polkadot --chain kusama --validator\n```\n\nshows => `~/Library/Application\nSupport/polkadot/chains/ksmcc3/network/authority_discovery_addr_cache.json`\n\n> [!CAUTION]\n> The node shutdown automatically with scary error. \n> ```\n> Essential task `overseer` failed. Shutting down service.\n> TCP listener terminated with error error=Custom { kind: Other, error:\n\"A Tokio 1.x context was found, but it is being shutdown.\" }\n> Installed transports terminated, ignore if the node is stopping\n> Litep2p backend terminated`\n>Error:\n>   0: Other: Essential task failed.\n> ```\n> This is maybe expected/correct, but just wanted to flag it, expand\n`output` below to see log\n> \n> Or did I break anything?\n\n<details><summary>Full Log with scary error (expand me 👈)</summary>\nThe log\n\n```sh\n$ ./target/release/polkadot --chain kusama --validator\n2025-06-19 14:34:35 ----------------------------\n2025-06-19 14:34:35 This chain is not in any way\n2025-06-19 14:34:35       endorsed by the\n2025-06-19 14:34:35      KUSAMA FOUNDATION\n2025-06-19 14:34:35 ----------------------------\n2025-06-19 14:34:35 Parity Polkadot\n2025-06-19 14:34:35 ✌️  version 1.18.5-e6b86b54d31\n2025-06-19 14:34:35 ❤️  by Parity Technologies <admin@parity.io>, 2017-2025\n2025-06-19 14:34:35 📋 Chain specification: Kusama\n2025-06-19 14:34:35 🏷  Node name: glamorous-game-6626\n2025-06-19 14:34:35 👤 Role: AUTHORITY\n2025-06-19 14:34:35 💾 Database: RocksDb at /Users/alexandercyon/Library/Application Support/polkadot/chains/ksmcc3/db/full\n2025-06-19 14:34:39 Creating transaction pool txpool_type=SingleState ready=Limit { count: 8192, total_bytes: 20971520 } future=Limit { count: 819, total_bytes: 2097152 }\n2025-06-19 14:34:39 🚀 Using prepare-worker binary at: \"/Users/alexandercyon/Developer/Rust/polkadot-sdk/target/release/polkadot-prepare-worker\"\n2025-06-19 14:34:39 🚀 Using execute-worker binary at: \"/Users/alexandercyon/Developer/Rust/polkadot-sdk/target/release/polkadot-execute-worker\"\n2025-06-19 14:34:39 Local node identity is: 12D3KooWPVh77R44wZwySBys262Jh4BSbpMFxtvQNmi1EpdcwDDW\n2025-06-19 14:34:39 Running litep2p network backend\n2025-06-19 14:34:40 💻 Operating system: macos\n2025-06-19 14:34:40 💻 CPU architecture: aarch64\n2025-06-19 14:34:40 📦 Highest known block at #1294645\n2025-06-19 14:34:40 〽️ Prometheus exporter started at 127.0.0.1:9615\n2025-06-19 14:34:40 Running JSON-RPC server: addr=127.0.0.1:9944,[::1]:9944\n2025-06-19 14:34:40 🏁 CPU single core score: 1.35 GiBs, parallelism score: 1.44 GiBs with expected cores: 8\n2025-06-19 14:34:40 🏁 Memory score: 63.75 GiBs\n2025-06-19 14:34:40 🏁 Disk score (seq. writes): 2.92 GiBs\n2025-06-19 14:34:40 🏁 Disk score (rand. writes): 727.56 MiBs\n2025-06-19 14:34:40 CYON: 🔮 Good, path set to: /Users/alexandercyon/Library/Application Support/polkadot/chains/ksmcc3/network/authority_discovery_addr_cache.json\n2025-06-19 14:34:40 🚨 Your system cannot securely run a validator.\nRunning validation of malicious PVF code has a higher risk of compromising this machine.\nSecure mode is enabled only for Linux\nand a full secure mode is enabled only for Linux x86-64.\nYou can ignore this error with the `--insecure-validator-i-know-what-i-do` command line argument if you understand and accept the risks of running insecurely. With this flag, security features are enabled on a best-effort basis, but not mandatory.\nMore information: https://docs.polkadot.com/infrastructure/running-a-validator/operational-tasks/general-management/#secure-your-validator\n2025-06-19 14:34:40 Successfully persisted AddrCache on disk\n2025-06-19 14:34:40 subsystem exited with error subsystem=\"candidate-validation\" err=FromOrigin { origin: \"candidate-validation\", source: Context(\"could not enable Secure Validator Mode for non-Linux; check logs\") }\n2025-06-19 14:34:40 Starting workers\n2025-06-19 14:34:40 Starting approval distribution workers\n2025-06-19 14:34:40 👶 Starting BABE Authorship worker\n2025-06-19 14:34:40 Starting approval voting workers\n2025-06-19 14:34:40 Starting main subsystem loop\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"candidate-validation\"\n2025-06-19 14:34:40 Starting with an empty approval vote DB.\n2025-06-19 14:34:40 subsystem finished unexpectedly subsystem=Ok(())\n2025-06-19 14:34:40 🥩 BEEFY gadget waiting for BEEFY pallet to become available...\n2025-06-19 14:34:40 Received `Conclude` signal, exiting\n2025-06-19 14:34:40 Conclude\n2025-06-19 14:34:40 received `Conclude` signal, exiting\n2025-06-19 14:34:40 received `Conclude` signal, exiting\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"availability-recovery\"\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"bitfield-distribution\"\n2025-06-19 14:34:40 Approval distribution worker 3, exiting because of shutdown\n2025-06-19 14:34:40 Approval distribution worker 2, exiting because of shutdown\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"dispute-distribution\"\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"chain-selection\"\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"pvf-checker\"\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"availability-store\"\n2025-06-19 14:34:40 Approval distribution worker 1, exiting because of shutdown\n2025-06-19 14:34:40 Approval distribution worker 0, exiting because of shutdown\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"approval-voting\"\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"approval-distribution\"\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"chain-api\"\n2025-06-19 14:34:40 Approval distribution stream finished, most likely shutting down\n2025-06-19 14:34:40 Approval distribution stream finished, most likely shutting down\n2025-06-19 14:34:40 Approval distribution stream finished, most likely shutting down\n2025-06-19 14:34:40 Approval distribution stream finished, most likely shutting down\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"provisioner\"\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"availability-distribution\"\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"runtime-api\"\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"candidate-backing\"\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"collation-generation\"\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"gossip-support\"\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"approval-voting-parallel\"\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"bitfield-signing\"\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"collator-protocol\"\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"statement-distribution\"\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"network-bridge-tx\"\n2025-06-19 14:34:40 Terminating due to subsystem exit subsystem=\"network-bridge-rx\"\n2025-06-19 14:34:41 subsystem exited with error subsystem=\"prospective-parachains\" err=FromOrigin { origin: \"prospective-parachains\", source: SubsystemReceive(Generated(Context(\"Signal channel is terminated and empty.\"))) }\n2025-06-19 14:34:41 subsystem exited with error subsystem=\"dispute-coordinator\" err=FromOrigin { origin: \"dispute-coordinator\", source: SubsystemReceive(Generated(Context(\"Signal channel is terminated and empty.\"))) }\n2025-06-19 14:34:41 Essential task `overseer` failed. Shutting down service.\n2025-06-19 14:34:41 TCP listener terminated with error error=Custom { kind: Other, error: \"A Tokio 1.x context was found, but it is being shutdown.\" }\n2025-06-19 14:34:41 Installed transports terminated, ignore if the node is stopping\n2025-06-19 14:34:41 Litep2p backend terminated\nError:\n   0: Other: Essential task failed.\n\nBacktrace omitted. Run with RUST_BACKTRACE=1 environment variable to display it.\nRun with RUST_BACKTRACE=full to include source snippets.\n```\n\n🤔\n\n</details>\n\n## `kusama -d /my/custom/path`\n```sh\ncargo build --release && ./target/release/polkadot --chain kusama --validator --unsafe-force-node-key-generation -d /my/custom/path\n```\nshows => `./my/custom/path/chains/ksmcc3/network/` for `net_config_path`\n\n## `test`\n\nI've configured a `WorkerConfig` with a `tempfile` for all tests. To my\nsurprise I had to call `fs::create_dir_all` in order for the tempdir to\nactually be created.\n\n---------\n\nCo-authored-by: Alexandru Vasile <60601340+lexnv@users.noreply.github.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: alvicsam <alvicsam@gmail.com>",
          "timestamp": "2025-07-02T12:37:19Z",
          "tree_id": "41d919f06cd54e8f7f16d84be0ad77d08f3b8ea3",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ee6d22b94d9a93ac5989d4cce2f20a604b86214b"
        },
        "date": 1751463578849,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.01320562552666667,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15648658938666674,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02249003726666667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.009256610113333417,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "5588131+kianenigma@users.noreply.github.com",
            "name": "Kian Paimani",
            "username": "kianenigma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1bb16561d96991808cfe56b783af3cb6ea958a82",
          "message": "add try-state check for staking roles -- staker cannot be nominator a… (#9034)\n\nTiny follow-up to\nhttps://github.com/paritytech/polkadot-sdk/pull/8701/files\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-02T14:56:51Z",
          "tree_id": "5fcce81c444c7aaf9c89e16a555d94498ab08b86",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/1bb16561d96991808cfe56b783af3cb6ea958a82"
        },
        "date": 1751472369975,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02246464290666667,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013043266400000001,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.009088951566666727,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15694969678,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "13c89a63ced08a8a53248beda238b8ddd02b999d",
          "message": "`sp-tracing`: Remove `test-utils` feature (#9063)\n\nThe crate is already exposing testing related features by default, so\nthere is no real need to hide the rest behind some feature. Also because\nof feature unification, the feature is enabled always in the workspace.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-02T22:21:51Z",
          "tree_id": "ee36d6b238db7ed1ae04ae802ce20b18c138375a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/13c89a63ced08a8a53248beda238b8ddd02b999d"
        },
        "date": 1751498787004,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013097040586666664,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022605064733333333,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00900092862666674,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1592753601666667,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eresav@me.com",
            "name": "Andrei Eres",
            "username": "AndreiEres"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "180fcce69fbddfa1bde9830362d8026340b4b750",
          "message": "Add extra information to the harmless error logs during validate_transaction (#9047)\n\n# Description\n\nFixes https://github.com/paritytech/polkadot-sdk/issues/5936\n\nSince we are still receiving reports about this error, I suggest adding\nan extra line to prevent further questions.\n\n---------\n\nCo-authored-by: Alexander Samusev <41779041+alvicsam@users.noreply.github.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>",
          "timestamp": "2025-07-03T08:04:56Z",
          "tree_id": "96761998cffcd729b6d55e08006d78737aab6742",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/180fcce69fbddfa1bde9830362d8026340b4b750"
        },
        "date": 1751534830832,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022554517359999998,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.009022524840000082,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012873082906666661,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1588428403533334,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eresav@me.com",
            "name": "Andrei Eres",
            "username": "AndreiEres"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "83b0409093f811acb412b07ac7219b7ad1a514ff",
          "message": "[subsystem-bench] Add Dispute Coordinator subsystem benchmark (#8828)\n\nFixes https://github.com/paritytech/polkadot-sdk/issues/8811\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-03T12:22:23Z",
          "tree_id": "7dedca9f4f5317f038bb7713852df1f21eeee806",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/83b0409093f811acb412b07ac7219b7ad1a514ff"
        },
        "date": 1751549359728,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15618771756666677,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022362892319999994,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013084496986666668,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00906439882000009,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "egor@parity.io",
            "name": "Egor_P",
            "username": "EgorPopelyaev"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3bd01b9c89dbef0f57a3c0fb7f600fbb5befff65",
          "message": "[Release|CI/CD] Fix syncing in the release flow (#9092)\n\nThis PR adds a fix for the release pipelines. The sync flow needs a\nsecrete to be passed when it is called from another flow and syncing\nbetween release org and the main repo is needed.\nMissing secrets were added to the appropriate flows.",
          "timestamp": "2025-07-03T15:06:37Z",
          "tree_id": "806f5adc03322aa929b1b29440cb9212f69c9fe8",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/3bd01b9c89dbef0f57a3c0fb7f600fbb5befff65"
        },
        "date": 1751559304838,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013347030246666662,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022675257413333334,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00914808269333342,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15849658530000008,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "10196091+Ank4n@users.noreply.github.com",
            "name": "Ankan",
            "username": "Ank4n"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f1ba2a1c7206c70ad66168859c90ab4e4327aab6",
          "message": "Optimize buffered offence storage and prevent unbounded growth in staking-async ah-client pallet (#9049)\n\n## 🤔 Why\nThis addresses potential memory issues and improves efficiency of\noffence handling during buffered operating mode (see\nhttps://github.com/paritytech-secops/srlabs_findings/issues/525)\n\n\n## 🔑 Key changes\n\n- Prevents duplicate offences for the same offender in the same session\nby keeping only the highest slash fraction\n- Introduces `BufferedOffence` struct with optional reporter and slash\nfraction fields\n- Restructures buffered offences storage from `Vec<(SessionIndex,\nVec<Offence>)>` to nested `BTreeMap<SessionIndex, BTreeMap<AccountId,\nBufferedOffence>>`\n- Adds `MaxOffenceBatchSize` configuration parameter for batching\ncontrol\n- Processes offences in batches with configurable size limits, sending\nonly first session's offences per block\n- Implements proper benchmarking infrastructure for\n`process_buffered_offences` function\n- Adds WeightInfo trait with benchmarked weights for batch processing in\n`on_initialize` hook\n\n## ✍️ Co-authors\n@Ank4n \n@sigurpol\n\n---------\n\nCo-authored-by: Paolo La Camera <paolo@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-04T09:02:33Z",
          "tree_id": "410487862394418dd87119db2954a36e4de0c43c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f1ba2a1c7206c70ad66168859c90ab4e4327aab6"
        },
        "date": 1751623910280,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.009127081746666753,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022431811193333328,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013302316553333336,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15677837248000004,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "oliver.tale-yazdi@parity.io",
            "name": "Oliver Tale-Yazdi",
            "username": "ggwpez"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "22714211e4f558abbabae28fc2e8f2c971143638",
          "message": "[AHM] Derive DecodeWithMemTracking and pub fields (#9067)\n\n- Derive `DecodeWithMemTracking` on structs\n- Make some fields public\n\n---------\n\nSigned-off-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>",
          "timestamp": "2025-07-04T10:36:12Z",
          "tree_id": "0dd0655d92d837e407ee908f523b783ecccc626a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/22714211e4f558abbabae28fc2e8f2c971143638"
        },
        "date": 1751629812606,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02273290912666667,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013155547026666665,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1576928561066667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.009164909020000094,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "5588131+kianenigma@users.noreply.github.com",
            "name": "Kian Paimani",
            "username": "kianenigma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "252649fc0105efc8b32b2e1a3649bd6d09f8bd53",
          "message": "add benchmark for prune-era (#9056)\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-04T18:25:54Z",
          "tree_id": "c4480f0f14cd79f70f4a2733fab6a6d0c4c81f6b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/252649fc0105efc8b32b2e1a3649bd6d09f8bd53"
        },
        "date": 1751657618067,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013117879700000001,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15646837286000004,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.009025574800000088,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022500955433333334,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "james@jsdw.me",
            "name": "James Wilson",
            "username": "jsdw"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "771c9988e2a636a150d97c10e3122af8068d1687",
          "message": "Bump CI to Rustc 1.88 to support 2024 edition crates (#8592)\n\nAs one example, this allows us to use the latest version of Subxt: 0.42.\nAlso if-let chains :)\n\nMain changes:\n- Update CI image\n- Remove `forklift` from Build step in\n`check-revive-stable-uapi-polkavm`; it seemed to [cause an\nerror](https://github.com/paritytech/polkadot-sdk/actions/runs/16004536662/job/45148002314?pr=8592).\nPerhaps we can open an issue for this to fix/try again after this\nmerges.\n- Bump `polkavm` deps to 0.26 to avoid [this\nerror](https://github.com/paritytech/polkadot-sdk/actions/runs/16004991577/job/45150325849?pr=8592#step:5:1967)\n(thanks @koute!)\n- Add `result_large_err` clippy to avoid a bunch of clippy warnings\nabout a 176 byte error (again, we could fix this later more properly).\n- Clippy fixes (mainly inlining args into `format!`s where possible),\nremove one `#[no_mangle]` on a `#[panic_hook]` and a few other misc\nautomatic fixes.\n- `#[allow(clippy::useless_conversion)]` in frame macro to avoid the\ngenerated `.map(Into::into).map_err(Into::into)` code causing an issue\nwhen not necessary (it is sometimes; depends on the return type in\npallet calls)\n- UI test updates\n\nAs a side note, I haven't added a `prdoc` since I'm not making any\nbreaking changes (despite touching a bunch of pallets), just clippy/fmt\ntype things. Please comment if this isn't ok!\n\nAlso, thankyou @bkchr for the wasmtime update PR which fixed a blocker\nhere!\n\n---------\n\nCo-authored-by: Evgeny Snitko <evgeny@parity.io>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-07-04T21:54:27Z",
          "tree_id": "bbce6a530538cfc5d3328f5239b16d133890b86d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/771c9988e2a636a150d97c10e3122af8068d1687"
        },
        "date": 1751670272237,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.01307768921333334,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15710061136,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007312768793333329,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02232148393333334,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "14218860+iulianbarbu@users.noreply.github.com",
            "name": "Iulian Barbu",
            "username": "iulianbarbu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "436b4935b52562f79a83b6ecadeac7dcbc1c2367",
          "message": "`polkadot-omni-node`: pass timestamp inherent data for block import (#9102)\n\n# Description\n\nThis should allow aura runtimes to check timestamp inherent data to\nsync/import blocks that include timestamp inherent data.\n\nCloses #8907 \n\n## Integration\n\nRuntime developers can check timestamp inherent data while using\n`polkadot-omni-node-lib`/`polkadot-omni-node`/`polkadot-parachain`\nbinaries. This change is backwards compatible and doesn't require\nruntimes to check the timestamp inherent, but they are able to do it now\nif needed.\n\n## Review Notes\n\nN/A\n\n---------\n\nSigned-off-by: Iulian Barbu <iulian.barbu@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-06T09:32:11Z",
          "tree_id": "239ba865d190c48c06af7d1fa35ceb411cc31cea",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/436b4935b52562f79a83b6ecadeac7dcbc1c2367"
        },
        "date": 1751798514499,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022456143459999994,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15748394326,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007568045999999965,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012824373013333336,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "cb12563ae4e532876c29b67be9a7f5d06fdc9fc3",
          "message": "Replace `assert_para_throughput` with `assert_finalized_para_throughput` (#9117)\n\nThere is no need to have two functions which are essentially doing the\nsame. It is also better to oberserve the finalized blocks, which also\nsimplifies the code. So, this pull request is replacing the\n`assert_para_throughput` with `assert_finalized_para_throughput`. It\nalso replaces any usage of `assert_finalized_para_throughput` with\n`assert_para_throughput`.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-08T16:04:23Z",
          "tree_id": "faed545176a9de8b004b29e5ee7e4b5c2ccecef6",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/cb12563ae4e532876c29b67be9a7f5d06fdc9fc3"
        },
        "date": 1751994949584,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007551906233333301,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1578040388266667,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02251095306666667,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013107952380000003,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "88fc41c9cf5e46277b7cab53a72c650b75377d25",
          "message": "make 0002-parachains-disputes a bit more robust (#9074)\n\nThere is inherently a race between the time we snapshot\nfinality_lag/disputes_finality_lag metrics and if the dispute/approvals\nfinished, so sometimes the test was failing because it was reporting 1\nwhich is in no way a problem, so let's make it a bit more robust by\nsimply waiting more time to reach 0.\n\nFixes: https://github.com/paritytech/polkadot-sdk/issues/8941.\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>",
          "timestamp": "2025-07-08T16:10:51Z",
          "tree_id": "8a90317b0febd3a60f76b56d7a854edcf7a4085d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/88fc41c9cf5e46277b7cab53a72c650b75377d25"
        },
        "date": 1751997037396,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022414165033333332,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013233312719999996,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.0076977881466666785,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15830298048000013,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "franciscoaguirreperez@gmail.com",
            "name": "Francisco Aguirre",
            "username": "franciscoaguirre"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4d5e95217831fb75942d8153a22f6864858c1d71",
          "message": "XCM precompile: don't support older xcm versions (#9126)\n\nThe latest XCM version is 5. A lot of parachains are still running V3 or\nV4 which is why we haven't removed them, but the XCM precompile is new\nand should only have to deal with versions 5 and onwards. No need to\nkeep dragging 3 and 4 in contracts.",
          "timestamp": "2025-07-08T17:27:43Z",
          "tree_id": "2944a79e52968a0f54da0a246a07867b8f95dffe",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4d5e95217831fb75942d8153a22f6864858c1d71"
        },
        "date": 1751999965530,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013111665873333329,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007252886413333313,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022469487113333332,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1579632946666667,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "9b7c20a2a187e57433c055592609e35af0258bbc",
          "message": "Fix seal_call benchmark (#9112)\n\nFix seal_call benchmark, ensure that the benchmarked block actually\nsucceed\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-08T18:30:43Z",
          "tree_id": "a5d64f5c7d1bffccf857ee5ff83a6f6b305f5ee0",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/9b7c20a2a187e57433c055592609e35af0258bbc"
        },
        "date": 1752004356733,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013040855453333328,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007429897726666626,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15757371894000005,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022402051926666666,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "franciscoaguirreperez@gmail.com",
            "name": "Francisco Aguirre",
            "username": "franciscoaguirre"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ba2a8dc536db30397c332a2aa2cd9f9863027093",
          "message": "XCM precompile: small cleanup (#9135)\n\nFollow-up to\nhttps://github.com/paritytech/polkadot-sdk/pull/9125#discussion_r2192896809",
          "timestamp": "2025-07-08T19:47:45Z",
          "tree_id": "e7aeb64bf7cbd7d415bc142f30193c7d6ec3f579",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ba2a8dc536db30397c332a2aa2cd9f9863027093"
        },
        "date": 1752008599449,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013157049193333336,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022340325826666663,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1576770344866667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007334885880000016,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "dharjeezy@gmail.com",
            "name": "dharjeezy",
            "username": "dharjeezy"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cc972542e0df0266cde2ead4cfac3b1558c860af",
          "message": "pallet bounties v2 benchmark (#8952)\n\ncloses #8649\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-07-08T21:47:29Z",
          "tree_id": "92ea303bb8df02e5752f9903f5541e35918ac3a9",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/cc972542e0df0266cde2ead4cfac3b1558c860af"
        },
        "date": 1752015601841,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.1572868741733333,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012947722246666665,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022326029273333332,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007293085559999967,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "Sajjon@users.noreply.github.com",
            "name": "Alexander Cyon",
            "username": "Sajjon"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7ab0dcd62887ea3c5e50cfb5b1b01beb09d0ec92",
          "message": "Add `para_ids` Runtime API (#9055)\n\nImplementation of https://github.com/paritytech/polkadot-sdk/issues/9053\n\n---------\n\nCo-authored-by: alindima <alin@parity.io>",
          "timestamp": "2025-07-09T07:17:25Z",
          "tree_id": "efefbe78f8e545dae503496bbc822b03e32d1e13",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/7ab0dcd62887ea3c5e50cfb5b1b01beb09d0ec92"
        },
        "date": 1752049522312,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.0071689795599999915,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15998071424000002,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013133598739999997,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022588870993333333,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "egor@parity.io",
            "name": "Egor_P",
            "username": "EgorPopelyaev"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "cd39c26a4da04693b07b3ed752ea239f452795ea",
          "message": "[Release|CI/CD] Move runtimes build to a separate pipeline and let it trigger the next flow (#9118)\n\nThis PR incudes the following changes:\n- Cut the runtimes build from the Create Draft flow into a standalone\npipeline\n- Add a trigger to the Build Runtimes pipeline that will be starting the\nCreate Draft flow automatically when the runtimes are built\nsuccessfully.\n\nCloses: https://github.com/paritytech/devops/issues/3827 and partially:\nhttps://github.com/paritytech/devops/issues/3828",
          "timestamp": "2025-07-09T08:40:25Z",
          "tree_id": "69aff4dc6192fec945b7a0b030222c92ac453a33",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/cd39c26a4da04693b07b3ed752ea239f452795ea"
        },
        "date": 1752054518040,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022386916086666663,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00755849394666665,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013293026473333336,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15782231595333332,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "bkontur@gmail.com",
            "name": "Branislav Kontur",
            "username": "bkontur"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "83afbeeb906131755fdcea3b891ea1883c4d17d0",
          "message": "Expose more constants for pallet-xcm (#9139)\n\nLet's expose more constants, similar as `AdvertisedXcmVersion`.\n\n\n![image](https://github.com/user-attachments/assets/5ddc265f-546b-45a0-8235-3f53c3108823)\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-09T12:29:35Z",
          "tree_id": "6fb2c4c504887609989d96ab44ba1a1afbe03294",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/83afbeeb906131755fdcea3b891ea1883c4d17d0"
        },
        "date": 1752068684470,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007326994706666661,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013075661446666671,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.16022935688000003,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022798820233333333,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "117115317+lrubasze@users.noreply.github.com",
            "name": "Lukasz Rubaszewski",
            "username": "lrubasze"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7305f96aa8fc68b7249587c21f5fa2d4520c54cd",
          "message": "CI - zombienet cumulus tests zombienet sdk (#8954)\n\n### This PR includes the following changes:\n\n- Migrates Zombienet Cumulus tests to `zombienet-sdk`\n- Re-enables the tests, with the following exceptions (to be addressed\nseparately):\n  - `zombienet-cumulus-0002-pov_recovery` - #8985 \n- `zombienet-cumulus-0006-rpc_collator_builds_blocks` - root cause the\nsame as #8985\n  - `zombienet-cumulus-0009-elastic_scaling_pov_recovery` – #8999\n- `zombienet-cumulus-0010-elastic_scaling_multiple_block_per_slot` –\n#9018\n- Adds the following tests to CI:\n  - `zombienet-cumulus-0011-dht-bootnodes`\n  - `zombienet-cumulus-0012-parachain_extrinsic_gets_finalized`\n  - `zombienet-cumulus-0013-elastic_scaling_slot_based_rp_offset`\n\n---------\n\nSigned-off-by: Iulian Barbu <iulian.barbu@parity.io>\nCo-authored-by: Javier Viola <javier@parity.io>\nCo-authored-by: Javier Viola <363911+pepoviola@users.noreply.github.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Anthony Lazam <xlzm.tech@gmail.com>\nCo-authored-by: Sebastian Kunert <skunert49@gmail.com>\nCo-authored-by: Iulian Barbu <14218860+iulianbarbu@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <info@kchr.de>",
          "timestamp": "2025-07-09T16:01:41Z",
          "tree_id": "7b46e0ac8c2ed95e791c472fb7a82ebbc6a32685",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/7305f96aa8fc68b7249587c21f5fa2d4520c54cd"
        },
        "date": 1752081373398,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013178092153333331,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15815066932,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007196401773333312,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02253889848,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "117115317+lrubasze@users.noreply.github.com",
            "name": "Lukasz Rubaszewski",
            "username": "lrubasze"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "409587adfb4cc5e28e28272e768361afdbea2191",
          "message": "Enable parachain-templates zombienet tests (#9131)\n\nThis PR includes the following changes:\n- Refactor Parachain Templates workflow to run tests individually\n- Enables Zombienet Parachain Templates tests in CI\n\n---------\n\nSigned-off-by: Iulian Barbu <iulian.barbu@parity.io>\nCo-authored-by: Javier Viola <javier@parity.io>\nCo-authored-by: Javier Viola <363911+pepoviola@users.noreply.github.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Anthony Lazam <xlzm.tech@gmail.com>\nCo-authored-by: Sebastian Kunert <skunert49@gmail.com>\nCo-authored-by: Iulian Barbu <14218860+iulianbarbu@users.noreply.github.com>",
          "timestamp": "2025-07-10T06:33:27Z",
          "tree_id": "36c66069301310187811ad4f0537df4b18e2050f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/409587adfb4cc5e28e28272e768361afdbea2191"
        },
        "date": 1752133130505,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022305190780000005,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15751209116666665,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01314999104,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.006964747299999968,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "12ddb5a71ddd744e48bbf49a4cc0b44c5381747e",
          "message": "bitfield_distribution: fix subsystem clogged at begining of a session (#9094)\n\n`handle_peer_view_change` gets called on NewGossipTopology with the\nexisting view of the peer to cover for the case when the topology might\narrive late, but in that case in the view will contain old blocks from\nprevious session, so since the X/Y neighbour change because of the\ntopology change you end up sending a lot of messages for blocks before\nthe session changed.\n\nFix it by checking the send message only for relay chains that are in\nthe same session as the current topology.\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-10T10:00:44Z",
          "tree_id": "0adae7550a477fef6b79346b2a017a665b321042",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/12ddb5a71ddd744e48bbf49a4cc0b44c5381747e"
        },
        "date": 1752145911218,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022574530546666676,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007067050453333319,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012958209660000003,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1591142196133334,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "178801527+raymondkfcheung@users.noreply.github.com",
            "name": "Raymond Cheung",
            "username": "raymondkfcheung"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "466149d0eac8e608a6e6b6db8cda98a555b6c7e8",
          "message": "Replace `log` with `tracing` on XCM-related modules (#8732)\n\nThis PR replaces `log` with `tracing` instrumentation on XCM-related\nmodules to significantly improve debugging capabilities for XCM\nexecution flows.\n\nContinues #8724 and partially addresses #6119 by providing structured\nlogging throughout XCM components, making it easier to diagnose\nexecution failures, fee calculation errors, and routing issues.\n\n## Key Features\n\n- **Consistent targets**: All components use predictable `xcm::*` log\ntargets\n- **Structured fields**: Uses `?variable` syntax for automatic Debug\nformatting\n- **Zero runtime impact**: No behavioural changes, only observability\nimprovements",
          "timestamp": "2025-07-10T12:54:12Z",
          "tree_id": "363cb00f3cfd55c0e8a1f74f8964ebc2e32b0156",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/466149d0eac8e608a6e6b6db8cda98a555b6c7e8"
        },
        "date": 1752156572759,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013391459946666674,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007366436399999965,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022469151266666668,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15761804939333338,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1728078+michalkucharczyk@users.noreply.github.com",
            "name": "Michal Kucharczyk",
            "username": "michalkucharczyk"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "62a9808172832e13ca2ae02c1888491ee74b03fb",
          "message": "`fatxpool`: debug levels adjusted (#9159)\n\nThis PR removes redundant debug message and lowers the info about\ntimeout in `ready_at`.\n\nRelated: #9151\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-10T13:42:24Z",
          "tree_id": "cbedb9094437416e71f65e6fc550c42db2cc5e48",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/62a9808172832e13ca2ae02c1888491ee74b03fb"
        },
        "date": 1752159089487,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 432.5133333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022437657573333335,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012923561173333334,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007355065060000019,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15703281224000012,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "psykyodai@gmail.com",
            "name": "psykyo-dai(精神 大)",
            "username": "PsyKyodai"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "874a8dbdd9cbc7fdbfffc4c307f6f21974650a55",
          "message": "Add BlockNumberProvider to PureCreated Event (#9107)\n\n[AHM] [Proxy] Add creation block number to PureCreated event\n\nCloses #9066 \n\n## Problem\nAfter AHM, killing pure proxies requires the relay chain block height at\ncreation time. This information is non-trivial to obtain since the proxy\npallet lives on Asset Hub while the block height refers to Relay Chain.\n\n## Solution\nAdd `at: BlockNumberFor<T>` field to `Event::PureCreated` to include the\ncreation block height. This is populated using the `BlockNumberProvider`\nat creation time.\n\n## Changes\n1. Added `at` field to `Event::PureCreated` containing current block\nnumber\n2. Modified tests and benchmarks to reflect new event structure\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>",
          "timestamp": "2025-07-10T15:19:15Z",
          "tree_id": "e16c795118f66c71b0a031259521c3beef122083",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/874a8dbdd9cbc7fdbfffc4c307f6f21974650a55"
        },
        "date": 1752165369943,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007523807240000044,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15867570716000007,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022534393419999993,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013282263440000002,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "5588131+kianenigma@users.noreply.github.com",
            "name": "Kian Paimani",
            "username": "kianenigma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d4e4773ea531db55149191693f038e65d64f8107",
          "message": "use correct era planning config in westend-asset-hub (#9152)\n\ntiny mistake of the past, will use the automatic type rather than\nhard-coding it.",
          "timestamp": "2025-07-10T21:44:42Z",
          "tree_id": "325fb85d58fc53b2a8bd2826058c53e9398eb817",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d4e4773ea531db55149191693f038e65d64f8107"
        },
        "date": 1752187975563,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012921469066666667,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15657947178666676,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022290233179999994,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007021611959999966,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "serban@parity.io",
            "name": "Serban Iorga",
            "username": "serban300"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "540941cc654ece30dcd5dfed3cbc93828cd25b81",
          "message": "Improve `pr_8860.prdoc` (#9171)\n\nImproved PR doc for https://github.com/paritytech/polkadot-sdk/pull/8860\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Adrian Catangiu <adrian@parity.io>",
          "timestamp": "2025-07-11T10:53:15Z",
          "tree_id": "8b1fbfcc7a1599623446a446914cc1e37a981b75",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/540941cc654ece30dcd5dfed3cbc93828cd25b81"
        },
        "date": 1752235404727,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.01327947238,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1574109631733334,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022577914279999996,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007314220926666642,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7058819a45ed5b74cedd6d21698f1c2ac2445d6b",
          "message": "add block hashes to the randomness used by hashmaps and friends in validation context (#9127)\n\nhttps://github.com/paritytech/polkadot-sdk/pull/8606\nhttps://github.com/paritytech/trie/pull/221 replaced the usage of\nBTreeMap with HashMaps in validation context. The keys are already\nderived with a cryptographic hash function from user data, so users\nshould not be able to manipulate it.\n\nTo be on safe side this PR also modifies the TrieCache, TrieRecorder and\nMemoryDB to use a hasher that on top of the default generated randomness\nalso adds randomness generated from the hash of the relaychain and that\nof the parachain blocks, which is not something users can control or\nguess ahead of time.\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-11T15:34:56Z",
          "tree_id": "6b0e66c2eaa94537bb1ed602b345585455da88be",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/7058819a45ed5b74cedd6d21698f1c2ac2445d6b"
        },
        "date": 1752252886599,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013033524873333336,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007188116593333307,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02227146496,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1572815272933334,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "5588131+kianenigma@users.noreply.github.com",
            "name": "Kian Paimani",
            "username": "kianenigma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "064512ed11042b34ca7330b93e39aa864219d475",
          "message": "pallet-bags-list: Emit `ScoreUpdated` event only if it has changed (#9166)\n\nquick follow-up to https://github.com/paritytech/polkadot-sdk/pull/8684,\nensuring all blocks don't have x events when the feature is enabled (as\nit is now in WAH)\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-12T16:17:44Z",
          "tree_id": "bcdf93b2b053f979c59ad0094670fadf95855c33",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/064512ed11042b34ca7330b93e39aa864219d475"
        },
        "date": 1752341091695,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022348999946666667,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15735532816666672,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013011674820000003,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007252550473333334,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "jesse.chejieh@gmail.com",
            "name": "Doordashcon",
            "username": "Doordashcon"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9339acc7e4eb58498fe7a4c412dfb9f8e75ae72a",
          "message": "Add Missing Events for Balances Pallet (#7250)\n\nAttempts to resolve #6974\n\n---------\n\nCo-authored-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-07-13T00:04:30+02:00",
          "tree_id": "c5a5b6fa875bb790a7f98206b6d220ac1a957b32",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/9339acc7e4eb58498fe7a4c412dfb9f8e75ae72a"
        },
        "date": 1752359872319,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15665486098666678,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007033348899999976,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012944104713333328,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022403466879999997,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "cyrill@parity.io",
            "name": "xermicus",
            "username": "xermicus"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fb0d310e07438caafcc2dda4d502eba040ecf06c",
          "message": "emit sparse debug info in unoptimized builds (#8646)\n\nSee\n[here](https://kobzol.github.io/rust/rustc/2025/05/20/disable-debuginfo-to-improve-rust-compile-times.html)\nfor more details.\n\nI found that on my host, this reduces `cargo build` (after `cargo\nclean`) from 19m 35s to 17m 50s, or about 10%.\n\nThanks @pgherveou\n\n---------\n\nSigned-off-by: Cyrill Leutwiler <bigcyrill@hotmail.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-07-13T22:45:18Z",
          "tree_id": "6fa4ad83ce7581d17e6bfc24fc886cf3fe8b40d7",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/fb0d310e07438caafcc2dda4d502eba040ecf06c"
        },
        "date": 1752450907519,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007059238560000003,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02242586813333334,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01314551858,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1569159627133334,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "109800286+StackOverflowExcept1on@users.noreply.github.com",
            "name": "StackOverflowExcept1on",
            "username": "StackOverflowExcept1on"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e98c88e297f58fa0a28b85bc8eee68fcf5cdaec3",
          "message": "feat(binary-merkle-tree): add `merkle_root_raw` and `merkle_proof_raw` methods (#9105)\n\n# Description\n\nResolves [#9103](https://github.com/paritytech/polkadot-sdk/issues/9103)\n\nAdded `merkle_root_raw` and `merkle_proof_raw` methods, which allow\ndevelopers to avoid double hashing when working with sequences like\n`Vec<H256>`, where `H256` is already hash of some message.\n\n## Integration\n\nThere were no breaking changes.\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-07-14T06:42:30Z",
          "tree_id": "0c3604f400a15e405af3ecb3b31b480883e07235",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e98c88e297f58fa0a28b85bc8eee68fcf5cdaec3"
        },
        "date": 1752480164431,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022401829853333326,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15729644199333334,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007348105886666638,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013289935299999998,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "serban@parity.io",
            "name": "Serban Iorga",
            "username": "serban300"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f8a1fe64c29b1ddcb5824bbb3bf327f528f18d40",
          "message": "Deduplicate client-side inherents checking logic (#9175)\n\nStumbled upon this while working on other issue\n(https://github.com/paritytech/polkadot-sdk/pull/7902). I thought I\nmight need to change the `CheckInherentsResult` and this deduplication\nwould have made everything easier. Probably changing\n`CheckInherentsResult` won't be needed in the end, but even so it would\nbe nice to reduce the duplication.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-14T08:22:53Z",
          "tree_id": "bfca803819835b7f3000ebe25955951078a64f09",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f8a1fe64c29b1ddcb5824bbb3bf327f528f18d40"
        },
        "date": 1752486555353,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013118011313333336,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022398577686666674,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007353065499999989,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15772380814666676,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "evgeny@parity.io",
            "name": "Evgeny Snitko",
            "username": "AndWeHaveAPlan"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8f4d80071a4f478a4540aa8ab63dc1a1b26a8187",
          "message": "Update forklift to 0.14.1 (#9163)\n\ncc https://github.com/paritytech/polkadot-sdk/issues/9123\n\ncc https://github.com/paritytech/devops/issues/4151\n\n---------\n\nCo-authored-by: Alexander Samusev <41779041+alvicsam@users.noreply.github.com>\nCo-authored-by: alvicsam <alvicsam@gmail.com>",
          "timestamp": "2025-07-14T10:59:34Z",
          "tree_id": "ed66147a2d1d0f7bcd93cfeaa94fba29aacdfe07",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/8f4d80071a4f478a4540aa8ab63dc1a1b26a8187"
        },
        "date": 1752495695240,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013202103753333336,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.0074984407800000085,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022407421599999994,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15716482928666664,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "641cca3841e7599380d66c14e12ebbe248c739e9",
          "message": "Bump the ci_dependencies group across 1 directory with 5 updates (#9017)\n\nBumps the ci_dependencies group with 5 updates in the / directory:\n\n| Package | From | To |\n| --- | --- | --- |\n| [Swatinem/rust-cache](https://github.com/swatinem/rust-cache) |\n`2.7.8` | `2.8.0` |\n|\n[actions-rust-lang/setup-rust-toolchain](https://github.com/actions-rust-lang/setup-rust-toolchain)\n| `1.12.0` | `1.13.0` |\n|\n[stefanzweifel/git-auto-commit-action](https://github.com/stefanzweifel/git-auto-commit-action)\n| `5` | `6` |\n|\n[docker/setup-buildx-action](https://github.com/docker/setup-buildx-action)\n| `3.10.0` | `3.11.1` |\n|\n[actions/attest-build-provenance](https://github.com/actions/attest-build-provenance)\n| `2.3.0` | `2.4.0` |\n\n\nUpdates `Swatinem/rust-cache` from 2.7.8 to 2.8.0\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a\nhref=\"https://github.com/swatinem/rust-cache/releases\">Swatinem/rust-cache's\nreleases</a>.</em></p>\n<blockquote>\n<h2>v2.8.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Add cache-workspace-crates feature by <a\nhref=\"https://github.com/jbransen\"><code>@​jbransen</code></a> in <a\nhref=\"https://redirect.github.com/Swatinem/rust-cache/pull/246\">Swatinem/rust-cache#246</a></li>\n<li>Feat: support warpbuild cache provider by <a\nhref=\"https://github.com/stegaBOB\"><code>@​stegaBOB</code></a> in <a\nhref=\"https://redirect.github.com/Swatinem/rust-cache/pull/247\">Swatinem/rust-cache#247</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/jbransen\"><code>@​jbransen</code></a>\nmade their first contribution in <a\nhref=\"https://redirect.github.com/Swatinem/rust-cache/pull/246\">Swatinem/rust-cache#246</a></li>\n<li><a href=\"https://github.com/stegaBOB\"><code>@​stegaBOB</code></a>\nmade their first contribution in <a\nhref=\"https://redirect.github.com/Swatinem/rust-cache/pull/247\">Swatinem/rust-cache#247</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a\nhref=\"https://github.com/Swatinem/rust-cache/compare/v2.7.8...v2.8.0\">https://github.com/Swatinem/rust-cache/compare/v2.7.8...v2.8.0</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a\nhref=\"https://github.com/Swatinem/rust-cache/blob/master/CHANGELOG.md\">Swatinem/rust-cache's\nchangelog</a>.</em></p>\n<blockquote>\n<h1>Changelog</h1>\n<h2>2.8.0</h2>\n<ul>\n<li>Add support for <code>warpbuild</code> cache provider</li>\n<li>Add new <code>cache-workspace-crates</code> feature</li>\n</ul>\n<h2>2.7.8</h2>\n<ul>\n<li>Include CPU arch in the cache key</li>\n</ul>\n<h2>2.7.7</h2>\n<ul>\n<li>Also cache <code>cargo install</code> metadata</li>\n</ul>\n<h2>2.7.6</h2>\n<ul>\n<li>Allow opting out of caching $CARGO_HOME/bin</li>\n<li>Add runner OS in cache key</li>\n<li>Adds an option to do lookup-only of the cache</li>\n</ul>\n<h2>2.7.5</h2>\n<ul>\n<li>Support Cargo.lock format cargo-lock v4</li>\n<li>Only run macOsWorkaround() on macOS</li>\n</ul>\n<h2>2.7.3</h2>\n<ul>\n<li>Work around upstream problem that causes cache saving to hang for\nminutes.</li>\n</ul>\n<h2>2.7.2</h2>\n<ul>\n<li>Only key by <code>Cargo.toml</code> and <code>Cargo.lock</code>\nfiles of workspace members.</li>\n</ul>\n<h2>2.7.1</h2>\n<ul>\n<li>Update toml parser to fix parsing errors.</li>\n</ul>\n<h2>2.7.0</h2>\n<ul>\n<li>Properly cache <code>trybuild</code> tests.</li>\n</ul>\n<h2>2.6.2</h2>\n<ul>\n<li>Fix <code>toml</code> parsing.</li>\n</ul>\n<h2>2.6.1</h2>\n<ul>\n<li>Fix hash contributions of\n<code>Cargo.lock</code>/<code>Cargo.toml</code> files.</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a\nhref=\"https://github.com/Swatinem/rust-cache/commit/98c8021b550208e191a6a3145459bfc9fb29c4c0\"><code>98c8021</code></a>\n2.8.0</li>\n<li><a\nhref=\"https://github.com/Swatinem/rust-cache/commit/14d3bc39c43eec8ca2cd08dd0805a32ee0cb3666\"><code>14d3bc3</code></a>\nupdate Changelog</li>\n<li><a\nhref=\"https://github.com/Swatinem/rust-cache/commit/52ea1434f87f7081841d430fb7b1235754488e51\"><code>52ea143</code></a>\nsupport warpbuild cache provider (<a\nhref=\"https://redirect.github.com/swatinem/rust-cache/issues/247\">#247</a>)</li>\n<li><a\nhref=\"https://github.com/Swatinem/rust-cache/commit/eaa85be6b1bfdc6616fd14d8916fc5aa0435e435\"><code>eaa85be</code></a>\nAdd cache-workspace-crates feature (<a\nhref=\"https://redirect.github.com/swatinem/rust-cache/issues/246\">#246</a>)</li>\n<li><a\nhref=\"https://github.com/Swatinem/rust-cache/commit/901019c0f83889e6f8eaa395f97093151c05c4b0\"><code>901019c</code></a>\nUpdate the test lockfiles</li>\n<li>See full diff in <a\nhref=\"https://github.com/swatinem/rust-cache/compare/9d47c6ad4b02e050fd481d890b2ea34778fd09d6...98c8021b550208e191a6a3145459bfc9fb29c4c0\">compare\nview</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `actions-rust-lang/setup-rust-toolchain` from 1.12.0 to 1.13.0\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a\nhref=\"https://github.com/actions-rust-lang/setup-rust-toolchain/releases\">actions-rust-lang/setup-rust-toolchain's\nreleases</a>.</em></p>\n<blockquote>\n<h2>v1.13.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>feat: support cache-provider by <a\nhref=\"https://github.com/mindrunner\"><code>@​mindrunner</code></a> in <a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/pull/65\">actions-rust-lang/setup-rust-toolchain#65</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a\nhref=\"https://github.com/mindrunner\"><code>@​mindrunner</code></a> made\ntheir first contribution in <a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/pull/65\">actions-rust-lang/setup-rust-toolchain#65</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a\nhref=\"https://github.com/actions-rust-lang/setup-rust-toolchain/compare/v1.12.0...v1.13.0\">https://github.com/actions-rust-lang/setup-rust-toolchain/compare/v1.12.0...v1.13.0</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a\nhref=\"https://github.com/actions-rust-lang/setup-rust-toolchain/blob/main/CHANGELOG.md\">actions-rust-lang/setup-rust-toolchain's\nchangelog</a>.</em></p>\n<blockquote>\n<h1>Changelog</h1>\n<p>All notable changes to this project will be documented in this\nfile.</p>\n<p>The format is based on <a\nhref=\"https://keepachangelog.com/en/1.0.0/\">Keep a Changelog</a>,\nand this project adheres to <a\nhref=\"https://semver.org/spec/v2.0.0.html\">Semantic Versioning</a>.</p>\n<h2>[Unreleased]</h2>\n<h2>[1.13.0] - 2025-06-16</h2>\n<ul>\n<li>Add new parameter <code>cache-provider</code> that is propagated to\n<code>Swatinem/rust-cache</code> as <code>cache-provider</code> (<a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/issues/65\">#65</a>\nby <a\nhref=\"https://github.com/mindrunner\"><code>@​mindrunner</code></a>)</li>\n</ul>\n<h2>[1.12.0] - 2025-04-23</h2>\n<ul>\n<li>Add support for installing rustup on Windows (<a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/issues/58\">#58</a>\nby <a href=\"https://github.com/maennchen\"><code>@​maennchen</code></a>)\nThis adds support for using Rust on the GitHub provided Windows ARM\nrunners.</li>\n</ul>\n<h2>[1.11.0] - 2025-02-24</h2>\n<ul>\n<li>Add new parameter <code>cache-bin</code> that is propagated to\n<code>Swatinem/rust-cache</code> as <code>cache-bin</code> (<a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/issues/51\">#51</a>\nby <a\nhref=\"https://github.com/enkhjile\"><code>@​enkhjile</code></a>)</li>\n<li>Add new parameter <code>cache-shared-key</code> that is propagated\nto <code>Swatinem/rust-cache</code> as <code>shared-key</code> (<a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/issues/52\">#52</a>\nby <a\nhref=\"https://github.com/skanehira\"><code>@​skanehira</code></a>)</li>\n</ul>\n<h2>[1.10.1] - 2024-10-01</h2>\n<ul>\n<li>Fix problem matcher for rustfmt output.\nThe format has changed since <a\nhref=\"https://redirect.github.com/rust-lang/rustfmt/pull/5971\">rust-lang/rustfmt#5971</a>\nand now follows the form &quot;filename:line&quot;.\nThanks to <a\nhref=\"https://github.com/0xcypher02\"><code>@​0xcypher02</code></a> for\npointing out the problem.</li>\n</ul>\n<h2>[1.10.0] - 2024-09-23</h2>\n<ul>\n<li>Add new parameter <code>cache-directories</code> that is propagated\nto <code>Swatinem/rust-cache</code> (<a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/issues/44\">#44</a>\nby <a\nhref=\"https://github.com/pranc1ngpegasus\"><code>@​pranc1ngpegasus</code></a>)</li>\n<li>Add new parameter <code>cache-key</code> that is propagated to\n<code>Swatinem/rust-cache</code> as <code>key</code> (<a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/issues/41\">#41</a>\nby <a\nhref=\"https://github.com/iainlane\"><code>@​iainlane</code></a>)</li>\n<li>Make rustup toolchain installation more robust in light of planned\nchanges <a\nhref=\"https://redirect.github.com/rust-lang/rustup/issues/3635\">rust-lang/rustup#3635</a>\nand <a\nhref=\"https://redirect.github.com/rust-lang/rustup/pull/3985\">rust-lang/rustup#3985</a></li>\n<li>Allow installing multiple Rust toolchains by specifying multiple\nversions in the <code>toolchain</code> input parameter.</li>\n<li>Configure the <code>rustup override</code> behavior via the new\n<code>override</code> input. (<a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/issues/38\">#38</a>)</li>\n</ul>\n<h2>[1.9.0] - 2024-06-08</h2>\n<ul>\n<li>Add extra argument <code>cache-on-failure</code> and forward it to\n<code>Swatinem/rust-cache</code>. (<a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/issues/39\">#39</a>\nby <a\nhref=\"https://github.com/samuelhnrq\"><code>@​samuelhnrq</code></a>)<br\n/>\nSet the default the value to true.\nThis will result in more caching than previously.\nThis helps when large dependencies are compiled only for testing to\nfail.</li>\n</ul>\n<h2>[1.8.0] - 2024-01-13</h2>\n<ul>\n<li>Allow specifying subdirectories for cache.</li>\n<li>Fix toolchain file overriding.</li>\n</ul>\n<h2>[1.7.0] - 2024-01-11</h2>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a\nhref=\"https://github.com/actions-rust-lang/setup-rust-toolchain/commit/fb51252c7ba57d633bc668f941da052e410add48\"><code>fb51252</code></a>\nUpdate CHANGELOG.md</li>\n<li><a\nhref=\"https://github.com/actions-rust-lang/setup-rust-toolchain/commit/33b85c358d935f8a72fcfe469bdb7d9f78182141\"><code>33b85c3</code></a>\nMerge pull request <a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/issues/65\">#65</a>\nfrom mindrunner/main</li>\n<li><a\nhref=\"https://github.com/actions-rust-lang/setup-rust-toolchain/commit/82947d77a9ec18480f3f187b0102cac015771477\"><code>82947d7</code></a>\nfeat: support cache-provider</li>\n<li>See full diff in <a\nhref=\"https://github.com/actions-rust-lang/setup-rust-toolchain/compare/9d7e65c320fdb52dcd45ffaa68deb6c02c8754d9...fb51252c7ba57d633bc668f941da052e410add48\">compare\nview</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `stefanzweifel/git-auto-commit-action` from 5 to 6\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a\nhref=\"https://github.com/stefanzweifel/git-auto-commit-action/releases\">stefanzweifel/git-auto-commit-action's\nreleases</a>.</em></p>\n<blockquote>\n<h2>v6.0.0</h2>\n<h2>Added</h2>\n<ul>\n<li>Throw error early if repository is in a detached state (<a\nhref=\"https://redirect.github.com/stefanzweifel/git-auto-commit-action/pull/357\">#357</a>)</li>\n</ul>\n<h2>Fixed</h2>\n<ul>\n<li>Fix PAT instructions with Dependabot (<a\nhref=\"https://redirect.github.com/stefanzweifel/git-auto-commit-action/pull/376\">#376</a>)\n<a\nhref=\"https://github.com/@Dreamsorcerer\"><code>@​Dreamsorcerer</code></a></li>\n</ul>\n<h2>Removed</h2>\n<ul>\n<li>Remove support for <code>create_branch</code>,\n<code>skip_checkout</code>, <code>skip_Fetch</code> (<a\nhref=\"https://redirect.github.com/stefanzweifel/git-auto-commit-action/pull/314\">#314</a>)</li>\n</ul>\n<h2>v5.2.0</h2>\n<h2>Added</h2>\n<ul>\n<li>Add <code>create_git_tag_only</code> option to skip commiting and\nalways create a git-tag. (<a\nhref=\"https://redirect.github.com/stefanzweifel/git-auto-commit-action/pull/364\">#364</a>)\n<a href=\"https://github.com/@zMynxx\"><code>@​zMynxx</code></a></li>\n<li>Add Test for <code>create_git_tag_only</code> feature (<a\nhref=\"https://redirect.github.com/stefanzweifel/git-auto-commit-action/pull/367\">#367</a>)\n<a\nhref=\"https://github.com/@stefanzweifel\"><code>@​stefanzweifel</code></a></li>\n</ul>\n<h2>Fixed</h2>\n<ul>\n<li>docs: Update README.md per <a\nhref=\"https://redirect.github.com/stefanzweifel/git-auto-commit-action/issues/354\">#354</a>\n(<a\nhref=\"https://redirect.github.com/stefanzweifel/git-auto-commit-action/pull/361\">#361</a>)\n<a href=\"https://github.com/@rasa\"><code>@​rasa</code></a></li>\n</ul>\n<h2>v5.1.0</h2>\n<h2>Changed</h2>\n<ul>\n<li>Include <code>github.actor_id</code> in default\n<code>commit_author</code> (<a\nhref=\"https://redirect.github.com/stefanzweifel/git-auto-commit-action/pull/354\">#354</a>)\n<a\nhref=\"https://github.com/@parkerbxyz\"><code>@​parkerbxyz</code></a></li>\n</ul>\n<h2>Fixed</h2>\n<ul>\n<li>docs(README): fix broken protected branch docs link (<a\nhref=\"https://redirect.github.com/stefanzweifel/git-auto-commit-action/pull/346\">#346</a>)\n<a href=\"https://github.com/@scarf005\"><code>@​scarf005</code></a></li>\n<li>Update README.md (<a\nhref=\"https://redirect.github.com/stefanzweifel/git-auto-commit-action/pull/343\">#343</a>)\n<a href=\"https://github.com/@Kludex\"><code>@​Kludex</code></a></li>\n</ul>\n<h2>Dependency Updates</h2>\n<ul>\n<li>Bump bats from 1.11.0 to 1.11.1 (<a\nhref=\"https://redirect.github.com/stefanzweifel/git-auto-commit-action/pull/353\">#353</a>)\n<a\nhref=\"https://github.com/@dependabot\"><code>@​dependabot</code></a></li>\n<li>Bump github/super-linter from 6 to 7 (<a\nhref=\"https://redirect.github.com/stefanzweifel/git-auto-commit-action/pull/342\">#342</a>)\n<a\nhref=\"https://github.com/@dependabot\"><code>@​dependabot</code></a></li>\n<li>Bump github/super-linter from 5 to 6 (<a\nhref=\"https://redirect.github.com/stefanzweifel/git-auto-commit-action/pull/335\">#335</a>)\n<a\nhref=\"https://github.com/@dependabot\"><code>@​dependabot</code></a></li>\n</ul>\n<h2>v5.0.1</h2>\n<h2>Fixed</h2>\n<ul>\n<li>Fail if attempting to execute git commands in a directory that is\nnot a git-repo. (<a\nhref=\"https://redirect.github.com/stefanzweifel/git-auto-commit-action/pull/326\">#326</a>)\n<a\nhref=\"https://github.com/@ccomendant\"><code>@​ccomendant</code></a></li>\n</ul>\n<h2>Dependency Updates</h2>\n<ul>\n<li>Bump bats from 1.10.0 to 1.11.0 (<a\nhref=\"https://redirect.github.com/stefanzweifel/git-auto-commit-action/pull/325\">#325</a>)\n<a\nhref=\"https://github.com/@dependabot\"><code>@​dependabot</code></a></li>\n<li>Bump release-drafter/release-drafter from 5 to 6 (<a\nhref=\"https://redirect.github.com/stefanzweifel/git-auto-commit-action/pull/319\">#319</a>)\n<a\nhref=\"https://github.com/@dependabot\"><code>@​dependabot</code></a></li>\n</ul>\n<h2>Misc</h2>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a\nhref=\"https://github.com/stefanzweifel/git-auto-commit-action/blob/master/CHANGELOG.md\">stefanzweifel/git-auto-commit-action's\nchangelog</a>.</em></p>\n<blockquote>\n<h2><a\nhref=\"https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.16.0...v5.0.0\">v5.0.0</a>\n- 2023-10-06</h2>\n<p>New major release that bumps the default runtime to Node 20. There\nare no other breaking changes.</p>\n<h3>Changed</h3>\n<ul>\n<li>Update node version to node20 (<a\nhref=\"https://redirect.github.com/stefanzweifel/git-auto-commit-action/pull/300\">#300</a>)\n<a\nhref=\"https://github.com/@ryudaitakai\"><code>@​ryudaitakai</code></a></li>\n<li>Add _log and _set_github_output functions (<a\nhref=\"https://redirect.github.com/stefanzweifel/git-auto-commit-action/pull/273\">#273</a>)\n<a\nhref=\"https://github.com/@stefanzweifel\"><code>@​stefanzweifel</code></a></li>\n</ul>\n<h3>Fixed</h3>\n<ul>\n<li>Seems like there is an extra space (<a\nhref=\"https://redirect.github.com/stefanzweifel/git-auto-commit-action/pull/288\">#288</a>)\n<a\nhref=\"https://github.com/@pedroamador\"><code>@​pedroamador</code></a></li>\n<li>Fix git-auto-commit.yml (<a\nhref=\"https://redirect.github.com/stefanzweifel/git-auto-commit-action/pull/277\">#277</a>)\n<a\nhref=\"https://github.com/@zcong1993\"><code>@​zcong1993</code></a></li>\n</ul>\n<h3>Dependency Updates</h3>\n<ul>\n<li>Bump actions/checkout from 3 to 4 (<a\nhref=\"https://redirect.github.com/stefanzweifel/git-auto-commit-action/pull/302\">#302</a>)\n<a\nhref=\"https://github.com/@dependabot\"><code>@​dependabot</code></a></li>\n<li>Bump bats from 1.9.0 to 1.10.0 (<a\nhref=\"https://redirect.github.com/stefanzweifel/git-auto-commit-action/pull/293\">#293</a>)\n<a\nhref=\"https://github.com/@dependabot\"><code>@​dependabot</code></a></li>\n<li>Bump github/super-linter from 4 to 5 (<a\nhref=\"https://redirect.github.com/stefanzweifel/git-auto-commit-action/pull/289\">#289</a>)\n<a\nhref=\"https://github.com/@dependabot\"><code>@​dependabot</code></a></li>\n<li>Bump bats from 1.8.2 to 1.9.0 (<a\nhref=\"https://redirect.github.com/stefanzweifel/git-auto-commit-action/pull/282\">#282</a>)\n<a\nhref=\"https://github.com/@dependabot\"><code>@​dependabot</code></a></li>\n</ul>\n<h2><a\nhref=\"https://github.com/stefanzweifel/git-auto-commit-action/compare/v4.15.4...v4.16.0\">v4.16.0</a>\n- 2022-12-02</h2>\n<h3>Changed</h3>\n<ul>\n<li>Don't commit files when only LF/CRLF changes (<a\nhref=\"https://redirect.github.com/stefanzweifel/git-auto-commit-action/pull/265\">#265</a>)\n<a href=\"https://github.com/@ZeroRin\"><code>@​ZeroRin</code></a></li>\n<li>Update default email address of github-actions[bot] (<a\nhref=\"https://redirect.github.com/stefanzweifel/git-auto-commit-action/pull/264\">#264</a>)\n<a href=\"https://github.com/@Teko012\"><code>@​Teko012</code></a></li>\n</ul>\n<h3>Fixed</h3>\n<ul>\n<li>Fix link and text for workflow limitation (<a\nhref=\"https://redirect.github.com/stefanzweifel/git-auto-commit-action/pull/263\">#263</a>)\n<a href=\"https://github.com/@Teko012\"><code>@​Teko012</code></a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a\nhref=\"https://github.com/stefanzweifel/git-auto-commit-action/commit/778341af668090896ca464160c2def5d1d1a3eb0\"><code>778341a</code></a>\nMerge pull request <a\nhref=\"https://redirect.github.com/stefanzweifel/git-auto-commit-action/issues/379\">#379</a>\nfrom stefanzweifel/disable-detached-state-check</li>\n<li><a\nhref=\"https://github.com/stefanzweifel/git-auto-commit-action/commit/33b203d92a47ab2370a88ce03d9825cdb52cc98c\"><code>33b203d</code></a>\nDisable Check if Repo is in Detached State</li>\n<li><a\nhref=\"https://github.com/stefanzweifel/git-auto-commit-action/commit/a82d80a75f85e7feb8d2777704c545af1c7affd9\"><code>a82d80a</code></a>\nUpdate CHANGELOG</li>\n<li><a\nhref=\"https://github.com/stefanzweifel/git-auto-commit-action/commit/3cc016cfc892e0844046da36fc68da4e525e081f\"><code>3cc016c</code></a>\nMerge pull request <a\nhref=\"https://redirect.github.com/stefanzweifel/git-auto-commit-action/issues/375\">#375</a>\nfrom stefanzweifel/v6-next</li>\n<li><a\nhref=\"https://github.com/stefanzweifel/git-auto-commit-action/commit/ddb7ae415961225797e0234a7018a30ba1e66bb3\"><code>ddb7ae4</code></a>\nMerge pull request <a\nhref=\"https://redirect.github.com/stefanzweifel/git-auto-commit-action/issues/376\">#376</a>\nfrom Dreamsorcerer/patch-1</li>\n<li><a\nhref=\"https://github.com/stefanzweifel/git-auto-commit-action/commit/b001e5f0ff05d7297c0101f4b44e861799e417dd\"><code>b001e5f</code></a>\nApply suggestions from code review</li>\n<li><a\nhref=\"https://github.com/stefanzweifel/git-auto-commit-action/commit/6494dc61d3e663a9f5166a099d9736ceefc5a3aa\"><code>6494dc6</code></a>\nFix PAT instructions with Dependabot</li>\n<li><a\nhref=\"https://github.com/stefanzweifel/git-auto-commit-action/commit/76180511d9f2354bb712ec6338ce79d4f2061bfe\"><code>7618051</code></a>\nAdd deprecated inputs to fix unbound variable issue</li>\n<li><a\nhref=\"https://github.com/stefanzweifel/git-auto-commit-action/commit/ae114628ea78fd141aa4fa7730f70c984b29c391\"><code>ae11462</code></a>\nMerge pull request <a\nhref=\"https://redirect.github.com/stefanzweifel/git-auto-commit-action/issues/371\">#371</a>\nfrom stefanzweifel/dependabot/npm_and_yarn/bats-1.12.0</li>\n<li><a\nhref=\"https://github.com/stefanzweifel/git-auto-commit-action/commit/3058f91afb4f03b73d38f33c35023fb22cf546b8\"><code>3058f91</code></a>\nBump bats from 1.11.1 to 1.12.0</li>\n<li>Additional commits viewable in <a\nhref=\"https://github.com/stefanzweifel/git-auto-commit-action/compare/v5...v6\">compare\nview</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `docker/setup-buildx-action` from 3.10.0 to 3.11.1\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a\nhref=\"https://github.com/docker/setup-buildx-action/releases\">docker/setup-buildx-action's\nreleases</a>.</em></p>\n<blockquote>\n<h2>v3.11.1</h2>\n<ul>\n<li>Fix <code>keep-state</code> not being respected by <a\nhref=\"https://github.com/crazy-max\"><code>@​crazy-max</code></a> in <a\nhref=\"https://redirect.github.com/docker/setup-buildx-action/pull/429\">docker/setup-buildx-action#429</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a\nhref=\"https://github.com/docker/setup-buildx-action/compare/v3.11.0...v3.11.1\">https://github.com/docker/setup-buildx-action/compare/v3.11.0...v3.11.1</a></p>\n<h2>v3.11.0</h2>\n<ul>\n<li>Keep BuildKit state support by <a\nhref=\"https://github.com/crazy-max\"><code>@​crazy-max</code></a> in <a\nhref=\"https://redirect.github.com/docker/setup-buildx-action/pull/427\">docker/setup-buildx-action#427</a></li>\n<li>Remove aliases created when installing by default by <a\nhref=\"https://github.com/hashhar\"><code>@​hashhar</code></a> in <a\nhref=\"https://redirect.github.com/docker/setup-buildx-action/pull/139\">docker/setup-buildx-action#139</a></li>\n<li>Bump <code>@​docker/actions-toolkit</code> from 0.56.0 to 0.62.1 in\n<a\nhref=\"https://redirect.github.com/docker/setup-buildx-action/pull/422\">docker/setup-buildx-action#422</a>\n<a\nhref=\"https://redirect.github.com/docker/setup-buildx-action/pull/425\">docker/setup-buildx-action#425</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a\nhref=\"https://github.com/docker/setup-buildx-action/compare/v3.10.0...v3.11.0\">https://github.com/docker/setup-buildx-action/compare/v3.10.0...v3.11.0</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a\nhref=\"https://github.com/docker/setup-buildx-action/commit/e468171a9de216ec08956ac3ada2f0791b6bd435\"><code>e468171</code></a>\nMerge pull request <a\nhref=\"https://redirect.github.com/docker/setup-buildx-action/issues/429\">#429</a>\nfrom crazy-max/fix-keep-state</li>\n<li><a\nhref=\"https://github.com/docker/setup-buildx-action/commit/a3e7502fd02828f4a26a8294ad2621a6c2204952\"><code>a3e7502</code></a>\nchore: update generated content</li>\n<li><a\nhref=\"https://github.com/docker/setup-buildx-action/commit/b145473295476dbef957d01d109fe7810b511c95\"><code>b145473</code></a>\nfix keep-state not being respected</li>\n<li><a\nhref=\"https://github.com/docker/setup-buildx-action/commit/18ce135bb5112fa8ce4ed6c17ab05699d7f3a5e0\"><code>18ce135</code></a>\nMerge pull request <a\nhref=\"https://redirect.github.com/docker/setup-buildx-action/issues/425\">#425</a>\nfrom docker/dependabot/npm_and_yarn/docker/actions-to...</li>\n<li><a\nhref=\"https://github.com/docker/setup-buildx-action/commit/0e198e93af3b40a76583e851660b876e62b3a155\"><code>0e198e9</code></a>\nchore: update generated content</li>\n<li><a\nhref=\"https://github.com/docker/setup-buildx-action/commit/05f3f3ac108784e8fb56815c12fbfcf2d0ed660f\"><code>05f3f3a</code></a>\nbuild(deps): bump <code>@​docker/actions-toolkit</code> from 0.61.0 to\n0.62.1</li>\n<li><a\nhref=\"https://github.com/docker/setup-buildx-action/commit/622913496df23a5293cfb3418e5836ee4dd28f3a\"><code>6229134</code></a>\nMerge pull request <a\nhref=\"https://redirect.github.com/docker/setup-buildx-action/issues/427\">#427</a>\nfrom crazy-max/keep-state</li>\n<li><a\nhref=\"https://github.com/docker/setup-buildx-action/commit/c6f6a0702519e6c47b71b117b24c0c1c130fdf32\"><code>c6f6a07</code></a>\nchore: update generated content</li>\n<li><a\nhref=\"https://github.com/docker/setup-buildx-action/commit/6c5e29d8485c56f3f8d1cb2197b657959dd6e032\"><code>6c5e29d</code></a>\nskip builder creation if one already exists with the same name</li>\n<li><a\nhref=\"https://github.com/docker/setup-buildx-action/commit/548b2977492e10f459d0f0df8bee7ce3c5937792\"><code>548b297</code></a>\nci: keep-state check</li>\n<li>Additional commits viewable in <a\nhref=\"https://github.com/docker/setup-buildx-action/compare/b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2...e468171a9de216ec08956ac3ada2f0791b6bd435\">compare\nview</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `actions/attest-build-provenance` from 2.3.0 to 2.4.0\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a\nhref=\"https://github.com/actions/attest-build-provenance/releases\">actions/attest-build-provenance's\nreleases</a>.</em></p>\n<blockquote>\n<h2>v2.4.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Bump undici from 5.28.5 to 5.29.0 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/pull/633\">actions/attest-build-provenance#633</a></li>\n<li>Bump actions/attest from 2.3.0 to <a\nhref=\"https://github.com/actions/attest/releases/tag/v2.4.0\">2.4.0</a>\nby <a href=\"https://github.com/bdehamer\"><code>@​bdehamer</code></a> in\n<a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/pull/654\">actions/attest-build-provenance#654</a>\n<ul>\n<li>Includes support for the new well-known summary file which will\naccumulate paths to all attestations generated in a given workflow\nrun</li>\n</ul>\n</li>\n</ul>\n<p><strong>Full Changelog</strong>: <a\nhref=\"https://github.com/actions/attest-build-provenance/compare/v2.3.0...v2.4.0\">https://github.com/actions/attest-build-provenance/compare/v2.3.0...v2.4.0</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a\nhref=\"https://github.com/actions/attest-build-provenance/commit/e8998f949152b193b063cb0ec769d69d929409be\"><code>e8998f9</code></a>\nbump actions/attest from 2.3.0 to 2.4.0 (<a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/issues/654\">#654</a>)</li>\n<li><a\nhref=\"https://github.com/actions/attest-build-provenance/commit/11c67f22cd5a3968528de1f8de4bb4487ee5306e\"><code>11c67f2</code></a>\nBump the npm-development group across 1 directory with 6 updates (<a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/issues/649\">#649</a>)</li>\n<li><a\nhref=\"https://github.com/actions/attest-build-provenance/commit/39cb715ce0ddd23df1f705e863f642bfb72dfb2b\"><code>39cb715</code></a>\nBump the npm-development group across 1 directory with 7 updates (<a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/issues/641\">#641</a>)</li>\n<li><a\nhref=\"https://github.com/actions/attest-build-provenance/commit/7d91c4030d8fdc376f87f022d8ca01fe8bf07fcd\"><code>7d91c40</code></a>\nBump undici from 5.28.5 to 5.29.0 (<a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/issues/633\">#633</a>)</li>\n<li><a\nhref=\"https://github.com/actions/attest-build-provenance/commit/d848170917c12653fb344e617a79614f36d13e00\"><code>d848170</code></a>\nBump super-linter/super-linter in the actions-minor group (<a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/issues/640\">#640</a>)</li>\n<li><a\nhref=\"https://github.com/actions/attest-build-provenance/commit/0ca36ea29fc5b46379679e3d2a9ce33a62c57e04\"><code>0ca36ea</code></a>\nBump the npm-development group with 7 updates (<a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/issues/582\">#582</a>)</li>\n<li><a\nhref=\"https://github.com/actions/attest-build-provenance/commit/d82e7cd0c70d3e7b2615badc4d8824ca0b098d86\"><code>d82e7cd</code></a>\noffboard from eslint in superlinter (<a\nhref=\"https://redirect.github.com/actions/attest-build-provenance/issues/618\">#618</a>)</li>\n<li>See full diff in <a\nhref=\"https://github.com/actions/attest-build-provenance/compare/db473fddc028af60658334401dc6fa3ffd8669fd...e8998f949152b193b063cb0ec769d69d929409be\">compare\nview</a></li>\n</ul>\n</details>\n<br />\n\n\nDependabot will resolve any conflicts with this PR as long as you don't\nalter it yourself. You can also trigger a rebase manually by commenting\n`@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits\nthat have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after\nyour CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge\nand block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating\nit. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all\nof the ignore conditions of the specified dependency\n- `@dependabot ignore <dependency name> major version` will close this\ngroup update PR and stop Dependabot creating any more for the specific\ndependency's major version (unless you unignore this specific\ndependency's major version or upgrade to it yourself)\n- `@dependabot ignore <dependency name> minor version` will close this\ngroup update PR and stop Dependabot creating any more for the specific\ndependency's minor version (unless you unignore this specific\ndependency's minor version or upgrade to it yourself)\n- `@dependabot ignore <dependency name>` will close this group update PR\nand stop Dependabot creating any more for the specific dependency\n(unless you unignore this specific dependency or upgrade to it yourself)\n- `@dependabot unignore <dependency name>` will remove all of the ignore\nconditions of the specified dependency\n- `@dependabot unignore <dependency name> <ignore condition>` will\nremove the ignore condition of the specified dependency and ignore\nconditions\n\n\n</details>\n\nSigned-off-by: dependabot[bot] <support@github.com>\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\nCo-authored-by: Alexander Samusev <41779041+alvicsam@users.noreply.github.com>",
          "timestamp": "2025-07-14T14:37:10Z",
          "tree_id": "b1fc202864e0d0bdd4231a00f446f544f2eb6992",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/641cca3841e7599380d66c14e12ebbe248c739e9"
        },
        "date": 1752508237890,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013460612333333337,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007379227719999985,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15786090156666666,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022444970373333338,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "franciscoaguirreperez@gmail.com",
            "name": "Francisco Aguirre",
            "username": "franciscoaguirre"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "efa765b6d9fbab59dd9bab944f99b40a157d0d64",
          "message": "Pallet XCM - `transfer_assets` pre-ahm patch (#9137)\n\nAddresses https://github.com/paritytech/polkadot-sdk/issues/9054\n\n`transfer_assets` automatically figures out the reserve for a\ncross-chain transfer\nbased on on-chain configurations like `IsReserve` and the asset ids.\nThe Asset Hub Migration (AHM) will make it unable to return the correct\nreserve for\nthe network native asset (DOT, KSM, WND, PAS) since its reserve will\nmove from the\nRelay Chain to the Asset Hub.\n\nBefore the migration, it'll be disabled to do network native reserve\ntransfers\nvia `transfer_assets`. After the migration, once everything is\nconfigured properly,\nit'll be patched to use the correct reserve.\n\n## TODO\n\n- [x] Patch\n- [x] Tests\n- [x] PRDoc",
          "timestamp": "2025-07-14T19:28:37Z",
          "tree_id": "13bb2dff7ac3a2f86d6b38b9817c02e34410e467",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/efa765b6d9fbab59dd9bab944f99b40a157d0d64"
        },
        "date": 1752525478963,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02243714404666667,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15681224536000005,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007309225306666634,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013279752260000006,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ismailov.m.h@gmail.com",
            "name": "muharem",
            "username": "muharem"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ec6e6843b847de92be649073317fa729898d0e1b",
          "message": "Asset Hub Westend: nfts block provider is RC (#9141)\n\nAsset Hub Westend: nfts block provider is Relay Chain.\n\nnfts pallet uses the blocks to define `mint.start_block` and\n`mint.end_block` for collections. therefor the RC is a better choice\nhere since its more time accurate.\n\nthis does not requires a migration since there is no single collection\nwith the start and end block set.\n\nit would be nice to deploy this change asap to let clients test this\nbefore it hit production on Kusama and Polkadot.",
          "timestamp": "2025-07-14T20:25:23Z",
          "tree_id": "06fb447dd706c0508dbf8c601711dc3d56a98d56",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ec6e6843b847de92be649073317fa729898d0e1b"
        },
        "date": 1752528668550,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013353811780000002,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02273889692666666,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15965339783333335,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007570348673333319,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "32168055+antkve@users.noreply.github.com",
            "name": "Anthony Kveder",
            "username": "antkve"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "999b4fa90ea0073a193662b1162b5f1f25f3beb6",
          "message": "Fixed westend asset hub ID (#9191)\n\nAddresses #9190 by adding cumulus_primitives_core::GetParachainInfo impl\nto the AHW runtime.\n\n---------\n\nCo-authored-by: Karol Kokoszka <karol@parity.io>",
          "timestamp": "2025-07-15T10:47:05Z",
          "tree_id": "db38b696266f561a16f37e601e33a516a9086616",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/999b4fa90ea0073a193662b1162b5f1f25f3beb6"
        },
        "date": 1752580437610,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.01300822362666667,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022605506213333338,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007470545546666634,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1572144001733334,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "607a1b24b7902a657426ce2412e316a57b61894b",
          "message": "`apply_authorized_force_set_current_code` does not need to consume the whole block (#9202)\n\nThere is no need that this dispatchable consumes the full block as this\nis just writing the given value to storage. On a chain this is done,\nbecause the runtime changes and thus, a lot of stuff potentially\nchanges. In the case of the relay chain only on parachain changes and\nnot the relay chain runtime itself.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>\nCo-authored-by: Adrian Catangiu <adrian@parity.io>",
          "timestamp": "2025-07-15T11:47:13Z",
          "tree_id": "275460b2842ffe07aa0ea2d00e95f080163d9b74",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/607a1b24b7902a657426ce2412e316a57b61894b"
        },
        "date": 1752584653181,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013114743979999996,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1580166309666667,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02236918486,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007110156146666647,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "14218860+iulianbarbu@users.noreply.github.com",
            "name": "Iulian Barbu",
            "username": "iulianbarbu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "495d5a24c8078a0da1eb5e0fe8742a09f1f1bd5c",
          "message": "fix(minimal): pre-seal a first block to trigger maintain (#9207)\n\n# Description\n\nAfter making fork aware txpool the default, instant seal of minimal node\nstopped working as expected because any transaction sent to it got stuck\nin mempool , since there are no active views to include the tx in.\n\nTo overcome this we can create a first view by pre-sealing a first empty\nblock, which triggers the `maintain` phase and view building logic. This\nis compatible with single-state tx pool too.\n\n## Integration\n\nN/A\n\n## Review Notes\n\nN/A\n\n---------\n\nSigned-off-by: Iulian Barbu <iulian.barbu@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-16T06:51:33Z",
          "tree_id": "7fac401304e67f49b7999d7b132e8d00bd241316",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/495d5a24c8078a0da1eb5e0fe8742a09f1f1bd5c"
        },
        "date": 1752652680468,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15806409132000007,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022490743506666667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007421564053333329,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013258821013333335,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "bkontur@gmail.com",
            "name": "Branislav Kontur",
            "username": "bkontur"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "40e1a2a7c99c67fe5201145e473c87e1aea4bf05",
          "message": "Allow create backport branches to unstable by A4-backport-unstable* tag (#9167)\n\nIn this\n[PR](https://github.com/paritytech/polkadot-sdk/pull/9139#issuecomment-3052828167),\nI added the `A4-backport-unstable2507` label, but no backport branch was\ncreated for `unstable2507`.\n\nWas this intentional or just an oversight or did I miss anything in the\nrelease channel?\nHow do we do backports to unstable2507? If manually, just close this.\n\ncc: @EgorPopelyaev - this PR is just a blind draft (not sure if it\nworks), probably more needs to be fixed and properly tested. If we\nreally need this, could you please take it over the finish line? If not,\njust close it :)\n\nCo-authored-by: Egor_P <egor@parity.io>",
          "timestamp": "2025-07-16T16:23:51Z",
          "tree_id": "42f9ddd2a1ed680cc694879a7f84761b03ea1e9c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/40e1a2a7c99c67fe5201145e473c87e1aea4bf05"
        },
        "date": 1752687070648,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013079982806666666,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02244753284666666,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15815474354000006,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.006988766506666664,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "22591718+RomarQ@users.noreply.github.com",
            "name": "Rodrigo Quelhas",
            "username": "RomarQ"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6ecd83761b4fcac8c2c02ee05e8ec7213bacbc30",
          "message": "feat(pallet-xcm): Add supported_version to pallet-xcm genesis config (#9225)\n\nRelates to: https://github.com/polkadot-fellows/runtimes/issues/544\nCloses https://github.com/paritytech/polkadot-sdk/issues/9075\n\nAdds a `supported_version` field to the pallet-xcm genesis config. Which\nallows specifying versioned locations at genesis.",
          "timestamp": "2025-07-17T08:34:46Z",
          "tree_id": "4c37cf3bac9a7da5b7949782b000a08141fc207b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/6ecd83761b4fcac8c2c02ee05e8ec7213bacbc30"
        },
        "date": 1752745471093,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022308152673333324,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01313871086666667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007534647779999986,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15725125933333342,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "egor@parity.io",
            "name": "Egor_P",
            "username": "EgorPopelyaev"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "86d2a410ca95643e589f270808a6fa57de41369f",
          "message": "Don't use labels for branch names creation in the backport bot (#9243)",
          "timestamp": "2025-07-17T10:25:22Z",
          "tree_id": "438b192e6b4d0c685f1c5920b5081911a4e5283b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/86d2a410ca95643e589f270808a6fa57de41369f"
        },
        "date": 1752753131989,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007272951733333311,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012993416233333333,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022469097673333337,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15829248533999996,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "diego2737@gmail.com",
            "name": "Diego",
            "username": "dimartiro"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6b17df5ae96f7970109ec3934c7d288f05baa23b",
          "message": "Remove unused deps (#9235)\n\n# Description\n\nRemove unused deps using `cargo udeps`\n\nPart of: #6906\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>",
          "timestamp": "2025-07-17T14:18:53Z",
          "tree_id": "20c94cc5015d6ff1c010a46fd69c90c70442033b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/6b17df5ae96f7970109ec3934c7d288f05baa23b"
        },
        "date": 1752766967075,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02241349864,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013017972073333339,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15739894036,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.0073726842733333065,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "32168055+antkve@users.noreply.github.com",
            "name": "Anthony Kveder",
            "username": "antkve"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0ae5c5bbd96a600aed81358339be2f16bade4a81",
          "message": "Fixed genesis config presets for bridge tests (#9185)\n\nCloses: https://github.com/paritytech/polkadot-sdk/issues/9116\n\n---------\n\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Karol Kokoszka <karol@parity.io>",
          "timestamp": "2025-07-17T16:04:44Z",
          "tree_id": "19d750bba6685e132f90c471118eb1342e943c9f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/0ae5c5bbd96a600aed81358339be2f16bade4a81"
        },
        "date": 1752775893183,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007045628646666654,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012977416640000006,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15702606359999996,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022400364133333336,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b9fd81b1d511c1b82d44129ae6e3592620508d85",
          "message": "Remove `subwasmlib` (#9252)\n\nThis removes `subwasmlib` and replaces it with some custom code to fetch\nthe metadata. Main point of this change is the removal of some external\ndependency.\n\nCloses: https://github.com/paritytech/polkadot-sdk/issues/9203\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-18T11:26:43Z",
          "tree_id": "8158e2688a0180b1512385a845c592f5319d7f2d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/b9fd81b1d511c1b82d44129ae6e3592620508d85"
        },
        "date": 1752842206975,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.01324767780666667,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02246651202666666,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.0072162559999999765,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15728489556666672,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "363911+pepoviola@users.noreply.github.com",
            "name": "Javier Viola",
            "username": "pepoviola"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8b21416986049b26bf99e61bf1c43b7347ed564f",
          "message": "zombienet, make logs for para works (#9230)\n\nFix for correctly display the logs (urls) for paras.",
          "timestamp": "2025-07-18T15:25:49Z",
          "tree_id": "2bf2a30b19851859a8c1db0ac7e145031cf773ed",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/8b21416986049b26bf99e61bf1c43b7347ed564f"
        },
        "date": 1752856812656,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013092119593333333,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007131044439999971,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022407800293333335,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15718758524666668,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "22591718+RomarQ@users.noreply.github.com",
            "name": "Rodrigo Quelhas",
            "username": "RomarQ"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e007db09171dd5248f5d8663a56be679b92fdbe7",
          "message": "feat(cumulus): Adds support for additional relay state keys in parachain validation data inherent (#9262)\n\nAdds the possibility for parachain clients to collect additional relay\nstate keys into the validation data inherent.\n\nWith this change, other consensus engines can collect additional relay\nkeys into the parachain inherent data:\n```rs\nlet paras_inherent_data = ParachainInherentDataProvider::create_at(\n  relay_parent,\n  relay_client,\n  validation_data,\n  para_id,\n  vec![\n     relay_well_known_keys::EPOCH_INDEX.to_vec() // <----- Example\n  ],\n)\n.await;\n```",
          "timestamp": "2025-07-18T21:26:30Z",
          "tree_id": "12ecd4a047e3074ed0ff7953b85e24443d9a7332",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e007db09171dd5248f5d8663a56be679b92fdbe7"
        },
        "date": 1752878151499,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15651813248666666,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022384547086666675,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012838252339999997,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.0069476665066666434,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "5588131+kianenigma@users.noreply.github.com",
            "name": "Kian Paimani",
            "username": "kianenigma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0d2106685025a0dad542b0980aab763ce0352755",
          "message": "Allow locking to bump consumer without limits (#9176)\n\nLocking is a system-level operation, and can only increment the consumer\nlimit at most once. Therefore, it should use\n`inc_consumer_without_limits`. This behavior is optional, and is only\nused in the call path of `LockableCurrency`. Reserves, Holds and Freezes\n(and other operations like transfer etc.) have the ability to return\n`DispatchResult` and don't need this bypass. This is demonstrated in the\nunit tests added.\n\nBeyond this, this PR: \n\n* uses the correct way to get the account data in tests\n* adds an `Unexpected` event instead of a silent `debug_assert!`. \n* Adds `try_state` checks for correctness of `account.frozen` invariant.\n\n---------\n\nCo-authored-by: Ankan <10196091+Ank4n@users.noreply.github.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-20T08:51:04Z",
          "tree_id": "f4835fef77bc77f12a7b25e5789a72edb66a8110",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/0d2106685025a0dad542b0980aab763ce0352755"
        },
        "date": 1753005611316,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012821778426666661,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.006942005806666636,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02236581484666667,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15662957587333343,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "enntheprogrammer@gmail.com",
            "name": "sistemd",
            "username": "sistemd"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b17f06bf06dbee585bbd8dc6d070c5edf56916e1",
          "message": "babe: keep stateless verification in `Verifier`, move everything else to the import queue (#9147)\n\nWe agreed to split https://github.com/paritytech/polkadot-sdk/pull/8446\ninto two PRs: one for BABE (this one) and one for AURA. This is the\neasier one.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-20T16:43:16Z",
          "tree_id": "c968ceb147b12e27e9ff5063f8c4303d14b3aeb9",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/b17f06bf06dbee585bbd8dc6d070c5edf56916e1"
        },
        "date": 1753034208129,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022433106553333332,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15742359198000003,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012970944793333335,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007230996313333311,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "40807189+AlexandruCihodaru@users.noreply.github.com",
            "name": "Alexandru Cihodaru",
            "username": "AlexandruCihodaru"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "443c2ffa03ee20e8244fa4b52ec3c62750d55ca6",
          "message": "Rewrite validator disabling test with zombienet-sdk (#9128)\n\nFixes #9085\n\n---------\n\nSigned-off-by: Alexandru Cihodaru <alexandru.cihodaru@parity.io>",
          "timestamp": "2025-07-21T09:08:32Z",
          "tree_id": "60764da01881d68bd585187a0cf3d60596bfbc12",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/443c2ffa03ee20e8244fa4b52ec3c62750d55ca6"
        },
        "date": 1753093204679,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013269202026666663,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02270209992666667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007082158500000002,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15885153844666666,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c7f9908c2eeb1be70e57819537058beb53664446",
          "message": "gossip-support: make low connectivity message an error (#9264)\n\nAll is not well when a validator is not properly connected, e.g: of\nthings that might happen:\n- Finality might be slightly delay because validator will be no-show\nbecause they can't retrieve PoVs to validate approval work:\nhttps://github.com/paritytech/polkadot-sdk/issues/8915.\n- When they author blocks they won't back things because gossiping of\nbacking statements happen using the grid topology:, e.g blocks authored\nby validators with a low number of peers:\n\nhttps://polkadot.js.org/apps/?rpc=wss%3A%2F%2Frpc-polkadot.helixstreet.io#/explorer/query/26931262\n\nhttps://polkadot.js.org/apps/?rpc=wss%3A%2F%2Frpc-polkadot.helixstreet.io#/explorer/query/26931260\n\nhttps://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fpolkadot.api.onfinality.io%2Fpublic-ws#/explorer/query/26931334\n\nhttps://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fpolkadot-public-rpc.blockops.network%2Fws#/explorer/query/26931314\n\nhttps://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fpolkadot-public-rpc.blockops.network%2Fws#/explorer/query/26931292\n\nhttps://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fpolkadot-public-rpc.blockops.network%2Fws#/explorer/query/26931447\n\n\nThe problem is seen in `polkadot_parachain_peer_count` metrics, but it\nseems people are not monitoring that well enough, so let's make it more\nvisible nodes with low connectivity are not working in good conditions.\n\nI also reduced the threshold to 85%, so that we don't trigger this error\nto eagerly.\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-21T09:57:39Z",
          "tree_id": "472c2b031140ce823b7947201ff39347eaf6dbee",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c7f9908c2eeb1be70e57819537058beb53664446"
        },
        "date": 1753096088613,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15689138130666672,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012961870213333332,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022321355099999995,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007300989919999997,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "40807189+AlexandruCihodaru@users.noreply.github.com",
            "name": "Alexandru Cihodaru",
            "username": "AlexandruCihodaru"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "161e7f4d8b9b6908694d0ccc9bd0ef4a1674e860",
          "message": "Rewrite old disputes test with zombienet-sdk (#9257)\n\nFixes: #9256\n\n---------\n\nSigned-off-by: Alexandru Cihodaru <alexandru.cihodaru@parity.io>",
          "timestamp": "2025-07-21T13:46:01Z",
          "tree_id": "24c826bb9c1c557cd72bf46b1b000eea42cc3c0f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/161e7f4d8b9b6908694d0ccc9bd0ef4a1674e860"
        },
        "date": 1753109632067,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012959029880000002,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022338434700000007,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1566965630866667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.0070836059199999735,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "117115317+lrubasze@users.noreply.github.com",
            "name": "Lukasz Rubaszewski",
            "username": "lrubasze"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b4b019e4db0ef47b0952638388eba4958e1c4004",
          "message": "Zombienet CI improvements (#9172)\n\n## 🔄 Zombienet CI Refactor: Matrix-Based Workflows\n\nThis PR refactors the Zombienet CI workflows to use a **matrix-based\napproach**, resulting in:\n\n- ✅ **Easier test maintenance** – easily add or remove tests without\nduplicating workflow logic.\n- 🩹 **Improved flaky test handling** – flaky tests are excluded by\ndefault but can be explicitly included by pattern.\n- 🔍 **Pattern-based test selection** – run only tests matching a name\npattern, ideal for debugging.\n\n---\n\n## 🗂️ Structure Changes\n\n- **Test definitions** are now stored in `.github/zombienet-tests/`.\n- Each workflow (`Cumulus`, `Substrate`, `Polkadot`, `Parachain\nTemplate`) has its own YAML file with test configurations.\n\n---\n\n## 🧰 Added Scripts\n\n### `.github/scripts/parse-zombienet-tests.py`\n- Parses test definitions and generates a GitHub Actions matrix.\n- Filters out flaky tests by default.\n- If a `test_pattern` is provided, matching tests are **included even if\nflaky**.\n\n### `.github/scripts/dispatch-zombienet-workflow.sh`\n- Triggers a Zombienet workflow multiple times, optionally filtered by\ntest name pattern.\n- Stores results in a **CSV file** for analysis.\n- Useful for debugging flaky tests or stress-testing specific workflows.\n- Intended to be run from the local machine.\n\n---------\n\nCo-authored-by: Javier Viola <363911+pepoviola@users.noreply.github.com>\nCo-authored-by: Alexander Samusev <41779041+alvicsam@users.noreply.github.com>\nCo-authored-by: Javier Viola <javier@parity.io>",
          "timestamp": "2025-07-21T16:28:18Z",
          "tree_id": "b6ee4c0f3e3cb8b9bd8a8cadc045014f1ac0fd77",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/b4b019e4db0ef47b0952638388eba4958e1c4004"
        },
        "date": 1753119560159,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013039044593333333,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.0070197204200000375,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15695965793333333,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02217715588,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "60601340+lexnv@users.noreply.github.com",
            "name": "Alexandru Vasile",
            "username": "lexnv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "2f8d2a2b875a3f08aae5dd82c09ffe65932d2e62",
          "message": "consensus/grandpa: Fix high number of peer disconnects with invalid justification (#9015)\n\nA grandpa race-casse has been identified in the versi-net stack around\nauthority set changes, which leads to the following:\n\n- T0 / Node A: Completes round (15)\n- T1 / Node A: Applies new authority set change and increments the SetID\n(from 0 to 1)\n- T2 / Node B: Sends Precommit for round (15) with SetID (0) -- previous\nset ID\n- T3 / Node B: Applies new authority set change and increments the SetID\n(1)\n\nIn this scenario, Node B is not aware at the moment of sending\njustifications that the Set ID has changed.\nThe downstream effect is that Node A will not be able to verify the\nsignature of justifications, since a different SetID is taken into\naccount. This will cascade through the sync engine, where the Node B is\nwrongfully banned and disconnected.\n\nThis PR aims to fix the edge-case by making the grandpa resilient to\nverifying prior setIDs for signatures.\nWhen the signature of the grandpa justification fails to decode, the\nprior SetID is also verified. If the prior SetID produces a valid\nsignature, then the outdated justification error is propagated through\nthe code (ie `SignatureResult::OutdatedSet`).\n\nThe sync engine will handle the outdated justifications as invalid, but\nwithout banning the peer. This leads to increased stability of the\nnetwork during authority changes, which caused frequent disconnects to\nversi-net in the past.\n\n### Review Notes\n- Main changes that verify prior SetId on failures are placed in\n[check_message_signature_with_buffer](https://github.com/paritytech/polkadot-sdk/pull/9015/files#diff-359d7a46ea285177e5d86979f62f0f04baabf65d595c61bfe44b6fc01af70d89R458-R501)\n- Sync engine no longer disconnects outdated justifications in\n[process_service_command](https://github.com/paritytech/polkadot-sdk/pull/9015/files#diff-9ab3391aa82ee2b2868ece610100f84502edcf40638dba9ed6953b6e572dfba5R678-R703)\n\n### Testing Done\n- Deployed the PR to versi-net with 40 validators\n- Prior we have noticed 10/40 validators disconnecting every 15-20\nminutes, leading to instability\n- Over past 24h the issue has been mitigated:\nhttps://grafana.teleport.parity.io/goto/FPNWlmsHR?orgId=1\n- Note: bootnodes 0 and 1 are currently running outdated versions that\ndo not incorporate this SetID verification improvement\n\nCloses: https://github.com/paritytech/polkadot-sdk/issues/8872\nCloses: https://github.com/paritytech/polkadot-sdk/issues/1147\n\n---------\n\nSigned-off-by: Alexandru Vasile <alexandru.vasile@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Dmitry Markin <dmitry@markin.tech>",
          "timestamp": "2025-07-22T12:08:36Z",
          "tree_id": "e83cda247a4ac590cf45c24390e0736eea169d4c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/2f8d2a2b875a3f08aae5dd82c09ffe65932d2e62"
        },
        "date": 1753190805553,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007030141393333313,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02248606172666667,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012915019499999996,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.16056689800666668,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "dmitry@markin.tech",
            "name": "Dmitry Markin",
            "username": "dmitry-markin"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "db5e645422ccf952018a3c466a33fef477858602",
          "message": "network: Upgrade litep2p to v0.10.0 (#9287)\n\n## litep2p v0.10.0\n\nThis release adds the ability to use system DNS resolver and change\nKademlia DNS memory store capacity. It also fixes the Bitswap protocol\nimplementation and correctly handles the dropped notification substreams\nby unregistering them from the protocol list.\n\n### Added\n\n- kad: Expose memory store configuration\n([#407](https://github.com/paritytech/litep2p/pull/407))\n- transport: Allow changing DNS resolver config\n([#384](https://github.com/paritytech/litep2p/pull/384))\n\n### Fixed\n\n- notification: Unregister dropped protocols\n([#391](https://github.com/paritytech/litep2p/pull/391))\n- bitswap: Fix protocol implementation\n([#402](https://github.com/paritytech/litep2p/pull/402))\n- transport-manager: stricter supported multiaddress check\n([#403](https://github.com/paritytech/litep2p/pull/403))\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-22T14:24:10Z",
          "tree_id": "a01eacbdd376755eea81cbd3e34a8279b13055c8",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/db5e645422ccf952018a3c466a33fef477858602"
        },
        "date": 1753198815087,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.006975864026666695,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15715692232000003,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012941121266666663,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022270473313333337,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "diego2737@gmail.com",
            "name": "Diego",
            "username": "dimartiro"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6a951f77bf0cbdb4bbb07783aac8a45bfb38351a",
          "message": "Dedup dependencies between dependencies and dev-dependencies (#9233)\n\n# Description\n\nDeduplicate some dependencies between `dependencies` and\n`dev-dependencies` sections\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-07-22T22:17:02+02:00",
          "tree_id": "8cb1aa69bfd7b4adc90c07e3af54a8f5ef858e5b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/6a951f77bf0cbdb4bbb07783aac8a45bfb38351a"
        },
        "date": 1753217525873,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013094999826666667,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15784890442666677,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007456232059999981,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022270537686666668,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "enntheprogrammer@gmail.com",
            "name": "sistemd",
            "username": "sistemd"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e2802be4f32f55006abd3a40fc1808d997eaa4e1",
          "message": "fix: skip verifying imported blocks (#9280)\n\nCloses https://github.com/paritytech/polkadot-sdk/issues/9277. Still WIP\ntesting\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-22T21:08:01Z",
          "tree_id": "81087a8a688af80d3a3c027177554189be9e4050",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e2802be4f32f55006abd3a40fc1808d997eaa4e1"
        },
        "date": 1753222727551,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013129638573333331,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02255504101333333,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007340116739999974,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15899331259333332,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "10196091+Ank4n@users.noreply.github.com",
            "name": "Ankan",
            "username": "Ank4n"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a34de56236e741a081aeb9f7af5094d781e0ac9d",
          "message": "[Staking Async] Saturating accrue era reward points (#9186)\n\nReplaces regular addition with saturating addition when accumulating era\nreward points in `pallet-staking-async` to prevent potential overflow.\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-07-23T07:59:42Z",
          "tree_id": "17724309115bdf377ef4cbb9701eb49cfe7146f6",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/a34de56236e741a081aeb9f7af5094d781e0ac9d"
        },
        "date": 1753261785042,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012943812279999998,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022228584186666667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.006987591266666663,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1570258104066667,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "178801527+raymondkfcheung@users.noreply.github.com",
            "name": "Raymond Cheung",
            "username": "raymondkfcheung"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9428742a2994c4fb2b2de8d4bfc36deeca01e19d",
          "message": "Replace `log` with `tracing` on `pallet-bridge-grandpa` (#9294)\n\nThis PR replaces `log` with `tracing` instrumentation on\n`pallet-bridge-grandpa` by providing structured logging.\n\nPartially addresses #9211",
          "timestamp": "2025-07-23T16:44:52Z",
          "tree_id": "531de75c002557fd8ed854570af158ed405f2c2f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/9428742a2994c4fb2b2de8d4bfc36deeca01e19d"
        },
        "date": 1753293364752,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007040802586666667,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15702555362000004,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01278769,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02224471650666666,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "karol@parity.io",
            "name": "Karol Kokoszka",
            "username": "karolk91"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "069b7b56118fd65ecdbc6fea6c4dd1ffbf586d67",
          "message": "Fix subsume_assets incorrectly merging two AssetsInHolding (#9179)\n\n`subsume_assets` fails to correctly subsume two instances of\n`AssetsInHolding` under certain conditions which can result in loss of\nfunds (as assets are overriden rather than summed together)\n\nEg. consider following test:\n```\n\t#[test]\n\tfn subsume_assets_different_length_holdings() {\n\t\tlet mut t1 = AssetsInHolding::new();\n\t\tt1.subsume(CFP(400));\n\n\t\tlet mut t2 = AssetsInHolding::new();\n\t\tt2.subsume(CF(100));\n\t\tt2.subsume(CFP(100));\n\n\t\tt1.subsume_assets(t2);\n```\n\ncurrent result (without this PR change):\n```\n\t\tlet mut iter = t1.into_assets_iter();\n\t\tassert_eq!(Some(CF(100)), iter.next());\n\t\tassert_eq!(Some(CFP(100)), iter.next());\n```\n\nexpected result:\n```\n\t\tlet mut iter = t1.into_assets_iter();\n\t\tassert_eq!(Some(CF(100)), iter.next());\n\t\tassert_eq!(Some(CFP(500)), iter.next());\n```\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>",
          "timestamp": "2025-07-24T05:51:09Z",
          "tree_id": "a2e8b99e5afdb2a058e9db3d8566040f491d5955",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/069b7b56118fd65ecdbc6fea6c4dd1ffbf586d67"
        },
        "date": 1753340571023,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15833177312666671,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013222659020000006,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02243494738666666,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00721286367999997,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "4211399+ordian@users.noreply.github.com",
            "name": "ordian",
            "username": "ordian"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e5e3941b5fb480a27e37f28fd437962dd029ec96",
          "message": "yap-runtime: fixes for `GetParachainInfo` (#9312)\n\nThis fixes the YAP parachain runtimes in case you encounter a panic in\nthe collator similar to\nhttps://github.com/paritytech/zombienet/issues/2050:\n```\nFailed to retrieve the parachain id\n```\n(which we do have zombienet-sdk tests for\n[here](https://github.com/paritytech/polkadot-sdk/blob/master/substrate/client/transaction-pool/tests/zombienet/yap_test.rs))\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-24T13:03:01Z",
          "tree_id": "d908f5b48bf7d1a16c929565a909eeb7371482b8",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e5e3941b5fb480a27e37f28fd437962dd029ec96"
        },
        "date": 1753366276461,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.0222459761,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01289209649333333,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1571805428066667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.0073022672933333145,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "40807189+AlexandruCihodaru@users.noreply.github.com",
            "name": "Alexandru Cihodaru",
            "username": "AlexandruCihodaru"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "bb39b4ecea005157687ed61c6ca4775f2264494f",
          "message": "RecentDisputes/ActiveDisputes use BTreeMap instead of Vec (#9309)\n\nFixes #782\n\n---------\n\nSigned-off-by: Alexandru Cihodaru <alexandru.cihodaru@parity.io>",
          "timestamp": "2025-07-24T15:30:53Z",
          "tree_id": "f92f583f62b60e6c2c65e160ad06d8fce52e9c06",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/bb39b4ecea005157687ed61c6ca4775f2264494f"
        },
        "date": 1753375185286,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007532185339999966,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15999876183333334,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013258490286666664,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022394861673333336,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "dmitry@markin.tech",
            "name": "Dmitry Markin",
            "username": "dmitry-markin"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5b4ce9cbf1a46c843e391768ae179ac377aab951",
          "message": "network/litep2p: Switch to system DNS resolver (#9321)\n\nSwitch to system DNS resolver instead of 8.8.8.8 that litep2p uses by\ndefault. This enables full administrator control of what upstream DNS\nservers to use, including resolution of local names using custom DNS\nservers.\n\nFixes https://github.com/paritytech/polkadot-sdk/issues/9298.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-25T09:05:15Z",
          "tree_id": "0487343c65a8af24281068c6c4aa4dcbfe0dab75",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/5b4ce9cbf1a46c843e391768ae179ac377aab951"
        },
        "date": 1753438494098,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15831217179333334,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022376474373333333,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013069394553333336,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007360835046666642,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "60601340+lexnv@users.noreply.github.com",
            "name": "Alexandru Vasile",
            "username": "lexnv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "7a608034433319b217a18c72d8e21c7024e9849e",
          "message": "litep2p/discovery: Ensure non-global addresses are not reported as external (#9281)\n\nThis PR ensures that external addresses discovered by the identify\nprotocol are not propagated to the litep2p backend if they are not\nglobal. This leads to a healthier DHT over time, since nodes will not\nadvertise loopback / non-global addresses.\n\nWe have seen various cases were loopback addresses were reported as\nexternal:\n\n```\n2025-07-16 16:18:39.765 TRACE tokio-runtime-worker sub-libp2p::discovery: verify new external address: /ip4/127.0.0.1/tcp/30310/p2p/12D3KooWNw19ScMjzNGLnYYLQxWcM9EK9VYPbCq241araUGgbdLM    \n\n2025-07-16 16:18:39.765  INFO tokio-runtime-worker sub-libp2p: 🔍 Discovered new external address for our node: /ip4/127.0.0.1/tcp/30310/p2p/12D3KooWNw19ScMjzNGLnYYLQxWcM9EK9VYPbCq241araUGgbdLM\n```\n\nThis PR takes into account the network config for\n`allow_non_global_addresses`.\n\nCloses: https://github.com/paritytech/polkadot-sdk/issues/9261\n\ncc @paritytech/networking\n\n---------\n\nSigned-off-by: Alexandru Vasile <alexandru.vasile@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-25T09:44:03Z",
          "tree_id": "b7dadd74f3fb7f1d31ff3b60936282599d8455e1",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/7a608034433319b217a18c72d8e21c7024e9849e"
        },
        "date": 1753442489484,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022422883473333325,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01327117292666667,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1586410316000001,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007440151966666666,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "egor@parity.io",
            "name": "Egor_P",
            "username": "EgorPopelyaev"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e11b1dcecc10f0fe3dab8785e6c52f243f82030b",
          "message": "[Backport] Regular version bumps and prdoc reordering from the stable2506 release branch back to master (#9320)\n\nThis PR backports:\n- NODE_VERSION bumps\n- spec_version bumps\n- prdoc reordering\nfrom the release branch back to master\n\n---------\n\nCo-authored-by: ParityReleases <release-team@parity.io>",
          "timestamp": "2025-07-25T10:39:37Z",
          "tree_id": "754e61e7d28611ce0028d2067705a17bf7d8e6ae",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e11b1dcecc10f0fe3dab8785e6c52f243f82030b"
        },
        "date": 1753444560839,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.0075891496133332955,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1578593160933333,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022273610633333333,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01323457804,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "50408393+TDemeco@users.noreply.github.com",
            "name": "Tobi Demeco",
            "username": "TDemeco"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "33a43cf48b0dc78fad1212ceb15b64b81fb8e761",
          "message": "fix: :bug: use `MaxKeys` from `pallet-im-online`'s Config trait instead of hardcoded one in benchmarks (#9325)\n\nThis PR is a simple fix for issue #9324, by making the benchmarks of\n`pallet-im-online` linear up to `pallet_im_online::Config::MaxKeys`\ninstead of the hardcoded constant `MAX_KEYS = 1000`.\n\nThis should allow any runtime that uses `pallet-im-online` with less\nthan 1000 max keys to be able to benchmark the pallet correctly.",
          "timestamp": "2025-07-25T11:25:12Z",
          "tree_id": "162909f5bbb972eef3d874f961d45df3fd0315c3",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/33a43cf48b0dc78fad1212ceb15b64b81fb8e761"
        },
        "date": 1753446875089,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007392612639999986,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022382510106666666,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013219281606666666,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15826485486000005,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "73b44193c8e66acd699f04265027289d030f6c66",
          "message": "frame_system: Whitelist storage items and do not double kill! (#9335)\n\nThis pull requests adds some storage values to the whitelisted storage\nitem list, because they are written in every block. Also it stops double\nkilling `InherentsApplied`. It is killed in `on_finalize`, so there is\nno need to do it again in `on_initialize`.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-25T14:45:45Z",
          "tree_id": "250c3b45b5be25c30e0286f5dab152b98fee7eef",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/73b44193c8e66acd699f04265027289d030f6c66"
        },
        "date": 1753459000253,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15712969134666666,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012979541686666662,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007442378959999963,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022246441173333333,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1728078+michalkucharczyk@users.noreply.github.com",
            "name": "Michal Kucharczyk",
            "username": "michalkucharczyk"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "7ef027551fd1290c42581a85052b643bffc9cbe4",
          "message": "`fatxpool`: avoid premature revalidation of transactions (#9189)\n\nThis PR improves handling of the following scenario:\n```\nsend tx1: transfer to fund new  X account \n# wait for tx1 in block event (let's assume it happens at block N) \nsend tx2: spend from X account\n```\n\nBefore this PR `tx2` could be invalidated (and most likely was) when\n`block N-k` was finalized, because transactions are checked for being\ninvalid on finalized block. (The `X account` does not yet exists for any\nblock before `block N`).\n\nAfter this commit transactions will be revalidated on finalized blocks\nonly if their height is greater then height of the block at which\ntransactions was originally submitted.\n\nNote: There are no guarantees that `tx2` will be actually included, it\nstill may happen that it will be dropped under some circumstances. This\nonly reduces likelihood of dropping transaction.\n\n\nNote for reviewers:\nThe fix is to simply initialize\n[`validated_at`](https://github.com/paritytech/polkadot-sdk/blob/f8a1fe64c29b1ddcb5824bbb3bf327f528f18d40/substrate/client/transaction-pool/src/fork_aware_txpool/tx_mem_pool.rs#L98-L99)\nfield of `TxInMemPool` which is used to\n[select](https://github.com/paritytech/polkadot-sdk/blob/f8a1fe64c29b1ddcb5824bbb3bf327f528f18d40/substrate/client/transaction-pool/src/fork_aware_txpool/tx_mem_pool.rs#L583-L586)\ntransactions for mempool revalidation on finalized block.\n\nFixes: #9150\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Iulian Barbu <14218860+iulianbarbu@users.noreply.github.com>",
          "timestamp": "2025-07-26T09:38:10Z",
          "tree_id": "9290436971f50c36e2f18f32158c7ff376adf03a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/7ef027551fd1290c42581a85052b643bffc9cbe4"
        },
        "date": 1753526854297,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15659577266000008,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02243306604666666,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.0071304490200000134,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013110036520000003,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "178801527+raymondkfcheung@users.noreply.github.com",
            "name": "Raymond Cheung",
            "username": "raymondkfcheung"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "edc8a7f95405b929318bb40867a3caca1bca9565",
          "message": "Replace `log` with `tracing` on `pallet-bridge-messages` (#9308)\n\nThis PR replaces `log` with `tracing` instrumentation on\n`pallet-bridge-messages` by providing structured logging.\n\nPartially addresses #9211",
          "timestamp": "2025-07-28T08:02:29Z",
          "tree_id": "7bd256fb1ed72a826f529fda260828a26b18a940",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/edc8a7f95405b929318bb40867a3caca1bca9565"
        },
        "date": 1753694054763,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022319592299999993,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15722770533333338,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013227561839999997,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007295035879999976,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "178801527+raymondkfcheung@users.noreply.github.com",
            "name": "Raymond Cheung",
            "username": "raymondkfcheung"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "bb4130369ed03ec130ba41ea4cf33cbc97a98c2f",
          "message": "Replace `log` with `tracing` on `bridge-runtime-common` (#9288)\n\nThis PR replaces `log` with `tracing` instrumentation on\n`bridge-runtime-common` by providing structured logging.\n\nPartially addresses #9211\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Andrii <ndk@parity.io>",
          "timestamp": "2025-07-28T11:54:43Z",
          "tree_id": "646c8459d9769ef4cfaf313adf64bccd2294d254",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/bb4130369ed03ec130ba41ea4cf33cbc97a98c2f"
        },
        "date": 1753707837958,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022134684966666665,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15687084059333334,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007083831753333312,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012939305286666664,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "dharjeezy@gmail.com",
            "name": "dharjeezy",
            "username": "dharjeezy"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "492f66cdfcb2da0dfc8ce66b8b32e8801ea14fe9",
          "message": "include poll_index in voted and vote removed event (#8840)\n\ncloses #8785\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>",
          "timestamp": "2025-07-28T13:10:54Z",
          "tree_id": "f964a6f7afdb1acbb1ccef2fee733840f65de696",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/492f66cdfcb2da0dfc8ce66b8b32e8801ea14fe9"
        },
        "date": 1753712894840,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15808651893999998,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007190448493333303,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013086360979999998,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022487884586666666,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "dmitry@markin.tech",
            "name": "Dmitry Markin",
            "username": "dmitry-markin"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a15d066faac70676101854cfa9b55f00f61e865a",
          "message": "network/kad: Increase memory store capacity for providers (#9315)\n\nIncrease Kademlia memory store capacity for DHT content providers (used\nby parachain DHT-based bootnodes) and reduce provider republish interval\n& TTL. This is needed to support testnets with 1-minute fast runtime and\nup to 13 parachains.\n\nParameters set:\n- 10000 provider keys per node\n- 10h provider record TTL\n- 3.5h provider republish interval\n\nCloses https://github.com/paritytech/litep2p/issues/405.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-28T15:24:53Z",
          "tree_id": "51754d7b2f1622572ee764f0d16ad5ca318154ee",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/a15d066faac70676101854cfa9b55f00f61e865a"
        },
        "date": 1753720987543,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022649611713333333,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012995524546666663,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1584847185733334,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00726654268666665,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "178801527+raymondkfcheung@users.noreply.github.com",
            "name": "Raymond Cheung",
            "username": "raymondkfcheung"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ff6a5f7ec52525bfada191fd04cf6e8c34d2b78e",
          "message": "Replace `log` with `tracing` on `pallet-bridge-parachains` (#9318)\n\nThis PR replaces `log` with `tracing` instrumentation on\n`pallet-bridge-parachains` by providing structured logging.\n\nPartially addresses #9211",
          "timestamp": "2025-07-28T16:12:47Z",
          "tree_id": "bf341a229cf46b75766555d16d51600cbf931095",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ff6a5f7ec52525bfada191fd04cf6e8c34d2b78e"
        },
        "date": 1753723300865,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013145799540000001,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15795668202666677,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02234840120666667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007114334419999975,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "140437456+hamidmuslih@users.noreply.github.com",
            "name": "Hamid Muslih",
            "username": "hamidmuslih"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ba5ed25153d37d273040925d1336620a34044fbd",
          "message": "update the builder dockerfile (#9310)\n\n# Description\n\nUpdates the base image in the Polkadot builder Dockerfile\n\nCloses #9306\n## Integration\n\nNot applicable - this PR has no downstream integration impacts as it\nonly affects the local build environment\n\n## Review Notes\n\nThis PR updates the builder base image version in\n`polkadot_builder.Dockerfile`.\n\nCo-authored-by: Alexander Samusev <41779041+alvicsam@users.noreply.github.com>",
          "timestamp": "2025-07-28T23:31:56+02:00",
          "tree_id": "b96e77db1d8bcdf9b9df5163aa72d74c87993ed2",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ba5ed25153d37d273040925d1336620a34044fbd"
        },
        "date": 1753740336467,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15721912378,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013071345366666674,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.0071565755666666885,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02223492379333333,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "82968568+miloskriz@users.noreply.github.com",
            "name": "Milos Kriz",
            "username": "miloskriz"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d55dc56df31a9f4fdd59ca7ca06f2a8b00ad808b",
          "message": "Maintenance of bootnodes for `westend` and related chains (#9353)\n\n# Description\n\nPlease consider this Pull Request to remove the bootnodes provided by\nGatotech to the following relaychain and systemchains:\n\n- `westend`\n  - `asset-hub-westend`\n  - `bridge-hub-westend`\n  - `collectives-westend`\n  - `coretime-westend`\n  - `people-westend`\n\nThis removal responds to the discontinuation of support by the\nInfrastructure Builders' Programme of Westend in favour of enhanced\nsupport to the Paseo testnet.\n\nAfter this PR is merged, we will proceed to decommission the relevant\nnodes..\n\nMany thanks!!\n\nBest regards\n\n**_Milos_**\n\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-07-29T12:39:54Z",
          "tree_id": "5e96d7613fc4bd03f97b864271e24e4e0bc984db",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d55dc56df31a9f4fdd59ca7ca06f2a8b00ad808b"
        },
        "date": 1753797163824,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022532667319999998,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15786893300000007,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.0071946026399999745,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013313194993333333,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "835ee4782522319cf5d8de9e35a20e56ead143b7",
          "message": "cumulus zombienet: Send transactions as immortal (#9362)\n\nDeep inside subxt the default period for a transaction is set to 32\nblocks. When you have some chain that is building blocks every 500ms,\nthis may leads to issues that manifest as invalid transaction\nsignatures. To protect the poor developers of endless debugging sessions\nwe now send transactions as immortal.",
          "timestamp": "2025-07-29T19:28:17Z",
          "tree_id": "7bf288f567d290b92248d562ce63c1d26211e02b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/835ee4782522319cf5d8de9e35a20e56ead143b7"
        },
        "date": 1753822941198,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022471429646666662,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007188058199999965,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013048686513333331,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15772519954000008,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "karol@parity.io",
            "name": "Karol Kokoszka",
            "username": "karolk91"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a64eb1fb02d4012948cba024fca2f27d94732e52",
          "message": "Remove whitespaces added by macros due to token re-parsing (#9354)\n\nRelates to: https://github.com/paritytech/polkadot-sdk/issues/9336,\nhttps://github.com/paritytech/polkadot-sdk/pull/7321\n\nThis PR aims to normalize result of `stringify` in scenarios when used\ninside nested macros to stringify token streams for benchmarking\nframework. Different versions of rust can include, or not, \"space\"\ncharacters around tokens like `<`,`>`,`::` so we are just removing\nadditional spaces.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-30T05:46:16Z",
          "tree_id": "b85a3b83c7dfcdd03e82495f9156048789f905e2",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/a64eb1fb02d4012948cba024fca2f27d94732e52"
        },
        "date": 1753859059460,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022237665440000005,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15882673526666674,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007383033833333303,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013279433386666668,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "10196091+Ank4n@users.noreply.github.com",
            "name": "Ankan",
            "username": "Ank4n"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d753869cbb5a6db66ac0dc88c2acb407301eaa01",
          "message": "Fix definition of held balance (#9347)\n\n## Changes\n- Updated the `Held Balance` definition to reflect the current behavior.\nThe previous explanation was accurate when staking used locks (which\nwere part of the free balance), but since [staking now uses\nholds](https://github.com/paritytech/polkadot-sdk/pull/5501), the old\ndefinition is misleading.\nThis issue was originally pointed out by @michalisFr\n[here](https://github.com/w3f/polkadot-wiki/pull/6793#discussion_r2231472702).\n- Fixed a broken reference in the deprecated doc for `ExposureOf`, which\nwas (ironically) pointing to a non-existent type named `ExistenceOf`.\nThis slipped in during our [mega async staking\nPR](https://github.com/paritytech/polkadot-sdk/pull/8127).",
          "timestamp": "2025-07-30T12:06:36Z",
          "tree_id": "233781385e6bdbed9c58e4af8c5b98876f525d62",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d753869cbb5a6db66ac0dc88c2acb407301eaa01"
        },
        "date": 1753882177676,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012943104733333329,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022255930300000008,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007114286560000003,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15736506727333335,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "10196091+Ank4n@users.noreply.github.com",
            "name": "Ankan",
            "username": "Ank4n"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8c8b53babdfa73ad6752e516d62d7af655472e1f",
          "message": "[Staking Async] Cancel slashes by validator and max slash fraction (#9187)\n\n## Problem\n\nPreviously, the `cancel_deferred_slash` function required exact slash\nkeys (validator, slash fraction, page index) to cancel slashes. However,\nwhen additional offence reports arrived after a cancellation referendum\nwas initiated, they could create new entries with higher slash\nfractions, making the original cancellation ineffective.\n\n### Changes\n\nWe introduce a new approach that tracks cancelled slashes by era and\nvalidator with their maximum slash fractions:\n\n1. **New Storage**: Added `CancelledSlashes` storage map that stores\ncancellation decisions by era.\n2. **Updated API**: Changed call signature `cancel_deferred_slash` to\naccept `Vec<(AccountId, Perbill)>` instead of complex slash keys. Admin\norigin can now specify which validators to cancel and up to what slash\nfraction.\n3. **Cleanup**: `CancelledSlashes` are cleared after all slashes for an\nera are processed.\n4. **Updated SlashCancelled Event**: Event contains only slash_era and\nvalidator instead of slash key tuple and payout.\n\n---------\n\nCo-authored-by: Paolo La Camera <paolo@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-07-30T14:12:32Z",
          "tree_id": "42b978bf4a2c26c7d60c04626d6cbba98fbdab93",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/8c8b53babdfa73ad6752e516d62d7af655472e1f"
        },
        "date": 1753889725735,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007337791606666646,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02245484386666667,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1582625065,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013024059473333332,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "5588131+kianenigma@users.noreply.github.com",
            "name": "Kian Paimani",
            "username": "kianenigma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e08d8f0173db4394e0f99fff91a42d86e8d6062b",
          "message": "[Staking/AHM] Properly report weight of rc -> ah xcm back to the calls (#9380)\n\nWhich will consequently make the XCM/MQ code path aware of the weights,\nwhich was previously not the case.\n\nAdditionally, adds an event for when an era is pruned.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Paolo La Camera <paolo@parity.io>",
          "timestamp": "2025-07-30T14:51:41Z",
          "tree_id": "37ee2ae118ac7b9b9196dd78e4445a0f9a15c469",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e08d8f0173db4394e0f99fff91a42d86e8d6062b"
        },
        "date": 1753891730746,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013287851393333336,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007342229286666635,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15784981396,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02245696393333334,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5633cf5f16d226428a5e87a9a17b7415bcaaec6d",
          "message": "Ignore trie nodes while recording a proof (#8172)\n\nThis pull requests implements support for ignoring trie nodes while\nrecording a proof. It directly includes the feature into\n`basic-authorship` to later make use of it in Cumulus for multi-block\nPoVs.\n\nThe idea behind this is when you have multiple blocks per PoV that trie\nnodes accessed or produced by a block before (in the same `PoV`), are\nnot required to be added to the storage proof again. So, all the blocks\nin one `PoV` basically share the same storage proof. This also impacts\nthings like storage weight reclaim, because ignored trie node do not\ncontribute a to the storage proof size (similar to when this would\nhappen in the same block).\n\n# Example \n\nLet's say block `A` access key `X` and block `B` accesses key `X` again.\nAs `A` already has read it, we know that it is part of the storage proof\nand thus, don't need to add it again to the storage proof when building\n`B`. The same applies for storage values produced by an earlier block\n(in the same PoV). These storage values are an output of the execution\nand thus, don't need to be added to the storage proof :)\n\n\nDepends on https://github.com/paritytech/polkadot-sdk/pull/6137. Base\nbranch will be changed when this got merged.\n\nPart of: https://github.com/paritytech/polkadot-sdk/issues/6495\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Michal Kucharczyk <1728078+michalkucharczyk@users.noreply.github.com>",
          "timestamp": "2025-07-31T09:59:56Z",
          "tree_id": "431ac4005d7655af6fd7d76f89ff6162d34b87b1",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/5633cf5f16d226428a5e87a9a17b7415bcaaec6d"
        },
        "date": 1753960514905,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022331424039999995,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007062937320000017,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15746427334666674,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013097591226666665,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "karol@parity.io",
            "name": "Karol Kokoszka",
            "username": "karolk91"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d9f451a6b94ab2cf39371ee5192130379eb6e199",
          "message": "XCMv5 asset exchange test scenarios (#9195)\n\nRelates to: #9093\nRequires: #9179\n\nThis PR introduces emulated test scenarios:\n\n#### [Scenario 1]\n(Penpal -> AH -> Penpal) to showcase usage of remote `Transact` to swap\nassets remotely on AssetHub while also making use of\n`add_authorized_alias`, to transact as Sender on remote side (instead of\nSenders sovereign account).\n\n1. Prepare sovereign accounts funds, create pools, prepare aliasing\nrules\n2. Send WND from Penpal to AssetHub (AH being remote reserve for WND)\n3. Alias into sender account and exchange WNDs for USDT using `Transact`\nwith `swap_tokens_for_exact_tokens` call inside\n4. Send USDT and leftover WND back to Penpal\n\n#### [Scenario 2]\n(Penpal -> AH -> Penpal) to showcase usage of remote `Transact` to swap\nassets remotely on AssetHub.\n\n1. Prepare sovereign accounts funds, create pools, prepare aliasing\nrules\n2. Send WND from Penpal to AssetHub (AH being remote reserve for WND)\n3. Exchange WNDs for USDT using `Transact` with\n`swap_tokens_for_exact_tokens` call inside\n4. Send USDT and leftover WND back to Penpal\n\n#### [Scenario 3]\n(Penpal -> AH -> Penpal) to showcase same as above but this time using\n`ExchangeAsset` XCM instruction instead of `Transact`:\n\n1. Prepare sovereign accounts funds, create pools\n2. Send WND from Penpal to AssetHub (AH being remote reserve for WND)\n3. Exchange WNDs for USDT using `ExchangeAsset`\n4. Send USDT and leftover WND back to Penpal\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Adrian Catangiu <adrian@parity.io>",
          "timestamp": "2025-07-31T10:42:16Z",
          "tree_id": "c39005e9c21f11c1f9743d3a32b8454e91d41b37",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d9f451a6b94ab2cf39371ee5192130379eb6e199"
        },
        "date": 1753963427351,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012896364719999992,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15763690237333342,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022394391153333332,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007302770273333301,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "178801527+raymondkfcheung@users.noreply.github.com",
            "name": "Raymond Cheung",
            "username": "raymondkfcheung"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fec2a9129a9e0238891c4102bb78b06e450e8e14",
          "message": "Replace `log` with `tracing` on `pallet-bridge-beefy` (#9378)\n\nThis PR replaces `log` with `tracing` instrumentation on\n`pallet-bridge-beefy` by providing structured logging.\n\nPartially addresses #9211",
          "timestamp": "2025-07-31T12:36:33Z",
          "tree_id": "2acc237d85439092d66685c471f132ee381fad74",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/fec2a9129a9e0238891c4102bb78b06e450e8e14"
        },
        "date": 1753969567169,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02242751680666666,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007223188779999996,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1575118139466668,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01299125880666667,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "oliver.tale-yazdi@parity.io",
            "name": "Oliver Tale-Yazdi",
            "username": "ggwpez"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "177b03958c766fe053f28424ee6f6748644bb794",
          "message": "[AHM] Make stuff public and derive (#9384)\n\nMake some stuff public and derive traits. Also removes one silently\ntruncating constructor from ParaId.\n\n---------\n\nSigned-off-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>",
          "timestamp": "2025-07-31T13:29:50Z",
          "tree_id": "f7914d1e9b38929282d65a0b7e256c4cea538a61",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/177b03958c766fe053f28424ee6f6748644bb794"
        },
        "date": 1753973283012,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007298175579999976,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15983467148666672,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013273105666666667,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022448553733333335,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "5588131+kianenigma@users.noreply.github.com",
            "name": "Kian Paimani",
            "username": "kianenigma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7304295748b1d85eb9fc2b598eba43d9f7971f22",
          "message": "[AHM] Staking async e2e zn and papi tests (#8802)\n\ncloses https://github.com/paritytech/polkadot-sdk/issues/8766\n\nThis PR mainly adds a setup based on PAPI to automate our e2e tests for\nstaking async. Most of the new code is in\n`frame/staking-async/runtimes/papi-tests`. There is `README`, and a\n`Justfile` there that should contain all the info you would need.\n\nBest way to get started is:\n\n```\njust setup\nbun test tests/unsigned-dev.test.ts\n```\n\nTests are written in Typescript, and monitro the underlying ZN process\nfor a specific sequence of events. An example of how to write tests is\n[here](https://github.com/paritytech/polkadot-sdk/pull/8802/files#diff-4b44e03288aeaf5ec576ae0094c7a7ae28689dfcc5b317a28478767b345991db).\n\nAll other changes are very insubstantial. \n\n### Why this setup? \n\n* Staking async e2e tests are long running, and doing multiple scenarios\nmanually is hard. Expressing them as a sequence of events is much\neasier.\n* For all scenarios, we need to monitor both the onchain weight, and the\noffchain weight/PoV recorded by the collator (therefore our only option\nis ZN). The setup reports both. For example, the logs look like this:\n\n```\nverbose: Next expected event: Observe(Para, MultiBlockElectionVerifier, Verified, no dataCheck, no byBlock), remaining events: 14\nverbose: [Para#56][⛓ 52ms / 2,119 kb][✍️ hd=0.22, xt=3.94, st=6.54, sum=10.70, cmp=9.61, time=1ms] Processing event: MultiBlockElectionVerifier Verified [1,10]\ninfo:    Primary event passed\nverbose: Next expected event: Observe(Para, MultiBlockElectionVerifier, Verified, no dataCheck, no byBlock), remaining events: 13\nverbose: [Para#56][⛓ 52ms / 2,119 kb][✍️ hd=0.22, xt=3.94, st=6.54, sum=10.70, cmp=9.61, time=1ms] Processing event: MultiBlockElectionVerifier Verified [2,10]\ninfo:    Primary event passed\nverbose: Next expected event: Observe(Para, MultiBlockElectionVerifier, Verified, no dataCheck, no byBlock), remaining events: 12\nverbose: [Para#56][⛓ 52ms / 2,119 kb][✍️ hd=0.22, xt=3.94, st=6.54, sum=10.70, cmp=9.61, time=1ms] Processing event: MultiBlockElectionVerifier Verified [3,10]\n```\n\n`⛓` indicates the onchain weights and `✍️` the collator PoV date\n(header, extrinsic, storage, sum of all, and all compressed,\nrespectively). The above lines are an example of code paths where the\nonchain weight happens to over-estimate by a lot. This setup helps us\neasily find and optimize all.\n\n---------\n\nCo-authored-by: Tsvetomir Dimitrov <tsvetomir@parity.io>\nCo-authored-by: Paolo La Camera <paolo@parity.io>\nCo-authored-by: Dónal Murray <donal.murray@parity.io>\nCo-authored-by: Ankan <10196091+Ank4n@users.noreply.github.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Alexandre R. Baldé <alexandre.balde@parity.io>",
          "timestamp": "2025-07-31T17:51:37Z",
          "tree_id": "49a98e39596f07d10155e85247e4ef3dd13af3be",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/7304295748b1d85eb9fc2b598eba43d9f7971f22"
        },
        "date": 1753988517672,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02244483522666666,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013152453979999996,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15739587586000006,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007103722799999989,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "13bc266c3f3cb337a36998cfdc5940ca559051c9",
          "message": "Upgrade wasmtime (#8714)\n\nThis upgrades wasmtime to the latest version and also fixes backtraces\nfor `debug` builds.\n\n---------\n\nSigned-off-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>",
          "timestamp": "2025-07-31T21:51:41Z",
          "tree_id": "26b7b22e5e91ce9e7e84a9a186f5d4d94abb898c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/13bc266c3f3cb337a36998cfdc5940ca559051c9"
        },
        "date": 1754003996484,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022403155320000003,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.0076474800733333,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15824850792666673,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013439808233333333,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "14218860+iulianbarbu@users.noreply.github.com",
            "name": "Iulian Barbu",
            "username": "iulianbarbu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "aa010dc3286063cd1f3522fc988ba472dede345b",
          "message": "Revert \"fix(minimal): pre-seal a first block to trigger maintain (#92… (#9423)\n\n# Description\n\nThis PR reverts #9207 after @michalkucharczyk's proper fix in #9338.\n\n## Integration\n\nN/A\n\n## Review Notes\n\nN/A",
          "timestamp": "2025-08-03T21:07:52Z",
          "tree_id": "757aca1f0e6e6b970edfe82ae3a36dc65718d58e",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/aa010dc3286063cd1f3522fc988ba472dede345b"
        },
        "date": 1754259509252,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013162114166666662,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02232812734,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15780371087999995,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007094222326666644,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a48307b7f0c40225aa8b6fcfecf7cedb6a41d6c2",
          "message": "CoreIndexMismatch: Include more information in the error (#9396)",
          "timestamp": "2025-08-04T07:10:18Z",
          "tree_id": "f5f43827128516e54f503afddfa6f54f7c2175dd",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/a48307b7f0c40225aa8b6fcfecf7cedb6a41d6c2"
        },
        "date": 1754296232592,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022321530399999998,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1563437649266667,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012908780386666662,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.0071389975933332985,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "jesse.chejieh@gmail.com",
            "name": "Doordashcon",
            "username": "Doordashcon"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "33bdd634d6ae0eb43c6660ba3ab6be6ed3668789",
          "message": "Westend Secretary Program (#9024)\n\n## Westend Secretary Program\n\nThis PR includes the Secretary program and end-to-end validation of\nXCM-based salary payments for the Westend runtime, ensuring consistency\nbetween implementations.\n\n### Key Changes\n1. Integrated Secretary configuration into Westend runtime\n- Added `SecretaryCollective` and `SecretarySalary` pallets to the\nruntime.\n   - Triggers salary payment through XCM\n   - Verifies successful:\n     - XCM message transmission\n     - Asset transfer execution\n     - Message queue processing\n\n### Context from Runtime PRs\n- Based on [Secretary Program\nimplementation](https://github.com/polkadot-fellows/runtimes/pull/347)\n- Follows patterns established in [Fellowship salary\ntests](https://github.com/paritytech/polkadot-sdk/blob/master/cumulus/parachains/integration-tests/emulated/tests/collectives/collectives-westend/src/tests/fellowship_salary.rs)\n- Addresses feedback from original implementation:\n  - Simplified polling mechanism using `NoOpPoll`\n  - Maintained consistent salary structure (6666 USDT for rank 1)\n  - Kept same XCM payment configuration",
          "timestamp": "2025-08-04T09:08:22Z",
          "tree_id": "28efe6737ecde815a68064c4a9dbf4bf6903a5ac",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/33bdd634d6ae0eb43c6660ba3ab6be6ed3668789"
        },
        "date": 1754303172446,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02245538215333333,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013183344053333332,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15685868326000005,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007535431473333298,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "53e30e5c60bdef92ae46f2f9b6d29a4d113e7419",
          "message": "Collator Protocol: Be more informative why a collation wasn't advertised (#9419)\n\nThis prints more information on why a collation wasn't advertised. In\nthis exact case it checks if the collation wasn't advertised because of\na session change. This is mainly some debugging help.",
          "timestamp": "2025-08-04T10:26:18Z",
          "tree_id": "9d7c051e4ae3a47c43b46c29c568fdd9227cd1c4",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/53e30e5c60bdef92ae46f2f9b6d29a4d113e7419"
        },
        "date": 1754307506590,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022517177786666665,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.0074053191999999745,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15739532262000006,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013050353206666667,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "178801527+raymondkfcheung@users.noreply.github.com",
            "name": "Raymond Cheung",
            "username": "raymondkfcheung"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "224eab75d3a05e7c7a85baa5e044858d0f104d4a",
          "message": "Replace `log` with `tracing` on `bp-runtime` (#9401)\n\nThis PR replaces `log` with `tracing` instrumentation on `bp-runtime` by\nproviding structured logging.\n\nPartially addresses #9211",
          "timestamp": "2025-08-04T13:10:17Z",
          "tree_id": "0adad46d8710fc31ea650371fbfe51296ca7184f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/224eab75d3a05e7c7a85baa5e044858d0f104d4a"
        },
        "date": 1754317814133,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.01301900104666666,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022310463226666674,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007304806780000005,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15727931859999994,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0140f9934cd553e5a36c623c75d371f6a5108774",
          "message": "cumulus tests: Improve prefix of the relay chain node (#9420)\n\nInstead of using the name of the node, we should use `Relaychain` as\ndone by normal nodes. This makes it easier to read the logs.",
          "timestamp": "2025-08-04T15:17:30Z",
          "tree_id": "fec233df11d8df3202be325ba52901bf5ba98c45",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/0140f9934cd553e5a36c623c75d371f6a5108774"
        },
        "date": 1754324853490,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.01286353308666667,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1568726174466667,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022362505440000006,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007291234099999995,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "hetterich.charles@gmail.com",
            "name": "Charles",
            "username": "charlesHetterich"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "bcee8dc5ba1205628b22e1ec499988d393b7e293",
          "message": "Added `substrate-node` and `eth-rpc` binaries into release workflow (#9393)\n\nAdds a total of 4 new jobs to `Release - Build node release candidate`\nCI workflow\n- 2 for releasing `substrate-node` binaries for linux/mac\n- 2 for releasing `eth-rpc` binaries for linux/mac\n\nCLOSES: #9386\n\n---------\n\nCo-authored-by: EgorPopelyaev <egor@parity.io>",
          "timestamp": "2025-08-04T18:21:20Z",
          "tree_id": "286bfd6aa3f48745d03e2fc1c6a297d361b19c80",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/bcee8dc5ba1205628b22e1ec499988d393b7e293"
        },
        "date": 1754336018438,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022541238533333337,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.0071144706999999715,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1577432322666667,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013086176779999993,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "22696121+sekisamu@users.noreply.github.com",
            "name": "sekiseki",
            "username": "sekisamu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "59fb2e7482d471a7ec4e8d3b30499497efa7b34c",
          "message": "Fixes dust balance handling for pallet revive (#9357)\n\nfix issue: https://github.com/paritytech/contract-issues/issues/141\n\nCorrects the condition for minting a new currency unit when transferring\ndust. The condition was incorrectly checking\n`to_info.dust.saturating_add(dust) >= plank` which could lead to\nunexpected minting behavior. It now correctly checks if `to_info.dust >=\nplank` before minting.",
          "timestamp": "2025-08-04T19:36:58Z",
          "tree_id": "1f82f1472637c5b251995d04a7f494c144c5daf4",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/59fb2e7482d471a7ec4e8d3b30499497efa7b34c"
        },
        "date": 1754340979186,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02229024198666666,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15679403788000004,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012900302459999997,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00709765503999998,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "paolo@parity.io",
            "name": "Paolo La Camera",
            "username": "sigurpol"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0f59afba36c8affac3b7fd41b0518fd9b81cefef",
          "message": "staking-async/papi-tests: fix justfile to run in CI (#9411)\n\nMake sure to run `just killall` step in a bash shell, otherwise while\ntrying to kill a non existing process e.g.\n```bash\nkillall:\n  pkill -f zombienet || true\n```\n\nwe would get the following issue while running in a container:\n\n```bash\nRun just setup\n  just setup\n  shell: sh -e {0}\n  env:\n    IMAGE: docker.io/paritytech/ci-unified:bullseye-1.85.0-2025-01-28-v202504231537\n    RUST_INFO: rustup show && cargo --version && rustup +nightly show && cargo +nightly --version\n    CACHE_ON_FAILURE: true\n    CARGO_INCREMENTAL: 0\n🧹 Killing any existing zombienet or chain processes...\npkill -f zombienet || true\nerror: Recipe `killall` was terminated on line 124 by signal 15\nerror: Recipe `setup` failed with exit code 143\nError: Process completed with exit code 143.\n```\n\nRunning the just step within a bash shell, ensure that the error is\nproperly handled and propagated without terminating the just script.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-08-05T08:24:56Z",
          "tree_id": "d7576a5133a9265d2155b6a6babad37d766607fd",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/0f59afba36c8affac3b7fd41b0518fd9b81cefef"
        },
        "date": 1754386554055,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022482077346666674,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007156324913333338,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013171522120000006,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15759025122000003,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "363911+pepoviola@users.noreply.github.com",
            "name": "Javier Viola",
            "username": "pepoviola"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "56f683fabfc5a4554d4b9208e91103624264407c",
          "message": "do not trigger zombienet workflows on 'labeled' (#9427)\n\nAt some point of the stabilization process we added the 'labeled' to the\nlist of events that trigger the zombienet workflows. This is not needed\nanymore and also is causing failures because the _artifacts_ could be\nexpired\n([example](https://github.com/paritytech/polkadot-sdk/actions/runs/16529272288/job/46752021278?pr=9286#step:6:127)).\n\nThx!",
          "timestamp": "2025-08-05T15:10:46Z",
          "tree_id": "445f4b598ca4a41c328ca69c595b652faa137169",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/56f683fabfc5a4554d4b9208e91103624264407c"
        },
        "date": 1754410986285,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012852347826666666,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022386366513333332,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.0073525013999999654,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15712550618666665,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "xlchen1291@gmail.com",
            "name": "Xiliang Chen",
            "username": "xlc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cf5a24ecc5802ecf78d943f9723b6f4ccdc0ddfa",
          "message": "pallet-timestamp is dev dependency of pallet-xcm (#9435)\n\nit is only used in mock\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-08-06T07:18:50Z",
          "tree_id": "18684bbb92e38d18676ffa52b4c6665a77cc1449",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/cf5a24ecc5802ecf78d943f9723b6f4ccdc0ddfa"
        },
        "date": 1754469023129,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02230688152666667,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15721317086000003,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013154632213333326,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00711924608666663,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "43da422003fa5a5e66faee0bf9919a8a32bb630f",
          "message": "CumulusDigestItem: Add function to fetch the relay block identifier (#9432)\n\nThis simplifies code paths that are fetching these information from a\nparachain header.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-08-06T19:08:19Z",
          "tree_id": "bcc9d3db53b62f7a85fe3db2e791b1da77787ae7",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/43da422003fa5a5e66faee0bf9919a8a32bb630f"
        },
        "date": 1754511452125,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02280968048666667,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013335061740000001,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15915182258666666,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007542443046666645,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1728078+michalkucharczyk@users.noreply.github.com",
            "name": "Michal Kucharczyk",
            "username": "michalkucharczyk"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8468c3e5944ab5efdcce886e275f4cec1cdc9057",
          "message": "pr_8838.prdoc: oversight fix: major -> minor (#9440)\n\nThis fixes the\n[pr_8838.prdoc](https://github.com/paritytech/polkadot-sdk/blob/cf5a24ecc5802ecf78d943f9723b6f4ccdc0ddfa/prdoc/pr_8838.prdoc#L7).\nI somehow forgotten to fix this\n[here](https://github.com/paritytech/polkadot-sdk/pull/8838#discussion_r2152760564).",
          "timestamp": "2025-08-07T08:12:57Z",
          "tree_id": "98f2c1f36fd55a3668a7e72b4b7efc1fdd109707",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/8468c3e5944ab5efdcce886e275f4cec1cdc9057"
        },
        "date": 1754558715053,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.01302103618,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022426961226666667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007285201486666658,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15644439154000006,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mich@elmueller.net",
            "name": "Michael Müller",
            "username": "cmichi"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "beb9030b249cc078b3955232074a8495e7e0302a",
          "message": "[pallet-revive] Implement basic `System` pre-compile, move `seal_hash_blake2_256` into it (#9441)\n\nPart of closing https://github.com/paritytech/polkadot-sdk/issues/8572.\n\nJust the `hash_blake2_256` in this PR, to gauge if you're fine with this\nsetup.\n\ncc @athei @pgherveou\n\n---------\n\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>",
          "timestamp": "2025-08-07T11:20:46Z",
          "tree_id": "61e2c4a158c8f86612d14047e993f1858f2b86fd",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/beb9030b249cc078b3955232074a8495e7e0302a"
        },
        "date": 1754570483281,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013059492726666672,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007263958333333316,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022370950800000004,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15704100104666674,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "adrian@parity.io",
            "name": "Adrian Catangiu",
            "username": "acatangiu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0d765ce37b258640a6eeb575f6bff76d6a7b7c46",
          "message": "pallet-xcm: fix authorized_alias benchmarks (#9445)\n\nDepending on runtime configuration of ED and storage deposits, the old\nbenchmark code did not set up enough funds to cover authorized aliases\nstorage deposits.\n\nFix it by adding more funds as part of benchmark setup.\n\n---------\n\nSigned-off-by: Adrian Catangiu <adrian@parity.io>\nCo-authored-by: Karol Kokoszka <karol.k91@gmail.com>",
          "timestamp": "2025-08-07T19:28:09Z",
          "tree_id": "143f16d946fef64897bb51a08e29cbc6ccc42185",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/0d765ce37b258640a6eeb575f6bff76d6a7b7c46"
        },
        "date": 1754599173364,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15727883354000005,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013000627473333335,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022361318219999995,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.0073778449799999715,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "5588131+kianenigma@users.noreply.github.com",
            "name": "Kian Paimani",
            "username": "kianenigma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c40b36c3a7c208f9a6837b80812473af3d9ba7f7",
          "message": "Cleanup staking try states + fix min bonds (#9415)\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-08-08T09:25:18Z",
          "tree_id": "6f1e8993c14fa59502c2a975c3bbe1d6d991ad61",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c40b36c3a7c208f9a6837b80812473af3d9ba7f7"
        },
        "date": 1754650238877,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15766151454000008,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022378634586666668,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013156942326666667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007428856126666642,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "363911+pepoviola@users.noreply.github.com",
            "name": "Javier Viola",
            "username": "pepoviola"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0034d178fff88a0fd87cf0ec1d8f122ae0011d78",
          "message": "[CI] add timeout to allow alloy to process the logs (#9459)\n\nCI fix to give time to process zombienet's logs.\n\ncc https://github.com/paritytech/devops/issues/4229",
          "timestamp": "2025-08-11T18:05:05Z",
          "tree_id": "6cc0759361e6f4b043a6d1d53ef60866f5f68f67",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/0034d178fff88a0fd87cf0ec1d8f122ae0011d78"
        },
        "date": 1754939758360,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15735844777333338,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013174754566666674,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007318288840000004,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022396400960000003,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "claravanstaden64@gmail.com",
            "name": "Clara van Staden",
            "username": "claravanstaden"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9fe9950f2173981209dcbe1b6d640764090d9f36",
          "message": "Minor Snowbridge test fixes (#9463)\n\nThe Polkadot runtimes repo block size is too small to test all Ethereum\nclient extrinsics in a single block. This PR runs to the next block\nbefore attempting more test extriniscs. Once this PR has been released,\nthe following code can be removed from the fellows runtime repo:\nhttps://github.com/polkadot-fellows/runtimes/blob/main/system-parachains/bridge-hubs/bridge-hub-polkadot/tests/snowbridge.rs#L234-L370\n\n---------\n\nCo-authored-by: Adrian Catangiu <adrian@parity.io>",
          "timestamp": "2025-08-12T07:06:26Z",
          "tree_id": "c5e7264aa47b9ad38029d67eae255579d1a026c6",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/9fe9950f2173981209dcbe1b6d640764090d9f36"
        },
        "date": 1754987993985,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012916101980000004,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02261063625999999,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007310326073333335,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15648291216666665,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "bkontur@gmail.com",
            "name": "Branislav Kontur",
            "username": "bkontur"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2db5e16bf2b497e8ef877d3d7e79b3fcdcab5f82",
          "message": "Bridges - relax trait bound from Codec to Encode (#9470)\n\n### Problem\n\nWhile bumping the parity-bridges-common repo to the latest polkadot-sdk\nmaster, we encountered a new compilation issue:\n```\nerror[E0277]: the trait bound `UncheckedExtrinsic<MultiAddress<AccountId32, ()>, ..., ..., ..., 16777216>: Decode` is not satisfied\n   --> relay-clients/client-rococo/src/lib.rs:95:3\n    |\n95  |         bp_polkadot_core::UncheckedExtrinsic<Self::Call, bp_rococo::TransactionExtension>;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `parity_scale_codec::Decode` is not implemented for `UncheckedExtrinsic<MultiAddress<AccountId32, ()>, ..., ..., ..., 16777216>`\n    |\n    = help: the trait `parity_scale_codec::Decode` is implemented for `sp_runtime::generic::UncheckedExtrinsic<Address, Call, Signature, Extension, MAX_CALL_SIZE>`\n    = note: required for `<Rococo as ChainWithTransactions>::SignedTransaction` to implement `parity_scale_codec::Codec`\nnote: required by a bound in `relay_substrate_client::ChainWithTransactions::SignedTransaction`\n   --> ~/.cargo/git/checkouts/polkadot-sdk-dee0edd6eefa0594/c40b36c/bridges/relays/client-substrate/src/chain.rs:227:42\n    |\n227 |     type SignedTransaction: Clone + Debug + Codec + Send + 'static;\n    |                                             ^^^^^ required by this bound in `ChainWithTransactions::SignedTransaction`\n```\n\nI added the test simulating the same compilation error here in the\npolkadot-sdk:\n```\ncargo test -p relay-substrate-client\n\nerror[E0277]: the trait bound `UncheckedExtrinsic<MultiAddress<AccountId32, ()>, ..., ..., ..., 16777216>: Decode` is not satisfied\n   --> bridges/relays/client-substrate/src/test_chain.rs:92:27\n    |\n92  |       type SignedTransaction = bp_polkadot_core::UncheckedExtrinsic<\n    |  ______________________________^\n93  | |         TestRuntimeCall,\n94  | |         bp_polkadot_core::SuffixedCommonTransactionExtension<(\n95  | |             bp_runtime::extensions::BridgeRejectObsoleteHeadersAndMessages,\n96  | |             bp_runtime::extensions::RefundBridgedParachainMessagesSchema,\n97  | |         )>,\n98  | |     >;\n    | |_____^ the trait `parity_scale_codec::Decode` is not implemented for `UncheckedExtrinsic<MultiAddress<AccountId32, ()>, EncodedOrDecodedCall<...>, ..., ..., 16777216>`\n    |\n    = help: the trait `parity_scale_codec::Decode` is implemented for `UncheckedExtrinsic<Address, Call, Signature, Extension, MAX_CALL_SIZE>`\n    = note: required for `<TestChain as ChainWithTransactions>::SignedTransaction` to implement `parity_scale_codec::Codec`\nnote: required by a bound in `ChainWithTransactions::SignedTransaction`\n   --> bridges/relays/client-substrate/src/chain.rs:227:42\n    |\n227 |     type SignedTransaction: Clone + Debug + Codec + Send + 'static;\n    |                                             ^^^^^ required by this bound in `ChainWithTransactions::SignedTransaction`\n    = note: the full name for the type has been written to '/home/bkontur/cargo-remote-builds-aaa/4049172861662423200/target/debug/deps/relay_substrate_client-3bc9e3563aed810c.long-type-11484417815568207698.txt'\n```\n\n### Solution?\n\nAfter some investigation, this compilation issue stared with\nhttps://github.com/paritytech/polkadot-sdk/pull/8234, and relaxing the\n`type SignedTransaction` constraint resolves the issue. Any other\nsolution?\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-08-12T10:11:16Z",
          "tree_id": "99b4240a7c41440c005fff1d1b4f9a5a6537f9b0",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/2db5e16bf2b497e8ef877d3d7e79b3fcdcab5f82"
        },
        "date": 1754997678401,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012946175760000001,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1573041814866667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007250538506666689,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022489925373333334,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "14218860+iulianbarbu@users.noreply.github.com",
            "name": "Iulian Barbu",
            "username": "iulianbarbu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5bb3afcd733a18744a09c1df840c3813623fb0ab",
          "message": "check-semver: enable the support for edition 2024 (#9473)\n\n# Description\n\n`check-semver` job fails since some time in the majority of the PRs, and\nthe issue has been tracked down to an indirect dependency which is based\non edition 2024 rust, which can not compile successfully with the\ncurrent nightly.\n\n## Integration\n\nN/A\n\n## Review Notes\n\n- Updated parity-publish:\nhttps://github.com/paritytech/parity-publish/pull/58\n- This PR completes the circle and makes check-semver functional again\n- Tested already these changes here:\nhttps://github.com/paritytech/polkadot-sdk/actions/runs/16909276800/workflow\n\nSigned-off-by: Iulian Barbu <iulian.barbu@parity.io>",
          "timestamp": "2025-08-13T07:37:51Z",
          "tree_id": "623c90f2a9e3da06be3694e350eafc34b23a00b3",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/5bb3afcd733a18744a09c1df840c3813623fb0ab"
        },
        "date": 1755074840681,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012808602033333331,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022458894586666663,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007127159486666645,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1566110295666667,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "enntheprogrammer@gmail.com",
            "name": "sistemd",
            "username": "sistemd"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "29a0c4a746a61a690df06822c52266ef69bf6b64",
          "message": "store headers and justifications during warp sync (#9424)\n\nCloses https://github.com/paritytech/polkadot-sdk/issues/2738.\n\nStill need to add tests for this - but I think the easiest way might be\nafter the zombienet tests are converted to Rust, in the warp sync test\nmaybe we can just request the headers (and justifications?) from\nJSON-RPC? Though I'm not sure there is an API for the justifications.\nBut in any case we can in theory make a P2P justifications request as\nwell and the node should be able to respond. Let me know if anybody has\nsome better ideas.\n\n---------\n\nSigned-off-by: sistemd <enntheprogrammer@gmail.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Iulian Barbu <14218860+iulianbarbu@users.noreply.github.com>",
          "timestamp": "2025-08-13T14:50:47Z",
          "tree_id": "b2b0080997291071c910a50b9deac8ed488c035f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/29a0c4a746a61a690df06822c52266ef69bf6b64"
        },
        "date": 1755100857239,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007109208606666651,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022552012439999995,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013068490246666668,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15822641040666674,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "60601340+lexnv@users.noreply.github.com",
            "name": "Alexandru Vasile",
            "username": "lexnv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c8e7a682f5961dd812fde30f9d909b86f16cd54f",
          "message": "cargo: Use rust-yamux version 0.13.6 (#9479)\n\nThis PR updates the litep2p' rust-yamux crate to version 0.13.6.\n\nThis version solves the following issue:\n\n```\n0: sp_panic_handler::set::{{closure}}\n1: std::panicking::rust_panic_with_hook\n2: std::panicking::begin_panic_handler::{{closure}}\n3: std::sys::backtrace::__rust_end_short_backtrace\n4: rust_begin_unwind\n5: core::panicking::panic_fmt\n6: core::slice::index::slice_start_index_len_fail::do_panic::runtime\n7: core::slice::index::slice_start_index_len_fail\n8: <yamux::frame::io::Io as futures_sink::Sink<yamux::frame::Frame<()>>>::poll_ready\n9: yamux::connection::Connection::poll_next_inbound\n10: litep2p::transport::websocket::connection::WebSocketConnection::start::{{closure}}\n11: <litep2p::transport::websocket::WebSocketTransport as litep2p::transport::Transport>::accept::{{closure}}\n12: <tracing_futures::Instrumented as core::future::future::Future>::poll\n13: tokio::runtime::task::raw::poll\n14: tokio::runtime::scheduler::multi_thread::worker::Context::run_task\n15: tokio::runtime::scheduler::multi_thread::worker::run\n16: tokio::runtime::task::raw::poll\n17: std::sys::backtrace::__rust_begin_short_backtrace\n18: core::ops::function::FnOnce::call_once{{vtable.shim}}\n19: std::sys::pal::unix::thread::Thread::new::thread_start\n20: start_thread\nat /build/glibc-FcRMwW/glibc-2.31/nptl/pthread_create.c:477:8\n21: clone\nat /build/glibc-FcRMwW/glibc-2.31/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95\n```\n\nPart of: https://github.com/paritytech/polkadot-sdk/issues/9169\n\n---------\n\nSigned-off-by: Alexandru Vasile <alexandru.vasile@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-08-14T08:25:37Z",
          "tree_id": "7a997ec7458a771c3d93301b5c35483cbe458228",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c8e7a682f5961dd812fde30f9d909b86f16cd54f"
        },
        "date": 1755166047810,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022353274453333332,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15699495330000002,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013098565666666671,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007353099913333313,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "45178695+pkhry@users.noreply.github.com",
            "name": "Pavlo Khrystenko",
            "username": "pkhry"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fd417de617f303b84a0cac1972cf5d7090000d2f",
          "message": "[pallet-revive] expose `exec::Key` (#9482)\n\n# Description\n\nThis is a fix for the fact that `exec::Key` is exposed from within\n`pallet_revive::tracing::Tracing` interface, but not from the crate\nitself making custom tracers effectively unimplementable outside said\ncrate.\n\nIn my case it's useful for implementing custom tracers for integration\nwith `foundry`\n\n## Integration\n\nRequires no downstream changes\n\n## Review Notes\n\nThis is a fix for the fact that `exec::Key` is exposed from within\n`pallet_revive::tracing::Tracing` interface, but not from the crate\nitself making custom tracers effectively unimplementable outside said\ncrate.\n\nsee here for one of the methods: [`exec::Key` exposed to the\nimplementor, despite not being exported by the\n`crate`](https://github.com/paritytech/polkadot-sdk/blob/pkhry/expose_key_pallet_revive/substrate/frame/revive/src/tracing.rs#L68)\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-08-14T12:06:16Z",
          "tree_id": "989ae132623b6eea42407bc96833a8495c8fef21",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/fd417de617f303b84a0cac1972cf5d7090000d2f"
        },
        "date": 1755177891138,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013056793519999998,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00727133901999997,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1571280888466667,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02238095077333333,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "178801527+raymondkfcheung@users.noreply.github.com",
            "name": "Raymond Cheung",
            "username": "raymondkfcheung"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e117602f60bf3a0debe6843c94278275e3912a40",
          "message": "Remove free balance check in `prepare_unlock` (#9489)\n\nThe free balance check during unlocking is unnecessary since a lock can\ncover both free and reserved balances. Removing it allows locks to be\ncleared even if part of the locked funds is reserved or already slashed.",
          "timestamp": "2025-08-15T06:33:29Z",
          "tree_id": "44a9e3e9bbdefd13644497674a8362005a86ec67",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e117602f60bf3a0debe6843c94278275e3912a40"
        },
        "date": 1755243831693,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.00758443412,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013282512193333335,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15879670012000002,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022658680639999998,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1728078+michalkucharczyk@users.noreply.github.com",
            "name": "Michal Kucharczyk",
            "username": "michalkucharczyk"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ce5ecdd483440557d4d49f55818ed517bdf64940",
          "message": "`fatxpool`: buckets for event-timings metrics adjusted (#9495)\n\nThis PR adjusts the buckets for transactions' event-timings metrics as\nrequested in #9158 for reliability dashboard.\nMetrics were initially introduced in #7355. \n\nfixes: #9158\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-08-15T14:34:38Z",
          "tree_id": "f9d6c205d02c8530896693bc1f48d6cd90aff2e6",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ce5ecdd483440557d4d49f55818ed517bdf64940"
        },
        "date": 1755272650352,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15860206659333337,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013247976313333331,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007405214206666637,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022604650119999996,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mich@elmueller.net",
            "name": "Michael Müller",
            "username": "cmichi"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8744f5e5ee65786e3254cf45c4de54606917effd",
          "message": "[pallet-revive] Move `to_account_id` host function to `System` pre-compile (#9455)\n\nPart of closing https://github.com/paritytech/polkadot-sdk/issues/8572.\n\ncc @athei @pgherveou\n\n---------\n\nCo-authored-by: xermicus <bigcyrill@hotmail.com>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>",
          "timestamp": "2025-08-18T09:05:56Z",
          "tree_id": "bdf0796810802ecf2bc56112c470efa5a7f72319",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/8744f5e5ee65786e3254cf45c4de54606917effd"
        },
        "date": 1755513391215,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022349732693333332,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15664917984000007,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012709213993333333,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007476589366666645,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "bruno.devic@parity.io",
            "name": "BDevParity",
            "username": "BDevParity"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9899378386f540055b292bcfaf66b98ef2dbe774",
          "message": "[Release|CI/CD] Create pipeline with build runtimes, publish release draft and build RC all in 1 pipeline (#9437)\n\nThis PR incudes the following changes:\n\n- Creates single pipeline containing build RC, build runtimes and\npublish release candidate.\nCloses: https://github.com/paritytech/devops/issues/3828\n\n---------\n\nCo-authored-by: EgorPopelyaev <egor@parity.io>\nCo-authored-by: Dónal Murray <donal.murray@parity.io>",
          "timestamp": "2025-08-18T13:35:55Z",
          "tree_id": "95593c69c5db5e1c3aabd5589581dbe238272b25",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/9899378386f540055b292bcfaf66b98ef2dbe774"
        },
        "date": 1755528247206,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013289044753333328,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022578437473333334,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15787955472666673,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007294327893333318,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mich@elmueller.net",
            "name": "Michael Müller",
            "username": "cmichi"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7ede4fd048f8a99e62ef31050aa2e167e99d54b9",
          "message": "[pallet-revive] Move `blake2_128` host function to `System` pre-compile (#9454)\n\nPart of closing https://github.com/paritytech/polkadot-sdk/issues/8572.\n\nI'm splitting some of the host function migrations into separate PRs, as\nthere are sometimes refactorings involved and this should make reviewing\neasier.\n\ncc @athei @pgherveou",
          "timestamp": "2025-08-18T18:40:41Z",
          "tree_id": "a1ee8d9a9483f19af3f1faf1905bef318dc29a79",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/7ede4fd048f8a99e62ef31050aa2e167e99d54b9"
        },
        "date": 1755546722462,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02249021076666667,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01285554642,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15742061387333334,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007209886026666647,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "bkontur@gmail.com",
            "name": "Branislav Kontur",
            "username": "bkontur"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7f1949d86d179d82d647a749c34a02b71492f5ff",
          "message": "Paras: Clean up `AuthorizedCodeHash` when offboarding (#9514)\n\nThis PR updates the `Paras` pallet to clear entries in\n`AuthorizedCodeHash` as part of the offboarding process.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-08-19T15:45:15Z",
          "tree_id": "a974eaac440aa21cf92978876f2af93910cbcd41",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/7f1949d86d179d82d647a749c34a02b71492f5ff"
        },
        "date": 1755622728165,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007176925826666647,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02240401732,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013007434753333338,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1571135196600001,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4619e9b6e805d132f4307752270044028273dd11",
          "message": "[revive] move existing files to prepare evm backend introduction (#9501)\n\n- Move exisiting files in pallet-revive to accomodate the upcoming EVM\nbackend\n- Add solc/resolc compilation feature for fixtures\n- Add `fn is_pvm` to later distinguish between pvm / evm bytecode\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-08-20T05:46:03Z",
          "tree_id": "65fbf1c1d0f6b7c75874c4ea1dd241f439b4c5bd",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4619e9b6e805d132f4307752270044028273dd11"
        },
        "date": 1755673499380,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15822763061999995,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007558691273333311,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02234780998,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013091189926666668,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "egor@parity.io",
            "name": "Egor_P",
            "username": "EgorPopelyaev"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2b56efc4d5be1a4d47b94b496193a764b8a6488b",
          "message": "[CI/CD] Fix build binary flow (#9526)\n\nThis PR fixes build-binary flow, that is used to build a binary for the\ntesting purposes from any branch. The issue was that there were too many\ninput args for the build script.",
          "timestamp": "2025-08-20T08:54:05Z",
          "tree_id": "49dc83fb4cac9dc3541ffb08932745c28fd5880f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/2b56efc4d5be1a4d47b94b496193a764b8a6488b"
        },
        "date": 1755685130047,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022354495393333337,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15735365396666667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007281687479999981,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01298348354,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "14218860+iulianbarbu@users.noreply.github.com",
            "name": "Iulian Barbu",
            "username": "iulianbarbu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "349fe9b9111d74b5e4bc3002136b211b3444f28b",
          "message": "fix: add missing crates bumps and upgrade parity-publish (#9488)\n\n# Description\n\nAdds a few crate bumps associated to PRs which missed to bump them, and\nupdates parity-publish version across the board to 0.10.6 (to support\nrustc 1.88).\n\nAdditionally, makes it so that parity-publish-check-compile runs first\non all unreleased prdocs to bump associated crates, and only after\nmoving those to an `unreleased` directory, runs on the current PR's\nprdoc. This is so that we first create a \"local release\" based on the\nunreleased prdocs, and then we follow with a \"patch\" release based on\nthe previous local release, considering only the prdoc pushed with the\ncurrent PR. If the workflow fails at the end it means current PR missed\ncertain bumps. If we don't do the plan/apply twice we risk to miss bumps\ndue to all prdocs being considered (current PR's prdoc + unreleased\nones) when running parity-publish plan/apply, which might result in a\nset of crate bumps which are sufficient, but once some unreleased prdocs\nwill be moved to a stable prodoc directory, because they will be part of\na stable release, then the ones left will not be enough from a bump\nperspective (e.g. like it happened in #9320). That's why it is important\nto check every PR that adds a prdoc whether it is self-sufficient from a\ncrates bumping perspective.\n\nIf no prdoc is provided, the parity-publish does not need to be taken\ninto consideration, but it should also pass nonetheless.\n\n## Integration\n\nN/A\n\n## Review Notes\n\nThere seems to a be a corner case parity-publish can not easily catch.\nAll bumps below are a manifestation of it. More details below:\n\n* #8714 - a major bump is necessary for `sp-wasm-interface` - context\nhere:\nhttps://github.com/paritytech/polkadot-sdk/pull/8714#discussion_r2273355186\n* `sp-keystore` was bumped during 2506 in #6010 , and the relevant prdoc\ngot moved to stable2506 dir in #9320. This moved prdoc coexisted\nalongside other unreleased prdocs, and covered a needed patch bump for\n`sp-keystore`, that is not easily visible, and also required for crates\npublishing IIUC:\n1. `sp-io` is major bumped because its direct dependency,\n`sp-state-machine`, was major bumped.\n2. `sp-io` has a direct dependency on `sp-core` (minor bumped), and\n`sp-keystore` (not touched, not bumped by now)\n3. `sp-io` fails to compile because it pulls same types from different\n`sp-core` versions (it implements `Keystore` trait from `sp-keystore`\nwith methods signatures referencing types from `sp-core 38.0.0` by using\nthe `sp-core 0.38.1` - unreleased yet - types, which confuses rustc).\n* `sp-rpc` needs a bump too due to pulling `sp-core 38.0.0`, like\n`sp-keystore`, and it is an indirect dependency of `polkadot-cli`, which\nhas also a direct dependency on unreleased `sp-core 38.1.0`, so again,\nif we don't bump `sp-rpc` (historically it has been bumped only with\nmajor, but I think we can go with patch on this one), `polkadot-cli`\ncan't compile.\n* `sc-storage-monitor` is in a similar situation as\n`sp-rpc`/`sp-keystore` - `polkadot-cli` depends on `sc-storage-monitor`\n(which is not bumped, and has a dependency on `sp-core 38.0.0`), but it\nalso depends on `sp-core 38.1.0`. And yet again, something is used in\n`polkadot-cli` from the two different `sp-core` versions, which confuses\nrustc.\n\n---------\n\nSigned-off-by: Iulian Barbu <iulian.barbu@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Alexander Samusev <41779041+alvicsam@users.noreply.github.com>",
          "timestamp": "2025-08-20T11:47:46Z",
          "tree_id": "3b32afd34a525f52faa8db9906d3ff42149a8474",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/349fe9b9111d74b5e4bc3002136b211b3444f28b"
        },
        "date": 1755694929625,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013083393220000001,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02244090752666666,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007434036533333358,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15717129056666673,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "hetterich.charles@gmail.com",
            "name": "Charles",
            "username": "charlesHetterich"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "386b3abb72283c2c0efacd0fd2975163b333bce6",
          "message": "Added `subkey` to CI release process (#9466)\n\n- Added 2 jobs to `Release - Build node release candidate` CI workflow\nfor linux/mac subkey binaries\n- Added 2 jobs to `RC Build` CI workflow to upload linux/mac `subkey`\nartifacts to S3\n- updated `release_lib.sh` to reflect new S3 artifacts\n\nCLOSES: #9465\n\n---------\n\nCo-authored-by: EgorPopelyaev <egor@parity.io>",
          "timestamp": "2025-08-20T16:20:41Z",
          "tree_id": "b37735b9bf06f64f0094cfa01debf9393f601c1d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/386b3abb72283c2c0efacd0fd2975163b333bce6"
        },
        "date": 1755711288495,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02257317640666666,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007346110866666639,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15853275288666674,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01322969276,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "5588131+kianenigma@users.noreply.github.com",
            "name": "Kian Paimani",
            "username": "kianenigma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "56d3c42cf4b8b650ae416db0482ad56eb64938c9",
          "message": "EPMB/Signed: Make invulnerables non-eject-able (#9511)\n\nFollow-up to https://github.com/paritytech/polkadot-sdk/pull/8877 and\naudits: Make it such that invulnerable accounts cannot be ejected from\nthe election signed queue altogether.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Dónal Murray <donal.murray@parity.io>",
          "timestamp": "2025-08-21T08:22:32Z",
          "tree_id": "2d9f9eabd9dddec904ce178c9d3486ceddf00d59",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/56d3c42cf4b8b650ae416db0482ad56eb64938c9"
        },
        "date": 1755768897671,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012835500960000006,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007268900646666645,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022672177986666667,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15863105317333331,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "178801527+raymondkfcheung@users.noreply.github.com",
            "name": "Raymond Cheung",
            "username": "raymondkfcheung"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "1e4af2353ea9dcb9ad0afc1ce63b03df68108ecf",
          "message": "Replace `log` with `tracing` on `pallet-bridge-relayers` (#9381)\n\nThis PR replaces `log` with `tracing` instrumentation on\n`pallet-bridge-relayers` by providing structured logging.\n\nPartially addresses #9211",
          "timestamp": "2025-08-21T10:16:26Z",
          "tree_id": "227e8c7bb7b7adb486125c662468b3c2894feb3b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/1e4af2353ea9dcb9ad0afc1ce63b03df68108ecf"
        },
        "date": 1755775817666,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022432539653333333,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15707174312666677,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007167824473333343,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013317384713333335,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "egor@parity.io",
            "name": "Egor_P",
            "username": "EgorPopelyaev"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "9969e1e81c94f2153412d647d92ecad8db3ccbf8",
          "message": "[Backport] Version bumps and prdoc reordering from stable2506-1 (#9529)\n\nThis PR backport regular version bumps and prdocs reordering from the\nstable2506 branch back to master",
          "timestamp": "2025-08-21T14:46:57Z",
          "tree_id": "1c02f70053ccdced9c6f2f6a599c00d6076584ef",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/9969e1e81c94f2153412d647d92ecad8db3ccbf8"
        },
        "date": 1755793315311,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013282135619999998,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022431014766666674,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1573075073466667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007235209919999975,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "14218860+iulianbarbu@users.noreply.github.com",
            "name": "Iulian Barbu",
            "username": "iulianbarbu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "2660bf5f04736beef5c7002ffb5a5856e9420d1a",
          "message": "`polkadot-omni-node`: fixes and changes related to `GetParachainInfo` (#9201)\n\n# Description\n\n- log::info! the error of accessing `GetParachainInfo::parachain_id()`\nruntime api if any, before reading the `para_id` from the chain\nspecification (relevant for debugging).\n- removes comments/deprecation notices throughout the code that\nintroduce `para-id` flag removal (from chain-spec-builder and support\nfor parsing it from chain specifications)\n\nCloses #9217 \n\n## Integration\n\nN/A\n\n## Review Notes\n\nN/A\n\n---------\n\nSigned-off-by: Iulian Barbu <iulian.barbu@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Sebastian Kunert <mail@skunert.dev>\nCo-authored-by: Andrei Sandu <54316454+sandreim@users.noreply.github.com>",
          "timestamp": "2025-08-22T12:59:14Z",
          "tree_id": "5b83afefc295e7e302e0f1ae5f368c6b316f7ab8",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/2660bf5f04736beef5c7002ffb5a5856e9420d1a"
        },
        "date": 1755871951857,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007563237699999971,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012895778226666668,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02244163916666667,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15794479423333338,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "13320f333c00619165c406fdfcb28b6056b543df",
          "message": "align eth-rpc response with geth (#9177)\n\n- Update some serde encoding for eth-rpc to match serialization behavior\nof Geth\n- Add support for serializing / deserializing EIP7702 tx types\n- Disable transaction type we don't support yet in\ntry_ino_unchecked_extrinsics\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-08-22T14:18:13Z",
          "tree_id": "c37739e4310b85426b09807e257c5ce83e309bb4",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/13320f333c00619165c406fdfcb28b6056b543df"
        },
        "date": 1755876832992,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013393447446666668,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022300803453333337,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15747701986666665,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007435811406666628,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "serban@parity.io",
            "name": "Serban Iorga",
            "username": "serban300"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2cb8f12822346d3772855be8a9caa25abad21e33",
          "message": "[XCMP] `take_first_concatenated_xcm()` improvements (#9539)\n\nThis PR:\n- improves `take_first_concatenated_xcm()` avoiding the XCM re-encoding\n- makes the benchmarks for `take_first_concatenated_xcm()` more\ngranular, accounting for the number of bytes of the message\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-08-25T07:57:56Z",
          "tree_id": "c88ecd500c2bea0dfa451ff9a9fa2e26e5364afb",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/2cb8f12822346d3772855be8a9caa25abad21e33"
        },
        "date": 1756113473528,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007238066159999974,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022298493586666662,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012973604866666669,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1562824275733334,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ismailov.m.h@gmail.com",
            "name": "muharem",
            "username": "muharem"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "1a512570552119a49a8ecb2abfb7021954c4422d",
          "message": "Society pallet supports non-consecutive block provider (#9497)\n\nSociety pallet supports non-consecutive block provider\n\nSociety pallet correctly handles situations where `on_initialize` is\ninvoked with block numbers that:\n- increase but are not strictly consecutive (e.g., jump from 5 → 10), or\n- are repeated (e.g., multiple blocks are built at the same Relay Chain\nparent block, all reporting the same BlockNumberProvider value).\n\nThis situation may occur when the BlockNumberProvider is not local - for\nexample, on a parachain using the Relay Chain block number provider.\n\n---------\n\nCo-authored-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>",
          "timestamp": "2025-08-25T11:04:31Z",
          "tree_id": "2d5738b63692aa5d082a7286608ad0a8ba3f9bdc",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/1a512570552119a49a8ecb2abfb7021954c4422d"
        },
        "date": 1756124770853,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007576294893333291,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022454094946666673,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15909870602000006,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013279315733333335,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "evgeny@parity.io",
            "name": "Evgeny Snitko",
            "username": "AndWeHaveAPlan"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3f9231dc75346c65826e70112ecc1a3a507e187f",
          "message": "tests-linux-stable cattery wf (#9041)\n\ncc https://github.com/paritytech/devops/issues/3875\n\n---------\n\nCo-authored-by: alvicsam <alvicsam@gmail.com>\nCo-authored-by: Alexander Samusev <41779041+alvicsam@users.noreply.github.com>",
          "timestamp": "2025-08-26T14:52:31Z",
          "tree_id": "d5e89c8b65bc6930c3c9dfefbc7aedf231e212b6",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/3f9231dc75346c65826e70112ecc1a3a507e187f"
        },
        "date": 1756224566257,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15780900863333341,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013176692926666667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.0072378581399999845,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02234721169333333,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "enntheprogrammer@gmail.com",
            "name": "sistemd",
            "username": "sistemd"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dcd9cacf40b282ea1fb9870e29e0eec8fbfd1c88",
          "message": "track authorities from aura digests (#9272)\n\nCloses https://github.com/paritytech/polkadot-sdk/issues/9064.\n\nTracks AURA authorities in a `ForkTree`. The fork tree is updated\nwhenever there is an authorities change log in the digest. If the fork\ntree doesn't contain the authorities, they are fetched for the runtime\n(should only happen at startup, or if something weird is going on with\nforks maybe).\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-08-26T17:14:45Z",
          "tree_id": "92913a06102ac8246dd730837e5c8598925b9de5",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/dcd9cacf40b282ea1fb9870e29e0eec8fbfd1c88"
        },
        "date": 1756232962658,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15895681424000008,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.0131911511,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007506994759999972,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022374786980000002,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "vrom911@gmail.com",
            "name": "Veronika Romashkina",
            "username": "vrom911"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0c51d2e259d1742a809d11fecbeb663033726846",
          "message": "Improve omni-node installation docs (#9555)\n\n# Description\n\nWhile following the `polkadot-omni-node` installation section\ninstructions [here](https://crates.io/crates/polkadot-omni-node), I\nfound that it could be improved a bit.\n\nThe `<stable_release_tag>` should be replaced with the release tag, but\nthere is no mention of how to get that tag fast.\nI added this information as a note in addition to the existing line.\n\nCo-authored-by: Raymond Cheung <178801527+raymondkfcheung@users.noreply.github.com>",
          "timestamp": "2025-08-27T02:24:11Z",
          "tree_id": "71a0907d4ce3e8cd70743ddc7c830028a1e0bdd3",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/0c51d2e259d1742a809d11fecbeb663033726846"
        },
        "date": 1756265842864,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012969079326666667,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02242291713333333,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007424464599999987,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1565797755066666,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eresav@me.com",
            "name": "Andrei Eres",
            "username": "AndreiEres"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "930d4ca1b82fa52681f9607360a690506b277b54",
          "message": "Fix regression benchmarks (#9044)\n\nCo-authored-by: Alexander Samusev <41779041+alvicsam@users.noreply.github.com>",
          "timestamp": "2025-08-27T12:54:27Z",
          "tree_id": "d15d13bb0172be70338d2f687eb2985e65f8e78c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/930d4ca1b82fa52681f9607360a690506b277b54"
        },
        "date": 1756304168454,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007699274053333335,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02258643769333334,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1576874525,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01311492258,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "hs+github@haikoschol.com",
            "name": "Haiko Schol",
            "username": "haikoschol"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b7b7f0c50f6ce8bad7a7a3a10139e53714740b4e",
          "message": "Cumulus: Remove `--relay-chain-light-client` (#9446)\n\n# Description\n\nThis PR removes the experimental flag `--relay-chain-light-client` from\ncumulus and as a consequence, smoldot and smoldot-light as workspace\ndependencies.\n\nCloses #9013 \n\n## Integration\n\nSince this PR changes the public API of\n[cumulus-relay-chain-rpc-interface](https://crates.io/crates/cumulus-relay-chain-rpc-interface),\nit affects node developers and the PR should include a prdoc file. Since\nthe crate is not v1 yet, I reckon prdoc should include `bump: minor`.",
          "timestamp": "2025-08-27T13:55:11Z",
          "tree_id": "337ee44b8294a43c32b5e779850b81585ab362b1",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/b7b7f0c50f6ce8bad7a7a3a10139e53714740b4e"
        },
        "date": 1756307347149,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02241036612666666,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007668961713333303,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15738041658666668,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013052403899999995,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "54316454+sandreim@users.noreply.github.com",
            "name": "Andrei Sandu",
            "username": "sandreim"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3dfbdf4a454f35238500779e503e1ec32ba7fc63",
          "message": "Parachains runtime: properly filter backed candidate votes (#9564)\n\nThe `filter_backed_statements_from_disabled_validators` function does\nnot properly map indices in the validator group to indices in the\nvalidity votes vec. This PR fixes that.\n\nTODO: \n- [x] add more tests\n- [x] PRDoc\n\n---------\n\nSigned-off-by: Andrei Sandu <andrei-mihail@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-08-27T19:52:12Z",
          "tree_id": "52879c2b0806e93ea47828178932bd130f45092c",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/3dfbdf4a454f35238500779e503e1ec32ba7fc63"
        },
        "date": 1756328553613,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012974770386666667,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15728135460666673,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.0075132907733333485,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02251224479333333,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "franciscoaguirreperez@gmail.com",
            "name": "Francisco Aguirre",
            "username": "franciscoaguirre"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c1a31e3505c0c4e01b9d2daad5f4d19b220345ec",
          "message": "Disable reserve_asset_transfer for DOT (#9544)\n\n- [x] Add check to `do_reserve_asset_transfer`\n- [x] Modify existing tests\n- [ ] Add new tests if needed\n\n---------\n\nCo-authored-by: Karol Kokoszka <karol@parity.io>",
          "timestamp": "2025-08-28T21:31:06Z",
          "tree_id": "1e246b2a94ebc81065a2bdcf7b7fcc4f3851c436",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c1a31e3505c0c4e01b9d2daad5f4d19b220345ec"
        },
        "date": 1756421204027,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15718481015999997,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.0224062303,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007715652986666643,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012737485333333333,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "claravanstaden64@gmail.com",
            "name": "Clara van Staden",
            "username": "claravanstaden"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f87d061a195ff40d7e91b00c8c1e40a75140c2cb",
          "message": "Snowbridge Westend runtime config cleanup (#9547)\n\nMinor cleanup to match Polkadot runtime config.",
          "timestamp": "2025-08-29T08:34:30Z",
          "tree_id": "1e8fe29aa15813b490bbc10bab20d60c7198d865",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f87d061a195ff40d7e91b00c8c1e40a75140c2cb"
        },
        "date": 1756460688762,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.0074494428733333186,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02253708166666667,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012914127199999997,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1573788877266667,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "ismailov.m.h@gmail.com",
            "name": "muharem",
            "username": "muharem"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "27519874677950b3cb8a3aea4116bbdfcbb69a22",
          "message": "Society pallet: Make fields of storage-persisted types public (#9604)\n\nSociety pallet: Make fields of storage-persisted types public.\n\nFields of types persisted in storage have been made public.",
          "timestamp": "2025-08-29T13:21:51Z",
          "tree_id": "961e5ef109e6333061079cc1c61094ba014c326e",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/27519874677950b3cb8a3aea4116bbdfcbb69a22"
        },
        "date": 1756478015055,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.01312180616,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022408413919999995,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007440649253333309,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15698233573333342,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "serban@parity.io",
            "name": "Serban Iorga",
            "username": "serban300"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "33819101a1a465d31303b9e97d55b24e0d6902a3",
          "message": "Fix `check_hrmp_message_metadata()` (#9602)\n\nWe need to update `maybe_prev_msg_metadata` inside\n`check_hrmp_message_metadata()`\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-08-29T14:33:15Z",
          "tree_id": "c8fbda75bdd1620aaead47bebd7a70da1a6ca53f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/33819101a1a465d31303b9e97d55b24e0d6902a3"
        },
        "date": 1756482289715,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022321774346666667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007574676919999976,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1568677002066667,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01301714332,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "40cd38db9e3a758e80af28ba2aa9f6420173ee65",
          "message": "[revive] revm backend (#9285)\n\n# EVM initial support  for pallet-revive\n\nInitial EVM support via the REVM crate to create a dual-VM system that\ncan execute both PolkaVM and EVM\n\n- Added `AllowEVMBytecode: Get<bool>` to the config to enable/disable\nEVM call and instantiation\n- CodeInfo has been updated to add the type of bytecode (EVM / PVM).\n`migration/v2.rs` takes care of migrating existing storages\n- The CodeUploadDeposit is not held by a pallet account instead of being\nheld on the uploader, It's automatically refunded when the refcount\ndrops to 0 and the code is removed.\n- The basic flow of uploading an EVM contract and running it should work\n- instructions are copied and adapted from REVM they should be ignored\nin this PR and reviewed in follow-up PR\n(**reviewers** please ignore\n`substrate/frame/revive/src/vm/evm/instructions/*` for now)\n\n## Implementation Guidelines\n\n### Basic Instruction Structure\nA basic instruction looks like this:\n\n```rust\npub fn coinbase<'ext, E: Ext>(context: Context<'_, 'ext, E>) {\n\tgas_legacy!(context.interpreter, revm_gas::BASE);\n\tpush!(context.interpreter, context.host.beneficiary().into_word().into());\n}\n```\n\n### Required Changes for REVM Instructions\n\nAll instructions have been copied from `REVM` and updated with generic\ntypes for pallet-revive. Two main changes are required:\n\n#### 1. Gas Handling\nReplace REVM gas calls with existing benchmarks where available:\n\n```diff\n- gas_legacy!(context.interpreter, revm_gas::BASE);\n+ gas!(context.interpreter, RuntimeCosts::BlockAuthor);\n```\n\n#### 2. Context Access\nReplace `context.host` calls with `context.extend` (set to `&mut Ext`):\n\n```diff\n- push!(context.interpreter, context.host.beneficiary().into_word().into());\n+ let coinbase: Address = context.interpreter.extend.block_author().unwrap_or_default().0.into();\n+ push!(context.interpreter, coinbase.into_word().into());\n```\n\n### Gas Benchmarking Notes\n- For cases without existing benchmarks (e.g arithmetic, bitwise) , we\nwill keep `gas_legacy!`\n- The u64 gas value are multiplied by a base cost benchmarked by\n`evm_opcode`\n\n- ### Important Rules\n- All calls to `context.host` should be removed (initialized to default\nvalues)\n- All calls to `context.interpreter.gas` should be removed (except\n`gas.memory` handled by `resize_memory!` macro)\n- See `block_number` implementation as a reference example\n\nThe following instructions in src/vm/evm/instructions/** need to be\nupdated\n\n### Basic Instructions\n\nWe probably don't need to touch these implementations here, they use the\ngas_legacy! macro to charge a low gas value that will be scaled with our\ngas_to_weight benchmark. The only thing needed here are tests that\nexercise these instructions\n\n<details>\n\n#### Arithmetic Instructions\n\n- [ ] **add**\n- [ ] **mul**\n- [ ] **sub**\n- [ ] **div**\n- [ ] **sdiv**\n- [ ] **rem**\n- [ ] **smod**\n- [ ] **addmod**\n- [ ] **mulmod**\n- [ ] **exp**\n- [ ] **signextend**\n\n#### Bitwise Instructions\n\n- [ ] **lt**\n- [ ] **gt**\n- [ ] **slt**\n- [ ] **sgt**\n- [ ] **eq**\n- [ ] **iszero**\n- [ ] **bitand**\n- [ ] **bitor**\n- [ ] **bitxor**\n- [ ] **not**\n- [ ] **byte**\n- [ ] **shl**\n- [ ] **shr**\n- [ ] **sar**\n- [ ] **clz**\n\n#### Control Flow Instructions\n\n- [ ] **jump**\n- [ ] **jumpi**\n- [ ] **jumpdest**\n- [ ] **pc**\n- [ ] **stop**\n- [ ] **ret**\n- [ ] **revert**\n- [ ] **invalid**\n\n### Memory Instructions\n- [ ] **mload**\n- [ ] **mstore**\n- [ ] **mstore8**\n- [ ] **msize**\n- [ ] **mcopy**\n\n#### Stack Instructions\n- [ ] **pop**\n- [ ] **push0**\n- [ ] **push**\n- [ ] **dup**\n- [ ] **swap**\n\n</details>\n\n### Sys calls instructions\n\nThese instructions should be updated from using gas_legacy! to gas! with\nthe appropriate RuntimeCost, the returned value need to be pulled from\nour `&mut Ext` ctx.interpreter.extend instead of the host or input\ncontext value\n\n<details>\n\n#### Block Info Instructions\n\n- [x] **block_number**\n- [ ] **coinbase**\n- [ ] **timestamp**\n- [ ] **difficulty**\n- [ ] **gaslimit**\n- [ ] **chainid**\n- [ ] **basefee**\n- [ ] **blob_basefee**\n\n#### Host Instructions\n\n- [ ] **balance**\n- [ ] **extcodesize**\n- [ ] **extcodecopy**\n- [ ] **extcodehash**\n- [ ] **blockhash**\n- [ ] **sload**\n- [ ] **sstore**\n- [ ] **tload**\n- [ ] **tstore**\n- [ ] **log**\n- [ ] **selfdestruct**\n- [ ] **selfbalance**\n\n#### System Instructions\n- [ ] **keccak256**\n- [ ] **address**\n- [ ] **caller**\n- [ ] **callvalue**\n- [ ] **calldataload**\n- [ ] **calldatasize**\n- [ ] **calldatacopy**\n- [ ] **codesize**\n- [ ] **codecopy**\n- [ ] **returndatasize**\n- [ ] **returndatacopy**\n- [ ] **gas**\n\n#### Transaction Info Instructions\n- [ ] **origin**\n- [ ] **gasprice**\n- [ ] **blob_hash**\n\n</details>\n\n### Contract Instructions\n\nThese instructions should be updated,, that's where I expect the most\ncode change in the instruction implementation.\nSee how it's done in vm/pvm module, the final result should look pretty\nsimilar to what we are doing there with the addition of custom gas_limit\ncalculation that works with our gas model.\n\nsee also example code here https://github.com/paritytech/revm_example\n\n<details>\n\n- [ ] **create**\n- [ ] **create**\n- [ ] **call**\n- [ ] **call_code**\n- [ ] **delegate_call**\n- [ ] **static_call**\n\n</details>\n\n---------\n\nSigned-off-by: Cyrill Leutwiler <bigcyrill@hotmail.com>\nSigned-off-by: xermicus <cyrill@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>\nCo-authored-by: xermicus <cyrill@parity.io>\nCo-authored-by: 0xRVE <robertvaneerdewijk@gmail.com>\nCo-authored-by: Robert van Eerdewijk <robert@Roberts-MacBook-Pro.local>",
          "timestamp": "2025-09-01T09:50:02Z",
          "tree_id": "d9b8743fb3951843e2e35b32fbb2ebaedd43cbef",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/40cd38db9e3a758e80af28ba2aa9f6420173ee65"
        },
        "date": 1756724354412,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012907221000000007,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022635085839999992,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15817605916666666,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007530114246666641,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eresav@me.com",
            "name": "Andrei Eres",
            "username": "AndreiEres"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "44416758c410cad2c7c2adee09c18f99b1f92d02",
          "message": "[pallet-revive] Expose `AccountInfo` and `ContractInfo` in the public interface (#9606)\n\n# Description\n\nPart of https://github.com/paritytech/polkadot-sdk/issues/9553\nSee https://github.com/paritytech/foundry-polkadot/issues/276\n\nExposes revive types to use in foundry-polkadot project.\n\n## Integration\n\nShould not affect downstream projects.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-09-01T11:45:58Z",
          "tree_id": "28f5c5c2c78d69f2bc31a51ad855fe79a9d5a4a0",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/44416758c410cad2c7c2adee09c18f99b1f92d02"
        },
        "date": 1756731824682,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007501038546666647,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02245329318666667,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01310574618666667,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15725251296,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "s.miasojed@gmail.com",
            "name": "Sebastian Miasojed",
            "username": "smiasojed"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f9ef0f34358d1f593776201b2728f2817120b424",
          "message": "[pallet-revive] EVM backend: Implement tx, block system and call stack instructions (#9414)\n\nThis PR is part of the road to EVM.\n- Implement call and create frames, allowing to call and instantiate\nother contracts.\n- Implement support for tx info, block info, system and contract\nopcodes.\n- The `InstructionResult` <-> `ExecError` conversion functions.\n\n---------\n\nSigned-off-by: Cyrill Leutwiler <bigcyrill@hotmail.com>\nSigned-off-by: xermicus <cyrill@parity.io>\nCo-authored-by: pgherveou <pgherveou@gmail.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>\nCo-authored-by: xermicus <cyrill@parity.io>\nCo-authored-by: 0xRVE <robertvaneerdewijk@gmail.com>\nCo-authored-by: Robert van Eerdewijk <robert@Roberts-MacBook-Pro.local>\nCo-authored-by: Cyrill Leutwiler <bigcyrill@hotmail.com>",
          "timestamp": "2025-09-01T17:06:49Z",
          "tree_id": "5f299b1a945c67b32282e425f5dba3d2933e6c15",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f9ef0f34358d1f593776201b2728f2817120b424"
        },
        "date": 1756750669404,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15714400476666662,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013288501266666666,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022507861566666666,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007527259086666644,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c5b4afcaea03367ff56062834fbe258489e74fa1",
          "message": "[pallet-revive] Update genesis config (#9557)\n\nUpdate pallet-revive Genesis config\nMake it possible to define accounts (contracts or EOA) that we want to\nsetup at Genesis\n\n---------\n\nSigned-off-by: Cyrill Leutwiler <bigcyrill@hotmail.com>\nSigned-off-by: xermicus <cyrill@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>\nCo-authored-by: xermicus <cyrill@parity.io>\nCo-authored-by: 0xRVE <robertvaneerdewijk@gmail.com>\nCo-authored-by: Robert van Eerdewijk <robert@Roberts-MacBook-Pro.local>",
          "timestamp": "2025-09-02T07:40:25Z",
          "tree_id": "6df31dbaa2e64663ba4d7c118e8872f85e26a68a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c5b4afcaea03367ff56062834fbe258489e74fa1"
        },
        "date": 1756803347207,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007533725946666646,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013200251320000005,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.16001863982000003,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022758891886666657,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "22591718+RomarQ@users.noreply.github.com",
            "name": "Rodrigo Quelhas",
            "username": "RomarQ"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "7753112a1b6aae323af71e8904fbab02fdc73c22",
          "message": "Call SingleBlockMigrations from frame_system::Config on try_on_runtime_upgrade (#9451)\n\nRecently, when moving the single block migrations from\n`frame_executive::Executive` to `SingleBlockMigrations` in\n`frame_system::Config`, I noticed that `try_runtime_upgrade` was\nignoring the `SingleBlockMigrations` defined in frame_system. More\ncontext at https://github.com/polkadot-fellows/runtimes/pull/844\n\nBased on PR https://github.com/paritytech/polkadot-sdk/pull/1781 and\n[PRDoc](https://github.com/paritytech/polkadot-sdk/blob/beb9030b249cc078b3955232074a8495e7e0302a/prdoc/1.9.0/pr_1781.prdoc#L29),\nthe new way for providing the single block migrations should be through\n`SingleBlockMigrations` in `frame_system::Config`. Providing them from\n`frame_executive::Executive` is still supported, but from what I\nunderstood is or will be deprecated.\n\n> `SingleBlockMigrations` this is the new way of configuring migrations\nthat run in a single block. Previously they were defined as last generic\nargument of Executive. This shift is brings all central configuration\nabout migrations closer into view of the developer (migrations that are\nconfigured in Executive will still work for now but is deprecated).\n\n## Follow-up Changes\nWill try to open a pull request tomorrow for deprecating the use of\n`OnRuntimeUpgrade` in `frame_executive::Executive`.",
          "timestamp": "2025-09-02T10:47:13Z",
          "tree_id": "e461504342bb3fa2c0f5be604e7139194938f873",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/7753112a1b6aae323af71e8904fbab02fdc73c22"
        },
        "date": 1756814304846,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02240946046,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013174902433333333,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1564146113,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007492650586666652,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "363911+pepoviola@users.noreply.github.com",
            "name": "Javier Viola",
            "username": "pepoviola"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "12b5b37b8cd1cef19d01679dc70b933d0d80ba68",
          "message": "bump zombienet-sdk and subxt versions (#9587)\n\nReplace https://github.com/paritytech/polkadot-sdk/pull/9506\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: Bastian Köcher <info@kchr.de>",
          "timestamp": "2025-09-02T16:31:43+02:00",
          "tree_id": "8485bbe198b710fdce8c03ca9792b14f10af7cde",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/12b5b37b8cd1cef19d01679dc70b933d0d80ba68"
        },
        "date": 1756825512033,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.1577991907333333,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012940183773333336,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007508250779999972,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022642024113333336,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1728078+michalkucharczyk@users.noreply.github.com",
            "name": "Michal Kucharczyk",
            "username": "michalkucharczyk"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6f9236b9b6827150a366f5c7b1e4e9cd523594e0",
          "message": "basic-authorship: end_reason improved (#9550)\n\nThe `end_reason` reported in block authoring can be\n[misleading](https://github.com/paritytech/polkadot-sdk/issues/9188#issuecomment-3070697415)\nwhen resource limits are hit. The basic authorship module tries\nadditional transactions after hitting limits, and if it runs out of\ntransactions or time during this extended trial phase, it reports the\ninaccurate reason.\n\nMisleading scenarios are:\n- Scenario 1: Resource limit masked by `NoMoreTransactions`\n1. Block hits weight/size limit -> should report\n`HitBlockWeightLimit`/`HitBlockSizeLimit`\n      2. Code tries up to `MAX_SKIPPED_TRANSACTIONS`,\n      3. If still before soft deadline, continues trying transactions,\n      4. Transaction pool runs out during this extended trial phase,\n5. Reason reported is: `NoMoreTransactions`, while the reality is that\nblock was _resource-constrained_, not _mp-transactions-constrained_.\n- Scenario 2: Resource limit masked by `HitDeadline`\n1. Block hits weight/size limit, (let's assume 100k fat transactions in\nthe pool)\n2. Code keeps trying transactions that can't fit due to weight\nconstraints\n      3. Deadline is reached while trying pool transactions\n4. Reason reported is: `HitDeadline`, while the reality is that block\nwas _resource-constrained_, not _time-constrained_.\n\nThis PR proposes to change the actual `end_reason` to be more accurate.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-09-02T19:28:10Z",
          "tree_id": "0edd6bb34ea90352d1cd8ca0e8fcbd980aa2e476",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/6f9236b9b6827150a366f5c7b1e4e9cd523594e0"
        },
        "date": 1756846081502,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007411460400000026,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15659756909333342,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012619404280000003,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022634490006666667,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "yrong1997@gmail.com",
            "name": "Ron",
            "username": "yrong"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b8a05717efc3f1b730321554ba603c1bfe71a4cb",
          "message": "Improve Penpal with async backing (#9293)",
          "timestamp": "2025-09-02T21:35:13Z",
          "tree_id": "02ce070e5eaea90e01fe60f36dc2b24a2a9f6b28",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/b8a05717efc3f1b730321554ba603c1bfe71a4cb"
        },
        "date": 1756853454925,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02274303932666667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007451889186666644,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013204156713333333,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15747230556666664,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41779041+alvicsam@users.noreply.github.com",
            "name": "Alexander Samusev",
            "username": "alvicsam"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3f8534ee18967c1169176d29944b257537a7cbad",
          "message": "ci: try experimental runners (#9618)\n\ncc https://github.com/paritytech/devops/issues/3875",
          "timestamp": "2025-09-03T07:53:07Z",
          "tree_id": "24fd87249822204aa03b8c70cca28ec71b1beff5",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/3f8534ee18967c1169176d29944b257537a7cbad"
        },
        "date": 1756891849148,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.01282335692666667,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022546932279999994,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15721089181333334,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007443988326666655,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eresav@me.com",
            "name": "Andrei Eres",
            "username": "AndreiEres"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "01abd9e3bfccd74135115bf6ef972db52f9c7d84",
          "message": "[pallet-revive] Add `Pallet::set_evm_balance` (#9617)\n\nPart of https://github.com/paritytech/polkadot-sdk/issues/9553\nSee https://github.com/paritytech/foundry-polkadot/issues/273\n\nAdds a balance setter in EVM. \n\n\n## Integration\n\nShould not affect downstream projects.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: PG Herveou <pgherveou@gmail.com>",
          "timestamp": "2025-09-03T10:15:05Z",
          "tree_id": "275de3392024245a6a80282960032b563c922104",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/01abd9e3bfccd74135115bf6ef972db52f9c7d84"
        },
        "date": 1756898923093,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.1575818643933334,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013204531373333335,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022550875606666673,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007668701213333307,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "enntheprogrammer@gmail.com",
            "name": "sistemd",
            "username": "sistemd"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "75173f8c55e7f2d83c545397700576b58bcd92e5",
          "message": "fix: parachain informant (#9581)\n\nCloses https://github.com/paritytech/polkadot-sdk/issues/9559.\n\nThe parachain informant was logging information for all parachains, not\njust ours. This PR fixes that by filtering the events by parachain ID.\n\nI tried adding a zombienet test for this but there isn't really a good\nway to do it. So I ended up only testing manually with zombienet, by\ncreating a network of two parachains and adding some extra logging to\nensure that the events are now being filtered out correctly.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-09-03T10:49:02Z",
          "tree_id": "35a2d6e8bcf1927302d16a9fd799a492610fa67d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/75173f8c55e7f2d83c545397700576b58bcd92e5"
        },
        "date": 1756900931643,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022479466926666664,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.0074222407866666755,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1585381148466667,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013017625280000002,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "Sajjon@users.noreply.github.com",
            "name": "Alexander Cyon",
            "username": "Sajjon"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "63958c454643ddafdde8be17af5334aa95954550",
          "message": "move released primitives and APIs out of staging (#9443)\n\nSolves https://github.com/paritytech/polkadot-sdk/issues/9400\n\nNo logic change, only moves types from\n`polkadot/primitives/src/vstaging` into `polkadot/primitives/src/v9`\n(renamed from `v8` to `v9`).\n\n---------\n\nCo-authored-by: Alexander Cyon <alex.cyon@parity.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Andrei Sandu <54316454+sandreim@users.noreply.github.com>\nCo-authored-by: Dmitry Sinyavin <dmitry.sinyavin@parity.io>\nCo-authored-by: s0me0ne-unkn0wn <48632512+s0me0ne-unkn0wn@users.noreply.github.com>",
          "timestamp": "2025-09-03T20:30:44Z",
          "tree_id": "e657de1eac98014fd24bc497703ad0c8e5c9d974",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/63958c454643ddafdde8be17af5334aa95954550"
        },
        "date": 1756935949961,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013144804786666662,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022607926946666662,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15818924106666668,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007636241046666638,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "serban@parity.io",
            "name": "Serban Iorga",
            "username": "serban300"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f9efa67cf05d0a2404605c391ac3858c3c9bf6b8",
          "message": "Account for PoV size when enqueing XCMP message (#9641)\n\nRelated to https://github.com/paritytech/polkadot-sdk/pull/9630 , but\nadjusting the benchmark\n\nUsing `#[benchmark(pov_mode = Measured)]` for the\n`enqueue_empty_xcmp_message_at` benchmark.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-09-04T13:04:52Z",
          "tree_id": "2f6bde86497d3978a82f49bd9cd87396f44f6a05",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f9efa67cf05d0a2404605c391ac3858c3c9bf6b8"
        },
        "date": 1756995553827,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013075257226666668,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15878688501999996,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022642411733333336,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007624709733333374,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "serban@parity.io",
            "name": "Serban Iorga",
            "username": "serban300"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fa417f9fde23634d6157b928ddfe9d0b19299d57",
          "message": "Update `kvdb-rocksdb` to `v0.20.0` (#9644)\n\nRelated to https://github.com/paritytech/parity-common/issues/932\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-09-04T20:05:17Z",
          "tree_id": "1cac64dbbcde0f916daa42d8cede3e716dae0a72",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/fa417f9fde23634d6157b928ddfe9d0b19299d57"
        },
        "date": 1757021156511,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15752231493333335,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02252892784666668,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.0073578949599999765,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013104626900000001,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "paolo@parity.io",
            "name": "Paolo La Camera",
            "username": "sigurpol"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5314442a060f53391c5d8d1ece4937332dfa9fc9",
          "message": "staking-async: implement lazy era pruning extrinsic (#9632)\n\nMove era pruning from automatic unbounded deletions to a permissionless\nlazy pruning system.\n\nFix https://github.com/paritytech-secops/srlabs_findings/issues/528.\n\n\n## Changes:\n- Add `prune_era_step extrinsic` for permissionless era maintenance\n- Add `PruningStep` enum and `EraPruningState` storage for tracking\nprogress\n- Implement `do_prune_era_step()` with item/weight-based deletion limits\n- Remove automatic pruning to prevent DoS from unbounded operations\n- Add `MaxPruningItems` Runtime parameter for safe incremental deletions\n- Return `Pays::No` when work is done to incentivize regular maintenance\n- Add `EraNotPrunable` error for proper validation\n- Update benchmarking to test new extrinsic-based approach\n- Update tests to account for manual pruning instead of automatic\ncleanup\n\nThe new system processes era pruning across multiple blocks using a\nstate machine pattern, ensuring storage operations remain bounded and\npreventing potential DoS attacks from large era cleanup operations.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-09-05T08:29:51Z",
          "tree_id": "54de2b3e6dd6844c873e56f81a6335492bd4fd3a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/5314442a060f53391c5d8d1ece4937332dfa9fc9"
        },
        "date": 1757065487636,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012678551893333334,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02241209982,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15635772067333337,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007386069813333317,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4acb964059a218be9bac954b4e3803b78b5526bf",
          "message": "Forward `CoreInfo` via an digest to the runtime (#9002)\n\nBefore this pull request we had this rather inflexible `SelectCore` type\nin `parachain-system`. It was just taking the last byte of the block\nnumber as the core selector. This resulted in issues like #8893. While\nit was not totally static, it was very complicated to forward the needed\ninformation to the runtime. In the case of running with block bundling\n(500ms blocks), multiple blocks are actually validated on the same core.\nFinding out the selector and offset without having access to the claim\nqueue is rather hard. The claim queue could be forwarded to the runtime,\nbut it would waste POV size as we would need to include the entire claim\nqueue of all parachains.\n\nThis pull request solves the problem by moving the entire core selection\nto the collator side. From there the information is passed via a\n`PreRuntime` digest to the runtime. The `CoreInfo` contains the\n`selector`, `claim_queue_offset` and `number_of_cores`. Doing this on\nthe collator side is fine as long as we don't have slot durations that\nare lower than the relay chain slot duration. As we have agreed to\nalways have equal or bigger slot durations on parachains, there should\nbe no problem with this change.\n\nDownstream users need to remove the `SelectCore` type from the\n`parachain_system::Config`:\n```diff\n- type SelectCore = ...;\n+\n```\n\nCloses: https://github.com/paritytech/polkadot-sdk/issues/8893\nhttps://github.com/paritytech/polkadot-sdk/issues/8906\n\n---------\n\nSigned-off-by: Andrei Sandu <andrei-mihail@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Andrei Sandu <54316454+sandreim@users.noreply.github.com>\nCo-authored-by: Andrei Sandu <andrei-mihail@parity.io>\nCo-authored-by: Sebastian Kunert <skunert49@gmail.com>",
          "timestamp": "2025-09-05T15:26:49Z",
          "tree_id": "edd4ea3b225223f31c9ab6550f848bf6d9254b3e",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4acb964059a218be9bac954b4e3803b78b5526bf"
        },
        "date": 1757090329098,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.16031057308666674,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01325563701333333,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02265520304,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007405410346666666,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "paolo@parity.io",
            "name": "Paolo La Camera",
            "username": "sigurpol"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c8c7dba4030fba2d7504c47c40d654c9954fe3d7",
          "message": "staking-async: prevent manual application of cancelled slashes (#9659)\n\nFix security vulnerability where the permissionless `apply_slash`\nextrinsic could be used to manually apply slashes that governance had\ncancelled via `cancel_deferred_slash`.\n\nRelated issue:\nhttps://github.com/paritytech-secops/srlabs_findings/issues/563\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-09-07T06:12:34Z",
          "tree_id": "d8fe36db80cd2964ec9577b6d61bc29340fdc5fc",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c8c7dba4030fba2d7504c47c40d654c9954fe3d7"
        },
        "date": 1757230298760,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012938924326666667,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022324985353333333,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1581404280733334,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007586492346666665,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "skunert49@gmail.com",
            "name": "Sebastian Kunert",
            "username": "skunert"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a93a489a3c072eb010a700c4b5033ba4fda1e9cc",
          "message": "basic-authorship: Improve inherent logging (#9664)\n\nThis PR aims to improve the inherent logging situation a bit. After the\nrecent incident it was unnecessary painful to figure out what exactly\nhappened. The logs should now be a bit more clear.\n\n- We get how many inherents where provided by the runtime\n- We get the names of the data items\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Rodrigo Quelhas <22591718+RomarQ@users.noreply.github.com>",
          "timestamp": "2025-09-08T08:12:54Z",
          "tree_id": "8095002d2ba128cb750293735dce9759a2d875ba",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/a93a489a3c072eb010a700c4b5033ba4fda1e9cc"
        },
        "date": 1757323774018,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007398181166666651,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1589980233933333,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022324718620000003,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013187684420000002,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "gui.thiolliere@gmail.com",
            "name": "Guillaume Thiolliere",
            "username": "gui1117"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "644f14fc86a4bd4ca2edec922c5e617103fcf387",
          "message": "zombienet test with timeout (#9168)\n\nI added timeout for async operation in the statement store zombienet\ntest.\n\n@lrubasze\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-09-08T10:46:46Z",
          "tree_id": "47a2773f5740a1cb9294a782df960cc139aa113a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/644f14fc86a4bd4ca2edec922c5e617103fcf387"
        },
        "date": 1757332851431,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012842103066666671,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022481932893333334,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15862449918666674,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007590390666666668,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "robertvaneerdewijk@gmail.com",
            "name": "0xRVE",
            "username": "0xRVE"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "acac0127168dac1d603e4d996cb210ceeddeb5de",
          "message": "[pallet-revive] EVM backend: implement various missing opcodes (#9385)\n\n* [x] system (other PR, no tests)\n* [x] block_info (other PR)\n* [x] contract (other PR)\n* [x] tx_info (other PR)\n* [x] arithmetic\n* [x] bitwise\n* [x] i256 (these are not opcodes so will not test)\n* [x] host (except `log()`)\n* [x] memory\n* [x] control (except `pc()`)\n* [x] macros (these are not opcodes so will not test)\n* [x] utility (these are not opcodes so will not test)\n* [x] stack\n\n---------\n\nSigned-off-by: xermicus <cyrill@parity.io>\nSigned-off-by: Cyrill Leutwiler <bigcyrill@hotmail.com>\nCo-authored-by: pgherveou <pgherveou@gmail.com>\nCo-authored-by: Sebastian Miasojed <sebastian.miasojed@parity.io>\nCo-authored-by: Robert van Eerdewijk <robert@Roberts-MacBook-Pro.local>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Sebastian Miasojed <s.miasojed@gmail.com>\nCo-authored-by: xermicus <cyrill@parity.io>\nCo-authored-by: Cyrill Leutwiler <bigcyrill@hotmail.com>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>\nCo-authored-by: Alexander Cyon <Sajjon@users.noreply.github.com>\nCo-authored-by: Alexander Cyon <alex.cyon@parity.com>\nCo-authored-by: Andrei Sandu <54316454+sandreim@users.noreply.github.com>\nCo-authored-by: Dmitry Sinyavin <dmitry.sinyavin@parity.io>\nCo-authored-by: s0me0ne-unkn0wn <48632512+s0me0ne-unkn0wn@users.noreply.github.com>\nCo-authored-by: Serban Iorga <serban@parity.io>",
          "timestamp": "2025-09-08T15:00:45Z",
          "tree_id": "51fe767884f5f0db6533148e553a06efa236a772",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/acac0127168dac1d603e4d996cb210ceeddeb5de"
        },
        "date": 1757348100404,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007508597080000007,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012954011006666665,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15833172225333336,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02233035787333333,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "egor@parity.io",
            "name": "Egor_P",
            "username": "EgorPopelyaev"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4231722827e525fc7c794f05f712bb158fa43efb",
          "message": "[backport] Regular version bumps from the stable2506-2 (#9676)\n\nThis PR backport regular version bumps from the stable release branch\n`stabl2506` back to `master`",
          "timestamp": "2025-09-09T05:50:49Z",
          "tree_id": "12e66ffcd337a3e943322fb324c2fd1039b5cb13",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4231722827e525fc7c794f05f712bb158fa43efb"
        },
        "date": 1757401807866,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022825414166666665,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007712350346666662,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013366720080000003,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.16022060669333335,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "egor@parity.io",
            "name": "Egor_P",
            "username": "EgorPopelyaev"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e6166154ef71ac37434515630e1a9e268eff43f2",
          "message": "[Release|CI/CD] Fix macos build in release pipeline (#9682)\n\nCurrent release flow that prepares binaries for the RC fails on the\nbuild for the macos. Due to missing `llvm` library on the runner.\nThis PR fixes this issue\n\nCloses: https://github.com/paritytech/release-engineering/issues/271\n\n---------\n\nCo-authored-by: Bruno Devic <bruno.devic@parity.io>",
          "timestamp": "2025-09-09T10:54:03Z",
          "tree_id": "a19b489a02405c641f95f7846085ab5294c35c0d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e6166154ef71ac37434515630e1a9e268eff43f2"
        },
        "date": 1757419685074,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.1592506070533334,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01317754609333333,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007499118166666685,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022356022220000007,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41779041+alvicsam@users.noreply.github.com",
            "name": "Alexander Samusev",
            "username": "alvicsam"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ae7177e0d2f99879cb0d91a589ac7f202d39e192",
          "message": "ci: update forklift in ci image (#9684)\n\ncc https://github.com/paritytech/devops/issues/3875",
          "timestamp": "2025-09-09T13:13:44Z",
          "tree_id": "391c83adce9ac0a105cee4738b52dcd62c50acfa",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ae7177e0d2f99879cb0d91a589ac7f202d39e192"
        },
        "date": 1757429038959,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.01291391933333334,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15885933440666666,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007494204906666688,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022373880226666663,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6060499f9a807406e13449561b0fc603d9aaeedc",
          "message": "[pallet-revive] fix GAS_PRICE (#9679)\n\nCurrently submitting a transactio to the dev-node or kitchensink will\ntrigger an error when you try to submit a transaction trhough cast (or\nanything using alloy) as the block gas limit on these runtime is greater\nthan u64::max.\n\nThis bump the GAS_PRICE to fix this issue, this will eventually be\nsuperseeded by the new gas model\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: xermicus <cyrill@parity.io>",
          "timestamp": "2025-09-10T10:22:50Z",
          "tree_id": "829d84997fde6b92f6d6fc17397ba67c00137f08",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/6060499f9a807406e13449561b0fc603d9aaeedc"
        },
        "date": 1757504703611,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012981383726666663,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02237314048666667,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15806370254000002,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007706958786666658,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "egor@parity.io",
            "name": "Egor_P",
            "username": "EgorPopelyaev"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "05672500f639411e10a122d95baafec537603294",
          "message": "[Release|CI/CD] Fix release flows (#9700)\n\nThis PR contains few fixes for the release flows:\n- delete debug lines\n- added installation of the `solc` and `resolc` for the`\npolkadot-omni-node` macos build\n- fixed destination repo for the release draft creation\n- notification about the draft release waits now till all the\npublication jobs are done",
          "timestamp": "2025-09-10T13:36:41Z",
          "tree_id": "1dd31d208ce072db1a9710124dd23dc8a4c180e6",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/05672500f639411e10a122d95baafec537603294"
        },
        "date": 1757516004136,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022371834386666668,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15851243528666667,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013178010079999998,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007765212506666678,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "54316454+sandreim@users.noreply.github.com",
            "name": "Andrei Sandu",
            "username": "sandreim"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7af791f7594c61a97c31841c681666461e300563",
          "message": "Update elastic scaling documentation (#9677)\n\nCloses https://github.com/paritytech/polkadot-sdk/pull/9677 \n\nAdd docs and remove MVP.\n\n---------\n\nSigned-off-by: Andrei Sandu <andrei-mihail@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Alexander Cyon <Sajjon@users.noreply.github.com>\nCo-authored-by: Sebastian Kunert <skunert49@gmail.com>\nCo-authored-by: Alin Dima <alin@parity.io>",
          "timestamp": "2025-09-10T16:53:52Z",
          "tree_id": "2fab67ef4a232a7d5c9b37b1fc956511afee6064",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/7af791f7594c61a97c31841c681666461e300563"
        },
        "date": 1757527530819,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02234300975333333,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15852755366000004,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00787426524666668,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012832019059999998,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "54316454+sandreim@users.noreply.github.com",
            "name": "Andrei Sandu",
            "username": "sandreim"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e99f93b24b1d8a568db46791463e03b46c2c0c7f",
          "message": "Cumulus: adjust authorship duration (#9703)\n\nFor elastic scaling usecases with more than 3 cores we need to ensure\nblock authorship ends before the next block is supposed to be built.\n\n---------\n\nSigned-off-by: Andrei Sandu <andrei-mihail@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-09-10T19:17:22Z",
          "tree_id": "b99a1653d67454022234437f908705f2c468d44a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e99f93b24b1d8a568db46791463e03b46c2c0c7f"
        },
        "date": 1757536101292,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022435647446666672,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013010812879999998,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.008105809213333329,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15919769870666675,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "2b4fbe61c8609804c72157eaccd99ef440d1cde6",
          "message": "DB: Ensure that when we revert blocks, we actually delete all their data (#9691)\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-09-10T20:41:42Z",
          "tree_id": "60a6de7c99f92c999fbcdac0f37c9dad715b9778",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/2b4fbe61c8609804c72157eaccd99ef440d1cde6"
        },
        "date": 1757541173532,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02242005649333334,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007448505806666663,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01295965700666667,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15878206564000008,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "11329616+Klapeyron@users.noreply.github.com",
            "name": "Klapeyron",
            "username": "Klapeyron"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1d4e9ec206ef417724c23c82ac94de5d24599173",
          "message": "Extend AppSignature trait with Signature (#9645)\n\n[sp_application_crypto::AppPublic](https://docs.rs/sp-application-crypto/latest/sp_application_crypto/trait.AppPublic.html)\nrequires\n[sp_core::crypto::Public](https://paritytech.github.io/polkadot-sdk/master/sp_core/crypto/trait.Public.html):\n```rust\n/// Application-specific public key.\npub trait AppPublic: AppCrypto + Public + Debug + MaybeHash + Codec {\n\t/// The wrapped type which is just a plain instance of `Public`.\n\ttype Generic: IsWrappedBy<Self> + Public + Debug + MaybeHash + Codec;\n}\n```\n\nbut it looks like similar requirement is missing for\n[sp_application_crypto::AppSignature](https://docs.rs/sp-application-crypto/latest/sp_application_crypto/trait.AppSignature.html)\nand\n[sp_core::crypto::Signature](https://paritytech.github.io/polkadot-sdk/master/sp_core/crypto/trait.Signature.html):\n\n```rust\n/// Application-specific signature.\npub trait AppSignature: AppCrypto + Eq + PartialEq + Debug + Clone {\n\t/// The wrapped type which is just a plain instance of `Signature`.\n\ttype Generic: IsWrappedBy<Self> + Eq + PartialEq + Debug;\n}\n```\n\nThis PR extends\n[sp_application_crypto::AppSignature](https://docs.rs/sp-application-crypto/latest/sp_application_crypto/trait.AppSignature.html)\ntrait with\n[sp_core::crypto::Signature](https://paritytech.github.io/polkadot-sdk/master/sp_core/crypto/trait.Signature.html).",
          "timestamp": "2025-09-11T09:45:57Z",
          "tree_id": "fd7030168a8d877153d8839e5d5337e3001fdc16",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/1d4e9ec206ef417724c23c82ac94de5d24599173"
        },
        "date": 1757590789544,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.16115036990000003,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013393036880000002,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007955190706666709,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022826150946666658,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "serban@parity.io",
            "name": "Serban Iorga",
            "username": "serban300"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "32cc5d6163781a077c4bdb2cafdf1a538127ebd5",
          "message": "[XCMP] Add support for receiving double encoded XCMs (#9588)\n\nRelated to https://github.com/paritytech/polkadot-sdk/issues/8308\n\nThis PR adds support for receiving double encoded XCMs via XCMP.\n\n## Description\n\nRight now parachains pass XCM messages between them through XCMP pages\nthat use the `XcmpMessageFormat::ConcatenatedVersionedXcm` format. These\npages contain concatenated encoded `VersionedXcm`s and on the receiving\nside, in order to split the page into individual messages, we need to\nfirst decode them and then re-encode and forward them to the\n`pallet-messages-queue`. This adds extra overhead ([about 2.5\nmicroseconds + some cost per\nbyte](https://github.com/paritytech/polkadot-sdk/blob/3dfbdf4a454f35238500779e503e1ec32ba7fc63/cumulus/parachains/runtimes/assets/asset-hub-rococo/src/weights/cumulus_pallet_xcmp_queue.rs#L199-L208)).\n\nThis PR adds a new (`XcmpMessageFormat::ConcatenatedOpaqueVersionedXcm`)\nformat that will be used for pages with double-encoded XCMs. This makes\nthe decoding much easier and almost free, improving the XCMP bandwidth.\n\n## Rollout\n\nAn easy approach here is to consider that all parachains that support\nXCMv6 also have this upgrade and to use\n`XcmpMessageFormat::ConcatenatedOpaqueVersionedXcm` when sending\nmessages to such a parachain.\n\nThere are other better approaches, but they would be harder to\nimplement. For example:\n- another approach would be for each parachain to expose a list of\nsupported features and to check if\n`XcmpMessageFormat::ConcatenatedOpaqueVersionedXcm` is supported when\nsending messages to a connected parachain.\n- or we could advertise this through signals somehow\n\nStill thinking of other simpler approaches. We could also probably do it\nmanually for each XCMP channel.\n\nFor the moment it's important to add the support for receiving\n`XcmpMessageFormat::ConcatenatedOpaqueVersionedXcm` and to let it\npropagate to as many parachains as possible as they update the runtime.\nAfter that we'll have to come out with a rollout strategy.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>",
          "timestamp": "2025-09-11T13:45:29Z",
          "tree_id": "56843a82de8590620d8f9b9bbb9677c9651939f4",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/32cc5d6163781a077c4bdb2cafdf1a538127ebd5"
        },
        "date": 1757602670046,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022551619919999998,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007639309213333345,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013030075733333337,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1588942509600001,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "35698397+drskalman@users.noreply.github.com",
            "name": "drskalman",
            "username": "drskalman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dae4b9cf572920848910b520d3cefe83d34692f3",
          "message": "Proof of possession alongside signing on owner (#9471)\n\n# Description\n  \nWhen signing on a new session key the signer must also use the session\nkey to sign on the authority signer key to prove that it is not faking\nthe ownership of someone's else key to mount a front runner attack. On\nthe other hand for aggregatable crypto schemes, the signer should proof\nthe ownership of the private key by signing a specific statement in a\nseparate domain than one is used for usual signing to prevent rogue key\nattack. This means that those scheme needs to submit two signature as\nproof in contrast to non-aggregatble schemes. It is also possible that\nin future some crypto scheme requires the key submitter to prove other\nfact before accepting its submission.\n\nThis PR introduce a new customize type ProofOfPossession for Pairs (in\naddition to Public and Signature) to represent these proof. Currently\n`ProofOfPossession = Signature` for `ecdsa, ed25519 and sr25519` while\n`ProofOfPossession = Signature | Signature` for bls381 and\n`ProofOfPossession = ecdsa:Signature | bls381:Signature |\nbls381:Signature` for `ecdsa_bls381` paired_key scheme.\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: Davide Galassi <davxy@datawok.net>",
          "timestamp": "2025-09-11T19:58:10Z",
          "tree_id": "597cc7d36c3d338a58f4b577b6a2e2d78d7bdf1f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/dae4b9cf572920848910b520d3cefe83d34692f3"
        },
        "date": 1757627360662,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007606240579999987,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02261888454,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15866383296666675,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013016551480000001,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "117115317+lrubasze@users.noreply.github.com",
            "name": "Lukasz Rubaszewski",
            "username": "lrubasze"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "32142045e09e9e0e822d47f064372acb35d14c84",
          "message": "ci: reenable zombienet pov_recovery and rpc_collator_builds_block tests (#9695)\n\nSince https://github.com/paritytech/zombienet-sdk/issues/371 has been\nsolved\nReenable:\n- `zombienet-cumulus-0002-pov_recovery` -\nhttps://github.com/paritytech/polkadot-sdk/issues/8985\n- `zombienet-cumulus-0006-rpc_collator_builds_blocks` -\nhttps://github.com/paritytech/polkadot-sdk/issues/9154\n\nAdditionally allow to use regex patterns when dispatching zombienet\ntests manually:\neg. \n```\n.github/scripts/dispatch-zombienet-workflow.sh \\\n  -w zombienet_cumulus.yml \\\n  -b \"lrubasze/reenable-some-zombienet-ci-tests\" \\\n  -p \"0002-pov_recovery|0006-rpc_collator_builds_blocks\"\n```",
          "timestamp": "2025-09-12T07:52:18Z",
          "tree_id": "664d06488a8c42dcfbc2b6150ab44b0f4b960cc6",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/32142045e09e9e0e822d47f064372acb35d14c84"
        },
        "date": 1757668605126,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012891987706666663,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15716569841333342,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02244395992666667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007481348186666657,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "paolo@parity.io",
            "name": "Paolo La Camera",
            "username": "sigurpol"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f82d684c4a4a4430316c6d892213ba6aff91cf7b",
          "message": "staking-async: handle uninitialized state in try-runtime checks (#9721)\n\nHandle the case where `ActiveEra` is `None` (uninitialized staking\nstate) in the try-state checks.\nThis fixes `try-runtime` failures when deploying `staking-async` for the\nfirst time on chains without existing staking.",
          "timestamp": "2025-09-12T09:02:38Z",
          "tree_id": "f5eeab765f487db20d09d878cb03fbb7ce9ad7be",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f82d684c4a4a4430316c6d892213ba6aff91cf7b"
        },
        "date": 1757672415933,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022427646293333332,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012758188326666664,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1571756628866667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007474022406666654,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "22591718+RomarQ@users.noreply.github.com",
            "name": "Rodrigo Quelhas",
            "username": "RomarQ"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6c06057ae819724f89ff1ef9f060592b6c96e5d3",
          "message": "Deprecate `OnRuntimeUpgrade` parameter in `frame_executive::Executive` (#9638)\n\nFollow-up of https://github.com/paritytech/polkadot-sdk/pull/9451\n\nBased on PR https://github.com/paritytech/polkadot-sdk/pull/1781 and\n[PRDoc](https://github.com/paritytech/polkadot-sdk/blob/beb9030b249cc078b3955232074a8495e7e0302a/prdoc/1.9.0/pr_1781.prdoc#L29),\nthe new way for providing the single block migrations should be through\n`SingleBlockMigrations` in `frame_system::Config`. Providing them from\n`frame_executive::Executive` is still supported, but is deprecated.\n\n> `SingleBlockMigrations` this is the new way of configuring migrations\nthat run in a single block. Previously they were defined as last generic\nargument of Executive. This shift is brings all central configuration\nabout migrations closer into view of the developer (migrations that are\nconfigured in Executive will still work for now but is deprecated).\n\n`Executive` docs will look like:\n\n<img width=\"800\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/6f285c26-5c61-4350-a41b-aebc6b856601\"\n/>\n\nCompanion PR in https://github.com/polkadot-fellows/runtimes/pull/844",
          "timestamp": "2025-09-12T09:42:24Z",
          "tree_id": "59e562a5cf13de084e691cb12c3ea92120a99189",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/6c06057ae819724f89ff1ef9f060592b6c96e5d3"
        },
        "date": 1757675642337,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007871967859999975,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1581354277133333,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013365904946666665,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02265720363333333,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "22591718+RomarQ@users.noreply.github.com",
            "name": "Rodrigo Quelhas",
            "username": "RomarQ"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "136b4cb5f52515ec8086ab4466226d48e8ba220b",
          "message": "Remove deprecated collator-related code in cumulus (#9662)\n\nRemoves collator-related code in cumulus, which has been deprecated for\na long time.\n\nRemoves an old test, which was adapted in\nhttps://github.com/paritytech/cumulus/pull/480 and duplicated by\nhttps://github.com/paritytech/polkadot-sdk/blob/acac0127168dac1d603e4d996cb210ceeddeb5de/substrate/client/block-builder/src/lib.rs#L389-L415\n\n## PoV Recovery Test Updates\n\nUpdates the PoV recovery test\n(`cumulus/zombienet/zombienet-sdk/tests/zombie_ci/pov_recovery.rs`) to\nuse a more realistic consensus mechanism:\n\n### Changes Made\n- **Removed**: `--use-null-consensus` flag from test configuration\n\n### Rationale\n\n**Previous behavior** (with null consensus):\n- Nodes operated without real block production\n- PoV recovery mechanisms triggered more frequently\n- Created artificial test conditions that don't reflect production\nscenarios\n\n**New behavior** (with actual consensus):\n- Nodes produce blocks normally but don't announce them to peers\n- PoV recovery occurs at a more realistic frequency\n- Better simulates real-world network conditions where blocks may be\nmissed\n\n### Impact\n\nThis change makes the test **more representative** of actual network\nconditions while maintaining the core functionality being tested.\n\n## Follow-up\nRemove the following lines:\n\nhttps://github.com/paritytech/polkadot-sdk/blob/4acb964059a218be9bac954b4e3803b78b5526bf/cumulus/pallets/parachain-system/src/lib.rs#L993-L994\n\n## Review notes\n\nI recommend enabling `Hide whitespace` option when reviewing the\nchanges:\n\n<img width=\"300\" alt=\"image\"\nsrc=\"https://github.com/user-attachments/assets/41f137af-c0b9-435e-af1e-84e51cbdfa23\"\n/>",
          "timestamp": "2025-09-12T19:11:41Z",
          "tree_id": "c16dce985562719e48e322f8393011c361d8572d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/136b4cb5f52515ec8086ab4466226d48e8ba220b"
        },
        "date": 1757708713421,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022421220853333333,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007552582180000012,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1575071998733333,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013016846779999997,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "jesse.chejieh@gmail.com",
            "name": "Doordashcon",
            "username": "Doordashcon"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "1cbf4eed97a87ae4c1aef6176c80761c49f60e6f",
          "message": "Simulate `rank_to_votes` in `pallet-ranked-collective` benchmark. (#9731)\n\nresolves #9730\n\n---------\n\nCo-authored-by: Bastian Köcher <info@kchr.de>\nCo-authored-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>",
          "timestamp": "2025-09-15T08:33:06Z",
          "tree_id": "730280b04c0fddba8c040d6fb5df823addb18688",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/1cbf4eed97a87ae4c1aef6176c80761c49f60e6f"
        },
        "date": 1757929520495,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007500084773333342,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013237271246666672,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15890280684,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022822638886666673,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "robertvaneerdewijk@gmail.com",
            "name": "0xRVE",
            "username": "0xRVE"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "61b566ac14054aff4859b38094716aa2b5e63caf",
          "message": "added trace logging in EVM interpreter loop (#9561)\n\nAdded trace logging for each instruction to evm::run function.\nsolves https://github.com/paritytech/polkadot-sdk/issues/9575\n\n---------\n\nSigned-off-by: xermicus <cyrill@parity.io>\nSigned-off-by: Cyrill Leutwiler <bigcyrill@hotmail.com>\nCo-authored-by: pgherveou <pgherveou@gmail.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Robert van Eerdewijk <robert@Roberts-MacBook-Pro.local>\nCo-authored-by: xermicus <cyrill@parity.io>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>\nCo-authored-by: Cyrill Leutwiler <bigcyrill@hotmail.com>",
          "timestamp": "2025-09-15T09:02:43Z",
          "tree_id": "0cf02dce839110cd1525b28ad8c7a6a63abbe8b4",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/61b566ac14054aff4859b38094716aa2b5e63caf"
        },
        "date": 1757931800117,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15732555499333342,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007396051733333346,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02244153202,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012928732399999998,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9075dee80e78810c6de1b94afcb147c55a4546a2",
          "message": "[pallet-revive] fix CodeInfo owner (#9744)\n\nFix CodeInfo owner, it should always be set to the origin of the\ntransaction\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-09-16T08:46:08Z",
          "tree_id": "3b78613dc97191bc7b1080dc44d38685bfdb6a1f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/9075dee80e78810c6de1b94afcb147c55a4546a2"
        },
        "date": 1758017047441,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15840451406666678,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00760605235333332,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012838597633333332,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022618092173333337,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "paolo@parity.io",
            "name": "Paolo La Camera",
            "username": "sigurpol"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "6e4111b005fb53bc94b419c36d295274fffade97",
          "message": "staking-async: handle uninitialized state in try-state checks (#9747)\n\n- Add early return in do_try_state when pallet is uninitialized\n- Add test for empty state validation\n\nFollowup of #9721 .\nOnce backported to `2507` and crate is published, should unlock\nhttps://github.com/polkadot-fellows/runtimes/pull/904\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-09-16T12:04:24Z",
          "tree_id": "50384005abaa1c513d8e5e350cdf4d3eb7d9c9d3",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/6e4111b005fb53bc94b419c36d295274fffade97"
        },
        "date": 1758028633941,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013315178126666665,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022596169779999998,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007574921673333323,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1586875808066667,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "serban@parity.io",
            "name": "Serban Iorga",
            "username": "serban300"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "3d29a17bdc53aa7dcd75376cb01b3ef524271f99",
          "message": "Avoid double counting PoV size when enqueing XCMP message (#9745)\n\nRelated to #9641\n\nAvoid double counting PoV size when enqueing XCMP message\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Andrii <ndk@parity.io>",
          "timestamp": "2025-09-16T14:10:36Z",
          "tree_id": "29a8a2c3ef43fff18a7dbd1d2a64141c4640c4ad",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/3d29a17bdc53aa7dcd75376cb01b3ef524271f99"
        },
        "date": 1758036148213,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012962014353333334,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022504941353333332,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1568952790733334,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007601422773333341,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "631eb8b90f7756a68391eceaf6d3d63b7c697a23",
          "message": "`frame-support`: Move all macros from `lib.rs` to a new file (#9742)\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-09-16T15:04:54Z",
          "tree_id": "8a7fe15e0953ca39cb8d256a16d9ea9b9ddbfdaa",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/631eb8b90f7756a68391eceaf6d3d63b7c697a23"
        },
        "date": 1758039800426,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007601932286666656,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012971040013333334,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022681414053333335,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1590449243866667,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alin@parity.io",
            "name": "Alin Dima",
            "username": "alindima"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a554c92f4aeb908b95c71051cd98e7ba55f2297c",
          "message": "revive-rpc: use generic RpcClient instead of ReconnectingRpcClient (#9701)\n\nThis will enable more flexible usage of the revive RPC as a library.\n\nNeeded so that we can reuse it with an in-memory RPC client for\nanvil-polkadot:\nhttps://github.com/paritytech/foundry-polkadot/issues/238",
          "timestamp": "2025-09-16T17:47:47Z",
          "tree_id": "2c97b0a83c916dba480734b06543f33434c05272",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/a554c92f4aeb908b95c71051cd98e7ba55f2297c"
        },
        "date": 1758049395246,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013054494439999995,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15793394097333338,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022495085879999994,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.0076463950266666605,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mich@elmueller.net",
            "name": "Michael Müller",
            "username": "cmichi"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4331b282ecc6b6e911eadb322c600cbea2c4541a",
          "message": "[pallet-revive] Migrate various getters to `System` pre-compile (#9517)\n\nPart of closing https://github.com/paritytech/polkadot-sdk/issues/8572.\n\nMigrates:\n* `own_code_hash`\n* `caller_is_origin`\n* `caller_is_root`\n* `weight_left`\n* `minimum_balance`\n\nThere are some minor other fixes in there (removing leftovers from\ndeprecating chain extensions, stabilizing `block_hash` in overlooked\ncrates, etc.).\n\ncc @athei @pgherveou\n\n---------\n\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>",
          "timestamp": "2025-09-17T00:09:01Z",
          "tree_id": "a6c0491b75fecea82e7ea14bf44adc568502f847",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4331b282ecc6b6e911eadb322c600cbea2c4541a"
        },
        "date": 1758072406633,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15737383526000007,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00757278615333332,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013090699353333337,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022560532486666673,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48632512+s0me0ne-unkn0wn@users.noreply.github.com",
            "name": "s0me0ne-unkn0wn",
            "username": "s0me0ne-unkn0wn"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "127c0780e180ab9bdbc8c6f85fe2b20d64b5c094",
          "message": "Fix Aura authorities tracker bug (#9753)\n\nCurrently, the Aura authorities tracker uses the block pre-hash to\nimport the authorities, but the post-hash to fetch them. That results in\nblock verification failures. A scenario to reproduce the bug is as\nfollows:\n\n* Start a parachain with a single-collator fixed-authority Aura;\n* Upgrade the parachain runtime to include `session` and\n`collator-selection` pallets;\n* Register the collator keys as session keys, then add the collator to\ninvulnerables;\n* Start a second collator, rotate its keys, register them as session\nkeys, and add the second collator to invulnerables;\n* When the second collator is trying to import the block where it's\nenacted as the second Aura authority, it fails the block verification\nand does not import or produce any blocks anymore.\n\nThis PR changes the behavior to importing the authorities using the\nblock post-hash, which fixes the bug.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-09-17T10:49:04Z",
          "tree_id": "f6c91c1ca8237f7ad1b92cacd579d0c117d2576b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/127c0780e180ab9bdbc8c6f85fe2b20d64b5c094"
        },
        "date": 1758110402071,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013075084353333332,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1574369329133333,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007503870186666663,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022578484006666674,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41779041+alvicsam@users.noreply.github.com",
            "name": "Alexander Samusev",
            "username": "alvicsam"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d5bc25b57c300d0477ceb2d53cbbc2e6734da933",
          "message": "ci: switch tests to new runners (#9757)\n\nPR switches test-linux-stable to new runners.\n\ncc https://github.com/paritytech/devops/issues/3875",
          "timestamp": "2025-09-17T15:16:53Z",
          "tree_id": "998eff5e49918d1ba88285293224c20087010e72",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d5bc25b57c300d0477ceb2d53cbbc2e6734da933"
        },
        "date": 1758126273684,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022693588713333327,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1576247169066667,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013172389059999996,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.0075887310666666605,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "178801527+raymondkfcheung@users.noreply.github.com",
            "name": "Raymond Cheung",
            "username": "raymondkfcheung"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "978b35ebdcb5b02acce935a55a0dd5ef5798220e",
          "message": "Improve README files (#9760)\n\nThis PR makes it easier for first-time builders to just copy-and-paste\nand fix typos.\n\nRelates to\nhttps://github.com/paritytech/polkadot-sdk-minimal-template/pull/25",
          "timestamp": "2025-09-17T20:01:25Z",
          "tree_id": "6ca78419a38b39ac40fdfb0f81044dafdc22f977",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/978b35ebdcb5b02acce935a55a0dd5ef5798220e"
        },
        "date": 1758143655237,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.1583736483066667,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02257177309333333,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00731710679999999,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012947105246666668,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e7f36ab82934a7142f3ebd7f8b5566f12f85339b",
          "message": "[pallet-revive] fix salt endianness  (#9771)\n\nfix <https://github.com/paritytech/polkadot-sdk/issues/9769>\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-09-18T13:17:02Z",
          "tree_id": "06cdab641c5e7d06aab25b71ec5c2053c03f2622",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e7f36ab82934a7142f3ebd7f8b5566f12f85339b"
        },
        "date": 1758205461919,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013225176280000004,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022681100393333334,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007933602939999982,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15805276215333336,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alin@parity.io",
            "name": "Alin Dima",
            "username": "alindima"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ac4a011580bbba60a99afd618f645330380f0fa9",
          "message": "pallet_revive: add account_id and new_balance_with_dust runtime APIs  (#9683)\n\nNeeded for https://github.com/paritytech/foundry-polkadot/issues/240",
          "timestamp": "2025-09-18T13:51:57Z",
          "tree_id": "4729b50f039e96fc95229c9f24579d15bbe80b31",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ac4a011580bbba60a99afd618f645330380f0fa9"
        },
        "date": 1758209539271,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012973421233333332,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15708480050000004,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022452411513333326,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007575643753333323,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "paolo@parity.io",
            "name": "Paolo La Camera",
            "username": "sigurpol"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "fea33a9dd5e7133c95c5e0496b8e9fd9e215c855",
          "message": "EPMB: ensure to have enough funds for benchmarking (#9772)\n\nFix `pallet_election_provider_multi_block_signed::register_eject`\nbenchmark failing on KAHM due to `funded_account()` function not\nproviding enough balance to cover the required deposits. See for example\n[here](https://github.com/polkadot-fellows/runtimes/actions/runs/17765363309/job/50487393309?pr=856).\n\nThe fix ensures that benchmark accounts have sufficient funds to cover\nthe worst-case deposit scenario (registration + all pages submission)\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-09-18T15:59:16Z",
          "tree_id": "6635fdd80d0b5b15555c2153da6a9decc5e101d5",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/fea33a9dd5e7133c95c5e0496b8e9fd9e215c855"
        },
        "date": 1758215635120,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007253134573333336,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022452385640000013,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15703343543333337,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013110244226666668,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41779041+alvicsam@users.noreply.github.com",
            "name": "Alexander Samusev",
            "username": "alvicsam"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "83c744990c5fdffb4e24464a4e569b190ebc41d6",
          "message": "ci: pin all actions version (#9776)\n\nPR pins hash versions for all actions\n\ncc https://github.com/paritytech/devops/issues/4319",
          "timestamp": "2025-09-19T08:34:57Z",
          "tree_id": "4df334d77589310708b9afb520197faa98699fbe",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/83c744990c5fdffb4e24464a4e569b190ebc41d6"
        },
        "date": 1758275091985,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013176048820000001,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007577302000000001,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15759330942666674,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02240562231333333,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "22591718+RomarQ@users.noreply.github.com",
            "name": "Rodrigo Quelhas",
            "username": "RomarQ"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7c2642df6079b4e73d51fc62c41269cb5c288af2",
          "message": "Use `total balance (free + reserved)` when performing liquidity checks for a new reserve (#8108)\n\n# Description\n\nSolves: https://github.com/paritytech/polkadot-sdk/issues/8099\n\nBased on the documentation and existing code, the usable balance is\ncomputed with the following formula:\n\n```rs\n// If Fortitude == Polite \nlet usable_balance = free - max(frozen - reserved, existential balance)\n```\n\n### The problem:\n\nIf an account's `free balance` is lower than `frozen balance`, no\nreserves will be allowed even though the `usable balance` is enough to\ncover the reserve, resulting in a `LiquidityRestrictions` error, which\nshould not happen.\n\n### Visual example of how `usable/spendable` balance works:  \n```bash\n|__total__________________________________|\n|__on_hold__|_____________free____________|\n|__________frozen___________|\n|__on_hold__|__ed__|\n            |__untouchable__|__spendable__|\n```\n\n## Integration\n\nNo action is required, the changes only change existing code, it does\nnot add or change any API.\n\n## Review Notes\n\nFrom my understanding, the function `ensure_can_withdraw` is incorrect,\nand instead of checking that the new `free` balance is higher or equal\nto the `frozen` balance, it should make sure the `new free` balance is\nhigher or equal to the `usable` balance.\n\n---------\n\nCo-authored-by: Kian Paimani <5588131+kianenigma@users.noreply.github.com>",
          "timestamp": "2025-09-19T12:17:42Z",
          "tree_id": "9a637c36dc231e47e6541f3451b8ecc64eefb79f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/7c2642df6079b4e73d51fc62c41269cb5c288af2"
        },
        "date": 1758288930707,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022597712693333338,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.16002257729333336,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00781089361333333,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013170173833333337,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "41779041+alvicsam@users.noreply.github.com",
            "name": "Alexander Samusev",
            "username": "alvicsam"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8dd73c42799119a877aa1ad150da372ef209295f",
          "message": "ci: disable cache for parity-publish actions (#9788)\n\nActions that use parity-publish don't need cache in PR since they only\ninstall the crate. PR disables saving caches for those actions in PR,\nthey'll only consume it from master.\n\ncc https://github.com/paritytech/devops/issues/4317",
          "timestamp": "2025-09-19T14:30:57Z",
          "tree_id": "a11ff1a5fb3b24288a9059d4ae2b24e6756493f4",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/8dd73c42799119a877aa1ad150da372ef209295f"
        },
        "date": 1758296333117,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.01293905958666667,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022567842186666662,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15736526109333332,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007749444713333316,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "277a26585b3d7e38668d5068d2f10ef39051f5d6",
          "message": "revive-fixtures: Provide an env variable to disable compilation (#9791)\n\nRight now `pallet-revive-fixtures` is always trying to build the\nfixtures. It requires `solc` and other stuff for compilation. If you are\nnot requiring the fixtures, because you for example only run `cargo\ncheck`, this pull request introduces `SKIP_PALLET_REVIVE_FIXTURES`. When\nthe environment variable is set, the compilation of the fixtures is\nskipped. It will set the fixtures to `None` and they will panic at\nruntime.",
          "timestamp": "2025-09-21T20:14:43Z",
          "tree_id": "e407f4c6511f33e46c069dda76a27764fb319064",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/277a26585b3d7e38668d5068d2f10ef39051f5d6"
        },
        "date": 1758490063261,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15731286569333336,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022449175659999994,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007459774040000001,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012970043393333332,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "robertvaneerdewijk@gmail.com",
            "name": "0xRVE",
            "username": "0xRVE"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "36680e6d4e2eea9d552930b247c67d817c48045a",
          "message": "EIP-3607 added check to make sure a contract account cannot transfer funds as an EOA account (#9717)\n\nfixes https://github.com/paritytech/polkadot-sdk/issues/9570\n\n---------\n\nCo-authored-by: Robert van Eerdewijk <robert@Roberts-MacBook-Pro.local>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>",
          "timestamp": "2025-09-22T10:41:37Z",
          "tree_id": "330a8ca3062285a07970f0d17271f2b69790a7f6",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/36680e6d4e2eea9d552930b247c67d817c48045a"
        },
        "date": 1758542181467,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15809364568000006,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007697056406666689,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013262221006666672,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022685037579999998,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "serban@parity.io",
            "name": "Serban Iorga",
            "username": "serban300"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d97bed091052726f6d1930031ccde53b82ed3c00",
          "message": "Limit the number of signals per XCMP page (#9781)\n\nRight now we have only 2 XCMP signals: `SuspendChannel` and\n`ResumeChannel` and we can write at most 1 per page.\n\nLet's also add a limit when reading the signals in a page. Even if now 1\nis enough, since in the future we might add more signals, let's have a\nlimit of 3 per page.\n\n---------\n\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-09-22T11:33:39Z",
          "tree_id": "c27568598af0505447235dd267fede5622faaa1d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d97bed091052726f6d1930031ccde53b82ed3c00"
        },
        "date": 1758544932115,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007977273966666653,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013213892673333337,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15767895830666664,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02260365756,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "paolo@parity.io",
            "name": "Paolo La Camera",
            "username": "sigurpol"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f8fc34052efe427fbfbfc835d8b7fedc6cfca567",
          "message": "Added pallet-root-offences to Westend RC runtime (#9799)\n\nNeeded to let us test a manual slash on Westend relay-chain and see what\nhappens in terms of UI, indexers etc on the revamped [PJS's staking\nasync\npage](https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fwestend-asset-hub-rpc.polkadot.io#/staking-async)\n🍿\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-09-22T12:20:09Z",
          "tree_id": "f6bca1982f09a29e480775565a4b295e9834c5b8",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f8fc34052efe427fbfbfc835d8b7fedc6cfca567"
        },
        "date": 1758547751488,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013100090353333338,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007687996526666668,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022446134533333332,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15806349360666677,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "diego2737@gmail.com",
            "name": "Diego",
            "username": "dimartiro"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ef10d5e743475cc8dab36520d4e19c2e924be40a",
          "message": "Improve inbound_queue::BenchmarkHelper to add more flexibility (#9627)\n\n# Description\n\nImprove the usage of the `inbound_queue::BenchmarkHelper` to decouple\nthe mocks from the benchmark.\nThis change will enable any user to benchmark custom messages since now\nit's harcoded to the register_token_message only\n\n---------\n\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-09-22T13:56:42Z",
          "tree_id": "03eaa43c58461bc4a3314b431c7f3dd03366335b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ef10d5e743475cc8dab36520d4e19c2e924be40a"
        },
        "date": 1758553940696,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012861957599999998,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1579579353133333,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02240832454666668,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007695606826666676,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "evgeny@parity.io",
            "name": "Evgeny Snitko",
            "username": "AndWeHaveAPlan"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "7a776bf70efb9f04c6784969dc079476c279656a",
          "message": "ci-unified image update (#9800)\n\nci-unified v202509220255, updated forklift to 0.14.3\npossible [AWS Deadlock\n#23](https://github.com/paritytech/forklift/issues/23) fix",
          "timestamp": "2025-09-22T17:40:53Z",
          "tree_id": "9f775cb83f3cd14a3dbac9424632da185610b445",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/7a776bf70efb9f04c6784969dc079476c279656a"
        },
        "date": 1758566713679,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.1572474921733333,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02244152951999999,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013219147100000002,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00759393795333332,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "paolo@parity.io",
            "name": "Paolo La Camera",
            "username": "sigurpol"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4431e51b0dc638f6bd185c5664dfe49c69d9a8bb",
          "message": "EPMB: fix benchmark funding for exponential deposit growth (#9787)\n\nFixes funding issues in benchmarks that were failing on Asset Hub Kusama\nwith \"Funds are unavailable\" errors.\n\n\n\nTwo root causes exist:  \n- The `funded_account()` function calculated deposits based on the\ncurrent queue state, but `GeometricDepositBase` leads to exponential\ngrowth: `deposit = base * (1 + increase_factor)^{queue_len}`.\n-  We did not account for transaction fees.  \n\nSolution:  \n- Calculate deposits using the worst-case scenario with the maximum\nqueue size (`T::MaxSubmissions::get()`) to ensure sufficient funding,\nregardless of changes in queue state during benchmark execution.\n- Estimate total transaction fees as 1% of the minimum balance\nmultiplied by the number of operations.\n\n\nThis should provide a more robust fix than\nhttps://github.com/paritytech/polkadot-sdk/pull/9772 and allow to fix\nEPMB on KAHM (see https://github.com/polkadot-fellows/runtimes/pull/916\n- once/if we merge the current PR, we need to backport to `2507`, bump\nEPMB crate and update 916 accordingly)\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-09-22T18:35:50Z",
          "tree_id": "684a0dbea8fa9b1df3b27599220bf8ae8083c05d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4431e51b0dc638f6bd185c5664dfe49c69d9a8bb"
        },
        "date": 1758570353578,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02251137385333333,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15719044156000003,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01319837171333333,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00782731567999999,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "agusrodriguez2456@gmail.com",
            "name": "Agustín Rodriguez",
            "username": "Agusrodri"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "a0a3b84738fdaef7f72be79d388f5b87565b2cb4",
          "message": "Snowbridge V2: Add `OnNewCommitment` hook to outbound-queue pallet (#8053)\n\n## Description\n\nThis PR adds a simple hook to `snowbridge-pallet-outbound-queue-v2`\nwhich allows to perform actions whenever there is a new commitment in\nthis pallet.\n\n---------\n\nCo-authored-by: Adrian Catangiu <adrian@parity.io>",
          "timestamp": "2025-09-23T09:15:18Z",
          "tree_id": "fa90e616c701e51e8f667ffa9602104b6fe6f4d7",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/a0a3b84738fdaef7f72be79d388f5b87565b2cb4"
        },
        "date": 1758623012521,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02248445766666666,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007425865453333318,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15711051644000007,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01311669504,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "54316454+sandreim@users.noreply.github.com",
            "name": "Andrei Sandu",
            "username": "sandreim"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "82b8a501c87460fb384851e9424d60a68566c7de",
          "message": "Measure backed in block count vs backable  (#9417)\n\nCloses https://github.com/paritytech/polkadot-sdk/issues/9341\n\n---------\n\nSigned-off-by: Andrei Sandu <andrei-mihail@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Javier Viola <javier@parity.io>",
          "timestamp": "2025-09-23T09:59:54Z",
          "tree_id": "2100ed3a655566c495348fbe9ff49f17bec4b4a6",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/82b8a501c87460fb384851e9424d60a68566c7de"
        },
        "date": 1758625667299,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.1570152269,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01298367928,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.0074380628799999935,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022415742940000007,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48632512+s0me0ne-unkn0wn@users.noreply.github.com",
            "name": "s0me0ne-unkn0wn",
            "username": "s0me0ne-unkn0wn"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "143eb77346d6102a80931f600fc9dce1ee1f9e54",
          "message": "Add collator selection to YAP (#9663)\n\nThis PR adds the collator selection pallet as well as other pallets\nneeded for its functionality to the Yet Another Parachain runtime.\n\nAlong with that, the YAP runtime is a little bit refactored to adopt the\nlatest FRAMEwork changes.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-09-23T10:34:08Z",
          "tree_id": "33a4a479609a736a1e1ffc35116059a8e5c4e26f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/143eb77346d6102a80931f600fc9dce1ee1f9e54"
        },
        "date": 1758628995641,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.0074364257666666815,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013118023866666663,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15715161632000002,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02260561598666667,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "claravanstaden64@gmail.com",
            "name": "Clara van Staden",
            "username": "claravanstaden"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6875cc0cccbc418f229927baa1490110430f6275",
          "message": "Snowbridge Inbound Queue V2 relayer tip payout fix (#9746)\n\n# Description\n\nFixes a bug where Snowbridge Inbound V2 tips were not paid out to the\nrelayer.\n\n## Review Notes\n\nAny tips added to a message in the Inbound Queue v2 (Ethereum to\nPolkadot direction), were burned and added to storage, but never paid\nout to the relayer. This PR fixes this bug by adding the tip to the\nrelayer fee.\n\n---------\n\nCo-authored-by: Branislav Kontur <bkontur@gmail.com>",
          "timestamp": "2025-09-23T13:20:12Z",
          "tree_id": "ab6a21866ce69b2f099f3ee8b986dc90460d6644",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/6875cc0cccbc418f229927baa1490110430f6275"
        },
        "date": 1758637837529,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013221095866666673,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.0073749963733333234,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15725936772000007,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022512978273333335,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "19320f104fc4b5cb6663cffc41f340b6b5239be8",
          "message": "FRAME: Register `on_initialize` after each pallet (#9756)\n\nBefore this pull request, FRAME was executing all pallets\n`on_initialize` and then register the weight, including the weight of\n`on_runtime_upgrade`. Thus, other pallets were not aware on how much\nweight was already used when they were executing their `on_initialize`\ncode. As some pallets are doing some work in `on_initialize`, they need\nto be aware of how much weight is still left.\nTo register the weight after each `on_initialize` call, a new trait is\nadded. This new trait is implemented for tuples of types that implement\n`OnInitialize` and then it registers the weight after each call to\n`on_initialize`.\n\n`pallet-scheduler` is changed to take the remaining weight into account\nand to not just assume that its configured weight is always available.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-09-23T17:26:05Z",
          "tree_id": "329e7d671c7b6beb98933de95fc234552598c017",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/19320f104fc4b5cb6663cffc41f340b6b5239be8"
        },
        "date": 1758652573628,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013191487373333333,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15717297593333343,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007693434359999986,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02258196866,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "60601340+lexnv@users.noreply.github.com",
            "name": "Alexandru Vasile",
            "username": "lexnv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7dc67319065b18d4c02b4275e6b071ee59d40635",
          "message": "network/tests: Increase test timeout to fix flaky CI (#9810)\n\nThis PR bumps the `libp2p_disconnects_litep2p_substream` test timeout\nfrom 5 seconds to 1 minute.\n\nUnder load, the test may not have sufficient time to establish\nconnectivity and complete the test within the allotted time.\n\ncc @paritytech/networking\n\nSigned-off-by: Alexandru Vasile <alexandru.vasile@parity.io>",
          "timestamp": "2025-09-24T08:25:10Z",
          "tree_id": "29118a00bcb8d88cbb396a592265e3ebc32d5246",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/7dc67319065b18d4c02b4275e6b071ee59d40635"
        },
        "date": 1758707810744,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022574012519999992,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013087498313333334,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15689729044666664,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007642606133333318,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e8f1aff5a174f420cdd77f5d5c854dd6dc8a3273",
          "message": "[pallet-revive] Add set_storage/set_storage_var_key methods (#9759)\n\n... to be used in polkadot foundry to make sure EVM state is in sync\nwith pallet-revive state.\n\nFixes: https://github.com/paritytech/foundry-polkadot/issues/275\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>",
          "timestamp": "2025-09-24T10:33:54Z",
          "tree_id": "2e58ffa530937bbb0842bb596295fd616ef55271",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e8f1aff5a174f420cdd77f5d5c854dd6dc8a3273"
        },
        "date": 1758714127096,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007388427886666653,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012988974033333333,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022386840959999998,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15704122044666666,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "60601340+lexnv@users.noreply.github.com",
            "name": "Alexandru Vasile",
            "username": "lexnv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "80ee9c8f4cd6e2ea49cb8eceadde5b42f7e87a86",
          "message": "ci: Use `--locked` for cargo doc steps (#9828)\n\nThis PR adds the `--locked` option to the cargo doc tests.\n\nDetected by running the CI on PR:\nhttps://github.com/paritytech/polkadot-sdk/actions/runs/17972092266/job/51117118432\n\n```rust\nerror[E0277]: the trait bound `BoundedVec<u8, v3::MaxPalletNameLen>: JsonSchema` is not satisfied\n   --> polkadot/xcm/src/v3/mod.rs:228:12\n    |\n228 |     pub name: BoundedVec<u8, MaxPalletNameLen>,\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `JsonSchema` is not implemented for `BoundedVec<u8, v3::MaxPalletNameLen>`\n    |\nnote: there are multiple different versions of crate `schemars` in the dependency graph\n   --> /usr/local/cargo/registry/src/index.crates.io-1949cf8c6b5b557f/schemars-0.8.22/src/lib.rs:133:1\n    |\n133 | pub trait JsonSchema {\n    | ^^^^^^^^^^^^^^^^^^^^ this is the required trait\n    |\n   ::: polkadot/xcm/src/v3/junction.rs:49:44\n    |\n49  | #[cfg_attr(feature = \"json-schema\", derive(schemars::JsonSchema))]\n    |                                            -------- one version of crate `schemars` used here, as a direct dependency of the current crate\n    |\n   ::: polkadot/xcm/src/lib.rs:31:5\n```\n\nThanks @bkchr for the suggestion here 🙏 \n\nThis has been detected while working on:\n- https://github.com/paritytech/polkadot-sdk/pull/9418\n\nSigned-off-by: Alexandru Vasile <alexandru.vasile@parity.io>",
          "timestamp": "2025-09-24T14:58:33Z",
          "tree_id": "884a671f0bbf4fe179c1013dce196003dfc20cc9",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/80ee9c8f4cd6e2ea49cb8eceadde5b42f7e87a86"
        },
        "date": 1758730125123,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.0075817356266666466,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013047384833333328,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15735657306666676,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02247764796666667,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "54316454+sandreim@users.noreply.github.com",
            "name": "Andrei Sandu",
            "username": "sandreim"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "58a6df32ec9a145615061cd203875c55db5e6fa1",
          "message": "Elastic scaling runtime upgrade test (#9811)\n\nCloses https://github.com/paritytech/polkadot-sdk/issues/7259.\n\nTODO\n- [x] prdoc\n- [x] upgrade from sync backing\n\n---------\n\nSigned-off-by: Andrei Sandu <andrei-mihail@parity.io>\nCo-authored-by: Javier Viola <javier@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Javier Viola <363911+pepoviola@users.noreply.github.com>",
          "timestamp": "2025-09-25T07:55:03Z",
          "tree_id": "3f4658109c44db355c366d8a854cb1975abcfa86",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/58a6df32ec9a145615061cd203875c55db5e6fa1"
        },
        "date": 1758790975280,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007860419459999985,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022525738979999998,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1571803572000001,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013091340420000003,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "robertvaneerdewijk@gmail.com",
            "name": "0xRVE",
            "username": "0xRVE"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "afbe4258991a60a7b41270d0fe47d1cd94a5681c",
          "message": "bugfix revm set_storage gas cost (#9823)\n\nFixes bug in revm gasmetering where the initial charge was less than the\nadjusted charge.\n\n---------\n\nCo-authored-by: Robert van Eerdewijk <robert@Roberts-MacBook-Pro.local>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: PG Herveou <pgherveou@gmail.com>",
          "timestamp": "2025-09-25T09:05:41Z",
          "tree_id": "093d3a6142cd89d6a78d461a8e82aa2251bcfeb6",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/afbe4258991a60a7b41270d0fe47d1cd94a5681c"
        },
        "date": 1758795320733,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007703187159999998,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013065930933333334,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15883102896666676,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022753231500000002,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "skunert49@gmail.com",
            "name": "Sebastian Kunert",
            "username": "skunert"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fbf98c8dee09e3dc02506a6fea26a9704cc9c05d",
          "message": "Elastic-scaling-guide: Mention slot duration (#9713)\n\nFollow-up to #9677 . I think it would be good to add our view on the\nslot duration, as it is often confused with the actual block production\ninterval. This short addition should clarify things a bit.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Andrei Sandu <54316454+sandreim@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-09-25T09:48:11Z",
          "tree_id": "75703f988b95d5e94d435f35011ef1e17f150e54",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/fbf98c8dee09e3dc02506a6fea26a9704cc9c05d"
        },
        "date": 1758797768570,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15701110734666668,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02233409769333334,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007602966999999991,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012812013439999999,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "1728078+michalkucharczyk@users.noreply.github.com",
            "name": "Michal Kucharczyk",
            "username": "michalkucharczyk"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8978c005de6631dce20e204380bb43149127cdce",
          "message": "wasmtime: support for perfmap added (#9821)\n\nThis PR add  support for `perfmap` in wasmtime executor.\n\nFor more technical details refer to this\n[doc](https://docs.wasmtime.dev/examples-profiling-perf.html#profiling-with-perfmap).\n\nInstruction on how to configure profiling on substrate nodes (tested\nwith cumulus benchmarks) is\n[here](https://hackmd.io/o_Ghc86OT4KzCE4x04MeOg?view#Getting-the-right-flamegraph).\n\nThe following environment variable needs to be set when executing the\nnode binary:\n```\nexport WASMTIME_PROFILING_STRATEGY=perfmap\n```\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-09-25T10:38:47Z",
          "tree_id": "5014ce67276b6f7ddaf68d6ea916b50e1937a11d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/8978c005de6631dce20e204380bb43149127cdce"
        },
        "date": 1758800821579,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022538446840000007,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15653705454,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007721364853333352,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012813761633333334,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "robertvaneerdewijk@gmail.com",
            "name": "0xRVE",
            "username": "0xRVE"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7fc007deca8c14d0356367b2461300683bf890b4",
          "message": "pallet revive evm backend add tests for cross vm contract calls (#9768)\n\nfixes https://github.com/paritytech/polkadot-sdk/issues/9576\n\n---------\n\nCo-authored-by: Robert van Eerdewijk <robert@Roberts-MacBook-Pro.local>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>",
          "timestamp": "2025-09-25T13:13:25Z",
          "tree_id": "2099121124c3880f9004a9d06de28043c05ace37",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/7fc007deca8c14d0356367b2461300683bf890b4"
        },
        "date": 1758810447901,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.0074707613466666635,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15695318655999999,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022512317313333335,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012877928586666665,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "tsvetomir@parity.io",
            "name": "Tsvetomir Dimitrov",
            "username": "tdimitrov"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "ad4ae97793083c2b08369fe7b0e63331e7753a4c",
          "message": "Handle invulnerable AH collators with priority in collator-protocol/validator-side (#9458)\n\nImplements priority handling of invulnerable AH collators which consists\nof:\n1. Connection management - there is a connection limit in the networking\nstack of 100 peers after which no new connections are accepted. To make\nsure that the invulnerable collators can always connect to the\nvalidators permissionless collators are getting disconnected one the\nconnection count is close to the limit.\n2. Collations from permissionless collators are held off for some time\nbefore processing so that the invulnerables have got a chance to put a\ncollation on their own.\n\nTODOs:\n- [x] Add the invulnerables list.\n- [x] Test if the change works for collators claiming positions further\ninto the CQ.\n- [x] Find a good value for `HOLD_OFF_DURATION` and test it on a\ntestnet.\n- [x] Safetynet: Add a command line parameter which overrides\n`HOLD_OFF_DURATION`.\n- [x] Make the hold off more idiomatic.\n- [x] Hold off per relay parent.\n- [x] Fix failing tests.\n\n---------\n\nCo-authored-by: Andrei Sandu <54316454+sandreim@users.noreply.github.com>",
          "timestamp": "2025-09-26T05:37:51Z",
          "tree_id": "17846cf3dfa6de29d1559d0660723069ab287da8",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ad4ae97793083c2b08369fe7b0e63331e7753a4c"
        },
        "date": 1758869290515,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02248574053333334,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012716245026666666,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007372536520000001,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15664777712666672,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "gui.thiolliere@gmail.com",
            "name": "Guillaume Thiolliere",
            "username": "gui1117"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9e0636567bebf312b065ca3acb285a8b32499df7",
          "message": "Add remove_by method in runtime interface and extension. (#9836)\n\nCurrently the runtime is responsible to remove statements from the\nstore. this is the only for the statements to expire and not grow\nindefinitely until the store gobal limits.\n\nIf we use a statements store with 4GiB of statements, the method\n`statements` and `remove` to query and remove statements from the\noffchain worker is unusable given `statements` cannot be called.\n\nI introduce the method `remove_by` which is safe.\n\nLater we can also introduce a method `valid_statement_change` which\nresize the usage of the statement store of one account given a new\nusage. But I don't have time for this now.\n\nThere are some other possibilities (both implemented in different commit\nof https://github.com/paritytech/polkadot-sdk/pull/9827):\n* Do no make the runtime responsible of cleaning the store: make the\nstatement store clean the statements after some duration like 7 days.\n* Make the user responsible to refresh their statements. The statement\nstore would clean statements by order of insertion. User with remaining\nallowance must resubmit their statements regularly. (the pace depends on\nhow fast the allowance of user is changing in the runtime).\n\n---------\n\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: georgepisaltu <52418509+georgepisaltu@users.noreply.github.com>",
          "timestamp": "2025-09-26T07:27:40Z",
          "tree_id": "3b0ad9124e47dd265152387ff55d9685f4566649",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/9e0636567bebf312b065ca3acb285a8b32499df7"
        },
        "date": 1758875911739,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007757722053333358,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15793422392666667,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012965652473333335,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02272561255333334,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "diego2737@gmail.com",
            "name": "Diego",
            "username": "dimartiro"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d5473e6fa3633c3355f8ef19a8b8921673657a9f",
          "message": "Add new zepter duplicate-deps check as part of CI (#9809)\n\n# Description\n\nThis PR builds on my previous\n[PR](https://github.com/paritytech/polkadot-sdk/pull/9233) and addresses\nfeedback from Basti’s comment\n[here](https://github.com/paritytech/polkadot-sdk/pull/9283#issuecomment-3104712426).\n\nTo prevent the same situation from recurring in the future, I’ve\nintroduced a new **lint check** in **Zepter**, which is now also\nintegrated into the CI workflow. The purpose of this check is to\nautomatically detect and block cases where the same dependency is\ndeclared both under `[dependencies]` and `[dev-dependencies]`.",
          "timestamp": "2025-09-26T08:23:23Z",
          "tree_id": "0cfd615bddc52c65baf5cb7983f6d7f4e2d362c6",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d5473e6fa3633c3355f8ef19a8b8921673657a9f"
        },
        "date": 1758879518576,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007766015513333336,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01329739624666667,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15697002841333332,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02243736224666666,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5e28de73b153391e15233ea51089874eb2544db7",
          "message": "xcm: Do not require `Asset` to be sorted on `decode` (#9842)\n\n`Asset` was requiring that all the assets are sorted at decoding. This\nis quite confusing for people writingg frontends, because this is not\nreally documented anywhere. There are also only at max 20 assets\navailable, we can just make everyones life easier and always sort the\nassets after decoding.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-09-27T06:33:19Z",
          "tree_id": "5d2e6f3e3e75d9c01fd3a700060f11ca07081231",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/5e28de73b153391e15233ea51089874eb2544db7"
        },
        "date": 1758958902968,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.1565138389533334,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012991009626666656,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022510690686666668,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00783218892,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "indirection42@outlook.com",
            "name": "Jiyuan Zheng",
            "username": "indirection42"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "615f664b4d250d627cc4fb84e2ca434f04664159",
          "message": "Add oracle pallet (part of Polkadot Stablecoin prerequisites) (#9815)\n\n# Description\nThis PR is part of #9765.\nThis PR introduces `pallet-oracle`, a new FRAME pallet that provides a\ndecentralized and trustworthy way to bring external, off-chain data onto\nthe blockchain. The pallet allows a configurable set of oracle operators\nto feed data, such as prices, into the system, which can then be\nconsumed by other pallets.\n\n## Integration\n\n### For Runtime Developers\n\nTo integrate `pallet-oracle` into your runtime:\n\n1. **Add dependency to your runtime's `Cargo.toml`**:\n\n   ```toml\n   pallet-oracle = { version = \"1.0.0\", default-features = false }\n   ```\n\n2. **Implement the `Config` trait** in your runtime:\n\n   ```rust\n   impl pallet_oracle::Config for Runtime {\n       type OnNewData = ();\n       type CombineData = pallet_oracle::DefaultCombineData;\n       type Time = Timestamp;\n       type OracleKey = AssetId;  // Your key type\n       type OracleValue = Price;     // Your value type\n       type RootOperatorAccountId = RootOperatorAccountId;\n       type Members = OracleMembers;\ntype WeightInfo = pallet_oracle::weights::SubstrateWeight<Runtime>;\n       type MaxHasDispatchedSize = ConstU32<100>;\n       type MaxFeedValues = ConstU32<50>;\n   }\n   ```\n\n3. **Add to `construct_runtime!`**:\n\n   ```rust\n   construct_runtime!(\n       pub enum Runtime {\n           // ... other pallets\n           Oracle: pallet_oracle,\n       }\n   );\n   ```\n\n### For Pallet Developers\n\nOther pallets can consume oracle data using the `DataProvider` trait:\n\n```rust\nuse pallet_oracle::traits::DataProvider;\n\n// Get current price\nif let Some(price) = <pallet_oracle::Pallet<T> as DataProvider<CurrencyId, Price>>::get(&currency_id) {\n    // Use the price data\n}\n```\n\n## Review Notes\n\n### Key Features\n\n- **Decentralized Data Feeding**: Uses `SortedMembers` trait to manage\noracle operators, allowing integration with `pallet-membership`\n- **Flexible Data Aggregation**: Configurable `CombineData`\nimplementation with default median-based aggregation\n- **Timestamped Data**: All data includes timestamps for freshness\nvalidation\n- **Root Operator Support**: Special account that can bypass membership\nchecks for emergency data updates\n- **Data Provider Traits**: Implements `DataProvider` and\n`DataProviderExtended` for easy consumption by other pallets\n\n### Implementation Details\n\nThe pallet uses a two-tier storage approach:\n\n- `RawValues`: Stores individual operator submissions with timestamps\n- `Values`: Stores aggregated values after applying the `CombineData`\nlogic\n\n### Security Considerations\n\n- Only authorized members can feed data (enforced via `SortedMembers`)\n- Root operator can bypass membership checks for emergency situations\n- One submission per operator per block to prevent spam\n- Configurable limits on maximum feed values per transaction\n\n### Testing\n\nThe pallet includes comprehensive tests covering:\n\n- Basic data feeding and retrieval\n- Member management and authorization\n- Data aggregation logic\n- Edge cases and error conditions\n- Benchmarking for weight calculation\n\n### Files Added\n\n- `substrate/frame/honzon/oracle/` - Complete pallet implementation\n- `substrate/frame/honzon/oracle/README.md` - Comprehensive\ndocumentation\n- Integration into umbrella workspace and node runtime\n- Runtime API for off-chain access to oracle data\n\n### Breaking Changes\n\nNone - this is a new pallet addition.\n\n### Migration Guide\n\nNo migration required - this is a new feature.\n\n# Checklist\n\n- [x] My PR includes a detailed description as outlined in the\n\"Description\" and its two subsections above.\n- [x] My PR follows the [labeling\nrequirements](https://github.com/paritytech/polkadot-sdk/blob/master/docs/contributor/CONTRIBUTING.md#Process)\nof this project (at minimum one label for `T` required)\n- External contributors: ask maintainers to put the right label on your\nPR.\n- [ ] I have made corresponding changes to the documentation (if\napplicable)\n- [x] I have added tests that prove my fix is effective or that my\nfeature works (if applicable)\n\n---------\n\nCo-authored-by: Bryan Chen <xlchen1291@gmail.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-09-28T20:42:49Z",
          "tree_id": "2ccab4db015604d87451d953a160f3a7f916e015",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/615f664b4d250d627cc4fb84e2ca434f04664159"
        },
        "date": 1759096310612,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022554438546666663,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007440040866666653,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013046736773333338,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15733638602000008,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2c0ed3c7aa804e290c29a93c31e5f82418185475",
          "message": "[pallet-revive] update rpc metadata (#9853)\n\nUpdate eth-rpc metadata files\n\nthe metadata should have been updated here\nhttps://github.com/paritytech/polkadot-sdk/pull/9759\nwhere a new variant was added to an enum used by the runtime api\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-09-29T11:21:45+02:00",
          "tree_id": "47f0d871cb3009fb0278692939a95d85a3bd4afc",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/2c0ed3c7aa804e290c29a93c31e5f82418185475"
        },
        "date": 1759139657092,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02242131182666667,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1570198520666667,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012924193046666664,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00755750217333333,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "FereMouSiopi@proton.me",
            "name": "FereMouSiopi",
            "username": "FereMouSiopi"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "f239e76aadf90ed1023debaef155710239f9d865",
          "message": "Update `pallet-asset-rewards` to use BlockNumberProvider (#9826)\n\nresolves #9816\n\n---------\n\nCo-authored-by: Francisco Aguirre <franciscoaguirreperez@gmail.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-09-29T10:10:57Z",
          "tree_id": "f2485c637c99e6de2f3288a27f9353058cbe2d69",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/f239e76aadf90ed1023debaef155710239f9d865"
        },
        "date": 1759144923468,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007553185460000007,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01286294988,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15669077532000006,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022495762799999996,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49718502+alexggh@users.noreply.github.com",
            "name": "Alexandru Gheorghe",
            "username": "alexggh"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "d79598b79213c8d6e557115ed057d4894e6cd787",
          "message": "pallet-revive: allow changing immutables (#9801)\n\n... to be used in polkadot foundry to make sure EVM state is in sync\nwith pallet-revive state.\n\nFixes: https://github.com/paritytech/foundry-polkadot/issues/277\n\n---------\n\nSigned-off-by: Alexandru Gheorghe <alexandru.gheorghe@parity.io>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>",
          "timestamp": "2025-09-29T13:58:56Z",
          "tree_id": "cea97acfc73c4a52ceebe945241070a046fb01da",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d79598b79213c8d6e557115ed057d4894e6cd787"
        },
        "date": 1759158530245,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.01282371469333333,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02276124329999999,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007533638813333337,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15902820487333333,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alex.theissen@me.com",
            "name": "Alexander Theißen",
            "username": "athei"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "50372ea7fa3601d43db7e9200d8b249c67dbdf66",
          "message": "Allow sending transactions from an Ethereum address derived account id (#8757)\n\nWe always allowed signing transactions using an Bitcoin/Eth style\nSECP256k1 key. The account in this case is simply the blake2 hash of the\npublic key.\n\nThis address derivation is problematic: It requires the public key in\norder to derive the account id. On Ethereum you simply can't know the\npublic key of an address. This is why the mapping in pallet_revive is\ndefined as `address <-> account_id`.\n\nThis PR adds a new signature variant that allows signing a transaction\nwith an account id as origin that matches this mapping.\n\n## Why is this important?\n\n### Example1 \nA wallet contains an SECP256k1 key and wants to interact with native\nPolkadot APIs. It can sign the transaction using this key. However,\nwithout this change the origin of that transaction will be different\nthan the one it would appear under if it had signed an Ethereum\ntransaction.\n\n### Example2\nA chain using an Ethereum style address (like Mythical) wants to send\nsome tokens to one of their users account on AssetHub. How would they\nknow what is the address of that user on AssetHub? With this change they\ncan just pad the address with `0xEE` and rely on the fact that the user\ncan interact with AssetHub using their existing key.\n\n## Why a new variant?\nWe can't modify the existing variant. Otherwise the same signature would\nsuddenly map to a different account making people lose access to their\nfunds. Instead, we add a new variant that adds control over an\nadditional account for the same signature.\n\n## A new `KeccakSigner` and `KeccakSignature`\n\nAfter considering feedback by @Moliholy I am convinced that we should\nuse keccak instead of blake2b for this new `MultiSignature` variant.\nReasoning is that this will make it much simpler for Ethereum tooling to\ngenerate such signatures. Since this signature is specifically created\nfor Ethereum interop it just makes sense to also use keccak here.\n\nTo that end I made the `ecdsa::{KeccakSigner, KeccakSignature}` generic\nover their hash algorithm. Please note that I am using tags here and not\nthe `Hasher` trait directly. This makes things more complicated but it\nwas necessary: All Hasher implementations are in higher level crates and\ncan't be directly referenced here. But I would have to reference it in\norder to make this a non breaking change. The `Signer` and `Signature`\ntypes behave exactly the same way as before.\n\n---------\n\nCo-authored-by: joe petrowski <25483142+joepetrowski@users.noreply.github.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-09-29T14:11:17Z",
          "tree_id": "30ab5c454ed6fb858003e6b6e13f2d4212883b0b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/50372ea7fa3601d43db7e9200d8b249c67dbdf66"
        },
        "date": 1759160877681,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013198094440000006,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.16046661967333337,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02237338171333333,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00748624114666666,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "roberthambrock@gmail.com",
            "name": "Robert Hambrock",
            "username": "Lederstrumpf"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "66e9b9a941acd8ffa0b16b796323dc91dd5d25cf",
          "message": "Add `mmr_generateAncestryProof` rpc call (#9295)\n\n# Description\n\nAdds `generateAncestryProof` to the mmr RPC. An RPC method for\ngenerating ancestry proofs is required for cross-chain slashing by\ncross-chain fishermen https://github.com/Snowfork/snowbridge/pull/1493.\nConsequently, this PR also adds the mmr runtime api method\n`generate_ancestry_proof`. While such a method was already exposed by\nthe beefy-mmr runtime api, this PR opts for moving it to the mmr runtime\napi instead due to the following considerations:\n1. Invoking beefy-mmr's `generate_proof` method via RPC would require\nadding the offchain-db extension to the beefy-rpc, which is a more\ninvasive change with boilerplate that's not needed since the mmr RPC\nalready uses the offchain-db extension for generating leaf proofs.\n2. Since the ancestry proofs are for MMR, it is more natural to expose\nthe method directly on the mmr runtime api - the beefy-mmr pallet's\n`generate_proof` method is merely a wrapper around the mmr pallet's\n`generate_ancestry_proof` method.\n\nSome other misc. changes documented under `Review Notes`.\n\n## Integration\n\nThe integration is the same as for the beefy-mmr runtime api's\n`generate_proof` method.\n\n~~The integration is the same as for the beefy-mmr runtime api's\n`generate_proof` method, except that the optional `at` specifier is\nremoved for the method here since the method is idempotent wrt. the\nblock height invoked at, so long as `at` >= `best_known_block_number`.\nRemoving the specifier reduces likelihood of spurious errors from\nincorrect usage. I can revert the `at` specifier removal however if\ndesired for compatibility.~~\n\nFor example use, see https://github.com/Snowfork/snowbridge/pull/1493.\n\n## Review Notes\n\n- Adds `generate_ancestry_proof` method to mmr runtime api\n(https://github.com/lederstrumpf/polkadot-sdk/commit/682eb4a1411f7194a7277606b7ebe3688e8d5df1)\n- Adds `mmr_generateAncestryProof` rpc method\n(https://github.com/lederstrumpf/polkadot-sdk/commit/5d0eac9f1f48f049bec9846ef497763f5c2fc950,\nhttps://github.com/lederstrumpf/polkadot-sdk/commit/5d0eac9f1f)\n- Adds new `InvalidEquivocationProofSessionMember` error to beefy pallet\n(https://github.com/lederstrumpf/polkadot-sdk/commit/682eb4a141) (note:\nthis change is unrelated to the PR's main purpose, but helps\nimplementers with more granular error reporting. I'm open to removing\nthis change).\n- Deprecates\n`pallet_beefy::generate_ancestry_proof::generate_ancestry_proof` and\n`pallet_beefy::AncestryHelper::generate_proof`. Deprecation penciled in\nfor September 2025 - I'm open to change this date or undo the\ndeprecation.\n(https://github.com/lederstrumpf/polkadot-sdk/commit/6619169ecd)\n- ~~Removes `at` specifier for `pallet_mmr::generate_ancestry_proof`\n(https://github.com/lederstrumpf/polkadot-sdk/commit/bcadda2ce67cdb472b19db722d1ea3827e5869a5)\n(as mentioned in the `Integration` section, fine to undo)~~ *(Update:\nreverted removal of `at` specifier to allow fork handling).*\n\nPR can be tested using https://github.com/Snowfork/snowbridge/pull/1493.\n\nIf PR's approach is accepted, will open the associated PRs in\nhttps://github.com/polkadot-fellows/runtimes &\nhttps://github.com/polkadot-js/api.\n\n---------\n\nCo-authored-by: Adrian Catangiu <adrian@parity.io>",
          "timestamp": "2025-09-29T17:19:47Z",
          "tree_id": "81385a89241a9410f0f3e433b7ca69e1145f2455",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/66e9b9a941acd8ffa0b16b796323dc91dd5d25cf"
        },
        "date": 1759170599256,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007489760966666662,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1588565978733334,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013028448186666661,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022306301,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alex.theissen@me.com",
            "name": "Alexander Theißen",
            "username": "athei"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c3f62bf918ef6879390dc6a2cf9f91caac23f5b5",
          "message": "[pallet_transaction_payment]: Share withdrawn tx fee credit with other pallets (#9780)\n\nReplaces https://github.com/paritytech/polkadot-sdk/pull/9590.\n\nThe audit of #9590 showed that holding the txfee as held balance and\nespecially playing around with `providers` causes a lot of troubles.\n\nThis PR is a much lighter change. It keeps the original withdraw/deposit\npattern. It simply stores the withdrawn `Credit` and allows other\npallets to withdraw from it.\n\nIt is also better in terms of performance since all tx signers share a\nsingle storage item (instead of a named hold per account).\n\n---------\n\nCo-authored-by: joe petrowski <25483142+joepetrowski@users.noreply.github.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-09-29T22:19:05Z",
          "tree_id": "6e4aac4ae217869a0122375a4f1a02bc4bbf3da7",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c3f62bf918ef6879390dc6a2cf9f91caac23f5b5"
        },
        "date": 1759188599168,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02242545451333333,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15862557048000012,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012877488420000003,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.0075406585799999894,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "28dda33b18ce3d1a3e50fe728b2cfb8b84a97f79",
          "message": "Bump the ci_dependencies group with 2 updates (#9858)\n\nBumps the ci_dependencies group with 2 updates:\n[actions/cache](https://github.com/actions/cache) and\n[actions-rust-lang/setup-rust-toolchain](https://github.com/actions-rust-lang/setup-rust-toolchain).\n\nUpdates `actions/cache` from 4.2.4 to 4.3.0\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a\nhref=\"https://github.com/actions/cache/releases\">actions/cache's\nreleases</a>.</em></p>\n<blockquote>\n<h2>v4.3.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Add note on runner versions by <a\nhref=\"https://github.com/GhadimiR\"><code>@​GhadimiR</code></a> in <a\nhref=\"https://redirect.github.com/actions/cache/pull/1642\">actions/cache#1642</a></li>\n<li>Prepare <code>v4.3.0</code> release by <a\nhref=\"https://github.com/Link\"><code>@​Link</code></a>- in <a\nhref=\"https://redirect.github.com/actions/cache/pull/1655\">actions/cache#1655</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/GhadimiR\"><code>@​GhadimiR</code></a>\nmade their first contribution in <a\nhref=\"https://redirect.github.com/actions/cache/pull/1642\">actions/cache#1642</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a\nhref=\"https://github.com/actions/cache/compare/v4...v4.3.0\">https://github.com/actions/cache/compare/v4...v4.3.0</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a\nhref=\"https://github.com/actions/cache/blob/main/RELEASES.md\">actions/cache's\nchangelog</a>.</em></p>\n<blockquote>\n<h1>Releases</h1>\n<h3>4.3.0</h3>\n<ul>\n<li>Bump <code>@actions/cache</code> to <a\nhref=\"https://redirect.github.com/actions/toolkit/pull/2132\">v4.1.0</a></li>\n</ul>\n<h3>4.2.4</h3>\n<ul>\n<li>Bump <code>@actions/cache</code> to v4.0.5</li>\n</ul>\n<h3>4.2.3</h3>\n<ul>\n<li>Bump <code>@actions/cache</code> to v4.0.3 (obfuscates SAS token in\ndebug logs for cache entries)</li>\n</ul>\n<h3>4.2.2</h3>\n<ul>\n<li>Bump <code>@actions/cache</code> to v4.0.2</li>\n</ul>\n<h3>4.2.1</h3>\n<ul>\n<li>Bump <code>@actions/cache</code> to v4.0.1</li>\n</ul>\n<h3>4.2.0</h3>\n<p>TLDR; The cache backend service has been rewritten from the ground up\nfor improved performance and reliability. <a\nhref=\"https://github.com/actions/cache\">actions/cache</a> now integrates\nwith the new cache service (v2) APIs.</p>\n<p>The new service will gradually roll out as of <strong>February 1st,\n2025</strong>. The legacy service will also be sunset on the same date.\nChanges in these release are <strong>fully backward\ncompatible</strong>.</p>\n<p><strong>We are deprecating some versions of this action</strong>. We\nrecommend upgrading to version <code>v4</code> or <code>v3</code> as\nsoon as possible before <strong>February 1st, 2025.</strong> (Upgrade\ninstructions below).</p>\n<p>If you are using pinned SHAs, please use the SHAs of versions\n<code>v4.2.0</code> or <code>v3.4.0</code></p>\n<p>If you do not upgrade, all workflow runs using any of the deprecated\n<a href=\"https://github.com/actions/cache\">actions/cache</a> will\nfail.</p>\n<p>Upgrading to the recommended versions will not break your\nworkflows.</p>\n<h3>4.1.2</h3>\n<ul>\n<li>Add GitHub Enterprise Cloud instances hostname filters to inform API\nendpoint choices - <a\nhref=\"https://redirect.github.com/actions/cache/pull/1474\">#1474</a></li>\n<li>Security fix: Bump braces from 3.0.2 to 3.0.3 - <a\nhref=\"https://redirect.github.com/actions/cache/pull/1475\">#1475</a></li>\n</ul>\n<h3>4.1.1</h3>\n<ul>\n<li>Restore original behavior of <code>cache-hit</code> output - <a\nhref=\"https://redirect.github.com/actions/cache/pull/1467\">#1467</a></li>\n</ul>\n<h3>4.1.0</h3>\n<ul>\n<li>Ensure <code>cache-hit</code> output is set when a cache is missed -\n<a\nhref=\"https://redirect.github.com/actions/cache/pull/1404\">#1404</a></li>\n<li>Deprecate <code>save-always</code> input - <a\nhref=\"https://redirect.github.com/actions/cache/pull/1452\">#1452</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a\nhref=\"https://github.com/actions/cache/commit/0057852bfaa89a56745cba8c7296529d2fc39830\"><code>0057852</code></a>\nMerge pull request <a\nhref=\"https://redirect.github.com/actions/cache/issues/1655\">#1655</a>\nfrom actions/Link-/prepare-4.3.0</li>\n<li><a\nhref=\"https://github.com/actions/cache/commit/4f5ea67f1cc87b2d4239690fa12a12fc32096d68\"><code>4f5ea67</code></a>\nUpdate licensed cache</li>\n<li><a\nhref=\"https://github.com/actions/cache/commit/9fcad95d03062fb8399cdbd79ae6041c7692b6c8\"><code>9fcad95</code></a>\nUpgrade actions/cache to 4.1.0 and prepare 4.3.0 release</li>\n<li><a\nhref=\"https://github.com/actions/cache/commit/638ed79f9dc94c1de1baef91bcab5edaa19451f4\"><code>638ed79</code></a>\nMerge pull request <a\nhref=\"https://redirect.github.com/actions/cache/issues/1642\">#1642</a>\nfrom actions/GhadimiR-patch-1</li>\n<li><a\nhref=\"https://github.com/actions/cache/commit/3862dccb1765f1ff6e623be1f4fd3a5b47a30d27\"><code>3862dcc</code></a>\nAdd note on runner versions</li>\n<li>See full diff in <a\nhref=\"https://github.com/actions/cache/compare/0400d5f644dc74513175e3cd8d07132dd4860809...0057852bfaa89a56745cba8c7296529d2fc39830\">compare\nview</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `actions-rust-lang/setup-rust-toolchain` from 1.15.0 to 1.15.1\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a\nhref=\"https://github.com/actions-rust-lang/setup-rust-toolchain/releases\">actions-rust-lang/setup-rust-toolchain's\nreleases</a>.</em></p>\n<blockquote>\n<h2>v1.15.1</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Bump Swatinem/rust-cache from 2.8.0 to 2.8.1 by <a\nhref=\"https://github.com/dependabot\"><code>@​dependabot</code></a>[bot]\nin <a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/pull/73\">actions-rust-lang/setup-rust-toolchain#73</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a\nhref=\"https://github.com/actions-rust-lang/setup-rust-toolchain/compare/v1.15.0...v1.15.1\">https://github.com/actions-rust-lang/setup-rust-toolchain/compare/v1.15.0...v1.15.1</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a\nhref=\"https://github.com/actions-rust-lang/setup-rust-toolchain/blob/main/CHANGELOG.md\">actions-rust-lang/setup-rust-toolchain's\nchangelog</a>.</em></p>\n<blockquote>\n<h1>Changelog</h1>\n<p>All notable changes to this project will be documented in this\nfile.</p>\n<p>The format is based on <a\nhref=\"https://keepachangelog.com/en/1.0.0/\">Keep a Changelog</a>,\nand this project adheres to <a\nhref=\"https://semver.org/spec/v2.0.0.html\">Semantic Versioning</a>.</p>\n<h2>[Unreleased]</h2>\n<h2>[1.15.1] - 2025-09-23</h2>\n<ul>\n<li>Update <code>Swatinem/rust-cache</code> to v2.8.1</li>\n</ul>\n<h2>[1.15.0] - 2025-09-14</h2>\n<ul>\n<li>Add support for non-root source directory.\nAccept source code and <code>rust-toolchain.toml</code> file in\nsubdirectories of the repository.\nAdds a new parameter <code>rust-src-dir</code> that controls the lookup\nfor toolchain files and sets a default value for the\n<code>cache-workspace</code> input. (<a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/issues/69\">#69</a>\nby <a href=\"https://github.com/Kubaryt\"><code>@​Kubaryt</code></a>)</li>\n</ul>\n<h2>[1.14.1] - 2025-08-28</h2>\n<ul>\n<li>Pin <code>Swatinem/rust-cache</code> action to a full commit SHA (<a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/issues/68\">#68</a>\nby <a\nhref=\"https://github.com/JohnTitor\"><code>@​JohnTitor</code></a>)</li>\n</ul>\n<h2>[1.14.0] - 2025-08-23</h2>\n<ul>\n<li>Add new parameters <code>cache-all-crates</code> and\n<code>cache-workspace-crates</code> that are propagated to\n<code>Swatinem/rust-cache</code> as <code>cache-all-crates</code> and\n<code>cache-workspace-crates</code></li>\n</ul>\n<h2>[1.13.0] - 2025-06-16</h2>\n<ul>\n<li>Add new parameter <code>cache-provider</code> that is propagated to\n<code>Swatinem/rust-cache</code> as <code>cache-provider</code> (<a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/issues/65\">#65</a>\nby <a\nhref=\"https://github.com/mindrunner\"><code>@​mindrunner</code></a>)</li>\n</ul>\n<h2>[1.12.0] - 2025-04-23</h2>\n<ul>\n<li>Add support for installing rustup on Windows (<a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/issues/58\">#58</a>\nby <a href=\"https://github.com/maennchen\"><code>@​maennchen</code></a>)\nThis adds support for using Rust on the GitHub provided Windows ARM\nrunners.</li>\n</ul>\n<h2>[1.11.0] - 2025-02-24</h2>\n<ul>\n<li>Add new parameter <code>cache-bin</code> that is propagated to\n<code>Swatinem/rust-cache</code> as <code>cache-bin</code> (<a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/issues/51\">#51</a>\nby <a\nhref=\"https://github.com/enkhjile\"><code>@​enkhjile</code></a>)</li>\n<li>Add new parameter <code>cache-shared-key</code> that is propagated\nto <code>Swatinem/rust-cache</code> as <code>shared-key</code> (<a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/issues/52\">#52</a>\nby <a\nhref=\"https://github.com/skanehira\"><code>@​skanehira</code></a>)</li>\n</ul>\n<h2>[1.10.1] - 2024-10-01</h2>\n<ul>\n<li>Fix problem matcher for rustfmt output.\nThe format has changed since <a\nhref=\"https://redirect.github.com/rust-lang/rustfmt/pull/5971\">rust-lang/rustfmt#5971</a>\nand now follows the form &quot;filename:line&quot;.\nThanks to <a\nhref=\"https://github.com/0xcypher02\"><code>@​0xcypher02</code></a> for\npointing out the problem.</li>\n</ul>\n<h2>[1.10.0] - 2024-09-23</h2>\n<ul>\n<li>Add new parameter <code>cache-directories</code> that is propagated\nto <code>Swatinem/rust-cache</code> (<a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/issues/44\">#44</a>\nby <a\nhref=\"https://github.com/pranc1ngpegasus\"><code>@​pranc1ngpegasus</code></a>)</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a\nhref=\"https://github.com/actions-rust-lang/setup-rust-toolchain/commit/02be93da58aa71fb456aa9c43b301149248829d8\"><code>02be93d</code></a>\nUpdate <code>Swatinem/rust-cache</code> to v2.8.1</li>\n<li><a\nhref=\"https://github.com/actions-rust-lang/setup-rust-toolchain/commit/69e48024603c91b996af4004a08116c7b9bf95c1\"><code>69e4802</code></a>\nMerge pull request <a\nhref=\"https://redirect.github.com/actions-rust-lang/setup-rust-toolchain/issues/73\">#73</a>\nfrom actions-rust-lang/dependabot/github_actions/Swati...</li>\n<li><a\nhref=\"https://github.com/actions-rust-lang/setup-rust-toolchain/commit/183cfebcbd070909e5077c3b4a44326e8e8418f5\"><code>183cfeb</code></a>\nBump Swatinem/rust-cache from 2.8.0 to 2.8.1</li>\n<li>See full diff in <a\nhref=\"https://github.com/actions-rust-lang/setup-rust-toolchain/compare/2fcdc490d667999e01ddbbf0f2823181beef6b39...02be93da58aa71fb456aa9c43b301149248829d8\">compare\nview</a></li>\n</ul>\n</details>\n<br />\n\n\nDependabot will resolve any conflicts with this PR as long as you don't\nalter it yourself. You can also trigger a rebase manually by commenting\n`@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits\nthat have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after\nyour CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge\nand block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating\nit. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all\nof the ignore conditions of the specified dependency\n- `@dependabot ignore <dependency name> major version` will close this\ngroup update PR and stop Dependabot creating any more for the specific\ndependency's major version (unless you unignore this specific\ndependency's major version or upgrade to it yourself)\n- `@dependabot ignore <dependency name> minor version` will close this\ngroup update PR and stop Dependabot creating any more for the specific\ndependency's minor version (unless you unignore this specific\ndependency's minor version or upgrade to it yourself)\n- `@dependabot ignore <dependency name>` will close this group update PR\nand stop Dependabot creating any more for the specific dependency\n(unless you unignore this specific dependency or upgrade to it yourself)\n- `@dependabot unignore <dependency name>` will remove all of the ignore\nconditions of the specified dependency\n- `@dependabot unignore <dependency name> <ignore condition>` will\nremove the ignore condition of the specified dependency and ignore\nconditions\n\n\n</details>\n\n---------\n\nSigned-off-by: dependabot[bot] <support@github.com>\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\nCo-authored-by: Alexander Samusev <41779041+alvicsam@users.noreply.github.com>",
          "timestamp": "2025-09-30T10:38:51+02:00",
          "tree_id": "a3afe168fd1dfafe2cbf054dd108250dd0200235",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/28dda33b18ce3d1a3e50fe728b2cfb8b84a97f79"
        },
        "date": 1759223543922,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022452222759999998,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.16030984043999993,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013222533093333332,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007330443246666692,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "88332432+dastansam@users.noreply.github.com",
            "name": "Dastan",
            "username": "dastansam"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cfce3b96be3fe7348c88ba1deeaa701834240d38",
          "message": "`pallet-assets`: extract precompiles to a separate crate (#9796)\n\ncloses #9434 \n\n###  Description\n\nAssets pallet includes `pallet-revive` precompiles and subsequently pull\na lot of EVM related dependencies by default. This forces downstream\nusers that only want `pallet-assets` functionality to pull unrelated\ndependencies and causes confusion (why do we have bunch of ethereum\ncrates in the dependency tree of `pallet-assets`?). This extracts\nprecompiles into its own crate\n\n---------\n\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-09-30T09:11:50Z",
          "tree_id": "5425894d473ec0ee79c528aca01d4f7facb1e1dd",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/cfce3b96be3fe7348c88ba1deeaa701834240d38"
        },
        "date": 1759227589350,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15969580136666658,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013002433473333332,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007633624706666651,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022451840966666668,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "bfa664265cc94e201f297f070b8eadb90c634f64",
          "message": "bip39: Switch back to the main fork (#9872)\n\nClose: https://github.com/paritytech/polkadot-sdk/issues/9870\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-09-30T10:10:01Z",
          "tree_id": "9d0883eeb9d403dfa86abebc12991c0c05509f3f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/bfa664265cc94e201f297f070b8eadb90c634f64"
        },
        "date": 1759232554386,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022572802013333337,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15894678656666666,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007443299579999995,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01295823932,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "oliver.tale-yazdi@parity.io",
            "name": "Oliver Tale-Yazdi",
            "username": "ggwpez"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "7648b4105c269d6a3395d90b053c2e04c5932bc3",
          "message": "Stronger WASM compression (#9875)\n\nUse strongest compression 22 instead of just 3. See\n[docs](https://docs.rs/zstd/0.13.3/zstd/stream/write/struct.Encoder.html#method.new).\nReduces our KAH compressed size by 25%.\n\nBuild time by compression level:\n\n| Compression | Build Time | Size    | Decomp Time |\n  |-------------|-----------|---------|-------------|\n  | 3           | 5:54      | 3192172 | 0.013039s   |\n  | 10          | 5:58      | 2716940 | 0.011962s   |\n  | 22          | 6:06      | 2387562 | 0.013745s   |\n\n---------\n\nSigned-off-by: Oliver Tale-Yazdi <oliver.tale-yazdi@parity.io>",
          "timestamp": "2025-09-30T11:05:07Z",
          "tree_id": "2fe20eaaaaff302082b5a4507a9302b2265ff7ef",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/7648b4105c269d6a3395d90b053c2e04c5932bc3"
        },
        "date": 1759236513223,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007691958119999993,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012966313206666668,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022484690579999994,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15840284314,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "yrong1997@gmail.com",
            "name": "Ron",
            "username": "yrong"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0e272fe76b037587908b52110a485749661aec97",
          "message": "Snowbridge: Refactor with Alloy primitives and clean up code (#9204)\n\nJust some cleanup — not blocking the V2 release if it can’t be included\nin time.\n\n---------\n\nCo-authored-by: Adrian Catangiu <adrian@parity.io>",
          "timestamp": "2025-09-30T12:45:39Z",
          "tree_id": "764fd3841a44da693a68d786bc5648b6f8bbc33f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/0e272fe76b037587908b52110a485749661aec97"
        },
        "date": 1759241030464,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012923629193333327,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007413650006666645,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15796711873333333,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022340871999999998,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "22591718+RomarQ@users.noreply.github.com",
            "name": "Rodrigo Quelhas",
            "username": "RomarQ"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "2732b6a9157a9ac501cac43ca46f6abffc90f275",
          "message": "Remove deprecated/unused consensus code (#9869)\n\nThis pull request removes unused consensus-related code from the\ncodebase. The removed code was not referenced or required by any\nexisting logic or features, and its removal helps to:\n\n- Reduce technical debt\n- Simplify the codebase for future maintenance",
          "timestamp": "2025-09-30T19:30:48Z",
          "tree_id": "9b60638e2014955757ab321bdbfd3379674e622e",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/2732b6a9157a9ac501cac43ca46f6abffc90f275"
        },
        "date": 1759266540834,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022705636233333326,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.16020185851333335,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01321998684,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.0075088540066666366,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eresav@me.com",
            "name": "Andrei Eres",
            "username": "AndreiEres"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ed4eebb461069f65fda4a88d44ee811dd8c010e3",
          "message": "Fix the deadlock during statements gossiping (#9868)\n\n# Description\n\nDuring statement store benchmarking we experienced deadlock-like\nbehavior which we found happened during statement propagation. Every\nsecond statements were propagating, locking the index which possibly\ncaused the deadlock. After the fix, the observed behavior no longer\noccurs.\n\nEven though there is a possibility to unsync the DB and the index for\nread operations and release locks earlier, which should be harmless, it\nleads to regressions. I suspect because of concurrent access to many\ncalls of db.get(). Checked with the benchmarks in\nhttps://github.com/paritytech/polkadot-sdk/pull/9884\n\n## Integration\n\nThis PR should not affect downstream projects.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-09-30T22:23:42Z",
          "tree_id": "c92518817efc8cc35ba8d467b45174e5df2e8d5d",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/ed4eebb461069f65fda4a88d44ee811dd8c010e3"
        },
        "date": 1759275254739,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.00748557981333331,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013055861926666667,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022354122246666667,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15883746971333335,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eresav@me.com",
            "name": "Andrei Eres",
            "username": "AndreiEres"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "d51c532f07c7e3307718b95f5a1f8859e14949a0",
          "message": "Collation metrics: exclude drops of fork-based collations to improve metrics accuracy (#9319)\n\n# Description\n\nThe polkadot_parachain_collation_expired metric is an indicator for\nparachain block confidence. However, this metric has a critical issue:\nnot every drop should be counted.\n\nLookahead collators intentionally build collations on a relay chain\nblock and its forks, so the drop of fork-based collations is an expected\nbehaviour. If we count them, the drop metrics show a picture that is\nworse than in reality. To improve tracking accuracy, we should exclude\nlegit drops\n\nThe minor issue is also present in the expiry mechanism. It doesn't take\ninto account that collation was moved to a different stage, e.g., from\n\"fetched\" to \"backed\", and can write a drop of fetched collation.\n\nTo solve this issue we should:\n\n- Track relay parent finalization. \n- Record expiration metrics only when relay parent was finalized. \n- Exclude drops of fork-based collation from the metrics. \n- Send metrics only for collations that either finalized or dropped.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-10-01T07:45:42Z",
          "tree_id": "5ff1ff060f12f57e2d514725daf23b84a820589a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d51c532f07c7e3307718b95f5a1f8859e14949a0"
        },
        "date": 1759309532083,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012872180806666671,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022448879513333332,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007498210166666646,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15867163747333346,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "robertvaneerdewijk@gmail.com",
            "name": "0xRVE",
            "username": "0xRVE"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1320b70d33145fc379751864a77e6fc8186cec94",
          "message": "replace forloop solc fixture type with test-case macro (#9841)\n\nFor all tests of revm instructions replaced `for fixture_type` with\ntest-case macro\n\n---------\n\nCo-authored-by: Robert van Eerdewijk <robert@Roberts-MacBook-Pro.local>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-10-01T14:10:26Z",
          "tree_id": "e177de2bb84124c4df37c49fec3d858563d4fa2e",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/1320b70d33145fc379751864a77e6fc8186cec94"
        },
        "date": 1759332084330,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.01315988999333333,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007635488413333309,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022557163613333334,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15832369868000004,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alex.theissen@me.com",
            "name": "Alexander Theißen",
            "username": "athei"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "8ac594d2f3b35a26eecfd892ac0b3d077ba809f9",
          "message": "Move revive fixtures into release directory (#9670)\n\nhttps://github.com/paritytech/polkadot-sdk/pull/8980 did fix the\nfellowship CI but it triggers a rebuild of the fixtures every single\ntime you run tests. Annoying during development.\n\nInstead of rebuilding, we just move the fixtures into the\n`target/release` directory where it should be cached by the fellowship\nCI.\n\nVerifying that it works here:\nhttps://github.com/polkadot-fellows/runtimes/pull/891\n\nWhy: Re-running when the output dir changes will make it re-run every\ntime. Since every run changes the output dir.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-10-01T20:52:36Z",
          "tree_id": "117de0ce30ead499d41c4c16996b474e72e4f7c7",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/8ac594d2f3b35a26eecfd892ac0b3d077ba809f9"
        },
        "date": 1759356181754,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007496532826666682,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15817316561333336,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012893614913333334,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022488291399999992,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "54316454+sandreim@users.noreply.github.com",
            "name": "Andrei Sandu",
            "username": "sandreim"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "cf439301b2a9571e5fcb04e4550167a878187182",
          "message": "Bump PARENT_SEARCH_DEPTH  (#9906)\n\nA chain needs to have the `UNINCLUDED_SEGMENT_CAPACITY` configured to\n`(2 + RELAY_PARENT_OFFSET) *\nBLOCK_PROCESSING_VELOCITY + 1`.\n\nWhen the parachain is configured to build 12 blocks per relay parent and\nthe relay parent offset is 1, this number(37) is higher than the current\n`PARENT_SEARCH_DEPTH=30`.\n\nThis PR raises the limit to be sufficient for the larger unincluded\nsegment.\n\n---------\n\nSigned-off-by: Andrei Sandu <andrei-mihail@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-10-02T09:28:36Z",
          "tree_id": "809add5f79c62c55ecf2cbb472f72251964c5e75",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/cf439301b2a9571e5fcb04e4550167a878187182"
        },
        "date": 1759401468904,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022505972133333337,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013177438079999998,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15845168316000005,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007398512073333304,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "bf235845f9ecb2b84264f255afd7aefdd5ddb603",
          "message": "[pallet-revive] rm checked-in metadata (#9865)\n\nRemoved eth-rpc generated metadata.\nThe metadata file will now be generated from the build.rs using the\nAH-westend runtime\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-10-03T09:35:39Z",
          "tree_id": "0b74083f3e62a8264adb9c7d7898749c2c904364",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/bf235845f9ecb2b84264f255afd7aefdd5ddb603"
        },
        "date": 1759488351024,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013076777233333335,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022686304773333332,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.16095076887333337,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007536412879999974,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alex.theissen@me.com",
            "name": "Alexander Theißen",
            "username": "athei"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3a366f1debbe9af536bf65b2c88d0fc18663c9f4",
          "message": "Rework gas mapping (#9803)\n\nReplacement of https://github.com/paritytech/polkadot-sdk/pull/9740.\n\nBuild on top of the new tx payment changes:\nhttps://github.com/paritytech/polkadot-sdk/pull/9780\n\nStarted a new PR because due to the rebase on top of the new tx payment\nchanges this PR is substantially different and I don't want to\ninvalidate the existing comments on\nhttps://github.com/paritytech/polkadot-sdk/pull/9740 which are not\nimplemented, yet.\n\n## Overview\n\nThis will change the weight to eth fee mapping according to [this\nmodel](https://shade-verse-e97.notion.site/Gas-Mapping-Challenges-Revised-26c8532a7ab580db8222c2ce3023669e).\n\n## Follow ups\n\nThis only changes the estimate returned from the dry run and how the\nweights are derived from an ethereum transaction. It does not change how\ncontracts observe the gas. This will be done in a follow up. More\nspecifically:\n\n1. The `GAS` opcode should return the new gas. As of right now it\nreturns `ref_time.`\n2. The `*_CALL` opcodes should use the passed `gas` parameter and decode\nit into `Weight`. As of right now the parameter is ignored.\n\nThat said, even without those follow ups this PR should fix all\n`InvalidTransaction` errors we are observing.\n\n### Increasing the dimension of `gas_price`\n\nWe should add a configurable divisor so that the gas_price is always at\nleast some gwei. That makes it easier to input the values.\n\n---------\n\nSigned-off-by: Alexander Theißen <alex.theissen@me.com>\nCo-authored-by: joe petrowski <25483142+joepetrowski@users.noreply.github.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Francisco Aguirre <franciscoaguirreperez@gmail.com>\nCo-authored-by: PG Herveou <pgherveou@gmail.com>",
          "timestamp": "2025-10-03T13:53:27Z",
          "tree_id": "1c2b94a5b44dbb00e67fba2e82c49eb2c14b4241",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/3a366f1debbe9af536bf65b2c88d0fc18663c9f4"
        },
        "date": 1759503681813,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007492654466666641,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012955413113333335,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022692202013333333,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.16062806946666666,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alex.theissen@me.com",
            "name": "Alexander Theißen",
            "username": "athei"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3adf2e95a8531837891c7cfba7f0f25474531f60",
          "message": "pallet-revive: Bump PolkaVM (#9928)\n\nBumped `polkavm` to the latest version. No semantic changes in that\nupdate.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-10-03T16:09:05Z",
          "tree_id": "41b6f37d0c23a063be61148c793d0a9d212b5c48",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/3adf2e95a8531837891c7cfba7f0f25474531f60"
        },
        "date": 1759511844634,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.012815605439999999,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02249806186000001,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007455440759999976,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15784061338666663,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "skunert49@gmail.com",
            "name": "Sebastian Kunert",
            "username": "skunert"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "42510be8dec593b8149d439c2edac816424d81dc",
          "message": "CheckWeight: Take transaction length into account during validation (#9907)\n\nDuring validation of extrinsics we currently check that the benchmarked\nweight does not exceed the overall block limit for the given extrinsic\nclass. For the proof weight, this should also take into account the\nlength of the transaction. This creates parity with the checks we\nalready do at extrinsic application time where we take the length [into\naccount](https://github.com/paritytech/polkadot-sdk/blob/7086502b242c7984a13e198d2373e69a640e5c58/substrate/frame/system/src/extensions/check_weight.rs#L166-L166).\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-10-03T18:28:03Z",
          "tree_id": "ecc593ed4017b11a3b9068ba3578e633296989c5",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/42510be8dec593b8149d439c2edac816424d81dc"
        },
        "date": 1759521057196,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013117851786666659,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15805686060000002,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022326378466666665,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00748694829999999,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "s.miasojed@gmail.com",
            "name": "Sebastian Miasojed",
            "username": "smiasojed"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d36d48a25c80502c577df3b1a88eadb3b3d3b6be",
          "message": "[pallet-revive] Allows setting evm balance for non-existing account (#9911)\n\nAllows calling set_evm_balance for a non-existing account on\npallet-revive.\nIt is needed by foundry to inject EVM accounts.",
          "timestamp": "2025-10-04T08:29:58Z",
          "tree_id": "b5d7b6c44cb8e2b0c6f46622d02d14c56ee46bb7",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d36d48a25c80502c577df3b1a88eadb3b3d3b6be"
        },
        "date": 1759571207947,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.01307675625333333,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.0076485380266666705,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15842355596000007,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022444139713333335,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "xlchen1291@gmail.com",
            "name": "Xiliang Chen",
            "username": "xlc"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "be423a31a5523934b9e5a4679fa254195811520d",
          "message": "Improve asset conversion (#9892)\n\nadded view functions #7374\nadded trait `MutateLiquidity` to allow other pallets to manage liquidity\n#9765\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>\nCo-authored-by: Guillaume Thiolliere <guillaume.thiolliere@parity.io>",
          "timestamp": "2025-10-06T07:58:24Z",
          "tree_id": "e2833bd35476bbaa8d4884889609e0f94623f62f",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/be423a31a5523934b9e5a4679fa254195811520d"
        },
        "date": 1759741592772,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013098584973333336,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022524642533333333,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15949967406000007,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.00741173662666665,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "evgeny@parity.io",
            "name": "Evgeny Snitko",
            "username": "AndWeHaveAPlan"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0040bc9bd4f2a11edde9c30c7f0cbd65a3d14b08",
          "message": "Make `cargo-check-all-crate-macos` non-required (#9940)",
          "timestamp": "2025-10-06T16:05:45+04:00",
          "tree_id": "b7496b5160086277a2736288e9d932b7596812c4",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/0040bc9bd4f2a11edde9c30c7f0cbd65a3d14b08"
        },
        "date": 1759754396369,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022418513240000004,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01290096298,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15847982666666682,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.0076827305799999765,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "tsvetomir@parity.io",
            "name": "Tsvetomir Dimitrov",
            "username": "tdimitrov"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9dd67bf672c3893de126452b8578cabc08bdccce",
          "message": "Additional Kusama and Polkadot invulnerable collator peer ids (#9936)\n\nPeerIds of some new invulnerable AH collators on Kusama and Polkadot.",
          "timestamp": "2025-10-06T13:48:42Z",
          "tree_id": "fe7b8aa561135c69b7db0f4b757a477090669f33",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/9dd67bf672c3893de126452b8578cabc08bdccce"
        },
        "date": 1759763284899,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007411685506666643,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15830167057333336,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022560291720000004,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012766207833333331,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "bbbe659465b26daddf4239bd106837f0527b4a5e",
          "message": "Fix all the warnings (#9943)\n\nFixes all the warnings that are appearing with the latest rust.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-10-06T19:10:41Z",
          "tree_id": "36680b82276fe6fd8daef20689b43b198dba8b94",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/bbbe659465b26daddf4239bd106837f0527b4a5e"
        },
        "date": 1759781998398,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15868410156666662,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007322680540000004,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022452699566666665,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012725768720000004,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "claravanstaden64@gmail.com",
            "name": "Clara van Staden",
            "username": "claravanstaden"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "c2231626893533a91754384b62f9595ee97662d3",
          "message": "Snowbridge - Adds Fulu hardfork (#9938)\n\nAdds Fulu hardfork version. No other onchain changes required. \n\nFulu activation on Sepolia is 14 October, Mainnet 3 December.\n\n---------\n\nCo-authored-by: Adrian Catangiu <adrian@parity.io>",
          "timestamp": "2025-10-07T08:44:54Z",
          "tree_id": "90c6138e7315fe60f7f18d434c831d6c0b90ddd9",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c2231626893533a91754384b62f9595ee97662d3"
        },
        "date": 1759830952268,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013069041013333333,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022401503199999995,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15795016828000003,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007711205006666633,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "48632512+s0me0ne-unkn0wn@users.noreply.github.com",
            "name": "s0me0ne-unkn0wn",
            "username": "s0me0ne-unkn0wn"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1100fc4013a2b56255c2d2401e8832f761c27b9d",
          "message": "Fix executor param fetching session index (#9774)\n\nThis aims to fix #4292 \nWe have three cases of candidate validation where a proper set of\nexecutor environment parameters should be used:\n1) Backing, and we're currently doing the right thing, requesting the\nexecutor params at the relay parent at which the candidate was produced:\n\nhttps://github.com/paritytech/polkadot-sdk/blob/e7f36ab82934a7142f3ebd7f8b5566f12f85339b/polkadot/node/core/backing/src/lib.rs#L1140-L1146\n2) Approval voting, where a wrong session was used, and this PR fixes\nthat;\n3) Disputes, where the session index, again, is hopefully derived from\nthe relay parent at which the candidate was produced:\n\nhttps://github.com/paritytech/polkadot-sdk/blob/63958c454643ddafdde8be17af5334aa95954550/polkadot/node/subsystem-types/src/messages.rs#L295-L296\n\nSo, hopefully, this PR fixes the only wrong case and harmonizes the\nexecutor param fetching over all the existing use cases.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-10-07T16:34:21Z",
          "tree_id": "ab7eddf248c98875e44fb81f161711e49315b43b",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/1100fc4013a2b56255c2d2401e8832f761c27b9d"
        },
        "date": 1759859098167,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022350924640000006,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012862965040000002,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15685091545333343,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007304174086666643,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "0028bec86c19a8d75098a75cf7862a7f76569fcc",
          "message": "FinalityNotification: Directly include stale blocks (#9904)\n\nThe finality notification was already carrying the information about the\nstale heads. However, most users of the stale heads were expanding these\nstale heads to all the stale blocks. So, we were iterating the same\nforks multiple times in the node for each finality notification. Also in\na possible future where we start actually pruning headers as well,\nexpanding these forks would fail.\n\nSo, this pull request is changing the finality notification to directly\ncarry the stale blocks (which were calculated any way already).\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-10-07T18:53:50Z",
          "tree_id": "6dfb8de6c3c3d92f40d72ac424d374cb6e7bcc80",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/0028bec86c19a8d75098a75cf7862a7f76569fcc"
        },
        "date": 1759867737132,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15684251760000004,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022255886979999993,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007376673446666649,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01313619406666667,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alex.theissen@me.com",
            "name": "Alexander Theißen",
            "username": "athei"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "648cc16181998c8b53d51f1c996a866c81bed92f",
          "message": "pallet-revive: Fix dry run balance check logic (#9942)\n\nFix fault balance check logic during dry-run:\n\nWe should not enforce that the sender has enough balance for the fees in\ncase no `gas` is supplied.\n\ncc @TorstenStueber\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-10-08T08:03:22Z",
          "tree_id": "0299aca249bc9f342b43520d9a6de922c83ed2c7",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/648cc16181998c8b53d51f1c996a866c81bed92f"
        },
        "date": 1759915584609,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022403000646666667,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15652814419333336,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007253614286666644,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013029999506666667,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "e32dee79990efc2cbccd0c0c0b86274772b9947d",
          "message": "RPC Spec V2: Fix flaky test (#9958)",
          "timestamp": "2025-10-08T10:49:22Z",
          "tree_id": "899d85cea6fc02d2a6983462a3cde1bdab98b9e1",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/e32dee79990efc2cbccd0c0c0b86274772b9947d"
        },
        "date": 1759932431761,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013053345126666671,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022484898446666665,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15707578581333334,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.0076452501666666416,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "363911+pepoviola@users.noreply.github.com",
            "name": "Javier Viola",
            "username": "pepoviola"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "81abfd7af936260922f39f232943d303d0b55713",
          "message": "[DNM] Zombienet fix process logs (#9913)\n\nFix `send to loki` logic to support:\n - rstest (multiple tests per job)\n - fallback when network fail to spawn (zombie.json not present)\n \ncc: @DenzelPenzel\n\n---------\n\nCo-authored-by: DenzelPenzel <denis.samsonov@parity.io>\nCo-authored-by: Denzel <15388928+DenzelPenzel@users.noreply.github.com>",
          "timestamp": "2025-10-08T15:12:46Z",
          "tree_id": "52afc8743330bc09f004ec39ee64d793c8906200",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/81abfd7af936260922f39f232943d303d0b55713"
        },
        "date": 1759943857078,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.008037610979999981,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15919713020666668,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013141624120000002,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022542511560000006,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "5588131+kianenigma@users.noreply.github.com",
            "name": "Kian Paimani",
            "username": "kianenigma"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "92118ececd11ca1c02984f02fa3151b174fea2b3",
          "message": "Staking-Async: Chill stakers should not have a score (#9926)\n\nThat can re-instate them in the bags-list pallet\n\nIdentified by\nhttps://github.com/paritytech-secops/srlabs_findings/issues/559\n\nWhile no severe consequence, this bug could cause non-validator and\nnon-nominator stakers to retain a spot in the bags-list pallet,\npreventing other legit nominators/validators from taking their place.\n\nNote that previously, this was not a possibility, because `staking`\nwould always issue a `T::VoterList::on_remove` when someone `chill`s,\nensuring they are removed from the list. Moreover, an older version of\n`pallet_bags_list::Pallet::rebag` didn't allow new nodes to be added,\nonly the score of existing nodes to be adjusted.\n\nBut, in recent versions of `bags-list`, we added a `Lock` ability that\nwould block any changes to the bags list (during the election snapshot\nphase). This also had us update the `rebag` transaction to add or remove\nnodes from the list, which opened the door to this issue.\n\n---------\n\nCo-authored-by: Paolo La Camera <paolo@parity.io>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-10-08T18:12:57Z",
          "tree_id": "d940caa6f6c91d83a84cfa101206eacd525ba509",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/92118ececd11ca1c02984f02fa3151b174fea2b3"
        },
        "date": 1759952507363,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007133539126666668,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15789576532000005,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012982542806666669,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022503776093333334,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "pgherveou@gmail.com",
            "name": "PG Herveou",
            "username": "pgherveou"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "b6c7f6e948b0d97d0907fc3475e35153d7670ec3",
          "message": "pallet-revive update basefee instruction (#9945)\n\nThe base fee instruction now returns the proper base price instead of a\nhard coded value.\n\n---------\n\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-10-08T20:38:43Z",
          "tree_id": "ce745e9150c1089c080fde908c63caec17e7b041",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/b6c7f6e948b0d97d0907fc3475e35153d7670ec3"
        },
        "date": 1759960624232,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007646687386666668,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15669876418,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.01302868840666667,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02230996517333334,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "Sajjon@users.noreply.github.com",
            "name": "Alexander Cyon",
            "username": "Sajjon"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1445af004bcac0ec3dd7b055a04bb1d7f9c110f1",
          "message": "Change `Debug` of ParaId to`\"<ID>\"` instead of `\"Id(<ID>)\"` (#9920)\n\nThe `std::fmt::Debug` impl (derived) of\n[`Id`](https://github.com/paritytech/polkadot-sdk/blob/32cc5d6163781a077c4bdb2cafdf1a538127ebd5/polkadot/parachain/src/primitives.rs#L176)\nresults in `\"Id(42)\"` instead of `\"42\"`, this causes discrepancies in\nlogs. Sometimes we log `\"para_id=Id(3392)\"` but sometimes we log\n`\"para_id=3392\"` (without the `\"Id()\"`).\n\nThis makes e.g. Grafana PromQL queries harder to do, and logs harder to\nsearch in general.\n\n## Example\nSeen in e.g.:\n\n### Without `ID(<ID>)`\n\n```\n2025-09-22 22:28:06.753 DEBUG tokio-runtime-worker parachain::candidate-backing: Candidate backed candidate_hash=0x0cd77dd25cb61040557bb66df8de5c7b637dff05a671765b40bea7222cfa2854 relay_parent=0x7d380118542b6180127a150a86f144c448982c6af40da1dfb9e3119ad7d4c1ab para_id=3392 traceID=17069631741811285016642302447800179835\n```\n\n### With `ID(<ID>)`\n\n```\n2025-09-22 22:28:06.342 DEBUG tokio-runtime-worker parachain::collator-protocol::stats: [Relaychain] Collation expired age=3 collation_state=\"fetched\" relay_parent=0x7b394ee6c4fa2a3cec8fa82fa2afe5a933314e6a64e09256d7c8a28086b16acf para_id=Id(3392) head=0x92959b2b5fe8aba268bce48baf8a4e6b952055984015b8c1c7c3142c60e66e31\n```\n\nThis PR changes the impl of `Debug` to be just `\"<ID>\"`.\n\n([Discussion on\nMatrix](https://matrix.to/#/!oRmZcZCtnViqLdLelR:parity.io/$mTaAp2dRtH5_xUkM-2Bc1NsR-hGEbhV2arGVzuq9g3o?via=parity.io))",
          "timestamp": "2025-10-09T07:30:25Z",
          "tree_id": "b5addd1bab93d6414d2240841e5ce7be2d72d353",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/1445af004bcac0ec3dd7b055a04bb1d7f9c110f1"
        },
        "date": 1760000936680,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007727868826666639,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013284201933333337,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15856282445333336,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02275832390666667,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "mich@elmueller.net",
            "name": "Michael Müller",
            "username": "cmichi"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "efd1cd945911005a7ee946923b0c457d5c348e28",
          "message": "[pallet-revive] Migrate unstable storage host functions to `Storage` pre-compile (#9603)\n\nPart of closing https://github.com/paritytech/polkadot-sdk/issues/8572.\n\nIntroduces a new `Storage` pre-compile and migrates:\n* `clear_storage`\n* `take_storage`\n* `contains_storage`\n\nThe new `Storage` pre-compile is introduced, as it requires implementing\nthe `BuiltinPrecompile::call_with_info` function, which cannot be\nimplemented together with `BuiltinPrecompile::call` (implemented by the\n`System` pre-compile).\n\nI've added the `sol_utils` as I (on admittedly quick glance) couldn't\nfind a crate that supports those encodings (Solidity's `bytes`) without\nrequiring an allocator.\n\ncc @athei @pgherveou\n\n---------\n\nCo-authored-by: xermicus <bigcyrill@hotmail.com>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>",
          "timestamp": "2025-10-09T11:42:58Z",
          "tree_id": "edf593ab8bee9b5fa253152dc2d04d2691820d5a",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/efd1cd945911005a7ee946923b0c457d5c348e28"
        },
        "date": 1760014838648,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007644106860000011,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013246380906666667,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15819096012666664,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02268098416,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "Sajjon@users.noreply.github.com",
            "name": "Alexander Cyon",
            "username": "Sajjon"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "1b1cef306d9ceebf963fd15a04b5c79ee2618bce",
          "message": "Fix bug in logging of expried collation, incorrect `relay_parent` used (#9976)\n\nFixes a bug where wrong `relay_parent` was logged about expired\ncollations",
          "timestamp": "2025-10-09T12:55:56Z",
          "tree_id": "8ead97054f7a37135b863fb8c8d207b56fc94f84",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/1b1cef306d9ceebf963fd15a04b5c79ee2618bce"
        },
        "date": 1760020269834,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-distribution",
            "value": 0.013236201999999997,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.16053775246000004,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02303877984666667,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007489327513333322,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alex.theissen@me.com",
            "name": "Alexander Theißen",
            "username": "athei"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "4697901f84463e423cf46cfbe84744f4c9ad1555",
          "message": "Return unified gas for `gas_left` syscalls and opcodes (#9968)\n\nIn https://github.com/paritytech/polkadot-sdk/pull/9803 we introduced\nthe new gas mapping. However, when contracts are querying the remaining\ngas we still returned the `ref_time`. This PR changes that.\n\n## Changes\n- Added a new `Stack::gas_left` function that calculates the remaining\ngas as eth gas that matches the gas passed in the transaction. It\nsupports both the `eth_` and non `eth_` flavors of dispatchables.\n- Changed the PVM syscall `ref_time_left` to return the new unified gas.\n- Changes the EVM `GAS` opcode to return the new unified gas\n- When calculating the consumed storage we now take into account what\nwas charged during the current frame\n- Removed `storage_deposit_limit` from `eth_*` dispatchables. It is\nalways uncapped in this case and the overall limit is conveyed using the\ntx credit.\n\n## Follow ups\nNow that we can return the proper remaining gas that also includes the\nstorage deposit we can change the EVM `call` instruction next to take\nthe passed `gas` into account. Since the unified gas takes both the\ntxfee and the deposit into account it will be able to limit both\neffectively.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: xermicus <cyrill@parity.io>",
          "timestamp": "2025-10-09T14:35:38Z",
          "tree_id": "542b34f5992d92006956917f952370a5e5861e98",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/4697901f84463e423cf46cfbe84744f4c9ad1555"
        },
        "date": 1760030376701,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02242741262,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.0071714435400000165,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15651154533333345,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013111588753333339,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "15388928+DenzelPenzel@users.noreply.github.com",
            "name": "Denzel",
            "username": "DenzelPenzel"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "5f69bea23dcd527dc22b696b3a7e7e5ee47e8083",
          "message": "chore: add issue numbers to flaky zombienet tests (#9957)\n\n# Description\n#9877 Improve tracking of disabled tests, add link to tracking issue.\n\n# Checklist\n\n* [x] Improve tracking of disabled tests, add link to tracking issue.\n\n---------\n\nCo-authored-by: Javier Viola <363911+pepoviola@users.noreply.github.com>",
          "timestamp": "2025-10-09T20:00:03Z",
          "tree_id": "a9e08b82b5b3e5f06f6f1a303662a46ce3b63fd5",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/5f69bea23dcd527dc22b696b3a7e7e5ee47e8083"
        },
        "date": 1760044100932,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022486596986666666,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.012961792686666664,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15630258008000003,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007224681060000004,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "45130584+l0r1s@users.noreply.github.com",
            "name": "Loris Moulin",
            "username": "l0r1s"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c189613a32a58745993059f2fb73080e460c4ae7",
          "message": "Fix utility::force_batch returning incorrect weights causing mismatch (#9983)\n\n# Description\n\nThe returned weights from the `pallet_utility::force_batch` dispatch is\nusing `batch` weights instead of its own `force_batch` causing a weight\nmismatch log:\n\n```\n2025-10-03 14:57:48 Post dispatch weight is greater than pre dispatch weight. Pre dispatch weight may underestimating the actual weight. Greater post dispatch weight components are ignored.\n                                        Pre dispatch weight: Weight { ref_time: 5963137729, proof_size: 3997 },\n                                        Post dispatch weight: Weight { ref_time: 5963148560, proof_size: 3997 }    \n2025-10-03 14:59:00 Post dispatch weight is greater than pre dispatch weight. Pre dispatch weight may underestimating the actual weight. Greater post dispatch weight components are ignored.\n                                        Pre dispatch weight: Weight { ref_time: 2837593294, proof_size: 8703 },\n                                        Post dispatch weight: Weight { ref_time: 2837604125, proof_size: 8703 }   \n``` \n\nThis PR correct the returned weights.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: Bastian Köcher <git@kchr.de>",
          "timestamp": "2025-10-10T07:26:12Z",
          "tree_id": "2b90b30c7bc456f310a278da53e3685fb1413266",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c189613a32a58745993059f2fb73080e460c4ae7"
        },
        "date": 1760085175449,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007366836280000002,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013233189613333333,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022670588006666662,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.15746749743999996,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "skunert49@gmail.com",
            "name": "Sebastian Kunert",
            "username": "skunert"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "949521966517fdb251f0c9bee574f065c78324c0",
          "message": "Cumulus `aura-ext`: Harden slot check between relay-parent and parachain (#9712)\n\nBefore this PR, we were preventing parachains from authoring blocks that\nhave a slot from the future. However, we permitted parachains to author\non past slots, which is unnecessary relaxed. This PR enforces that only\nthe author that owns the slot corresponding to the slot of the relay\nparent can author.\n\nThis should no impact on normal Parachain operation. Blocks are already\nproduced on the correct slots, this increased strictness improves some\nedge-cases however.\n\nEven before, the Parachains slot needed to strictly advance, so\nproduction on \"older\" slots was only possible if previous authors\nskipped production opportunities.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-10-10T09:00:01Z",
          "tree_id": "47927ccf57a39c58f47f534ca0a4ba402cd17cbb",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/949521966517fdb251f0c9bee574f065c78324c0"
        },
        "date": 1760090769270,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022357454653333334,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013312013640000002,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007170673853333332,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1573705031200001,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "git@kchr.de",
            "name": "Bastian Köcher",
            "username": "bkchr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c61e227f2c59fa0ce7df5f977dad4076ff470f00",
          "message": "`trace_block`: Support overwriting `execute_block` (#9871)\n\nThis is required for example for parachains that require special\nextensions to be registered (e.g. `ProofSizeExt`) to succeed the block\nexecution.\n\nThis pull request changes the signature of `spawn_tasks` which now\nrequires a `tracing_execute_block` parameter. If your chain is a\nsolochain, just set the parameter to `None` or overwrite it if you need\nany special handling. For parachain builders, this value can be set to\n`cumulus_service::ParachainTracingExecuteBlock`.\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-10-10T10:26:45Z",
          "tree_id": "3543a71fa505d9567ad4915814d4e03994df82aa",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/c61e227f2c59fa0ce7df5f977dad4076ff470f00"
        },
        "date": 1760096681449,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "test-environment",
            "value": 0.007315799866666664,
            "unit": "seconds"
          },
          {
            "name": "availability-store",
            "value": 0.1568189427133334,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022331301286666657,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013046095093333336,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "marian@parity.io",
            "name": "Marian Radu",
            "username": "marian-radu"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": false,
          "id": "1cbdb4d2e384e35e27760f24ca895b2f3d601698",
          "message": " Wait for transaction receipt if instant seal is enabled (#9914)\n\nFixes https://github.com/paritytech/contract-issues/issues/165\n\nThe main changes in this PR are:\n\n1. Add a new API to revive-dev-node to check whether the node has\ninstant seal enabled.\n2. Add a new debug API to eth-rpc to check whether the node has instant\nseal enabled. (optional)\n3. Query and cache the node’s instant seal status during eth-rpc\ninitialization.\n4. If instant seal is enabled, wait for the transaction receipt to be\navailable\n\n---------\n\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: pgherveou <pgherveou@gmail.com>\nCo-authored-by: Alexander Theißen <alex.theissen@me.com>",
          "timestamp": "2025-10-10T16:01:50Z",
          "tree_id": "dd524ef9e7b71c82b791e3c22045d3bcc07039ff",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/1cbdb4d2e384e35e27760f24ca895b2f3d601698"
        },
        "date": 1760116791010,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.1578067277866667,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013156650246666669,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.022457932093333337,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007594405646666639,
            "unit": "seconds"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "cyrill@parity.io",
            "name": "xermicus",
            "username": "xermicus"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d65db6ef34c0e7b99655576fe2861105557afb97",
          "message": "[pallet-revive] Implement the consume_all_gas syscall (#9997)\n\nThis PR implements a new API `consume_all_gas` which is required for\n100% EVM `INVALID` opcode compatibility.\n\nSince ceding of all remaining gas is handled in the EVM interpreter, I\ndecided to not add a return flag but make this a dedicated syscall for\nconsistency instead.\n\nDidn't implement a benchmark since the first (and only) thing this does\nis consuming all remaining gas anyways.\n\n---------\n\nSigned-off-by: Cyrill Leutwiler <bigcyrill@hotmail.com>\nCo-authored-by: cmd[bot] <41898282+github-actions[bot]@users.noreply.github.com>",
          "timestamp": "2025-10-10T16:59:39Z",
          "tree_id": "8301f54c9ebb8ba81aad943ffffe9f1980d42d88",
          "url": "https://github.com/paritytech/polkadot-sdk/commit/d65db6ef34c0e7b99655576fe2861105557afb97"
        },
        "date": 1760119989775,
        "tool": "customSmallerIsBetter",
        "benches": [
          {
            "name": "Received from peers",
            "value": 433.3333333333332,
            "unit": "KiB"
          },
          {
            "name": "Sent to peers",
            "value": 18481.666666666653,
            "unit": "KiB"
          },
          {
            "name": "availability-store",
            "value": 0.15874560677333338,
            "unit": "seconds"
          },
          {
            "name": "test-environment",
            "value": 0.007425599433333321,
            "unit": "seconds"
          },
          {
            "name": "bitfield-distribution",
            "value": 0.02281253258000001,
            "unit": "seconds"
          },
          {
            "name": "availability-distribution",
            "value": 0.013216401333333332,
            "unit": "seconds"
          }
        ]
      }
    ]
  }
}