[package]
name = "sc-consensus-aura"
version = "0.8.0-rc2"
authors = ["Parity Technologies <admin@parity.io>"]
description = "Aura consensus algorithm for substrate"
edition = "2018"
license = "GPL-3.0-or-later WITH Classpath-exception-2.0"
homepage = "https://substrate.dev"
repository = "https://github.com/paritytech/substrate/"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
sp-application-crypto = { version = "2.0.0-rc2", path = "../../../primitives/application-crypto" }
sp-consensus-aura = { version = "0.8.0-rc2", path = "../../../primitives/consensus/aura" }
sp-block-builder = { version = "2.0.0-rc2", path = "../../../primitives/block-builder" }
sc-block-builder = { version = "0.8.0-rc2", path = "../../../client/block-builder" }
sc-client-api = { version = "2.0.0-rc2", path = "../../api" }
codec = { package = "parity-scale-codec", version = "1.3.0" }
sp-consensus = { version = "0.8.0-rc2", path = "../../../primitives/consensus/common" }
derive_more = "0.99.2"
futures = "0.3.4"
futures-timer = "3.0.1"
sp-inherents = { version = "2.0.0-rc2", path = "../../../primitives/inherents" }
sc-keystore = { version = "2.0.0-rc2", path = "../../keystore" }
log = "0.4.8"
parking_lot = "0.10.0"
sp-core = { version = "2.0.0-rc2", path = "../../../primitives/core" }
sp-blockchain = { version = "2.0.0-rc2", path = "../../../primitives/blockchain" }
sp-io = { version = "2.0.0-rc2", path = "../../../primitives/io" }
sp-version = { version = "2.0.0-rc2", path = "../../../primitives/version" }
sc-consensus-slots = { version = "0.8.0-rc2", path = "../slots" }
sp-api = { version = "2.0.0-rc2", path = "../../../primitives/api" }
sp-runtime = { version = "2.0.0-rc2", path = "../../../primitives/runtime" }
sp-timestamp = { version = "2.0.0-rc2", path = "../../../primitives/timestamp" }
sc-telemetry = { version = "2.0.0-rc2", path = "../../telemetry" }
prometheus-endpoint = { package = "substrate-prometheus-endpoint", path = "../../../utils/prometheus", version = "0.8.0-rc2"}

[dev-dependencies]
sp-keyring = { version = "2.0.0-rc2", path = "../../../primitives/keyring" }
sc-executor = { version = "0.8.0-rc2", path = "../../executor" }
sc-network = { version = "0.8.0-rc2", path = "../../network" }
sc-network-test = { version = "0.8.0-rc2", path = "../../network/test" }
sc-service = { version = "0.8.0-rc2", default-features = false, path = "../../service" }
substrate-test-runtime-client = { version = "2.0.0-rc2", path = "../../../test-utils/runtime/client" }
env_logger = "0.7.0"
tempfile = "3.1.0"
