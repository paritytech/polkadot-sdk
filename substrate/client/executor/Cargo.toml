[package]
name = "substrate-executor"
version = "2.0.0"
authors = ["Parity Technologies <admin@parity.io>"]
edition = "2018"

[dependencies]
derive_more = "0.15.0"
codec = { package = "parity-scale-codec", version = "1.0.0" }
runtime_io = { package = "sr-io", path = "../../primitives/sr-io" }
primitives = { package = "substrate-primitives", path = "../../primitives/core" }
trie = { package = "substrate-trie", path = "../../primitives/trie" }
serializer = { package = "substrate-serializer", path = "../../primitives/serializer" }
runtime_version = { package = "sr-version", path = "../../primitives/sr-version" }
panic-handler = { package = "substrate-panic-handler", path = "../../primitives/panic-handler" }
wasmi = "0.6.2"
parity-wasm = "0.40.3"
lazy_static = "1.4.0"
wasm-interface = { package = "substrate-wasm-interface", path = "../../primitives/wasm-interface" }
runtime-interface = { package = "substrate-runtime-interface", path = "../../primitives/runtime-interface" }
externalities = { package = "substrate-externalities", path = "../../primitives/externalities" }
parking_lot = "0.9.0"
log = "0.4.8"
libsecp256k1 = "0.3.2"

cranelift-codegen = { version = "0.50", optional = true }
cranelift-entity = { version = "0.50", optional = true }
cranelift-frontend = { version = "0.50", optional = true }
cranelift-native = { version = "0.50", optional = true }
cranelift-wasm = { version = "0.50", optional = true }
wasmtime-environ = { version = "0.8", optional = true }
wasmtime-jit = { version = "0.8", optional = true }
wasmtime-runtime = { version = "0.8", optional = true }

[dev-dependencies]
assert_matches = "1.3.0"
wabt = "0.9.2"
hex-literal = "0.2.1"
runtime-test = { package = "substrate-runtime-test", path = "runtime-test" }
test-runtime = { package = "substrate-test-runtime", path = "../../test/utils/runtime" }
runtime-interface = { package = "substrate-runtime-interface", path = "../../primitives/runtime-interface" }
client-api = { package = "substrate-client-api", path = "../api" }
substrate-offchain = { path = "../offchain/" }
state_machine = { package = "substrate-state-machine", path = "../../primitives/state-machine"  }
test-case = "0.3.3"

[features]
default = [ "std" ]
# This crate does not have `no_std` support, we just require this for tests
std = []
wasm-extern-trace = []
wasmtime = [
	"cranelift-codegen",
	"cranelift-entity",
	"cranelift-frontend",
	"cranelift-native",
	"cranelift-wasm",
	"wasmtime-environ",
	"wasmtime-jit",
	"wasmtime-runtime",
]
wasmi-errno = [
	"wasmi/errno"
]
