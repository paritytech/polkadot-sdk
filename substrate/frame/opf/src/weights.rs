// This file is part of Substrate.
// Copyright (C) Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

//! Autogenerated weights for `pallet_opf`
//!
//! THIS FILE SHOULD BE REPLACED BY ACTUAL BENCHMARK OUTPUT.

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]
#![allow(dead_code)]

use frame_support::weights::Weight;
use core::marker::PhantomData;

/// Weight functions needed for `pallet_opf`.
pub trait WeightInfo {
	fn register_project() -> Weight;
	fn manage_project_info() -> Weight;
	fn unregister_project() -> Weight;
	fn remove_automatic_forwarding() -> Weight;
	fn on_poll_base() -> Weight;
	fn on_poll_end_round() -> Weight;
	fn on_poll_new_round() -> Weight;
	fn on_poll_on_idle_forward_votes(n: u32) -> Weight;
}

/// Default implementation for tests and as a fallback.
impl WeightInfo for () {
	fn register_project() -> Weight { Weight::zero() }
	fn manage_project_info() -> Weight { Weight::zero() }
	fn unregister_project() -> Weight { Weight::zero() }
	fn remove_automatic_forwarding() -> Weight { Weight::zero() }
	fn on_poll_base() -> Weight { Weight::zero() }
	fn on_poll_end_round() -> Weight { Weight::zero() }
	fn on_poll_new_round() -> Weight { Weight::zero() }
	fn on_poll_on_idle_forward_votes(_n: u32) -> Weight { Weight::zero() }
}

/// Weights for `pallet_opf` using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	fn register_project() -> Weight { Weight::zero() }
	fn manage_project_info() -> Weight { Weight::zero() }
	fn unregister_project() -> Weight { Weight::zero() }
	fn remove_automatic_forwarding() -> Weight { Weight::zero() }
	fn on_poll_base() -> Weight { Weight::zero() }
	fn on_poll_end_round() -> Weight { Weight::zero() }
	fn on_poll_new_round() -> Weight { Weight::zero() }
	fn on_poll_on_idle_forward_votes(_n: u32) -> Weight { Weight::zero() }
}
