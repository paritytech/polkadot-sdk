// This file is part of Substrate.

// Copyright (C) Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for `pallet_contracts`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 32.0.0
//! DATE: 2024-05-16, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `runner-unxyhko3-project-674-concurrent-0`, CPU: `Intel(R) Xeon(R) CPU @ 2.60GHz`
//! WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: `1024`

// Executed Command:
// target/production/substrate-node
// benchmark
// pallet
// --steps=50
// --repeat=20
// --extrinsic=*
// --wasm-execution=compiled
// --heap-pages=4096
// --json-file=/builds/parity/mirrors/polkadot-sdk/.git/.artifacts/bench.json
// --pallet=pallet_contracts
// --chain=dev
// --header=./substrate/HEADER-APACHE2
// --output=./substrate/frame/contracts/src/weights.rs
// --template=./substrate/.maintain/frame-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for `pallet_contracts`.
pub trait WeightInfo {
	fn on_process_deletion_queue_batch() -> Weight;
	fn on_initialize_per_trie_key(k: u32, ) -> Weight;
	fn v9_migration_step(c: u32, ) -> Weight;
	fn v10_migration_step() -> Weight;
	fn v11_migration_step(k: u32, ) -> Weight;
	fn v12_migration_step(c: u32, ) -> Weight;
	fn v13_migration_step() -> Weight;
	fn v14_migration_step() -> Weight;
	fn v15_migration_step() -> Weight;
	fn v16_migration_step() -> Weight;
	fn migration_noop() -> Weight;
	fn migrate() -> Weight;
	fn on_runtime_upgrade_noop() -> Weight;
	fn on_runtime_upgrade_in_progress() -> Weight;
	fn on_runtime_upgrade() -> Weight;
	fn call_with_code_per_byte(c: u32, ) -> Weight;
	fn instantiate_with_code(c: u32, i: u32, s: u32, ) -> Weight;
	fn instantiate(i: u32, s: u32, ) -> Weight;
	fn call() -> Weight;
	fn upload_code_determinism_enforced(c: u32, ) -> Weight;
	fn upload_code_determinism_relaxed(c: u32, ) -> Weight;
	fn remove_code() -> Weight;
	fn set_code() -> Weight;
	fn seal_caller(r: u32, ) -> Weight;
	fn seal_is_contract(r: u32, ) -> Weight;
	fn seal_code_hash(r: u32, ) -> Weight;
	fn seal_own_code_hash(r: u32, ) -> Weight;
	fn seal_caller_is_origin(r: u32, ) -> Weight;
	fn seal_caller_is_root(r: u32, ) -> Weight;
	fn seal_address(r: u32, ) -> Weight;
	fn seal_gas_left(r: u32, ) -> Weight;
	fn seal_balance(r: u32, ) -> Weight;
	fn seal_value_transferred(r: u32, ) -> Weight;
	fn seal_minimum_balance(r: u32, ) -> Weight;
	fn seal_block_number(r: u32, ) -> Weight;
	fn seal_now(r: u32, ) -> Weight;
	fn seal_weight_to_fee(r: u32, ) -> Weight;
	fn seal_input(r: u32, ) -> Weight;
	fn seal_input_per_byte(n: u32, ) -> Weight;
	fn seal_return(r: u32, ) -> Weight;
	fn seal_return_per_byte(n: u32, ) -> Weight;
	fn seal_terminate(r: u32, ) -> Weight;
	fn seal_random(r: u32, ) -> Weight;
	fn seal_deposit_event(r: u32, ) -> Weight;
	fn seal_deposit_event_per_topic_and_byte(t: u32, n: u32, ) -> Weight;
	fn seal_debug_message(r: u32, ) -> Weight;
	fn seal_debug_message_per_byte(i: u32, ) -> Weight;
	fn seal_set_storage(r: u32, ) -> Weight;
	fn seal_set_storage_per_new_byte(n: u32, ) -> Weight;
	fn seal_set_storage_per_old_byte(n: u32, ) -> Weight;
	fn seal_clear_storage(r: u32, ) -> Weight;
	fn seal_clear_storage_per_byte(n: u32, ) -> Weight;
	fn seal_get_storage(r: u32, ) -> Weight;
	fn seal_get_storage_per_byte(n: u32, ) -> Weight;
	fn seal_contains_storage(r: u32, ) -> Weight;
	fn seal_contains_storage_per_byte(n: u32, ) -> Weight;
	fn seal_take_storage(r: u32, ) -> Weight;
	fn seal_take_storage_per_byte(n: u32, ) -> Weight;
	fn seal_transfer(r: u32, ) -> Weight;
	fn seal_call(r: u32, ) -> Weight;
	fn seal_delegate_call(r: u32, ) -> Weight;
	fn seal_call_per_transfer_clone_byte(t: u32, c: u32, ) -> Weight;
	fn seal_instantiate(r: u32, ) -> Weight;
	fn seal_instantiate_per_transfer_input_salt_byte(t: u32, i: u32, s: u32, ) -> Weight;
	fn seal_hash_sha2_256(r: u32, ) -> Weight;
	fn seal_hash_sha2_256_per_byte(n: u32, ) -> Weight;
	fn seal_hash_keccak_256(r: u32, ) -> Weight;
	fn seal_hash_keccak_256_per_byte(n: u32, ) -> Weight;
	fn seal_hash_blake2_256(r: u32, ) -> Weight;
	fn seal_hash_blake2_256_per_byte(n: u32, ) -> Weight;
	fn seal_hash_blake2_128(r: u32, ) -> Weight;
	fn seal_hash_blake2_128_per_byte(n: u32, ) -> Weight;
	fn seal_sr25519_verify_per_byte(n: u32, ) -> Weight;
	fn seal_sr25519_verify(r: u32, ) -> Weight;
	fn seal_ecdsa_recover(r: u32, ) -> Weight;
	fn seal_ecdsa_to_eth_address(r: u32, ) -> Weight;
	fn seal_set_code_hash(r: u32, ) -> Weight;
	fn lock_delegate_dependency(r: u32, ) -> Weight;
	fn unlock_delegate_dependency(r: u32, ) -> Weight;
	fn seal_reentrance_count(r: u32, ) -> Weight;
	fn seal_account_reentrance_count(r: u32, ) -> Weight;
	fn seal_instantiation_nonce(r: u32, ) -> Weight;
	fn instr_i64_load_store(r: u32, ) -> Weight;
}

/// Weights for `pallet_contracts` using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `Contracts::DeletionQueueCounter` (r:1 w:0)
	/// Proof: `Contracts::DeletionQueueCounter` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	fn on_process_deletion_queue_batch() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `142`
		//  Estimated: `1627`
		// Minimum execution time: 2_002_000 picoseconds.
		Weight::from_parts(2_193_000, 1627)
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `k` is `[0, 1024]`.
	fn on_initialize_per_trie_key(k: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `452 + k * (69 ±0)`
		//  Estimated: `442 + k * (70 ±0)`
		// Minimum execution time: 12_339_000 picoseconds.
		Weight::from_parts(12_682_000, 442)
			// Standard Error: 1_302
			.saturating_add(Weight::from_parts(1_163_234, 0).saturating_mul(k.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(k.into())))
			.saturating_add(T::DbWeight::get().writes(2_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(k.into())))
			.saturating_add(Weight::from_parts(0, 70).saturating_mul(k.into()))
	}
	/// Storage: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc553022fca90611ba8b7942f8bdb3b97f6580` (r:2 w:1)
	/// Proof: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc553022fca90611ba8b7942f8bdb3b97f6580` (r:2 w:1)
	/// The range of component `c` is `[0, 125952]`.
	fn v9_migration_step(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `211 + c * (1 ±0)`
		//  Estimated: `6149 + c * (1 ±0)`
		// Minimum execution time: 8_145_000 picoseconds.
		Weight::from_parts(8_747_247, 6149)
			// Standard Error: 1
			.saturating_add(Weight::from_parts(1_154, 0).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(c.into()))
	}
	/// Storage: `Contracts::ContractInfoOf` (r:2 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:0)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	fn v10_migration_step() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `510`
		//  Estimated: `6450`
		// Minimum execution time: 16_950_000 picoseconds.
		Weight::from_parts(17_498_000, 6450)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Contracts::DeletionQueue` (r:1 w:1025)
	/// Proof: `Contracts::DeletionQueue` (`max_values`: None, `max_size`: Some(142), added: 2617, mode: `Measured`)
	/// Storage: `Contracts::DeletionQueueCounter` (r:0 w:1)
	/// Proof: `Contracts::DeletionQueueCounter` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// The range of component `k` is `[0, 1024]`.
	fn v11_migration_step(k: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `171 + k * (1 ±0)`
		//  Estimated: `3635 + k * (1 ±0)`
		// Minimum execution time: 3_431_000 picoseconds.
		Weight::from_parts(2_161_027, 3635)
			// Standard Error: 949
			.saturating_add(Weight::from_parts(1_219_406, 0).saturating_mul(k.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(k.into())))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(k.into()))
	}
	/// Storage: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc553053f13fd319a03c211337c76e0fe776df` (r:2 w:0)
	/// Proof: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc553053f13fd319a03c211337c76e0fe776df` (r:2 w:0)
	/// Storage: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc553022fca90611ba8b7942f8bdb3b97f6580` (r:1 w:1)
	/// Proof: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc553022fca90611ba8b7942f8bdb3b97f6580` (r:1 w:1)
	/// Storage: `System::Account` (r:1 w:0)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:0 w:1)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// The range of component `c` is `[0, 125952]`.
	fn v12_migration_step(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `325 + c * (1 ±0)`
		//  Estimated: `6263 + c * (1 ±0)`
		// Minimum execution time: 16_384_000 picoseconds.
		Weight::from_parts(16_741_331, 6263)
			// Standard Error: 1
			.saturating_add(Weight::from_parts(375, 0).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(c.into()))
	}
	/// Storage: `Contracts::ContractInfoOf` (r:2 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	fn v13_migration_step() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `440`
		//  Estimated: `6380`
		// Minimum execution time: 12_529_000 picoseconds.
		Weight::from_parts(13_319_000, 6380)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Contracts::CodeInfoOf` (r:2 w:0)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:0)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `Measured`)
	fn v14_migration_step() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `352`
		//  Estimated: `6292`
		// Minimum execution time: 47_462_000 picoseconds.
		Weight::from_parts(48_784_000, 6292)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Contracts::ContractInfoOf` (r:2 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `System::Account` (r:2 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	fn v15_migration_step() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `594`
		//  Estimated: `6534`
		// Minimum execution time: 55_712_000 picoseconds.
		Weight::from_parts(58_629_000, 6534)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `Contracts::ContractInfoOf` (r:2 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	fn v16_migration_step() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `409`
		//  Estimated: `6349`
		// Minimum execution time: 11_992_000 picoseconds.
		Weight::from_parts(12_686_000, 6349)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:1)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	fn migration_noop() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `142`
		//  Estimated: `1627`
		// Minimum execution time: 2_498_000 picoseconds.
		Weight::from_parts(2_594_000, 1627)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:1)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc55304e7b9012096b41c4eb3aaf947f6ea429` (r:1 w:1)
	/// Proof: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc55304e7b9012096b41c4eb3aaf947f6ea429` (r:1 w:1)
	fn migrate() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `166`
		//  Estimated: `3631`
		// Minimum execution time: 12_179_000 picoseconds.
		Weight::from_parts(12_805_000, 3631)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc55304e7b9012096b41c4eb3aaf947f6ea429` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc55304e7b9012096b41c4eb3aaf947f6ea429` (r:1 w:0)
	fn on_runtime_upgrade_noop() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `142`
		//  Estimated: `3607`
		// Minimum execution time: 4_695_000 picoseconds.
		Weight::from_parts(5_105_000, 3607)
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
	/// Storage: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc55304e7b9012096b41c4eb3aaf947f6ea429` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc55304e7b9012096b41c4eb3aaf947f6ea429` (r:1 w:0)
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	fn on_runtime_upgrade_in_progress() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `167`
		//  Estimated: `3632`
		// Minimum execution time: 6_223_000 picoseconds.
		Weight::from_parts(6_509_000, 3632)
			.saturating_add(T::DbWeight::get().reads(2_u64))
	}
	/// Storage: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc55304e7b9012096b41c4eb3aaf947f6ea429` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc55304e7b9012096b41c4eb3aaf947f6ea429` (r:1 w:0)
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:1)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	fn on_runtime_upgrade() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `142`
		//  Estimated: `3607`
		// Minimum execution time: 6_073_000 picoseconds.
		Weight::from_parts(6_524_000, 3607)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:0)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:2 w:2)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `c` is `[0, 125952]`.
	fn call_with_code_per_byte(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `801 + c * (1 ±0)`
		//  Estimated: `6739 + c * (1 ±0)`
		// Minimum execution time: 289_627_000 picoseconds.
		Weight::from_parts(281_167_857, 6739)
			// Standard Error: 68
			.saturating_add(Weight::from_parts(33_442, 0).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(c.into()))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:1)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:2 w:2)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:3 w:3)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Contracts::Nonce` (r:1 w:1)
	/// Proof: `Contracts::Nonce` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:0 w:1)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// The range of component `c` is `[0, 125952]`.
	/// The range of component `i` is `[0, 1048576]`.
	/// The range of component `s` is `[0, 1048576]`.
	fn instantiate_with_code(c: u32, i: u32, s: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `323`
		//  Estimated: `8737`
		// Minimum execution time: 3_829_638_000 picoseconds.
		Weight::from_parts(744_994_885, 8737)
			// Standard Error: 165
			.saturating_add(Weight::from_parts(68_083, 0).saturating_mul(c.into()))
			// Standard Error: 19
			.saturating_add(Weight::from_parts(1_484, 0).saturating_mul(i.into()))
			// Standard Error: 19
			.saturating_add(Weight::from_parts(1_581, 0).saturating_mul(s.into()))
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(10_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:1)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `Contracts::Nonce` (r:1 w:1)
	/// Proof: `Contracts::Nonce` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:2 w:2)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `Measured`)
	/// The range of component `i` is `[0, 1048576]`.
	/// The range of component `s` is `[0, 1048576]`.
	fn instantiate(i: u32, s: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `560`
		//  Estimated: `6504`
		// Minimum execution time: 1_960_218_000 picoseconds.
		Weight::from_parts(1_976_273_000, 6504)
			// Standard Error: 25
			.saturating_add(Weight::from_parts(866, 0).saturating_mul(i.into()))
			// Standard Error: 25
			.saturating_add(Weight::from_parts(824, 0).saturating_mul(s.into()))
			.saturating_add(T::DbWeight::get().reads(10_u64))
			.saturating_add(T::DbWeight::get().writes(7_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:0)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:2 w:2)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn call() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `826`
		//  Estimated: `6766`
		// Minimum execution time: 200_542_000 picoseconds.
		Weight::from_parts(209_713_000, 6766)
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:1)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:1 w:1)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:0 w:1)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// The range of component `c` is `[0, 125952]`.
	fn upload_code_determinism_enforced(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `142`
		//  Estimated: `3607`
		// Minimum execution time: 258_375_000 picoseconds.
		Weight::from_parts(271_214_455, 3607)
			// Standard Error: 61
			.saturating_add(Weight::from_parts(32_587, 0).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:1)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:1 w:1)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:0 w:1)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// The range of component `c` is `[0, 125952]`.
	fn upload_code_determinism_relaxed(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `142`
		//  Estimated: `3607`
		// Minimum execution time: 279_363_000 picoseconds.
		Weight::from_parts(257_721_413, 3607)
			// Standard Error: 81
			.saturating_add(Weight::from_parts(33_850, 0).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:1)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:1 w:1)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:0 w:1)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	fn remove_code() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `315`
		//  Estimated: `3780`
		// Minimum execution time: 45_096_000 picoseconds.
		Weight::from_parts(46_661_000, 3780)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:2 w:2)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:3 w:3)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn set_code() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `552`
		//  Estimated: `8967`
		// Minimum execution time: 34_260_000 picoseconds.
		Weight::from_parts(35_761_000, 8967)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_caller(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_265_000 picoseconds.
		Weight::from_parts(10_174_088, 0)
			// Standard Error: 275
			.saturating_add(Weight::from_parts(271_791, 0).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::ContractInfoOf` (r:1600 w:0)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_is_contract(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `509 + r * (77 ±0)`
		//  Estimated: `1467 + r * (2552 ±0)`
		// Minimum execution time: 10_498_000 picoseconds.
		Weight::from_parts(10_551_000, 1467)
			// Standard Error: 5_538
			.saturating_add(Weight::from_parts(3_269_462, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2552).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::ContractInfoOf` (r:1600 w:0)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_code_hash(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `517 + r * (170 ±0)`
		//  Estimated: `1468 + r * (2645 ±0)`
		// Minimum execution time: 10_289_000 picoseconds.
		Weight::from_parts(10_469_000, 1468)
			// Standard Error: 5_674
			.saturating_add(Weight::from_parts(4_105_274, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2645).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_own_code_hash(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_769_000 picoseconds.
		Weight::from_parts(10_389_944, 0)
			// Standard Error: 240
			.saturating_add(Weight::from_parts(350_466, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_caller_is_origin(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_443_000 picoseconds.
		Weight::from_parts(11_651_820, 0)
			// Standard Error: 91
			.saturating_add(Weight::from_parts(100_579, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_caller_is_root(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_474_000 picoseconds.
		Weight::from_parts(11_313_654, 0)
			// Standard Error: 103
			.saturating_add(Weight::from_parts(85_902, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_address(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_360_000 picoseconds.
		Weight::from_parts(11_283_384, 0)
			// Standard Error: 163
			.saturating_add(Weight::from_parts(253_111, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_gas_left(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_289_000 picoseconds.
		Weight::from_parts(10_747_872, 0)
			// Standard Error: 197
			.saturating_add(Weight::from_parts(299_097, 0).saturating_mul(r.into()))
	}
	/// Storage: `System::Account` (r:1 w:0)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_balance(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `140`
		//  Estimated: `3599`
		// Minimum execution time: 10_368_000 picoseconds.
		Weight::from_parts(29_685_372, 3599)
			// Standard Error: 1_202
			.saturating_add(Weight::from_parts(1_517_645, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_value_transferred(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_528_000 picoseconds.
		Weight::from_parts(11_653_603, 0)
			// Standard Error: 203
			.saturating_add(Weight::from_parts(241_937, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_minimum_balance(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_385_000 picoseconds.
		Weight::from_parts(11_483_212, 0)
			// Standard Error: 227
			.saturating_add(Weight::from_parts(248_076, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_block_number(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_341_000 picoseconds.
		Weight::from_parts(12_055_382, 0)
			// Standard Error: 1_231
			.saturating_add(Weight::from_parts(249_662, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_now(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_467_000 picoseconds.
		Weight::from_parts(10_579_667, 0)
			// Standard Error: 247
			.saturating_add(Weight::from_parts(246_711, 0).saturating_mul(r.into()))
	}
	/// Storage: `TransactionPayment::NextFeeMultiplier` (r:1 w:0)
	/// Proof: `TransactionPayment::NextFeeMultiplier` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_weight_to_fee(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `67`
		//  Estimated: `1552`
		// Minimum execution time: 10_293_000 picoseconds.
		Weight::from_parts(18_229_738, 1552)
			// Standard Error: 452
			.saturating_add(Weight::from_parts(655_277, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_input(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_355_000 picoseconds.
		Weight::from_parts(11_641_920, 0)
			// Standard Error: 166
			.saturating_add(Weight::from_parts(168_271, 0).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:0)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:0)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:2 w:2)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_input_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `869`
		//  Estimated: `6809`
		// Minimum execution time: 268_424_000 picoseconds.
		Weight::from_parts(136_261_773, 6809)
			// Standard Error: 16
			.saturating_add(Weight::from_parts(1_373, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// The range of component `r` is `[0, 1]`.
	fn seal_return(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_044_000 picoseconds.
		Weight::from_parts(10_550_491, 0)
			// Standard Error: 20_456
			.saturating_add(Weight::from_parts(925_808, 0).saturating_mul(r.into()))
	}
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_return_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 11_361_000 picoseconds.
		Weight::from_parts(11_935_556, 0)
			// Standard Error: 0
			.saturating_add(Weight::from_parts(315, 0).saturating_mul(n.into()))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `System::Account` (r:3 w:3)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:33 w:33)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `Contracts::DeletionQueueCounter` (r:1 w:1)
	/// Proof: `Contracts::DeletionQueueCounter` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:4 w:4)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `Measured`)
	/// Storage: `Contracts::DeletionQueue` (r:0 w:1)
	/// Proof: `Contracts::DeletionQueue` (`max_values`: None, `max_size`: Some(142), added: 2617, mode: `Measured`)
	/// The range of component `r` is `[0, 1]`.
	fn seal_terminate(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4802 + r * (2121 ±0)`
		//  Estimated: `10742 + r * (81321 ±0)`
		// Minimum execution time: 293_793_000 picoseconds.
		Weight::from_parts(314_285_185, 10742)
			// Standard Error: 808_383
			.saturating_add(Weight::from_parts(256_215_014, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().reads((38_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes(3_u64))
			.saturating_add(T::DbWeight::get().writes((41_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 81321).saturating_mul(r.into()))
	}
	/// Storage: `RandomnessCollectiveFlip::RandomMaterial` (r:1 w:0)
	/// Proof: `RandomnessCollectiveFlip::RandomMaterial` (`max_values`: Some(1), `max_size`: Some(2594), added: 3089, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_random(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `76`
		//  Estimated: `1561`
		// Minimum execution time: 10_323_000 picoseconds.
		Weight::from_parts(10_996_645, 1561)
			// Standard Error: 566
			.saturating_add(Weight::from_parts(1_133_870, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_deposit_event(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_122_000 picoseconds.
		Weight::from_parts(17_368_451, 0)
			// Standard Error: 679
			.saturating_add(Weight::from_parts(1_660_129, 0).saturating_mul(r.into()))
	}
	/// Storage: `System::EventTopics` (r:4 w:4)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `t` is `[0, 4]`.
	/// The range of component `n` is `[0, 16384]`.
	fn seal_deposit_event_per_topic_and_byte(t: u32, n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `990 + t * (2475 ±0)`
		// Minimum execution time: 24_515_000 picoseconds.
		Weight::from_parts(16_807_493, 990)
			// Standard Error: 13_923
			.saturating_add(Weight::from_parts(2_315_122, 0).saturating_mul(t.into()))
			// Standard Error: 3
			.saturating_add(Weight::from_parts(573, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(t.into())))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(t.into())))
			.saturating_add(Weight::from_parts(0, 2475).saturating_mul(t.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_debug_message(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 9_596_000 picoseconds.
		Weight::from_parts(9_113_960, 0)
			// Standard Error: 139
			.saturating_add(Weight::from_parts(112_197, 0).saturating_mul(r.into()))
	}
	/// The range of component `i` is `[0, 1048576]`.
	fn seal_debug_message_per_byte(i: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 11_260_000 picoseconds.
		Weight::from_parts(11_341_000, 0)
			// Standard Error: 8
			.saturating_add(Weight::from_parts(984, 0).saturating_mul(i.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `r` is `[0, 800]`.
	fn seal_set_storage(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `108 + r * (150 ±0)`
		//  Estimated: `105 + r * (151 ±0)`
		// Minimum execution time: 10_660_000 picoseconds.
		Weight::from_parts(10_762_000, 105)
			// Standard Error: 7_920
			.saturating_add(Weight::from_parts(5_122_380, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 151).saturating_mul(r.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_set_storage_per_new_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `245`
		//  Estimated: `245`
		// Minimum execution time: 19_446_000 picoseconds.
		Weight::from_parts(20_166_940, 245)
			// Standard Error: 2
			.saturating_add(Weight::from_parts(287, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_set_storage_per_old_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `248 + n * (1 ±0)`
		//  Estimated: `248 + n * (1 ±0)`
		// Minimum execution time: 19_249_000 picoseconds.
		Weight::from_parts(20_875_560, 248)
			// Standard Error: 2
			.saturating_add(Weight::from_parts(73, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(n.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `r` is `[0, 800]`.
	fn seal_clear_storage(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `108 + r * (150 ±0)`
		//  Estimated: `105 + r * (151 ±0)`
		// Minimum execution time: 10_477_000 picoseconds.
		Weight::from_parts(10_633_000, 105)
			// Standard Error: 8_552
			.saturating_add(Weight::from_parts(5_159_505, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 151).saturating_mul(r.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_clear_storage_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `248 + n * (1 ±0)`
		//  Estimated: `248 + n * (1 ±0)`
		// Minimum execution time: 19_265_000 picoseconds.
		Weight::from_parts(20_699_861, 248)
			// Standard Error: 2
			.saturating_add(Weight::from_parts(77, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(n.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `r` is `[0, 800]`.
	fn seal_get_storage(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `108 + r * (150 ±0)`
		//  Estimated: `105 + r * (151 ±0)`
		// Minimum execution time: 10_336_000 picoseconds.
		Weight::from_parts(10_466_000, 105)
			// Standard Error: 7_699
			.saturating_add(Weight::from_parts(4_542_224, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 151).saturating_mul(r.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_get_storage_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `248 + n * (1 ±0)`
		//  Estimated: `248 + n * (1 ±0)`
		// Minimum execution time: 18_513_000 picoseconds.
		Weight::from_parts(20_357_236, 248)
			// Standard Error: 3
			.saturating_add(Weight::from_parts(588, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(n.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `r` is `[0, 800]`.
	fn seal_contains_storage(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `108 + r * (150 ±0)`
		//  Estimated: `105 + r * (151 ±0)`
		// Minimum execution time: 10_432_000 picoseconds.
		Weight::from_parts(10_658_000, 105)
			// Standard Error: 7_129
			.saturating_add(Weight::from_parts(4_423_298, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 151).saturating_mul(r.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_contains_storage_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `248 + n * (1 ±0)`
		//  Estimated: `248 + n * (1 ±0)`
		// Minimum execution time: 17_663_000 picoseconds.
		Weight::from_parts(19_107_828, 248)
			// Standard Error: 2
			.saturating_add(Weight::from_parts(86, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(n.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `r` is `[0, 800]`.
	fn seal_take_storage(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `108 + r * (150 ±0)`
		//  Estimated: `105 + r * (151 ±0)`
		// Minimum execution time: 10_254_000 picoseconds.
		Weight::from_parts(10_332_000, 105)
			// Standard Error: 9_485
			.saturating_add(Weight::from_parts(5_242_433, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 151).saturating_mul(r.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_take_storage_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `248 + n * (1 ±0)`
		//  Estimated: `248 + n * (1 ±0)`
		// Minimum execution time: 19_410_000 picoseconds.
		Weight::from_parts(21_347_311, 248)
			// Standard Error: 3
			.saturating_add(Weight::from_parts(607, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(n.into()))
	}
	/// Storage: `System::Account` (r:1601 w:1601)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_transfer(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `770`
		//  Estimated: `4221 + r * (2475 ±0)`
		// Minimum execution time: 10_365_000 picoseconds.
		Weight::from_parts(10_514_000, 4221)
			// Standard Error: 18_360
			.saturating_add(Weight::from_parts(33_433_850, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes(1_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2475).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::ContractInfoOf` (r:800 w:801)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:0)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:801 w:801)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `r` is `[0, 800]`.
	fn seal_call(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `517 + r * (170 ±0)`
		//  Estimated: `3985 + r * (2646 ±0)`
		// Minimum execution time: 10_332_000 picoseconds.
		Weight::from_parts(10_424_000, 3985)
			// Standard Error: 117_754
			.saturating_add(Weight::from_parts(242_191_645, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes(2_u64))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2646).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::CodeInfoOf` (r:735 w:0)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:735 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:736 w:736)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:0 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// The range of component `r` is `[0, 800]`.
	fn seal_delegate_call(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0 + r * (527 ±0)`
		//  Estimated: `6444 + r * (2583 ±10)`
		// Minimum execution time: 10_550_000 picoseconds.
		Weight::from_parts(10_667_000, 6444)
			// Standard Error: 147_918
			.saturating_add(Weight::from_parts(242_824_174, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads((3_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2583).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:2)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:0)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:2 w:2)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `t` is `[0, 1]`.
	/// The range of component `c` is `[0, 1048576]`.
	fn seal_call_per_transfer_clone_byte(t: u32, c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `696 + t * (277 ±0)`
		//  Estimated: `6636 + t * (3457 ±0)`
		// Minimum execution time: 213_206_000 picoseconds.
		Weight::from_parts(120_511_970, 6636)
			// Standard Error: 2_501_856
			.saturating_add(Weight::from_parts(40_016_645, 0).saturating_mul(t.into()))
			// Standard Error: 3
			.saturating_add(Weight::from_parts(420, 0).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(t.into())))
			.saturating_add(T::DbWeight::get().writes(4_u64))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(t.into())))
			.saturating_add(Weight::from_parts(0, 3457).saturating_mul(t.into()))
	}
	/// Storage: `Contracts::CodeInfoOf` (r:800 w:800)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:800 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `Contracts::Nonce` (r:1 w:0)
	/// Proof: `Contracts::Nonce` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:800 w:801)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `System::Account` (r:802 w:802)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:801 w:801)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `r` is `[1, 800]`.
	fn seal_instantiate(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1094 + r * (188 ±0)`
		//  Estimated: `6987 + r * (2664 ±0)`
		// Minimum execution time: 334_708_000 picoseconds.
		Weight::from_parts(346_676_000, 6987)
			// Standard Error: 236_074
			.saturating_add(Weight::from_parts(330_734_734, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().reads((5_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes(4_u64))
			.saturating_add(T::DbWeight::get().writes((4_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2664).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:1)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `Contracts::Nonce` (r:1 w:0)
	/// Proof: `Contracts::Nonce` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:2)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `System::Account` (r:3 w:3)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:2 w:2)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `t` is `[0, 1]`.
	/// The range of component `i` is `[0, 983040]`.
	/// The range of component `s` is `[0, 983040]`.
	fn seal_instantiate_per_transfer_input_salt_byte(t: u32, i: u32, s: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `757 + t * (104 ±0)`
		//  Estimated: `6716 + t * (2549 ±1)`
		// Minimum execution time: 1_854_462_000 picoseconds.
		Weight::from_parts(855_253_052, 6716)
			// Standard Error: 13_502_046
			.saturating_add(Weight::from_parts(20_015_409, 0).saturating_mul(t.into()))
			// Standard Error: 21
			.saturating_add(Weight::from_parts(1_060, 0).saturating_mul(i.into()))
			// Standard Error: 21
			.saturating_add(Weight::from_parts(1_201, 0).saturating_mul(s.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(t.into())))
			.saturating_add(T::DbWeight::get().writes(7_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(t.into())))
			.saturating_add(Weight::from_parts(0, 2549).saturating_mul(t.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_hash_sha2_256(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_384_000 picoseconds.
		Weight::from_parts(10_319_961, 0)
			// Standard Error: 293
			.saturating_add(Weight::from_parts(267_788, 0).saturating_mul(r.into()))
	}
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_hash_sha2_256_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 11_991_000 picoseconds.
		Weight::from_parts(792_256, 0)
			// Standard Error: 1
			.saturating_add(Weight::from_parts(1_071, 0).saturating_mul(n.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_hash_keccak_256(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_210_000 picoseconds.
		Weight::from_parts(8_251_750, 0)
			// Standard Error: 584
			.saturating_add(Weight::from_parts(662_961, 0).saturating_mul(r.into()))
	}
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_hash_keccak_256_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 11_994_000 picoseconds.
		Weight::from_parts(6_532_799, 0)
			// Standard Error: 2
			.saturating_add(Weight::from_parts(3_351, 0).saturating_mul(n.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_hash_blake2_256(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_209_000 picoseconds.
		Weight::from_parts(10_895_450, 0)
			// Standard Error: 195
			.saturating_add(Weight::from_parts(328_195, 0).saturating_mul(r.into()))
	}
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_hash_blake2_256_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 11_493_000 picoseconds.
		Weight::from_parts(4_721_812, 0)
			// Standard Error: 0
			.saturating_add(Weight::from_parts(1_195, 0).saturating_mul(n.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_hash_blake2_128(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_134_000 picoseconds.
		Weight::from_parts(11_712_472, 0)
			// Standard Error: 316
			.saturating_add(Weight::from_parts(335_912, 0).saturating_mul(r.into()))
	}
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_hash_blake2_128_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 11_448_000 picoseconds.
		Weight::from_parts(1_407_440, 0)
			// Standard Error: 1
			.saturating_add(Weight::from_parts(1_205, 0).saturating_mul(n.into()))
	}
	/// The range of component `n` is `[0, 125697]`.
	fn seal_sr25519_verify_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 54_644_000 picoseconds.
		Weight::from_parts(55_793_413, 0)
			// Standard Error: 11
			.saturating_add(Weight::from_parts(4_511, 0).saturating_mul(n.into()))
	}
	/// The range of component `r` is `[0, 160]`.
	fn seal_sr25519_verify(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_378_000 picoseconds.
		Weight::from_parts(25_185_485, 0)
			// Standard Error: 8_828
			.saturating_add(Weight::from_parts(41_091_818, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 160]`.
	fn seal_ecdsa_recover(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_371_000 picoseconds.
		Weight::from_parts(35_350_533, 0)
			// Standard Error: 9_805
			.saturating_add(Weight::from_parts(45_466_060, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 160]`.
	fn seal_ecdsa_to_eth_address(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_407_000 picoseconds.
		Weight::from_parts(14_375_492, 0)
			// Standard Error: 4_036
			.saturating_add(Weight::from_parts(11_666_630, 0).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::CodeInfoOf` (r:1536 w:1536)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1535 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:1537 w:1537)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_set_code_hash(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0 + r * (926 ±0)`
		//  Estimated: `8966 + r * (3047 ±10)`
		// Minimum execution time: 10_566_000 picoseconds.
		Weight::from_parts(10_627_000, 8966)
			// Standard Error: 46_429
			.saturating_add(Weight::from_parts(22_435_893, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads((3_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 3047).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::CodeInfoOf` (r:32 w:32)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// The range of component `r` is `[0, 32]`.
	fn lock_delegate_dependency(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `274 + r * (78 ±0)`
		//  Estimated: `1265 + r * (2553 ±0)`
		// Minimum execution time: 10_305_000 picoseconds.
		Weight::from_parts(16_073_202, 1265)
			// Standard Error: 8_841
			.saturating_add(Weight::from_parts(5_125_440, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2553).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::CodeInfoOf` (r:32 w:32)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `MaxEncodedLen`)
	/// The range of component `r` is `[0, 32]`.
	fn unlock_delegate_dependency(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `275 + r * (78 ±0)`
		//  Estimated: `990 + r * (2568 ±0)`
		// Minimum execution time: 10_389_000 picoseconds.
		Weight::from_parts(16_221_879, 990)
			// Standard Error: 9_409
			.saturating_add(Weight::from_parts(4_235_040, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2568).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:0)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:0)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:2 w:2)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_reentrance_count(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `858 + r * (3 ±0)`
		//  Estimated: `6804 + r * (3 ±0)`
		// Minimum execution time: 265_499_000 picoseconds.
		Weight::from_parts(282_172_889, 6804)
			// Standard Error: 442
			.saturating_add(Weight::from_parts(165_070, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
			.saturating_add(Weight::from_parts(0, 3).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_account_reentrance_count(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_367_000 picoseconds.
		Weight::from_parts(13_220_303, 0)
			// Standard Error: 151
			.saturating_add(Weight::from_parts(86_117, 0).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::Nonce` (r:1 w:0)
	/// Proof: `Contracts::Nonce` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_instantiation_nonce(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `219`
		//  Estimated: `1704`
		// Minimum execution time: 10_223_000 picoseconds.
		Weight::from_parts(14_170_002, 1704)
			// Standard Error: 71
			.saturating_add(Weight::from_parts(76_372, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64_load_store(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 754_000 picoseconds.
		Weight::from_parts(1_091_740, 0)
			// Standard Error: 29
			.saturating_add(Weight::from_parts(14_954, 0).saturating_mul(r.into()))
	}
}

// For backwards compatibility and tests.
impl WeightInfo for () {
	/// Storage: `Contracts::DeletionQueueCounter` (r:1 w:0)
	/// Proof: `Contracts::DeletionQueueCounter` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	fn on_process_deletion_queue_batch() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `142`
		//  Estimated: `1627`
		// Minimum execution time: 2_002_000 picoseconds.
		Weight::from_parts(2_193_000, 1627)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `k` is `[0, 1024]`.
	fn on_initialize_per_trie_key(k: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `452 + k * (69 ±0)`
		//  Estimated: `442 + k * (70 ±0)`
		// Minimum execution time: 12_339_000 picoseconds.
		Weight::from_parts(12_682_000, 442)
			// Standard Error: 1_302
			.saturating_add(Weight::from_parts(1_163_234, 0).saturating_mul(k.into()))
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(k.into())))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(k.into())))
			.saturating_add(Weight::from_parts(0, 70).saturating_mul(k.into()))
	}
	/// Storage: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc553022fca90611ba8b7942f8bdb3b97f6580` (r:2 w:1)
	/// Proof: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc553022fca90611ba8b7942f8bdb3b97f6580` (r:2 w:1)
	/// The range of component `c` is `[0, 125952]`.
	fn v9_migration_step(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `211 + c * (1 ±0)`
		//  Estimated: `6149 + c * (1 ±0)`
		// Minimum execution time: 8_145_000 picoseconds.
		Weight::from_parts(8_747_247, 6149)
			// Standard Error: 1
			.saturating_add(Weight::from_parts(1_154, 0).saturating_mul(c.into()))
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(c.into()))
	}
	/// Storage: `Contracts::ContractInfoOf` (r:2 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:0)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	fn v10_migration_step() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `510`
		//  Estimated: `6450`
		// Minimum execution time: 16_950_000 picoseconds.
		Weight::from_parts(17_498_000, 6450)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Contracts::DeletionQueue` (r:1 w:1025)
	/// Proof: `Contracts::DeletionQueue` (`max_values`: None, `max_size`: Some(142), added: 2617, mode: `Measured`)
	/// Storage: `Contracts::DeletionQueueCounter` (r:0 w:1)
	/// Proof: `Contracts::DeletionQueueCounter` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// The range of component `k` is `[0, 1024]`.
	fn v11_migration_step(k: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `171 + k * (1 ±0)`
		//  Estimated: `3635 + k * (1 ±0)`
		// Minimum execution time: 3_431_000 picoseconds.
		Weight::from_parts(2_161_027, 3635)
			// Standard Error: 949
			.saturating_add(Weight::from_parts(1_219_406, 0).saturating_mul(k.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(k.into())))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(k.into()))
	}
	/// Storage: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc553053f13fd319a03c211337c76e0fe776df` (r:2 w:0)
	/// Proof: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc553053f13fd319a03c211337c76e0fe776df` (r:2 w:0)
	/// Storage: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc553022fca90611ba8b7942f8bdb3b97f6580` (r:1 w:1)
	/// Proof: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc553022fca90611ba8b7942f8bdb3b97f6580` (r:1 w:1)
	/// Storage: `System::Account` (r:1 w:0)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:0 w:1)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// The range of component `c` is `[0, 125952]`.
	fn v12_migration_step(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `325 + c * (1 ±0)`
		//  Estimated: `6263 + c * (1 ±0)`
		// Minimum execution time: 16_384_000 picoseconds.
		Weight::from_parts(16_741_331, 6263)
			// Standard Error: 1
			.saturating_add(Weight::from_parts(375, 0).saturating_mul(c.into()))
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(c.into()))
	}
	/// Storage: `Contracts::ContractInfoOf` (r:2 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	fn v13_migration_step() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `440`
		//  Estimated: `6380`
		// Minimum execution time: 12_529_000 picoseconds.
		Weight::from_parts(13_319_000, 6380)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Contracts::CodeInfoOf` (r:2 w:0)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:0)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `Measured`)
	fn v14_migration_step() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `352`
		//  Estimated: `6292`
		// Minimum execution time: 47_462_000 picoseconds.
		Weight::from_parts(48_784_000, 6292)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Contracts::ContractInfoOf` (r:2 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `System::Account` (r:2 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	fn v15_migration_step() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `594`
		//  Estimated: `6534`
		// Minimum execution time: 55_712_000 picoseconds.
		Weight::from_parts(58_629_000, 6534)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `Contracts::ContractInfoOf` (r:2 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	fn v16_migration_step() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `409`
		//  Estimated: `6349`
		// Minimum execution time: 11_992_000 picoseconds.
		Weight::from_parts(12_686_000, 6349)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:1)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	fn migration_noop() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `142`
		//  Estimated: `1627`
		// Minimum execution time: 2_498_000 picoseconds.
		Weight::from_parts(2_594_000, 1627)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:1)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc55304e7b9012096b41c4eb3aaf947f6ea429` (r:1 w:1)
	/// Proof: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc55304e7b9012096b41c4eb3aaf947f6ea429` (r:1 w:1)
	fn migrate() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `166`
		//  Estimated: `3631`
		// Minimum execution time: 12_179_000 picoseconds.
		Weight::from_parts(12_805_000, 3631)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc55304e7b9012096b41c4eb3aaf947f6ea429` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc55304e7b9012096b41c4eb3aaf947f6ea429` (r:1 w:0)
	fn on_runtime_upgrade_noop() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `142`
		//  Estimated: `3607`
		// Minimum execution time: 4_695_000 picoseconds.
		Weight::from_parts(5_105_000, 3607)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
	}
	/// Storage: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc55304e7b9012096b41c4eb3aaf947f6ea429` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc55304e7b9012096b41c4eb3aaf947f6ea429` (r:1 w:0)
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	fn on_runtime_upgrade_in_progress() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `167`
		//  Estimated: `3632`
		// Minimum execution time: 6_223_000 picoseconds.
		Weight::from_parts(6_509_000, 3632)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
	}
	/// Storage: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc55304e7b9012096b41c4eb3aaf947f6ea429` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0x4342193e496fab7ec59d615ed0dc55304e7b9012096b41c4eb3aaf947f6ea429` (r:1 w:0)
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:1)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	fn on_runtime_upgrade() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `142`
		//  Estimated: `3607`
		// Minimum execution time: 6_073_000 picoseconds.
		Weight::from_parts(6_524_000, 3607)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:0)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:2 w:2)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `c` is `[0, 125952]`.
	fn call_with_code_per_byte(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `801 + c * (1 ±0)`
		//  Estimated: `6739 + c * (1 ±0)`
		// Minimum execution time: 289_627_000 picoseconds.
		Weight::from_parts(281_167_857, 6739)
			// Standard Error: 68
			.saturating_add(Weight::from_parts(33_442, 0).saturating_mul(c.into()))
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(c.into()))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:1)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:2 w:2)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:3 w:3)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Contracts::Nonce` (r:1 w:1)
	/// Proof: `Contracts::Nonce` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:0 w:1)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// The range of component `c` is `[0, 125952]`.
	/// The range of component `i` is `[0, 1048576]`.
	/// The range of component `s` is `[0, 1048576]`.
	fn instantiate_with_code(c: u32, i: u32, s: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `323`
		//  Estimated: `8737`
		// Minimum execution time: 3_829_638_000 picoseconds.
		Weight::from_parts(744_994_885, 8737)
			// Standard Error: 165
			.saturating_add(Weight::from_parts(68_083, 0).saturating_mul(c.into()))
			// Standard Error: 19
			.saturating_add(Weight::from_parts(1_484, 0).saturating_mul(i.into()))
			// Standard Error: 19
			.saturating_add(Weight::from_parts(1_581, 0).saturating_mul(s.into()))
			.saturating_add(RocksDbWeight::get().reads(11_u64))
			.saturating_add(RocksDbWeight::get().writes(10_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:1)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `Contracts::Nonce` (r:1 w:1)
	/// Proof: `Contracts::Nonce` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:2 w:2)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `Measured`)
	/// The range of component `i` is `[0, 1048576]`.
	/// The range of component `s` is `[0, 1048576]`.
	fn instantiate(i: u32, s: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `560`
		//  Estimated: `6504`
		// Minimum execution time: 1_960_218_000 picoseconds.
		Weight::from_parts(1_976_273_000, 6504)
			// Standard Error: 25
			.saturating_add(Weight::from_parts(866, 0).saturating_mul(i.into()))
			// Standard Error: 25
			.saturating_add(Weight::from_parts(824, 0).saturating_mul(s.into()))
			.saturating_add(RocksDbWeight::get().reads(10_u64))
			.saturating_add(RocksDbWeight::get().writes(7_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:0)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:2 w:2)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn call() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `826`
		//  Estimated: `6766`
		// Minimum execution time: 200_542_000 picoseconds.
		Weight::from_parts(209_713_000, 6766)
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:1)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:1 w:1)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:0 w:1)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// The range of component `c` is `[0, 125952]`.
	fn upload_code_determinism_enforced(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `142`
		//  Estimated: `3607`
		// Minimum execution time: 258_375_000 picoseconds.
		Weight::from_parts(271_214_455, 3607)
			// Standard Error: 61
			.saturating_add(Weight::from_parts(32_587, 0).saturating_mul(c.into()))
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:1)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:1 w:1)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:0 w:1)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// The range of component `c` is `[0, 125952]`.
	fn upload_code_determinism_relaxed(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `142`
		//  Estimated: `3607`
		// Minimum execution time: 279_363_000 picoseconds.
		Weight::from_parts(257_721_413, 3607)
			// Standard Error: 81
			.saturating_add(Weight::from_parts(33_850, 0).saturating_mul(c.into()))
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:1)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:1 w:1)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:0 w:1)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	fn remove_code() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `315`
		//  Estimated: `3780`
		// Minimum execution time: 45_096_000 picoseconds.
		Weight::from_parts(46_661_000, 3780)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:2 w:2)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:3 w:3)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn set_code() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `552`
		//  Estimated: `8967`
		// Minimum execution time: 34_260_000 picoseconds.
		Weight::from_parts(35_761_000, 8967)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(6_u64))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_caller(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_265_000 picoseconds.
		Weight::from_parts(10_174_088, 0)
			// Standard Error: 275
			.saturating_add(Weight::from_parts(271_791, 0).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::ContractInfoOf` (r:1600 w:0)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_is_contract(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `509 + r * (77 ±0)`
		//  Estimated: `1467 + r * (2552 ±0)`
		// Minimum execution time: 10_498_000 picoseconds.
		Weight::from_parts(10_551_000, 1467)
			// Standard Error: 5_538
			.saturating_add(Weight::from_parts(3_269_462, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2552).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::ContractInfoOf` (r:1600 w:0)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_code_hash(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `517 + r * (170 ±0)`
		//  Estimated: `1468 + r * (2645 ±0)`
		// Minimum execution time: 10_289_000 picoseconds.
		Weight::from_parts(10_469_000, 1468)
			// Standard Error: 5_674
			.saturating_add(Weight::from_parts(4_105_274, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2645).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_own_code_hash(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_769_000 picoseconds.
		Weight::from_parts(10_389_944, 0)
			// Standard Error: 240
			.saturating_add(Weight::from_parts(350_466, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_caller_is_origin(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_443_000 picoseconds.
		Weight::from_parts(11_651_820, 0)
			// Standard Error: 91
			.saturating_add(Weight::from_parts(100_579, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_caller_is_root(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_474_000 picoseconds.
		Weight::from_parts(11_313_654, 0)
			// Standard Error: 103
			.saturating_add(Weight::from_parts(85_902, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_address(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_360_000 picoseconds.
		Weight::from_parts(11_283_384, 0)
			// Standard Error: 163
			.saturating_add(Weight::from_parts(253_111, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_gas_left(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_289_000 picoseconds.
		Weight::from_parts(10_747_872, 0)
			// Standard Error: 197
			.saturating_add(Weight::from_parts(299_097, 0).saturating_mul(r.into()))
	}
	/// Storage: `System::Account` (r:1 w:0)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_balance(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `140`
		//  Estimated: `3599`
		// Minimum execution time: 10_368_000 picoseconds.
		Weight::from_parts(29_685_372, 3599)
			// Standard Error: 1_202
			.saturating_add(Weight::from_parts(1_517_645, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_value_transferred(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_528_000 picoseconds.
		Weight::from_parts(11_653_603, 0)
			// Standard Error: 203
			.saturating_add(Weight::from_parts(241_937, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_minimum_balance(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_385_000 picoseconds.
		Weight::from_parts(11_483_212, 0)
			// Standard Error: 227
			.saturating_add(Weight::from_parts(248_076, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_block_number(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_341_000 picoseconds.
		Weight::from_parts(12_055_382, 0)
			// Standard Error: 1_231
			.saturating_add(Weight::from_parts(249_662, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_now(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_467_000 picoseconds.
		Weight::from_parts(10_579_667, 0)
			// Standard Error: 247
			.saturating_add(Weight::from_parts(246_711, 0).saturating_mul(r.into()))
	}
	/// Storage: `TransactionPayment::NextFeeMultiplier` (r:1 w:0)
	/// Proof: `TransactionPayment::NextFeeMultiplier` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_weight_to_fee(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `67`
		//  Estimated: `1552`
		// Minimum execution time: 10_293_000 picoseconds.
		Weight::from_parts(18_229_738, 1552)
			// Standard Error: 452
			.saturating_add(Weight::from_parts(655_277, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_input(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_355_000 picoseconds.
		Weight::from_parts(11_641_920, 0)
			// Standard Error: 166
			.saturating_add(Weight::from_parts(168_271, 0).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:0)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:0)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:2 w:2)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_input_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `869`
		//  Estimated: `6809`
		// Minimum execution time: 268_424_000 picoseconds.
		Weight::from_parts(136_261_773, 6809)
			// Standard Error: 16
			.saturating_add(Weight::from_parts(1_373, 0).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// The range of component `r` is `[0, 1]`.
	fn seal_return(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_044_000 picoseconds.
		Weight::from_parts(10_550_491, 0)
			// Standard Error: 20_456
			.saturating_add(Weight::from_parts(925_808, 0).saturating_mul(r.into()))
	}
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_return_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 11_361_000 picoseconds.
		Weight::from_parts(11_935_556, 0)
			// Standard Error: 0
			.saturating_add(Weight::from_parts(315, 0).saturating_mul(n.into()))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `System::Account` (r:3 w:3)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:33 w:33)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `Contracts::DeletionQueueCounter` (r:1 w:1)
	/// Proof: `Contracts::DeletionQueueCounter` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:4 w:4)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(193), added: 2668, mode: `Measured`)
	/// Storage: `Contracts::DeletionQueue` (r:0 w:1)
	/// Proof: `Contracts::DeletionQueue` (`max_values`: None, `max_size`: Some(142), added: 2617, mode: `Measured`)
	/// The range of component `r` is `[0, 1]`.
	fn seal_terminate(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4802 + r * (2121 ±0)`
		//  Estimated: `10742 + r * (81321 ±0)`
		// Minimum execution time: 293_793_000 picoseconds.
		Weight::from_parts(314_285_185, 10742)
			// Standard Error: 808_383
			.saturating_add(Weight::from_parts(256_215_014, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().reads((38_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
			.saturating_add(RocksDbWeight::get().writes((41_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 81321).saturating_mul(r.into()))
	}
	/// Storage: `RandomnessCollectiveFlip::RandomMaterial` (r:1 w:0)
	/// Proof: `RandomnessCollectiveFlip::RandomMaterial` (`max_values`: Some(1), `max_size`: Some(2594), added: 3089, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_random(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `76`
		//  Estimated: `1561`
		// Minimum execution time: 10_323_000 picoseconds.
		Weight::from_parts(10_996_645, 1561)
			// Standard Error: 566
			.saturating_add(Weight::from_parts(1_133_870, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_deposit_event(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_122_000 picoseconds.
		Weight::from_parts(17_368_451, 0)
			// Standard Error: 679
			.saturating_add(Weight::from_parts(1_660_129, 0).saturating_mul(r.into()))
	}
	/// Storage: `System::EventTopics` (r:4 w:4)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `t` is `[0, 4]`.
	/// The range of component `n` is `[0, 16384]`.
	fn seal_deposit_event_per_topic_and_byte(t: u32, n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `990 + t * (2475 ±0)`
		// Minimum execution time: 24_515_000 picoseconds.
		Weight::from_parts(16_807_493, 990)
			// Standard Error: 13_923
			.saturating_add(Weight::from_parts(2_315_122, 0).saturating_mul(t.into()))
			// Standard Error: 3
			.saturating_add(Weight::from_parts(573, 0).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(t.into())))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(t.into())))
			.saturating_add(Weight::from_parts(0, 2475).saturating_mul(t.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_debug_message(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 9_596_000 picoseconds.
		Weight::from_parts(9_113_960, 0)
			// Standard Error: 139
			.saturating_add(Weight::from_parts(112_197, 0).saturating_mul(r.into()))
	}
	/// The range of component `i` is `[0, 1048576]`.
	fn seal_debug_message_per_byte(i: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 11_260_000 picoseconds.
		Weight::from_parts(11_341_000, 0)
			// Standard Error: 8
			.saturating_add(Weight::from_parts(984, 0).saturating_mul(i.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `r` is `[0, 800]`.
	fn seal_set_storage(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `108 + r * (150 ±0)`
		//  Estimated: `105 + r * (151 ±0)`
		// Minimum execution time: 10_660_000 picoseconds.
		Weight::from_parts(10_762_000, 105)
			// Standard Error: 7_920
			.saturating_add(Weight::from_parts(5_122_380, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 151).saturating_mul(r.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_set_storage_per_new_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `245`
		//  Estimated: `245`
		// Minimum execution time: 19_446_000 picoseconds.
		Weight::from_parts(20_166_940, 245)
			// Standard Error: 2
			.saturating_add(Weight::from_parts(287, 0).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_set_storage_per_old_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `248 + n * (1 ±0)`
		//  Estimated: `248 + n * (1 ±0)`
		// Minimum execution time: 19_249_000 picoseconds.
		Weight::from_parts(20_875_560, 248)
			// Standard Error: 2
			.saturating_add(Weight::from_parts(73, 0).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(n.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `r` is `[0, 800]`.
	fn seal_clear_storage(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `108 + r * (150 ±0)`
		//  Estimated: `105 + r * (151 ±0)`
		// Minimum execution time: 10_477_000 picoseconds.
		Weight::from_parts(10_633_000, 105)
			// Standard Error: 8_552
			.saturating_add(Weight::from_parts(5_159_505, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 151).saturating_mul(r.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_clear_storage_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `248 + n * (1 ±0)`
		//  Estimated: `248 + n * (1 ±0)`
		// Minimum execution time: 19_265_000 picoseconds.
		Weight::from_parts(20_699_861, 248)
			// Standard Error: 2
			.saturating_add(Weight::from_parts(77, 0).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(n.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `r` is `[0, 800]`.
	fn seal_get_storage(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `108 + r * (150 ±0)`
		//  Estimated: `105 + r * (151 ±0)`
		// Minimum execution time: 10_336_000 picoseconds.
		Weight::from_parts(10_466_000, 105)
			// Standard Error: 7_699
			.saturating_add(Weight::from_parts(4_542_224, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 151).saturating_mul(r.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_get_storage_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `248 + n * (1 ±0)`
		//  Estimated: `248 + n * (1 ±0)`
		// Minimum execution time: 18_513_000 picoseconds.
		Weight::from_parts(20_357_236, 248)
			// Standard Error: 3
			.saturating_add(Weight::from_parts(588, 0).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(n.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `r` is `[0, 800]`.
	fn seal_contains_storage(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `108 + r * (150 ±0)`
		//  Estimated: `105 + r * (151 ±0)`
		// Minimum execution time: 10_432_000 picoseconds.
		Weight::from_parts(10_658_000, 105)
			// Standard Error: 7_129
			.saturating_add(Weight::from_parts(4_423_298, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 151).saturating_mul(r.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_contains_storage_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `248 + n * (1 ±0)`
		//  Estimated: `248 + n * (1 ±0)`
		// Minimum execution time: 17_663_000 picoseconds.
		Weight::from_parts(19_107_828, 248)
			// Standard Error: 2
			.saturating_add(Weight::from_parts(86, 0).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(n.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `r` is `[0, 800]`.
	fn seal_take_storage(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `108 + r * (150 ±0)`
		//  Estimated: `105 + r * (151 ±0)`
		// Minimum execution time: 10_254_000 picoseconds.
		Weight::from_parts(10_332_000, 105)
			// Standard Error: 9_485
			.saturating_add(Weight::from_parts(5_242_433, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 151).saturating_mul(r.into()))
	}
	/// Storage: `Skipped::Metadata` (r:0 w:0)
	/// Proof: `Skipped::Metadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[0, 16384]`.
	fn seal_take_storage_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `248 + n * (1 ±0)`
		//  Estimated: `248 + n * (1 ±0)`
		// Minimum execution time: 19_410_000 picoseconds.
		Weight::from_parts(21_347_311, 248)
			// Standard Error: 3
			.saturating_add(Weight::from_parts(607, 0).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
			.saturating_add(Weight::from_parts(0, 1).saturating_mul(n.into()))
	}
	/// Storage: `System::Account` (r:1601 w:1601)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_transfer(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `770`
		//  Estimated: `4221 + r * (2475 ±0)`
		// Minimum execution time: 10_365_000 picoseconds.
		Weight::from_parts(10_514_000, 4221)
			// Standard Error: 18_360
			.saturating_add(Weight::from_parts(33_433_850, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2475).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::ContractInfoOf` (r:800 w:801)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:0)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:801 w:801)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `r` is `[0, 800]`.
	fn seal_call(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `517 + r * (170 ±0)`
		//  Estimated: `3985 + r * (2646 ±0)`
		// Minimum execution time: 10_332_000 picoseconds.
		Weight::from_parts(10_424_000, 3985)
			// Standard Error: 117_754
			.saturating_add(Weight::from_parts(242_191_645, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().reads((2_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
			.saturating_add(RocksDbWeight::get().writes((2_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2646).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::CodeInfoOf` (r:735 w:0)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:735 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:736 w:736)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:0 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// The range of component `r` is `[0, 800]`.
	fn seal_delegate_call(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0 + r * (527 ±0)`
		//  Estimated: `6444 + r * (2583 ±10)`
		// Minimum execution time: 10_550_000 picoseconds.
		Weight::from_parts(10_667_000, 6444)
			// Standard Error: 147_918
			.saturating_add(Weight::from_parts(242_824_174, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads((3_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2583).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:2)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:0)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:2 w:2)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `t` is `[0, 1]`.
	/// The range of component `c` is `[0, 1048576]`.
	fn seal_call_per_transfer_clone_byte(t: u32, c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `696 + t * (277 ±0)`
		//  Estimated: `6636 + t * (3457 ±0)`
		// Minimum execution time: 213_206_000 picoseconds.
		Weight::from_parts(120_511_970, 6636)
			// Standard Error: 2_501_856
			.saturating_add(Weight::from_parts(40_016_645, 0).saturating_mul(t.into()))
			// Standard Error: 3
			.saturating_add(Weight::from_parts(420, 0).saturating_mul(c.into()))
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().reads((2_u64).saturating_mul(t.into())))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
			.saturating_add(RocksDbWeight::get().writes((2_u64).saturating_mul(t.into())))
			.saturating_add(Weight::from_parts(0, 3457).saturating_mul(t.into()))
	}
	/// Storage: `Contracts::CodeInfoOf` (r:800 w:800)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:800 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `Contracts::Nonce` (r:1 w:0)
	/// Proof: `Contracts::Nonce` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:800 w:801)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `System::Account` (r:802 w:802)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:801 w:801)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `r` is `[1, 800]`.
	fn seal_instantiate(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1094 + r * (188 ±0)`
		//  Estimated: `6987 + r * (2664 ±0)`
		// Minimum execution time: 334_708_000 picoseconds.
		Weight::from_parts(346_676_000, 6987)
			// Standard Error: 236_074
			.saturating_add(Weight::from_parts(330_734_734, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().reads((5_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
			.saturating_add(RocksDbWeight::get().writes((4_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2664).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:1)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `Contracts::Nonce` (r:1 w:0)
	/// Proof: `Contracts::Nonce` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:2)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `System::Account` (r:3 w:3)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:2 w:2)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `t` is `[0, 1]`.
	/// The range of component `i` is `[0, 983040]`.
	/// The range of component `s` is `[0, 983040]`.
	fn seal_instantiate_per_transfer_input_salt_byte(t: u32, i: u32, s: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `757 + t * (104 ±0)`
		//  Estimated: `6716 + t * (2549 ±1)`
		// Minimum execution time: 1_854_462_000 picoseconds.
		Weight::from_parts(855_253_052, 6716)
			// Standard Error: 13_502_046
			.saturating_add(Weight::from_parts(20_015_409, 0).saturating_mul(t.into()))
			// Standard Error: 21
			.saturating_add(Weight::from_parts(1_060, 0).saturating_mul(i.into()))
			// Standard Error: 21
			.saturating_add(Weight::from_parts(1_201, 0).saturating_mul(s.into()))
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(t.into())))
			.saturating_add(RocksDbWeight::get().writes(7_u64))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(t.into())))
			.saturating_add(Weight::from_parts(0, 2549).saturating_mul(t.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_hash_sha2_256(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_384_000 picoseconds.
		Weight::from_parts(10_319_961, 0)
			// Standard Error: 293
			.saturating_add(Weight::from_parts(267_788, 0).saturating_mul(r.into()))
	}
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_hash_sha2_256_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 11_991_000 picoseconds.
		Weight::from_parts(792_256, 0)
			// Standard Error: 1
			.saturating_add(Weight::from_parts(1_071, 0).saturating_mul(n.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_hash_keccak_256(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_210_000 picoseconds.
		Weight::from_parts(8_251_750, 0)
			// Standard Error: 584
			.saturating_add(Weight::from_parts(662_961, 0).saturating_mul(r.into()))
	}
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_hash_keccak_256_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 11_994_000 picoseconds.
		Weight::from_parts(6_532_799, 0)
			// Standard Error: 2
			.saturating_add(Weight::from_parts(3_351, 0).saturating_mul(n.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_hash_blake2_256(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_209_000 picoseconds.
		Weight::from_parts(10_895_450, 0)
			// Standard Error: 195
			.saturating_add(Weight::from_parts(328_195, 0).saturating_mul(r.into()))
	}
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_hash_blake2_256_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 11_493_000 picoseconds.
		Weight::from_parts(4_721_812, 0)
			// Standard Error: 0
			.saturating_add(Weight::from_parts(1_195, 0).saturating_mul(n.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_hash_blake2_128(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_134_000 picoseconds.
		Weight::from_parts(11_712_472, 0)
			// Standard Error: 316
			.saturating_add(Weight::from_parts(335_912, 0).saturating_mul(r.into()))
	}
	/// The range of component `n` is `[0, 1048576]`.
	fn seal_hash_blake2_128_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 11_448_000 picoseconds.
		Weight::from_parts(1_407_440, 0)
			// Standard Error: 1
			.saturating_add(Weight::from_parts(1_205, 0).saturating_mul(n.into()))
	}
	/// The range of component `n` is `[0, 125697]`.
	fn seal_sr25519_verify_per_byte(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 54_644_000 picoseconds.
		Weight::from_parts(55_793_413, 0)
			// Standard Error: 11
			.saturating_add(Weight::from_parts(4_511, 0).saturating_mul(n.into()))
	}
	/// The range of component `r` is `[0, 160]`.
	fn seal_sr25519_verify(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_378_000 picoseconds.
		Weight::from_parts(25_185_485, 0)
			// Standard Error: 8_828
			.saturating_add(Weight::from_parts(41_091_818, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 160]`.
	fn seal_ecdsa_recover(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_371_000 picoseconds.
		Weight::from_parts(35_350_533, 0)
			// Standard Error: 9_805
			.saturating_add(Weight::from_parts(45_466_060, 0).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 160]`.
	fn seal_ecdsa_to_eth_address(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_407_000 picoseconds.
		Weight::from_parts(14_375_492, 0)
			// Standard Error: 4_036
			.saturating_add(Weight::from_parts(11_666_630, 0).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::CodeInfoOf` (r:1536 w:1536)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1535 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:1537 w:1537)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_set_code_hash(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0 + r * (926 ±0)`
		//  Estimated: `8966 + r * (3047 ±10)`
		// Minimum execution time: 10_566_000 picoseconds.
		Weight::from_parts(10_627_000, 8966)
			// Standard Error: 46_429
			.saturating_add(Weight::from_parts(22_435_893, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads((3_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes((2_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 3047).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::CodeInfoOf` (r:32 w:32)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// The range of component `r` is `[0, 32]`.
	fn lock_delegate_dependency(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `274 + r * (78 ±0)`
		//  Estimated: `1265 + r * (2553 ±0)`
		// Minimum execution time: 10_305_000 picoseconds.
		Weight::from_parts(16_073_202, 1265)
			// Standard Error: 8_841
			.saturating_add(Weight::from_parts(5_125_440, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2553).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::CodeInfoOf` (r:32 w:32)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `MaxEncodedLen`)
	/// The range of component `r` is `[0, 32]`.
	fn unlock_delegate_dependency(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `275 + r * (78 ±0)`
		//  Estimated: `990 + r * (2568 ±0)`
		// Minimum execution time: 10_389_000 picoseconds.
		Weight::from_parts(16_221_879, 990)
			// Standard Error: 9_409
			.saturating_add(Weight::from_parts(4_235_040, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2568).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::MigrationInProgress` (r:1 w:0)
	/// Proof: `Contracts::MigrationInProgress` (`max_values`: Some(1), `max_size`: Some(1026), added: 1521, mode: `Measured`)
	/// Storage: `System::Account` (r:1 w:0)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `Measured`)
	/// Storage: `Contracts::ContractInfoOf` (r:1 w:1)
	/// Proof: `Contracts::ContractInfoOf` (`max_values`: None, `max_size`: Some(1795), added: 4270, mode: `Measured`)
	/// Storage: `Contracts::CodeInfoOf` (r:1 w:0)
	/// Proof: `Contracts::CodeInfoOf` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `Measured`)
	/// Storage: `Contracts::PristineCode` (r:1 w:0)
	/// Proof: `Contracts::PristineCode` (`max_values`: None, `max_size`: Some(125988), added: 128463, mode: `Measured`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// Storage: `System::EventTopics` (r:2 w:2)
	/// Proof: `System::EventTopics` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_reentrance_count(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `858 + r * (3 ±0)`
		//  Estimated: `6804 + r * (3 ±0)`
		// Minimum execution time: 265_499_000 picoseconds.
		Weight::from_parts(282_172_889, 6804)
			// Standard Error: 442
			.saturating_add(Weight::from_parts(165_070, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
			.saturating_add(Weight::from_parts(0, 3).saturating_mul(r.into()))
	}
	/// The range of component `r` is `[0, 1600]`.
	fn seal_account_reentrance_count(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 10_367_000 picoseconds.
		Weight::from_parts(13_220_303, 0)
			// Standard Error: 151
			.saturating_add(Weight::from_parts(86_117, 0).saturating_mul(r.into()))
	}
	/// Storage: `Contracts::Nonce` (r:1 w:0)
	/// Proof: `Contracts::Nonce` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `Measured`)
	/// The range of component `r` is `[0, 1600]`.
	fn seal_instantiation_nonce(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `219`
		//  Estimated: `1704`
		// Minimum execution time: 10_223_000 picoseconds.
		Weight::from_parts(14_170_002, 1704)
			// Standard Error: 71
			.saturating_add(Weight::from_parts(76_372, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
	}
	/// The range of component `r` is `[0, 5000]`.
	fn instr_i64_load_store(r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 754_000 picoseconds.
		Weight::from_parts(1_091_740, 0)
			// Standard Error: 29
			.saturating_add(Weight::from_parts(14_954, 0).saturating_mul(r.into()))
	}
}
