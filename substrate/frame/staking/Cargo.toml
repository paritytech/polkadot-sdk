[package]
name = "pallet-staking"
version = "4.0.0-dev"
authors.workspace = true
edition.workspace = true
license = "Apache-2.0"
homepage = "https://substrate.io"
repository.workspace = true
description = "FRAME pallet staking"
readme = "README.md"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
serde = { version = "1.0.188", default-features = false, features = ["alloc", "derive"]}
codec = { package = "parity-scale-codec", version = "3.6.1", default-features = false, features = [
	"derive",
] }
scale-info = { version = "2.5.0", default-features = false, features = ["derive", "serde"] }
sp-io = { path = "../../primitives/io", default-features = false}
sp-runtime = { path = "../../primitives/runtime", default-features = false, features = ["serde"] }
sp-staking = { path = "../../primitives/staking", default-features = false, features = ["serde"] }
sp-std = { path = "../../primitives/std", default-features = false}
frame-support = { path = "../support", default-features = false}
frame-system = { path = "../system", default-features = false}
pallet-session = { path = "../session", default-features = false, features = [
	"historical",
]}
pallet-authorship = { path = "../authorship", default-features = false}
sp-application-crypto = { path = "../../primitives/application-crypto", default-features = false, features = ["serde"] }
frame-election-provider-support = { path = "../election-provider-support", default-features = false}
log = { version = "0.4.17", default-features = false }

# Optional imports for benchmarking
frame-benchmarking = { path = "../benchmarking", default-features = false, optional = true }
rand_chacha = { version = "0.2", default-features = false, optional = true }

[dev-dependencies]
sp-tracing = { path = "../../primitives/tracing" }
sp-core = { path = "../../primitives/core" }
sp-npos-elections = { path = "../../primitives/npos-elections" }
pallet-balances = { path = "../balances" }
pallet-timestamp = { path = "../timestamp" }
pallet-staking-reward-curve = { path = "reward-curve" }
pallet-bags-list = { path = "../bags-list" }
substrate-test-utils = { path = "../../test-utils" }
frame-benchmarking = { path = "../benchmarking" }
frame-election-provider-support = { path = "../election-provider-support" }
rand_chacha = { version = "0.2" }

[features]
default = [ "std" ]
std = [
	"codec/std",
	"frame-benchmarking?/std",
	"frame-election-provider-support/std",
	"frame-support/std",
	"frame-system/std",
	"log/std",
	"pallet-authorship/std",
	"pallet-bags-list/std",
	"pallet-balances/std",
	"pallet-session/std",
	"pallet-timestamp/std",
	"scale-info/std",
	"serde/std",
	"sp-application-crypto/std",
	"sp-core/std",
	"sp-io/std",
	"sp-npos-elections/std",
	"sp-runtime/std",
	"sp-staking/std",
	"sp-std/std",
	"sp-tracing/std",
]
runtime-benchmarks = [
	"frame-benchmarking/runtime-benchmarks",
	"frame-election-provider-support/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"pallet-bags-list/runtime-benchmarks",
	"pallet-balances/runtime-benchmarks",
	"pallet-timestamp/runtime-benchmarks",
	"rand_chacha",
	"sp-runtime/runtime-benchmarks",
	"sp-staking/runtime-benchmarks",
]
try-runtime = [
	"frame-election-provider-support/try-runtime",
	"frame-support/try-runtime",
	"frame-system/try-runtime",
	"pallet-authorship/try-runtime",
	"pallet-bags-list/try-runtime",
	"pallet-balances/try-runtime",
	"pallet-session/try-runtime",
	"pallet-timestamp/try-runtime",
	"sp-runtime/try-runtime",
]
