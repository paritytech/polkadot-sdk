[
  1635018093,
  {
    "V16": {
      "types": {
        "types": [
          {
            "id": 0,
            "type": {
              "path": [
                "sp_core",
                "crypto",
                "AccountId32"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 1,
                      "typeName": "[u8; 32]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 1,
            "type": {
              "def": {
                "array": {
                  "len": 32,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 2,
            "type": {
              "def": {
                "primitive": "u8"
              }
            }
          },
          {
            "id": 3,
            "type": {
              "path": [
                "frame_system",
                "AccountInfo"
              ],
              "params": [
                {
                  "name": "Nonce",
                  "type": 4
                },
                {
                  "name": "AccountData",
                  "type": 5
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "nonce",
                      "type": 4,
                      "typeName": "Nonce"
                    },
                    {
                      "name": "consumers",
                      "type": 4,
                      "typeName": "RefCount"
                    },
                    {
                      "name": "providers",
                      "type": 4,
                      "typeName": "RefCount"
                    },
                    {
                      "name": "sufficients",
                      "type": 4,
                      "typeName": "RefCount"
                    },
                    {
                      "name": "data",
                      "type": 5,
                      "typeName": "AccountData"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 4,
            "type": {
              "def": {
                "primitive": "u32"
              }
            }
          },
          {
            "id": 5,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "AccountData"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "free",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "reserved",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "frozen",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "flags",
                      "type": 7,
                      "typeName": "ExtraFlags"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 6,
            "type": {
              "def": {
                "primitive": "u128"
              }
            }
          },
          {
            "id": 7,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "ExtraFlags"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 6,
                      "typeName": "u128"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 8,
            "type": {
              "def": {
                "primitive": "bool"
              }
            }
          },
          {
            "id": 9,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "PerDispatchClass"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 10
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "normal",
                      "type": 10,
                      "typeName": "T"
                    },
                    {
                      "name": "operational",
                      "type": 10,
                      "typeName": "T"
                    },
                    {
                      "name": "mandatory",
                      "type": 10,
                      "typeName": "T"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 10,
            "type": {
              "path": [
                "sp_weights",
                "weight_v2",
                "Weight"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "ref_time",
                      "type": 11,
                      "typeName": "u64"
                    },
                    {
                      "name": "proof_size",
                      "type": 11,
                      "typeName": "u64"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 11,
            "type": {
              "def": {
                "compact": {
                  "type": 12
                }
              }
            }
          },
          {
            "id": 12,
            "type": {
              "def": {
                "primitive": "u64"
              }
            }
          },
          {
            "id": 13,
            "type": {
              "path": [
                "primitive_types",
                "H256"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 1,
                      "typeName": "[u8; 32]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 14,
            "type": {
              "def": {
                "sequence": {
                  "type": 2
                }
              }
            }
          },
          {
            "id": 15,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "digest",
                "Digest"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "logs",
                      "type": 16,
                      "typeName": "Vec<DigestItem>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 16,
            "type": {
              "def": {
                "sequence": {
                  "type": 17
                }
              }
            }
          },
          {
            "id": 17,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "digest",
                "DigestItem"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "PreRuntime",
                      "fields": [
                        {
                          "type": 18,
                          "typeName": "ConsensusEngineId"
                        },
                        {
                          "type": 14,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "Consensus",
                      "fields": [
                        {
                          "type": 18,
                          "typeName": "ConsensusEngineId"
                        },
                        {
                          "type": 14,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "Seal",
                      "fields": [
                        {
                          "type": 18,
                          "typeName": "ConsensusEngineId"
                        },
                        {
                          "type": 14,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "Other",
                      "fields": [
                        {
                          "type": 14,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "RuntimeEnvironmentUpdated",
                      "index": 8
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 18,
            "type": {
              "def": {
                "array": {
                  "len": 4,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 19,
            "type": {
              "def": {
                "sequence": {
                  "type": 20
                }
              }
            }
          },
          {
            "id": 20,
            "type": {
              "path": [
                "frame_system",
                "EventRecord"
              ],
              "params": [
                {
                  "name": "E",
                  "type": 21
                },
                {
                  "name": "T",
                  "type": 13
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "phase",
                      "type": 46,
                      "typeName": "Phase"
                    },
                    {
                      "name": "event",
                      "type": 21,
                      "typeName": "E"
                    },
                    {
                      "name": "topics",
                      "type": 45,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 21,
            "type": {
              "path": [
                "revive_dev_runtime",
                "RuntimeEvent"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "System",
                      "fields": [
                        {
                          "type": 22,
                          "typeName": "frame_system::Event<Runtime>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Balances",
                      "fields": [
                        {
                          "type": 32,
                          "typeName": "pallet_balances::Event<Runtime>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "Sudo",
                      "fields": [
                        {
                          "type": 37,
                          "typeName": "pallet_sudo::Event<Runtime>"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "TransactionPayment",
                      "fields": [
                        {
                          "type": 41,
                          "typeName": "pallet_transaction_payment::Event<Runtime>"
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "Revive",
                      "fields": [
                        {
                          "type": 42,
                          "typeName": "pallet_revive::Event<Runtime>"
                        }
                      ],
                      "index": 5
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 22,
            "type": {
              "path": [
                "frame_system",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ExtrinsicSuccess",
                      "fields": [
                        {
                          "name": "dispatch_info",
                          "type": 23,
                          "typeName": "DispatchEventInfo"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "An extrinsic completed successfully."
                      ]
                    },
                    {
                      "name": "ExtrinsicFailed",
                      "fields": [
                        {
                          "name": "dispatch_error",
                          "type": 26,
                          "typeName": "DispatchError"
                        },
                        {
                          "name": "dispatch_info",
                          "type": 23,
                          "typeName": "DispatchEventInfo"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "An extrinsic failed."
                      ]
                    },
                    {
                      "name": "CodeUpdated",
                      "index": 2,
                      "docs": [
                        "`:code` was updated."
                      ]
                    },
                    {
                      "name": "NewAccount",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A new account was created."
                      ]
                    },
                    {
                      "name": "KilledAccount",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "An account was reaped."
                      ]
                    },
                    {
                      "name": "Remarked",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "hash",
                          "type": 13,
                          "typeName": "T::Hash"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "On on-chain remark happened."
                      ]
                    },
                    {
                      "name": "UpgradeAuthorized",
                      "fields": [
                        {
                          "name": "code_hash",
                          "type": 13,
                          "typeName": "T::Hash"
                        },
                        {
                          "name": "check_version",
                          "type": 8,
                          "typeName": "bool"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "An upgrade was authorized."
                      ]
                    },
                    {
                      "name": "RejectedInvalidAuthorizedUpgrade",
                      "fields": [
                        {
                          "name": "code_hash",
                          "type": 13,
                          "typeName": "T::Hash"
                        },
                        {
                          "name": "error",
                          "type": 26,
                          "typeName": "DispatchError"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "An invalid authorized upgrade was rejected while trying to apply it."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Event for the System pallet."
              ]
            }
          },
          {
            "id": 23,
            "type": {
              "path": [
                "frame_system",
                "DispatchEventInfo"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "weight",
                      "type": 10,
                      "typeName": "Weight"
                    },
                    {
                      "name": "class",
                      "type": 24,
                      "typeName": "DispatchClass"
                    },
                    {
                      "name": "pays_fee",
                      "type": 25,
                      "typeName": "Pays"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 24,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "DispatchClass"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Normal",
                      "index": 0
                    },
                    {
                      "name": "Operational",
                      "index": 1
                    },
                    {
                      "name": "Mandatory",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 25,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "Pays"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Yes",
                      "index": 0
                    },
                    {
                      "name": "No",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 26,
            "type": {
              "path": [
                "sp_runtime",
                "DispatchError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Other",
                      "index": 0
                    },
                    {
                      "name": "CannotLookup",
                      "index": 1
                    },
                    {
                      "name": "BadOrigin",
                      "index": 2
                    },
                    {
                      "name": "Module",
                      "fields": [
                        {
                          "type": 27,
                          "typeName": "ModuleError"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "ConsumerRemaining",
                      "index": 4
                    },
                    {
                      "name": "NoProviders",
                      "index": 5
                    },
                    {
                      "name": "TooManyConsumers",
                      "index": 6
                    },
                    {
                      "name": "Token",
                      "fields": [
                        {
                          "type": 28,
                          "typeName": "TokenError"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "Arithmetic",
                      "fields": [
                        {
                          "type": 29,
                          "typeName": "ArithmeticError"
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "Transactional",
                      "fields": [
                        {
                          "type": 30,
                          "typeName": "TransactionalError"
                        }
                      ],
                      "index": 9
                    },
                    {
                      "name": "Exhausted",
                      "index": 10
                    },
                    {
                      "name": "Corruption",
                      "index": 11
                    },
                    {
                      "name": "Unavailable",
                      "index": 12
                    },
                    {
                      "name": "RootNotAllowed",
                      "index": 13
                    },
                    {
                      "name": "Trie",
                      "fields": [
                        {
                          "type": 31,
                          "typeName": "TrieError"
                        }
                      ],
                      "index": 14
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 27,
            "type": {
              "path": [
                "sp_runtime",
                "ModuleError"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "index",
                      "type": 2,
                      "typeName": "u8"
                    },
                    {
                      "name": "error",
                      "type": 18,
                      "typeName": "[u8; MAX_MODULE_ERROR_ENCODED_SIZE]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 28,
            "type": {
              "path": [
                "sp_runtime",
                "TokenError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "FundsUnavailable",
                      "index": 0
                    },
                    {
                      "name": "OnlyProvider",
                      "index": 1
                    },
                    {
                      "name": "BelowMinimum",
                      "index": 2
                    },
                    {
                      "name": "CannotCreate",
                      "index": 3
                    },
                    {
                      "name": "UnknownAsset",
                      "index": 4
                    },
                    {
                      "name": "Frozen",
                      "index": 5
                    },
                    {
                      "name": "Unsupported",
                      "index": 6
                    },
                    {
                      "name": "CannotCreateHold",
                      "index": 7
                    },
                    {
                      "name": "NotExpendable",
                      "index": 8
                    },
                    {
                      "name": "Blocked",
                      "index": 9
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 29,
            "type": {
              "path": [
                "sp_arithmetic",
                "ArithmeticError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Underflow",
                      "index": 0
                    },
                    {
                      "name": "Overflow",
                      "index": 1
                    },
                    {
                      "name": "DivisionByZero",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 30,
            "type": {
              "path": [
                "sp_runtime",
                "TransactionalError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "LimitReached",
                      "index": 0
                    },
                    {
                      "name": "NoLayer",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 31,
            "type": {
              "path": [
                "sp_runtime",
                "proving_trie",
                "TrieError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidStateRoot",
                      "index": 0
                    },
                    {
                      "name": "IncompleteDatabase",
                      "index": 1
                    },
                    {
                      "name": "ValueAtIncompleteKey",
                      "index": 2
                    },
                    {
                      "name": "DecoderError",
                      "index": 3
                    },
                    {
                      "name": "InvalidHash",
                      "index": 4
                    },
                    {
                      "name": "DuplicateKey",
                      "index": 5
                    },
                    {
                      "name": "ExtraneousNode",
                      "index": 6
                    },
                    {
                      "name": "ExtraneousValue",
                      "index": 7
                    },
                    {
                      "name": "ExtraneousHashReference",
                      "index": 8
                    },
                    {
                      "name": "InvalidChildReference",
                      "index": 9
                    },
                    {
                      "name": "ValueMismatch",
                      "index": 10
                    },
                    {
                      "name": "IncompleteProof",
                      "index": 11
                    },
                    {
                      "name": "RootMismatch",
                      "index": 12
                    },
                    {
                      "name": "DecodeError",
                      "index": 13
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 32,
            "type": {
              "path": [
                "pallet_balances",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Endowed",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "free_balance",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "An account was created with some free balance."
                      ]
                    },
                    {
                      "name": "DustLost",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "An account was removed whose balance was non-zero but below ExistentialDeposit,",
                        "resulting in an outright loss."
                      ]
                    },
                    {
                      "name": "Transfer",
                      "fields": [
                        {
                          "name": "from",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Transfer succeeded."
                      ]
                    },
                    {
                      "name": "BalanceSet",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "free",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A balance was set by root."
                      ]
                    },
                    {
                      "name": "Reserved",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Some balance was reserved (moved from free to reserved)."
                      ]
                    },
                    {
                      "name": "Unreserved",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Some balance was unreserved (moved from reserved to free)."
                      ]
                    },
                    {
                      "name": "ReserveRepatriated",
                      "fields": [
                        {
                          "name": "from",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        },
                        {
                          "name": "destination_status",
                          "type": 33,
                          "typeName": "Status"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Some balance was moved from the reserve of the first account to the second account.",
                        "Final argument indicates the destination balance type."
                      ]
                    },
                    {
                      "name": "Deposit",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "Some amount was deposited (e.g. for transaction fees)."
                      ]
                    },
                    {
                      "name": "Withdraw",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "Some amount was withdrawn from the account (e.g. for transaction fees)."
                      ]
                    },
                    {
                      "name": "Slashed",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "Some amount was removed from the account (e.g. for misbehavior)."
                      ]
                    },
                    {
                      "name": "Minted",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "Some amount was minted into an account."
                      ]
                    },
                    {
                      "name": "MintedCredit",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "Some credit was balanced and added to the TotalIssuance."
                      ]
                    },
                    {
                      "name": "Burned",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "Some amount was burned from an account."
                      ]
                    },
                    {
                      "name": "BurnedDebt",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "Some debt has been dropped from the Total Issuance."
                      ]
                    },
                    {
                      "name": "Suspended",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "Some amount was suspended from an account (it can be restored later)."
                      ]
                    },
                    {
                      "name": "Restored",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "Some amount was restored into an account."
                      ]
                    },
                    {
                      "name": "Upgraded",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "An account was upgraded."
                      ]
                    },
                    {
                      "name": "Issued",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "Total issuance was increased by `amount`, creating a credit to be balanced."
                      ]
                    },
                    {
                      "name": "Rescinded",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "Total issuance was decreased by `amount`, creating a debt to be balanced."
                      ]
                    },
                    {
                      "name": "Locked",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "Some balance was locked."
                      ]
                    },
                    {
                      "name": "Unlocked",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 20,
                      "docs": [
                        "Some balance was unlocked."
                      ]
                    },
                    {
                      "name": "Frozen",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 21,
                      "docs": [
                        "Some balance was frozen."
                      ]
                    },
                    {
                      "name": "Thawed",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 22,
                      "docs": [
                        "Some balance was thawed."
                      ]
                    },
                    {
                      "name": "TotalIssuanceForced",
                      "fields": [
                        {
                          "name": "old",
                          "type": 6,
                          "typeName": "T::Balance"
                        },
                        {
                          "name": "new",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 23,
                      "docs": [
                        "The `TotalIssuance` was forcefully changed."
                      ]
                    },
                    {
                      "name": "Held",
                      "fields": [
                        {
                          "name": "reason",
                          "type": 34,
                          "typeName": "T::RuntimeHoldReason"
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 24,
                      "docs": [
                        "Some balance was placed on hold."
                      ]
                    },
                    {
                      "name": "BurnedHeld",
                      "fields": [
                        {
                          "name": "reason",
                          "type": 34,
                          "typeName": "T::RuntimeHoldReason"
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 25,
                      "docs": [
                        "Held balance was burned from an account."
                      ]
                    },
                    {
                      "name": "TransferOnHold",
                      "fields": [
                        {
                          "name": "reason",
                          "type": 34,
                          "typeName": "T::RuntimeHoldReason"
                        },
                        {
                          "name": "source",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "dest",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 26,
                      "docs": [
                        "A transfer of `amount` on hold from `source` to `dest` was initiated."
                      ]
                    },
                    {
                      "name": "TransferAndHold",
                      "fields": [
                        {
                          "name": "reason",
                          "type": 34,
                          "typeName": "T::RuntimeHoldReason"
                        },
                        {
                          "name": "source",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "dest",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "transferred",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 27,
                      "docs": [
                        "The `transferred` balance is placed on hold at the `dest` account."
                      ]
                    },
                    {
                      "name": "Released",
                      "fields": [
                        {
                          "name": "reason",
                          "type": 34,
                          "typeName": "T::RuntimeHoldReason"
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 28,
                      "docs": [
                        "Some balance was released from hold."
                      ]
                    },
                    {
                      "name": "Unexpected",
                      "fields": [
                        {
                          "type": 36,
                          "typeName": "UnexpectedKind"
                        }
                      ],
                      "index": 29,
                      "docs": [
                        "An unexpected/defensive event was triggered."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 33,
            "type": {
              "path": [
                "frame_support",
                "traits",
                "tokens",
                "misc",
                "BalanceStatus"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Free",
                      "index": 0
                    },
                    {
                      "name": "Reserved",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 34,
            "type": {
              "path": [
                "revive_dev_runtime",
                "RuntimeHoldReason"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Revive",
                      "fields": [
                        {
                          "type": 35,
                          "typeName": "pallet_revive::HoldReason"
                        }
                      ],
                      "index": 5
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 35,
            "type": {
              "path": [
                "pallet_revive",
                "pallet",
                "HoldReason"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "CodeUploadDepositReserve",
                      "index": 0
                    },
                    {
                      "name": "StorageDepositReserve",
                      "index": 1
                    },
                    {
                      "name": "AddressMapping",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 36,
            "type": {
              "path": [
                "pallet_balances",
                "pallet",
                "UnexpectedKind"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "BalanceUpdated",
                      "index": 0
                    },
                    {
                      "name": "FailedToMutateAccount",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 37,
            "type": {
              "path": [
                "pallet_sudo",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Sudid",
                      "fields": [
                        {
                          "name": "sudo_result",
                          "type": 38,
                          "typeName": "DispatchResult",
                          "docs": [
                            "The result of the call made by the sudo user."
                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A sudo call just took place."
                      ]
                    },
                    {
                      "name": "KeyChanged",
                      "fields": [
                        {
                          "name": "old",
                          "type": 40,
                          "typeName": "Option<T::AccountId>",
                          "docs": [
                            "The old sudo key (if one was previously set)."
                          ]
                        },
                        {
                          "name": "new",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The new sudo key (if one was set)."
                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "The sudo key has been updated."
                      ]
                    },
                    {
                      "name": "KeyRemoved",
                      "index": 2,
                      "docs": [
                        "The key was permanently removed."
                      ]
                    },
                    {
                      "name": "SudoAsDone",
                      "fields": [
                        {
                          "name": "sudo_result",
                          "type": 38,
                          "typeName": "DispatchResult",
                          "docs": [
                            "The result of the call made by the sudo user."
                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A [sudo_as](Pallet::sudo_as) call just took place."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 38,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 39
                },
                {
                  "name": "E",
                  "type": 26
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 39
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 26
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 39,
            "type": {
              "def": {
                "tuple": []
              }
            }
          },
          {
            "id": 40,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 0
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 41,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TransactionFeePaid",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId"
                        },
                        {
                          "name": "actual_fee",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "tip",
                          "type": 6,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A transaction fee `actual_fee`, of which `tip` was added to the minimum inclusion fee,",
                        "has been paid by `who`."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 42,
            "type": {
              "path": [
                "pallet_revive",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ContractEmitted",
                      "fields": [
                        {
                          "name": "contract",
                          "type": 43,
                          "typeName": "H160",
                          "docs": [
                            "The contract that emitted the event."
                          ]
                        },
                        {
                          "name": "data",
                          "type": 14,
                          "typeName": "Vec<u8>",
                          "docs": [
                            "Data supplied by the contract. Metadata generated during contract compilation",
                            "is needed to decode it."
                          ]
                        },
                        {
                          "name": "topics",
                          "type": 45,
                          "typeName": "Vec<H256>",
                          "docs": [
                            "A list of topics used to index the event.",
                            "Number of topics is capped by [`limits::NUM_EVENT_TOPICS`]."
                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A custom event emitted by the contract."
                      ]
                    },
                    {
                      "name": "Instantiated",
                      "fields": [
                        {
                          "name": "deployer",
                          "type": 43,
                          "typeName": "H160"
                        },
                        {
                          "name": "contract",
                          "type": 43,
                          "typeName": "H160"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Contract deployed by deployer at the specified address."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 43,
            "type": {
              "path": [
                "primitive_types",
                "H160"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 44,
                      "typeName": "[u8; 20]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 44,
            "type": {
              "def": {
                "array": {
                  "len": 20,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 45,
            "type": {
              "def": {
                "sequence": {
                  "type": 13
                }
              }
            }
          },
          {
            "id": 46,
            "type": {
              "path": [
                "frame_system",
                "Phase"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ApplyExtrinsic",
                      "fields": [
                        {
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Finalization",
                      "index": 1
                    },
                    {
                      "name": "Initialization",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 47,
            "type": {
              "def": {
                "sequence": {
                  "type": 48
                }
              }
            }
          },
          {
            "id": 48,
            "type": {
              "def": {
                "tuple": [
                  4,
                  4
                ]
              }
            }
          },
          {
            "id": 49,
            "type": {
              "path": [
                "frame_system",
                "LastRuntimeUpgradeInfo"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "spec_version",
                      "type": 50,
                      "typeName": "codec::Compact<u32>"
                    },
                    {
                      "name": "spec_name",
                      "type": 51,
                      "typeName": "Cow<'static, str>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 50,
            "type": {
              "def": {
                "compact": {
                  "type": 4
                }
              }
            }
          },
          {
            "id": 51,
            "type": {
              "path": [
                "Cow"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 52
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 52
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 52,
            "type": {
              "def": {
                "primitive": "str"
              }
            }
          },
          {
            "id": 53,
            "type": {
              "path": [
                "frame_system",
                "CodeUpgradeAuthorization"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "code_hash",
                      "type": 13,
                      "typeName": "T::Hash"
                    },
                    {
                      "name": "check_version",
                      "type": 8,
                      "typeName": "bool"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 54,
            "type": {
              "path": [
                "frame_system",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "remark",
                      "fields": [
                        {
                          "name": "remark",
                          "type": 14,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Make some on-chain remark.",
                        "",
                        "Can be executed by every `origin`."
                      ]
                    },
                    {
                      "name": "set_heap_pages",
                      "fields": [
                        {
                          "name": "pages",
                          "type": 12,
                          "typeName": "u64"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Set the number of pages in the WebAssembly environment's heap."
                      ]
                    },
                    {
                      "name": "set_code",
                      "fields": [
                        {
                          "name": "code",
                          "type": 14,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Set the new runtime code."
                      ]
                    },
                    {
                      "name": "set_code_without_checks",
                      "fields": [
                        {
                          "name": "code",
                          "type": 14,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Set the new runtime code without doing any checks of the given `code`.",
                        "",
                        "Note that runtime upgrades will not run if this is called with a not-increasing spec",
                        "version!"
                      ]
                    },
                    {
                      "name": "set_storage",
                      "fields": [
                        {
                          "name": "items",
                          "type": 55,
                          "typeName": "Vec<KeyValue>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Set some items of storage."
                      ]
                    },
                    {
                      "name": "kill_storage",
                      "fields": [
                        {
                          "name": "keys",
                          "type": 57,
                          "typeName": "Vec<Key>"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Kill some items from storage."
                      ]
                    },
                    {
                      "name": "kill_prefix",
                      "fields": [
                        {
                          "name": "prefix",
                          "type": 14,
                          "typeName": "Key"
                        },
                        {
                          "name": "subkeys",
                          "type": 4,
                          "typeName": "u32"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Kill all storage items with a key that starts with the given prefix.",
                        "",
                        "**NOTE:** We rely on the Root origin to provide us the number of subkeys under",
                        "the prefix we are removing to accurately calculate the weight of this function."
                      ]
                    },
                    {
                      "name": "remark_with_event",
                      "fields": [
                        {
                          "name": "remark",
                          "type": 14,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "Make some on-chain remark and emit event."
                      ]
                    },
                    {
                      "name": "authorize_upgrade",
                      "fields": [
                        {
                          "name": "code_hash",
                          "type": 13,
                          "typeName": "T::Hash"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "Authorize an upgrade to a given `code_hash` for the runtime. The runtime can be supplied",
                        "later.",
                        "",
                        "This call requires Root origin."
                      ]
                    },
                    {
                      "name": "authorize_upgrade_without_checks",
                      "fields": [
                        {
                          "name": "code_hash",
                          "type": 13,
                          "typeName": "T::Hash"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "Authorize an upgrade to a given `code_hash` for the runtime. The runtime can be supplied",
                        "later.",
                        "",
                        "WARNING: This authorizes an upgrade that will take place without any safety checks, for",
                        "example that the spec name remains the same and that the version number increases. Not",
                        "recommended for normal use. Use `authorize_upgrade` instead.",
                        "",
                        "This call requires Root origin."
                      ]
                    },
                    {
                      "name": "apply_authorized_upgrade",
                      "fields": [
                        {
                          "name": "code",
                          "type": 14,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "Provide the preimage (runtime binary) `code` for an upgrade that has been authorized.",
                        "",
                        "If the authorization required a version check, this call will ensure the spec name",
                        "remains unchanged and that the spec version has increased.",
                        "",
                        "Depending on the runtime's `OnSetCode` configuration, this function may directly apply",
                        "the new `code` in the same block or attempt to schedule the upgrade.",
                        "",
                        "All origins are allowed."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 55,
            "type": {
              "def": {
                "sequence": {
                  "type": 56
                }
              }
            }
          },
          {
            "id": 56,
            "type": {
              "def": {
                "tuple": [
                  14,
                  14
                ]
              }
            }
          },
          {
            "id": 57,
            "type": {
              "def": {
                "sequence": {
                  "type": 14
                }
              }
            }
          },
          {
            "id": 58,
            "type": {
              "path": [
                "frame_system",
                "limits",
                "BlockWeights"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "base_block",
                      "type": 10,
                      "typeName": "Weight"
                    },
                    {
                      "name": "max_block",
                      "type": 10,
                      "typeName": "Weight"
                    },
                    {
                      "name": "per_class",
                      "type": 59,
                      "typeName": "PerDispatchClass<WeightsPerClass>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 59,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "PerDispatchClass"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 60
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "normal",
                      "type": 60,
                      "typeName": "T"
                    },
                    {
                      "name": "operational",
                      "type": 60,
                      "typeName": "T"
                    },
                    {
                      "name": "mandatory",
                      "type": 60,
                      "typeName": "T"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 60,
            "type": {
              "path": [
                "frame_system",
                "limits",
                "WeightsPerClass"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "base_extrinsic",
                      "type": 10,
                      "typeName": "Weight"
                    },
                    {
                      "name": "max_extrinsic",
                      "type": 61,
                      "typeName": "Option<Weight>"
                    },
                    {
                      "name": "max_total",
                      "type": 61,
                      "typeName": "Option<Weight>"
                    },
                    {
                      "name": "reserved",
                      "type": 61,
                      "typeName": "Option<Weight>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 61,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 10
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 10
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 62,
            "type": {
              "path": [
                "frame_system",
                "limits",
                "BlockLength"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "max",
                      "type": 63,
                      "typeName": "PerDispatchClass<u32>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 63,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "PerDispatchClass"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "normal",
                      "type": 4,
                      "typeName": "T"
                    },
                    {
                      "name": "operational",
                      "type": 4,
                      "typeName": "T"
                    },
                    {
                      "name": "mandatory",
                      "type": 4,
                      "typeName": "T"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 64,
            "type": {
              "path": [
                "sp_weights",
                "RuntimeDbWeight"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "read",
                      "type": 12,
                      "typeName": "u64"
                    },
                    {
                      "name": "write",
                      "type": 12,
                      "typeName": "u64"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 65,
            "type": {
              "path": [
                "sp_version",
                "RuntimeVersion"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "spec_name",
                      "type": 51,
                      "typeName": "Cow<'static, str>"
                    },
                    {
                      "name": "impl_name",
                      "type": 51,
                      "typeName": "Cow<'static, str>"
                    },
                    {
                      "name": "authoring_version",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "spec_version",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "impl_version",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "apis",
                      "type": 66,
                      "typeName": "ApisVec"
                    },
                    {
                      "name": "transaction_version",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "system_version",
                      "type": 2,
                      "typeName": "u8"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 66,
            "type": {
              "path": [
                "Cow"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 67
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 67
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 67,
            "type": {
              "def": {
                "sequence": {
                  "type": 68
                }
              }
            }
          },
          {
            "id": 68,
            "type": {
              "def": {
                "tuple": [
                  69,
                  4
                ]
              }
            }
          },
          {
            "id": 69,
            "type": {
              "def": {
                "array": {
                  "len": 8,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 70,
            "type": {
              "def": {
                "primitive": "u16"
              }
            }
          },
          {
            "id": 71,
            "type": {
              "path": [
                "frame_system",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidSpecName",
                      "index": 0,
                      "docs": [
                        "The name of specification does not match between the current runtime",
                        "and the new runtime."
                      ]
                    },
                    {
                      "name": "SpecVersionNeedsToIncrease",
                      "index": 1,
                      "docs": [
                        "The specification version is not allowed to decrease between the current runtime",
                        "and the new runtime."
                      ]
                    },
                    {
                      "name": "FailedToExtractRuntimeVersion",
                      "index": 2,
                      "docs": [
                        "Failed to extract the runtime version from the new runtime.",
                        "",
                        "Either calling `Core_version` or decoding `RuntimeVersion` failed."
                      ]
                    },
                    {
                      "name": "NonDefaultComposite",
                      "index": 3,
                      "docs": [
                        "Suicide called when the account has non-default composite data."
                      ]
                    },
                    {
                      "name": "NonZeroRefCount",
                      "index": 4,
                      "docs": [
                        "There is a non-zero reference count preventing the account from being purged."
                      ]
                    },
                    {
                      "name": "CallFiltered",
                      "index": 5,
                      "docs": [
                        "The origin filter prevent the call to be dispatched."
                      ]
                    },
                    {
                      "name": "MultiBlockMigrationsOngoing",
                      "index": 6,
                      "docs": [
                        "A multi-block migration is ongoing and prevents the current code from being replaced."
                      ]
                    },
                    {
                      "name": "NothingAuthorized",
                      "index": 7,
                      "docs": [
                        "No upgrade authorized."
                      ]
                    },
                    {
                      "name": "Unauthorized",
                      "index": 8,
                      "docs": [
                        "The submitted code is not authorized."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error for the System pallet"
              ]
            }
          },
          {
            "id": 72,
            "type": {
              "path": [
                "revive_dev_runtime",
                "RuntimeCall"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "System",
                      "fields": [
                        {
                          "type": 54,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<System, Runtime>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Timestamp",
                      "fields": [
                        {
                          "type": 73,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Timestamp, Runtime>"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Balances",
                      "fields": [
                        {
                          "type": 74,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Balances, Runtime>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "Sudo",
                      "fields": [
                        {
                          "type": 80,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Sudo, Runtime>"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "Revive",
                      "fields": [
                        {
                          "type": 81,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Revive, Runtime>"
                        }
                      ],
                      "index": 5
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 73,
            "type": {
              "path": [
                "pallet_timestamp",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set",
                      "fields": [
                        {
                          "name": "now",
                          "type": 11,
                          "typeName": "T::Moment"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Set the current time.",
                        "",
                        "This call should be invoked exactly once per block. It will panic at the finalization",
                        "phase, if this call hasn't been invoked by that time.",
                        "",
                        "The timestamp should be greater than the previous one by the amount specified by",
                        "[`Config::MinimumPeriod`].",
                        "",
                        "The dispatch origin for this call must be _None_.",
                        "",
                        "This dispatch class is _Mandatory_ to ensure it gets executed in the block. Be aware",
                        "that changing the complexity of this call could result exhausting the resources in a",
                        "block to execute any other calls.",
                        "",
                        "## Complexity",
                        "- `O(1)` (Note that implementations of `OnTimestampSet` must also be `O(1)`)",
                        "- 1 storage read and 1 storage mutation (codec `O(1)` because of `DidUpdate::take` in",
                        "  `on_finalize`)",
                        "- 1 event handler `on_timestamp_set`. Must be `O(1)`."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 74,
            "type": {
              "path": [
                "pallet_balances",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "transfer_allow_death",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 75,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "value",
                          "type": 77,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Transfer some liquid free balance to another account.",
                        "",
                        "`transfer_allow_death` will set the `FreeBalance` of the sender and receiver.",
                        "If the sender's account is below the existential deposit as a result",
                        "of the transfer, the account will be reaped.",
                        "",
                        "The dispatch origin for this call must be `Signed` by the transactor."
                      ]
                    },
                    {
                      "name": "force_transfer",
                      "fields": [
                        {
                          "name": "source",
                          "type": 75,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "dest",
                          "type": 75,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "value",
                          "type": 77,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Exactly as `transfer_allow_death`, except the origin must be root and the source account",
                        "may be specified."
                      ]
                    },
                    {
                      "name": "transfer_keep_alive",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 75,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "value",
                          "type": 77,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Same as the [`transfer_allow_death`] call, but with a check that the transfer will not",
                        "kill the origin account.",
                        "",
                        "99% of the time you want [`transfer_allow_death`] instead.",
                        "",
                        "[`transfer_allow_death`]: struct.Pallet.html#method.transfer"
                      ]
                    },
                    {
                      "name": "transfer_all",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 75,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "keep_alive",
                          "type": 8,
                          "typeName": "bool"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Transfer the entire transferable balance from the caller account.",
                        "",
                        "NOTE: This function only attempts to transfer _transferable_ balances. This means that",
                        "any locked, reserved, or existential deposits (when `keep_alive` is `true`), will not be",
                        "transferred by this function. To ensure that this function results in a killed account,",
                        "you might need to prepare the account by removing any reference counters, storage",
                        "deposits, etc...",
                        "",
                        "The dispatch origin of this call must be Signed.",
                        "",
                        "- `dest`: The recipient of the transfer.",
                        "- `keep_alive`: A boolean to determine if the `transfer_all` operation should send all",
                        "  of the funds the account has, causing the sender account to be killed (false), or",
                        "  transfer everything except at least the existential deposit, which will guarantee to",
                        "  keep the sender account alive (true)."
                      ]
                    },
                    {
                      "name": "force_unreserve",
                      "fields": [
                        {
                          "name": "who",
                          "type": 75,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Unreserve some balance from a user by force.",
                        "",
                        "Can only be called by ROOT."
                      ]
                    },
                    {
                      "name": "upgrade_accounts",
                      "fields": [
                        {
                          "name": "who",
                          "type": 78,
                          "typeName": "Vec<T::AccountId>"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Upgrade a specified account.",
                        "",
                        "- `origin`: Must be `Signed`.",
                        "- `who`: The account to be upgraded.",
                        "",
                        "This will waive the transaction fee if at least all but 10% of the accounts needed to",
                        "be upgraded. (We let some not have to be upgraded just in order to allow for the",
                        "possibility of churn)."
                      ]
                    },
                    {
                      "name": "force_set_balance",
                      "fields": [
                        {
                          "name": "who",
                          "type": 75,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "new_free",
                          "type": 77,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "Set the regular balance of a given account.",
                        "",
                        "The dispatch origin for this call is `root`."
                      ]
                    },
                    {
                      "name": "force_adjust_total_issuance",
                      "fields": [
                        {
                          "name": "direction",
                          "type": 79,
                          "typeName": "AdjustmentDirection"
                        },
                        {
                          "name": "delta",
                          "type": 77,
                          "typeName": "T::Balance"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "Adjust the total issuance in a saturating way.",
                        "",
                        "Can only be called by root and always needs a positive `delta`.",
                        "",
                        "# Example"
                      ]
                    },
                    {
                      "name": "burn",
                      "fields": [
                        {
                          "name": "value",
                          "type": 77,
                          "typeName": "T::Balance"
                        },
                        {
                          "name": "keep_alive",
                          "type": 8,
                          "typeName": "bool"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "Burn the specified liquid free balance from the origin account.",
                        "",
                        "If the origin's account ends up below the existential deposit as a result",
                        "of the burn and `keep_alive` is false, the account will be reaped.",
                        "",
                        "Unlike sending funds to a _burn_ address, which merely makes the funds inaccessible,",
                        "this `burn` operation will reduce total issuance by the amount _burned_."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 75,
            "type": {
              "path": [
                "sp_runtime",
                "multiaddress",
                "MultiAddress"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "AccountIndex",
                  "type": 39
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Id",
                      "fields": [
                        {
                          "type": 0,
                          "typeName": "AccountId"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Index",
                      "fields": [
                        {
                          "type": 76,
                          "typeName": "AccountIndex"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Raw",
                      "fields": [
                        {
                          "type": 14,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "Address32",
                      "fields": [
                        {
                          "type": 1,
                          "typeName": "[u8; 32]"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "Address20",
                      "fields": [
                        {
                          "type": 44,
                          "typeName": "[u8; 20]"
                        }
                      ],
                      "index": 4
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 76,
            "type": {
              "def": {
                "compact": {
                  "type": 39
                }
              }
            }
          },
          {
            "id": 77,
            "type": {
              "def": {
                "compact": {
                  "type": 6
                }
              }
            }
          },
          {
            "id": 78,
            "type": {
              "def": {
                "sequence": {
                  "type": 0
                }
              }
            }
          },
          {
            "id": 79,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "AdjustmentDirection"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Increase",
                      "index": 0
                    },
                    {
                      "name": "Decrease",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 80,
            "type": {
              "path": [
                "pallet_sudo",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "sudo",
                      "fields": [
                        {
                          "name": "call",
                          "type": 72,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Authenticates the sudo key and dispatches a function call with `Root` origin."
                      ]
                    },
                    {
                      "name": "sudo_unchecked_weight",
                      "fields": [
                        {
                          "name": "call",
                          "type": 72,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        },
                        {
                          "name": "weight",
                          "type": 10,
                          "typeName": "Weight"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Authenticates the sudo key and dispatches a function call with `Root` origin.",
                        "This function does not check the weight of the call, and instead allows the",
                        "Sudo user to specify the weight of the call.",
                        "",
                        "The dispatch origin for this call must be _Signed_."
                      ]
                    },
                    {
                      "name": "set_key",
                      "fields": [
                        {
                          "name": "new",
                          "type": 75,
                          "typeName": "AccountIdLookupOf<T>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Authenticates the current sudo key and sets the given AccountId (`new`) as the new sudo",
                        "key."
                      ]
                    },
                    {
                      "name": "sudo_as",
                      "fields": [
                        {
                          "name": "who",
                          "type": 75,
                          "typeName": "AccountIdLookupOf<T>"
                        },
                        {
                          "name": "call",
                          "type": 72,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Authenticates the sudo key and dispatches a function call with `Signed` origin from",
                        "a given account.",
                        "",
                        "The dispatch origin for this call must be _Signed_."
                      ]
                    },
                    {
                      "name": "remove_key",
                      "index": 4,
                      "docs": [
                        "Permanently removes the sudo key.",
                        "",
                        "**This cannot be un-done.**"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 81,
            "type": {
              "path": [
                "pallet_revive",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "eth_transact",
                      "fields": [
                        {
                          "name": "payload",
                          "type": 14,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A raw EVM transaction, typically dispatched by an Ethereum JSON-RPC server.",
                        "",
                        "# Parameters",
                        "",
                        "* `payload`: The encoded [`crate::evm::TransactionSigned`].",
                        "* `gas_limit`: The gas limit enforced during contract execution.",
                        "* `storage_deposit_limit`: The maximum balance that can be charged to the caller for",
                        "  storage usage.",
                        "",
                        "# Note",
                        "",
                        "This call cannot be dispatched directly; attempting to do so will result in a failed",
                        "transaction. It serves as a wrapper for an Ethereum transaction. When submitted, the",
                        "runtime converts it into a [`sp_runtime::generic::CheckedExtrinsic`] by recovering the",
                        "signer and validating the transaction."
                      ]
                    },
                    {
                      "name": "call",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 43,
                          "typeName": "H160"
                        },
                        {
                          "name": "value",
                          "type": 77,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "gas_limit",
                          "type": 10,
                          "typeName": "Weight"
                        },
                        {
                          "name": "storage_deposit_limit",
                          "type": 77,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "data",
                          "type": 14,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Makes a call to an account, optionally transferring some balance.",
                        "",
                        "# Parameters",
                        "",
                        "* `dest`: Address of the contract to call.",
                        "* `value`: The balance to transfer from the `origin` to `dest`.",
                        "* `gas_limit`: The gas limit enforced when executing the constructor.",
                        "* `storage_deposit_limit`: The maximum amount of balance that can be charged from the",
                        "  caller to pay for the storage consumed.",
                        "* `data`: The input data to pass to the contract.",
                        "",
                        "* If the account is a smart-contract account, the associated code will be",
                        "executed and any value will be transferred.",
                        "* If the account is a regular account, any value will be transferred.",
                        "* If no account exists and the call value is not less than `existential_deposit`,",
                        "a regular account will be created and any value will be transferred."
                      ]
                    },
                    {
                      "name": "instantiate",
                      "fields": [
                        {
                          "name": "value",
                          "type": 77,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "gas_limit",
                          "type": 10,
                          "typeName": "Weight"
                        },
                        {
                          "name": "storage_deposit_limit",
                          "type": 77,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "code_hash",
                          "type": 13,
                          "typeName": "sp_core::H256"
                        },
                        {
                          "name": "data",
                          "type": 14,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "salt",
                          "type": 82,
                          "typeName": "Option<[u8; 32]>"
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Instantiates a contract from a previously deployed vm binary.",
                        "",
                        "This function is identical to [`Self::instantiate_with_code`] but without the",
                        "code deployment step. Instead, the `code_hash` of an on-chain deployed vm binary",
                        "must be supplied."
                      ]
                    },
                    {
                      "name": "instantiate_with_code",
                      "fields": [
                        {
                          "name": "value",
                          "type": 77,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "gas_limit",
                          "type": 10,
                          "typeName": "Weight"
                        },
                        {
                          "name": "storage_deposit_limit",
                          "type": 77,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "code",
                          "type": 14,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "data",
                          "type": 14,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "salt",
                          "type": 82,
                          "typeName": "Option<[u8; 32]>"
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Instantiates a new contract from the supplied `code` optionally transferring",
                        "some balance.",
                        "",
                        "This dispatchable has the same effect as calling [`Self::upload_code`] +",
                        "[`Self::instantiate`]. Bundling them together provides efficiency gains. Please",
                        "also check the documentation of [`Self::upload_code`].",
                        "",
                        "# Parameters",
                        "",
                        "* `value`: The balance to transfer from the `origin` to the newly created contract.",
                        "* `gas_limit`: The gas limit enforced when executing the constructor.",
                        "* `storage_deposit_limit`: The maximum amount of balance that can be charged/reserved",
                        "  from the caller to pay for the storage consumed.",
                        "* `code`: The contract code to deploy in raw bytes.",
                        "* `data`: The input data to pass to the contract constructor.",
                        "* `salt`: Used for the address derivation. If `Some` is supplied then `CREATE2`",
                        "\tsemantics are used. If `None` then `CRATE1` is used.",
                        "",
                        "",
                        "Instantiation is executed as follows:",
                        "",
                        "- The supplied `code` is deployed, and a `code_hash` is created for that code.",
                        "- If the `code_hash` already exists on the chain the underlying `code` will be shared.",
                        "- The destination address is computed based on the sender, code_hash and the salt.",
                        "- The smart-contract account is created at the computed address.",
                        "- The `value` is transferred to the new account.",
                        "- The `deploy` function is executed in the context of the newly-created account."
                      ]
                    },
                    {
                      "name": "eth_instantiate_with_code",
                      "fields": [
                        {
                          "name": "value",
                          "type": 83,
                          "typeName": "U256"
                        },
                        {
                          "name": "gas_limit",
                          "type": 10,
                          "typeName": "Weight"
                        },
                        {
                          "name": "storage_deposit_limit",
                          "type": 77,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "code",
                          "type": 14,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "data",
                          "type": 14,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "Same as [`Self::instantiate_with_code`], but intended to be dispatched **only**",
                        "by an EVM transaction through the EVM compatibility layer.",
                        "",
                        "Calling this dispatchable ensures that the origin's nonce is bumped only once,",
                        "via the `CheckNonce` transaction extension. In contrast, [`Self::instantiate_with_code`]",
                        "also bumps the nonce after contract instantiation, since it may be invoked multiple",
                        "times within a batch call transaction."
                      ]
                    },
                    {
                      "name": "eth_call",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 43,
                          "typeName": "H160"
                        },
                        {
                          "name": "value",
                          "type": 83,
                          "typeName": "U256"
                        },
                        {
                          "name": "gas_limit",
                          "type": 10,
                          "typeName": "Weight"
                        },
                        {
                          "name": "storage_deposit_limit",
                          "type": 77,
                          "typeName": "BalanceOf<T>"
                        },
                        {
                          "name": "data",
                          "type": 14,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "Same as [`Self::call`], but intended to be dispatched **only**",
                        "by an EVM transaction through the EVM compatibility layer."
                      ]
                    },
                    {
                      "name": "upload_code",
                      "fields": [
                        {
                          "name": "code",
                          "type": 14,
                          "typeName": "Vec<u8>"
                        },
                        {
                          "name": "storage_deposit_limit",
                          "type": 77,
                          "typeName": "BalanceOf<T>"
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Upload new `code` without instantiating a contract from it.",
                        "",
                        "If the code does not already exist a deposit is reserved from the caller",
                        "The size of the reserve depends on the size of the supplied `code`.",
                        "",
                        "# Note",
                        "",
                        "Anyone can instantiate a contract from any uploaded code and thus prevent its removal.",
                        "To avoid this situation a constructor could employ access control so that it can",
                        "only be instantiated by permissioned entities. The same is true when uploading",
                        "through [`Self::instantiate_with_code`].",
                        "",
                        "If the refcount of the code reaches zero after terminating the last contract that",
                        "references this code, the code will be removed automatically."
                      ]
                    },
                    {
                      "name": "remove_code",
                      "fields": [
                        {
                          "name": "code_hash",
                          "type": 13,
                          "typeName": "sp_core::H256"
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Remove the code stored under `code_hash` and refund the deposit to its owner.",
                        "",
                        "A code can only be removed by its original uploader (its owner) and only if it is",
                        "not used by any contract."
                      ]
                    },
                    {
                      "name": "set_code",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 43,
                          "typeName": "H160"
                        },
                        {
                          "name": "code_hash",
                          "type": 13,
                          "typeName": "sp_core::H256"
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Privileged function that changes the code of an existing contract.",
                        "",
                        "This takes care of updating refcounts and all other necessary operations. Returns",
                        "an error if either the `code_hash` or `dest` do not exist.",
                        "",
                        "# Note",
                        "",
                        "This does **not** change the address of the contract in question. This means",
                        "that the contract address is no longer derived from its code hash after calling",
                        "this dispatchable."
                      ]
                    },
                    {
                      "name": "set_bytecode",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 43,
                          "typeName": "H160"
                        },
                        {
                          "name": "code_hash",
                          "type": 13,
                          "typeName": "sp_core::H256"
                        }
                      ],
                      "index": 20
                    },
                    {
                      "name": "set_balance",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 43,
                          "typeName": "H160"
                        },
                        {
                          "name": "value",
                          "type": 83,
                          "typeName": "U256"
                        }
                      ],
                      "index": 21
                    },
                    {
                      "name": "map_account",
                      "index": 7,
                      "docs": [
                        "Register the callers account id so that it can be used in contract interactions.",
                        "",
                        "This will error if the origin is already mapped or is a eth native `Address20`. It will",
                        "take a deposit that can be released by calling [`Self::unmap_account`]."
                      ]
                    },
                    {
                      "name": "unmap_account",
                      "index": 8,
                      "docs": [
                        "Unregister the callers account id in order to free the deposit.",
                        "",
                        "There is no reason to ever call this function other than freeing up the deposit.",
                        "This is only useful when the account should no longer be used."
                      ]
                    },
                    {
                      "name": "dispatch_as_fallback_account",
                      "fields": [
                        {
                          "name": "call",
                          "type": 72,
                          "typeName": "Box<<T as Config>::RuntimeCall>"
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "Dispatch an `call` with the origin set to the callers fallback address.",
                        "",
                        "Every `AccountId32` can control its corresponding fallback account. The fallback account",
                        "is the `AccountId20` with the last 12 bytes set to `0xEE`. This is essentially a",
                        "recovery function in case an `AccountId20` was used without creating a mapping first."
                      ]
                    },
                    {
                      "name": "set_evm_nonce_call",
                      "fields": [
                        {
                          "name": "address",
                          "type": 43,
                          "typeName": "H160"
                        },
                        {
                          "name": "nonce",
                          "type": 83,
                          "typeName": "U256"
                        }
                      ],
                      "index": 12
                    },
                    {
                      "name": "set_gas_price",
                      "fields": [
                        {
                          "name": "new_price",
                          "type": 12,
                          "typeName": "u64"
                        }
                      ],
                      "index": 13
                    },
                    {
                      "name": "set_storage_at",
                      "fields": [
                        {
                          "name": "address",
                          "type": 43,
                          "typeName": "H160"
                        },
                        {
                          "name": "storage_slot",
                          "type": 83,
                          "typeName": "U256"
                        },
                        {
                          "name": "value",
                          "type": 83,
                          "typeName": "U256"
                        }
                      ],
                      "index": 14
                    },
                    {
                      "name": "set_next_coinbase",
                      "fields": [
                        {
                          "name": "coinbase",
                          "type": 43,
                          "typeName": "H160"
                        }
                      ],
                      "index": 15
                    },
                    {
                      "name": "set_next_prev_randao",
                      "fields": [
                        {
                          "name": "last_block",
                          "type": 83,
                          "typeName": "U256"
                        },
                        {
                          "name": "prev_randao",
                          "type": 13,
                          "typeName": "H256"
                        }
                      ],
                      "index": 16
                    },
                    {
                      "name": "set_block_gas_limit",
                      "fields": [
                        {
                          "name": "block_gas_limit",
                          "type": 12,
                          "typeName": "u64"
                        }
                      ],
                      "index": 17
                    },
                    {
                      "name": "impersonate_account",
                      "fields": [
                        {
                          "name": "account",
                          "type": 43,
                          "typeName": "H160"
                        }
                      ],
                      "index": 18
                    },
                    {
                      "name": "stop_impersonate_account",
                      "fields": [
                        {
                          "name": "account",
                          "type": 43,
                          "typeName": "H160"
                        }
                      ],
                      "index": 19
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 82,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 1
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 1
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 83,
            "type": {
              "path": [
                "primitive_types",
                "U256"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 84,
                      "typeName": "[u64; 4]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 84,
            "type": {
              "def": {
                "array": {
                  "len": 4,
                  "type": 12
                }
              }
            }
          },
          {
            "id": 85,
            "type": {
              "path": [
                "sp_runtime",
                "traits",
                "BlakeTwo256"
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 86,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "block",
                "Block"
              ],
              "params": [
                {
                  "name": "Header",
                  "type": 87
                },
                {
                  "name": "Extrinsic",
                  "type": 88
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "header",
                      "type": 87,
                      "typeName": "Header"
                    },
                    {
                      "name": "extrinsics",
                      "type": 103,
                      "typeName": "Vec<Extrinsic>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 87,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "header",
                "Header"
              ],
              "params": [
                {
                  "name": "Number",
                  "type": 4
                },
                {
                  "name": "Hash",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "parent_hash",
                      "type": 13,
                      "typeName": "Hash::Output"
                    },
                    {
                      "name": "number",
                      "type": 50,
                      "typeName": "Number"
                    },
                    {
                      "name": "state_root",
                      "type": 13,
                      "typeName": "Hash::Output"
                    },
                    {
                      "name": "extrinsics_root",
                      "type": 13,
                      "typeName": "Hash::Output"
                    },
                    {
                      "name": "digest",
                      "type": 15,
                      "typeName": "Digest"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 88,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "unchecked_extrinsic",
                "UncheckedExtrinsic"
              ],
              "params": [
                {
                  "name": "Address",
                  "type": 75
                },
                {
                  "name": "Call",
                  "type": 72
                },
                {
                  "name": "Signature",
                  "type": 89
                },
                {
                  "name": "Extra",
                  "type": 92
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 14
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 89,
            "type": {
              "path": [
                "sp_runtime",
                "MultiSignature"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ed25519",
                      "fields": [
                        {
                          "type": 90,
                          "typeName": "ed25519::Signature"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Sr25519",
                      "fields": [
                        {
                          "type": 90,
                          "typeName": "sr25519::Signature"
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Ecdsa",
                      "fields": [
                        {
                          "type": 91,
                          "typeName": "ecdsa::Signature"
                        }
                      ],
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 90,
            "type": {
              "def": {
                "array": {
                  "len": 64,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 91,
            "type": {
              "def": {
                "array": {
                  "len": 65,
                  "type": 2
                }
              }
            }
          },
          {
            "id": 92,
            "type": {
              "def": {
                "tuple": [
                  93,
                  94,
                  95,
                  96,
                  97,
                  99,
                  100,
                  101,
                  102
                ]
              }
            }
          },
          {
            "id": 93,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_non_zero_sender",
                "CheckNonZeroSender"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 94,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_spec_version",
                "CheckSpecVersion"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 95,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_tx_version",
                "CheckTxVersion"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 96,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_genesis",
                "CheckGenesis"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 97,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_mortality",
                "CheckMortality"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 98,
                      "typeName": "Era"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 98,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "era",
                "Era"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Immortal",
                      "index": 0
                    },
                    {
                      "name": "Mortal1",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 1
                    },
                    {
                      "name": "Mortal2",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "Mortal3",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "Mortal4",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 4
                    },
                    {
                      "name": "Mortal5",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 5
                    },
                    {
                      "name": "Mortal6",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 6
                    },
                    {
                      "name": "Mortal7",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "Mortal8",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 8
                    },
                    {
                      "name": "Mortal9",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 9
                    },
                    {
                      "name": "Mortal10",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 10
                    },
                    {
                      "name": "Mortal11",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 11
                    },
                    {
                      "name": "Mortal12",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 12
                    },
                    {
                      "name": "Mortal13",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 13
                    },
                    {
                      "name": "Mortal14",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 14
                    },
                    {
                      "name": "Mortal15",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 15
                    },
                    {
                      "name": "Mortal16",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 16
                    },
                    {
                      "name": "Mortal17",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 17
                    },
                    {
                      "name": "Mortal18",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 18
                    },
                    {
                      "name": "Mortal19",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 19
                    },
                    {
                      "name": "Mortal20",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 20
                    },
                    {
                      "name": "Mortal21",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 21
                    },
                    {
                      "name": "Mortal22",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 22
                    },
                    {
                      "name": "Mortal23",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 23
                    },
                    {
                      "name": "Mortal24",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 24
                    },
                    {
                      "name": "Mortal25",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 25
                    },
                    {
                      "name": "Mortal26",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 26
                    },
                    {
                      "name": "Mortal27",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 27
                    },
                    {
                      "name": "Mortal28",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 28
                    },
                    {
                      "name": "Mortal29",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 29
                    },
                    {
                      "name": "Mortal30",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 30
                    },
                    {
                      "name": "Mortal31",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 31
                    },
                    {
                      "name": "Mortal32",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 32
                    },
                    {
                      "name": "Mortal33",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 33
                    },
                    {
                      "name": "Mortal34",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 34
                    },
                    {
                      "name": "Mortal35",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 35
                    },
                    {
                      "name": "Mortal36",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 36
                    },
                    {
                      "name": "Mortal37",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 37
                    },
                    {
                      "name": "Mortal38",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 38
                    },
                    {
                      "name": "Mortal39",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 39
                    },
                    {
                      "name": "Mortal40",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 40
                    },
                    {
                      "name": "Mortal41",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 41
                    },
                    {
                      "name": "Mortal42",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 42
                    },
                    {
                      "name": "Mortal43",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 43
                    },
                    {
                      "name": "Mortal44",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 44
                    },
                    {
                      "name": "Mortal45",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 45
                    },
                    {
                      "name": "Mortal46",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 46
                    },
                    {
                      "name": "Mortal47",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 47
                    },
                    {
                      "name": "Mortal48",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 48
                    },
                    {
                      "name": "Mortal49",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 49
                    },
                    {
                      "name": "Mortal50",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 50
                    },
                    {
                      "name": "Mortal51",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 51
                    },
                    {
                      "name": "Mortal52",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 52
                    },
                    {
                      "name": "Mortal53",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 53
                    },
                    {
                      "name": "Mortal54",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 54
                    },
                    {
                      "name": "Mortal55",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 55
                    },
                    {
                      "name": "Mortal56",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 56
                    },
                    {
                      "name": "Mortal57",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 57
                    },
                    {
                      "name": "Mortal58",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 58
                    },
                    {
                      "name": "Mortal59",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 59
                    },
                    {
                      "name": "Mortal60",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 60
                    },
                    {
                      "name": "Mortal61",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 61
                    },
                    {
                      "name": "Mortal62",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 62
                    },
                    {
                      "name": "Mortal63",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 63
                    },
                    {
                      "name": "Mortal64",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 64
                    },
                    {
                      "name": "Mortal65",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 65
                    },
                    {
                      "name": "Mortal66",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 66
                    },
                    {
                      "name": "Mortal67",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 67
                    },
                    {
                      "name": "Mortal68",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 68
                    },
                    {
                      "name": "Mortal69",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 69
                    },
                    {
                      "name": "Mortal70",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 70
                    },
                    {
                      "name": "Mortal71",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 71
                    },
                    {
                      "name": "Mortal72",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 72
                    },
                    {
                      "name": "Mortal73",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 73
                    },
                    {
                      "name": "Mortal74",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 74
                    },
                    {
                      "name": "Mortal75",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 75
                    },
                    {
                      "name": "Mortal76",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 76
                    },
                    {
                      "name": "Mortal77",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 77
                    },
                    {
                      "name": "Mortal78",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 78
                    },
                    {
                      "name": "Mortal79",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 79
                    },
                    {
                      "name": "Mortal80",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 80
                    },
                    {
                      "name": "Mortal81",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 81
                    },
                    {
                      "name": "Mortal82",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 82
                    },
                    {
                      "name": "Mortal83",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 83
                    },
                    {
                      "name": "Mortal84",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 84
                    },
                    {
                      "name": "Mortal85",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 85
                    },
                    {
                      "name": "Mortal86",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 86
                    },
                    {
                      "name": "Mortal87",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 87
                    },
                    {
                      "name": "Mortal88",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 88
                    },
                    {
                      "name": "Mortal89",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 89
                    },
                    {
                      "name": "Mortal90",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 90
                    },
                    {
                      "name": "Mortal91",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 91
                    },
                    {
                      "name": "Mortal92",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 92
                    },
                    {
                      "name": "Mortal93",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 93
                    },
                    {
                      "name": "Mortal94",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 94
                    },
                    {
                      "name": "Mortal95",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 95
                    },
                    {
                      "name": "Mortal96",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 96
                    },
                    {
                      "name": "Mortal97",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 97
                    },
                    {
                      "name": "Mortal98",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 98
                    },
                    {
                      "name": "Mortal99",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 99
                    },
                    {
                      "name": "Mortal100",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 100
                    },
                    {
                      "name": "Mortal101",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 101
                    },
                    {
                      "name": "Mortal102",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 102
                    },
                    {
                      "name": "Mortal103",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 103
                    },
                    {
                      "name": "Mortal104",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 104
                    },
                    {
                      "name": "Mortal105",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 105
                    },
                    {
                      "name": "Mortal106",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 106
                    },
                    {
                      "name": "Mortal107",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 107
                    },
                    {
                      "name": "Mortal108",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 108
                    },
                    {
                      "name": "Mortal109",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 109
                    },
                    {
                      "name": "Mortal110",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 110
                    },
                    {
                      "name": "Mortal111",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 111
                    },
                    {
                      "name": "Mortal112",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 112
                    },
                    {
                      "name": "Mortal113",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 113
                    },
                    {
                      "name": "Mortal114",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 114
                    },
                    {
                      "name": "Mortal115",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 115
                    },
                    {
                      "name": "Mortal116",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 116
                    },
                    {
                      "name": "Mortal117",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 117
                    },
                    {
                      "name": "Mortal118",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 118
                    },
                    {
                      "name": "Mortal119",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 119
                    },
                    {
                      "name": "Mortal120",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 120
                    },
                    {
                      "name": "Mortal121",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 121
                    },
                    {
                      "name": "Mortal122",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 122
                    },
                    {
                      "name": "Mortal123",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 123
                    },
                    {
                      "name": "Mortal124",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 124
                    },
                    {
                      "name": "Mortal125",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 125
                    },
                    {
                      "name": "Mortal126",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 126
                    },
                    {
                      "name": "Mortal127",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 127
                    },
                    {
                      "name": "Mortal128",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 128
                    },
                    {
                      "name": "Mortal129",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 129
                    },
                    {
                      "name": "Mortal130",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 130
                    },
                    {
                      "name": "Mortal131",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 131
                    },
                    {
                      "name": "Mortal132",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 132
                    },
                    {
                      "name": "Mortal133",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 133
                    },
                    {
                      "name": "Mortal134",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 134
                    },
                    {
                      "name": "Mortal135",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 135
                    },
                    {
                      "name": "Mortal136",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 136
                    },
                    {
                      "name": "Mortal137",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 137
                    },
                    {
                      "name": "Mortal138",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 138
                    },
                    {
                      "name": "Mortal139",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 139
                    },
                    {
                      "name": "Mortal140",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 140
                    },
                    {
                      "name": "Mortal141",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 141
                    },
                    {
                      "name": "Mortal142",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 142
                    },
                    {
                      "name": "Mortal143",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 143
                    },
                    {
                      "name": "Mortal144",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 144
                    },
                    {
                      "name": "Mortal145",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 145
                    },
                    {
                      "name": "Mortal146",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 146
                    },
                    {
                      "name": "Mortal147",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 147
                    },
                    {
                      "name": "Mortal148",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 148
                    },
                    {
                      "name": "Mortal149",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 149
                    },
                    {
                      "name": "Mortal150",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 150
                    },
                    {
                      "name": "Mortal151",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 151
                    },
                    {
                      "name": "Mortal152",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 152
                    },
                    {
                      "name": "Mortal153",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 153
                    },
                    {
                      "name": "Mortal154",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 154
                    },
                    {
                      "name": "Mortal155",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 155
                    },
                    {
                      "name": "Mortal156",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 156
                    },
                    {
                      "name": "Mortal157",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 157
                    },
                    {
                      "name": "Mortal158",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 158
                    },
                    {
                      "name": "Mortal159",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 159
                    },
                    {
                      "name": "Mortal160",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 160
                    },
                    {
                      "name": "Mortal161",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 161
                    },
                    {
                      "name": "Mortal162",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 162
                    },
                    {
                      "name": "Mortal163",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 163
                    },
                    {
                      "name": "Mortal164",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 164
                    },
                    {
                      "name": "Mortal165",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 165
                    },
                    {
                      "name": "Mortal166",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 166
                    },
                    {
                      "name": "Mortal167",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 167
                    },
                    {
                      "name": "Mortal168",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 168
                    },
                    {
                      "name": "Mortal169",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 169
                    },
                    {
                      "name": "Mortal170",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 170
                    },
                    {
                      "name": "Mortal171",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 171
                    },
                    {
                      "name": "Mortal172",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 172
                    },
                    {
                      "name": "Mortal173",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 173
                    },
                    {
                      "name": "Mortal174",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 174
                    },
                    {
                      "name": "Mortal175",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 175
                    },
                    {
                      "name": "Mortal176",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 176
                    },
                    {
                      "name": "Mortal177",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 177
                    },
                    {
                      "name": "Mortal178",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 178
                    },
                    {
                      "name": "Mortal179",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 179
                    },
                    {
                      "name": "Mortal180",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 180
                    },
                    {
                      "name": "Mortal181",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 181
                    },
                    {
                      "name": "Mortal182",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 182
                    },
                    {
                      "name": "Mortal183",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 183
                    },
                    {
                      "name": "Mortal184",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 184
                    },
                    {
                      "name": "Mortal185",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 185
                    },
                    {
                      "name": "Mortal186",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 186
                    },
                    {
                      "name": "Mortal187",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 187
                    },
                    {
                      "name": "Mortal188",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 188
                    },
                    {
                      "name": "Mortal189",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 189
                    },
                    {
                      "name": "Mortal190",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 190
                    },
                    {
                      "name": "Mortal191",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 191
                    },
                    {
                      "name": "Mortal192",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 192
                    },
                    {
                      "name": "Mortal193",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 193
                    },
                    {
                      "name": "Mortal194",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 194
                    },
                    {
                      "name": "Mortal195",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 195
                    },
                    {
                      "name": "Mortal196",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 196
                    },
                    {
                      "name": "Mortal197",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 197
                    },
                    {
                      "name": "Mortal198",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 198
                    },
                    {
                      "name": "Mortal199",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 199
                    },
                    {
                      "name": "Mortal200",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 200
                    },
                    {
                      "name": "Mortal201",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 201
                    },
                    {
                      "name": "Mortal202",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 202
                    },
                    {
                      "name": "Mortal203",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 203
                    },
                    {
                      "name": "Mortal204",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 204
                    },
                    {
                      "name": "Mortal205",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 205
                    },
                    {
                      "name": "Mortal206",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 206
                    },
                    {
                      "name": "Mortal207",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 207
                    },
                    {
                      "name": "Mortal208",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 208
                    },
                    {
                      "name": "Mortal209",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 209
                    },
                    {
                      "name": "Mortal210",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 210
                    },
                    {
                      "name": "Mortal211",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 211
                    },
                    {
                      "name": "Mortal212",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 212
                    },
                    {
                      "name": "Mortal213",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 213
                    },
                    {
                      "name": "Mortal214",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 214
                    },
                    {
                      "name": "Mortal215",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 215
                    },
                    {
                      "name": "Mortal216",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 216
                    },
                    {
                      "name": "Mortal217",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 217
                    },
                    {
                      "name": "Mortal218",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 218
                    },
                    {
                      "name": "Mortal219",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 219
                    },
                    {
                      "name": "Mortal220",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 220
                    },
                    {
                      "name": "Mortal221",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 221
                    },
                    {
                      "name": "Mortal222",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 222
                    },
                    {
                      "name": "Mortal223",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 223
                    },
                    {
                      "name": "Mortal224",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 224
                    },
                    {
                      "name": "Mortal225",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 225
                    },
                    {
                      "name": "Mortal226",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 226
                    },
                    {
                      "name": "Mortal227",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 227
                    },
                    {
                      "name": "Mortal228",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 228
                    },
                    {
                      "name": "Mortal229",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 229
                    },
                    {
                      "name": "Mortal230",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 230
                    },
                    {
                      "name": "Mortal231",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 231
                    },
                    {
                      "name": "Mortal232",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 232
                    },
                    {
                      "name": "Mortal233",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 233
                    },
                    {
                      "name": "Mortal234",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 234
                    },
                    {
                      "name": "Mortal235",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 235
                    },
                    {
                      "name": "Mortal236",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 236
                    },
                    {
                      "name": "Mortal237",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 237
                    },
                    {
                      "name": "Mortal238",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 238
                    },
                    {
                      "name": "Mortal239",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 239
                    },
                    {
                      "name": "Mortal240",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 240
                    },
                    {
                      "name": "Mortal241",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 241
                    },
                    {
                      "name": "Mortal242",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 242
                    },
                    {
                      "name": "Mortal243",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 243
                    },
                    {
                      "name": "Mortal244",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 244
                    },
                    {
                      "name": "Mortal245",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 245
                    },
                    {
                      "name": "Mortal246",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 246
                    },
                    {
                      "name": "Mortal247",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 247
                    },
                    {
                      "name": "Mortal248",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 248
                    },
                    {
                      "name": "Mortal249",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 249
                    },
                    {
                      "name": "Mortal250",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 250
                    },
                    {
                      "name": "Mortal251",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 251
                    },
                    {
                      "name": "Mortal252",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 252
                    },
                    {
                      "name": "Mortal253",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 253
                    },
                    {
                      "name": "Mortal254",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 254
                    },
                    {
                      "name": "Mortal255",
                      "fields": [
                        {
                          "type": 2
                        }
                      ],
                      "index": 255
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 99,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_nonce",
                "CheckNonce"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 50,
                      "typeName": "T::Nonce"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 100,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_weight",
                "CheckWeight"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 101,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "ChargeTransactionPayment"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 77,
                      "typeName": "BalanceOf<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 102,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "weight_reclaim",
                "WeightReclaim"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {}
              }
            }
          },
          {
            "id": 103,
            "type": {
              "def": {
                "sequence": {
                  "type": 88
                }
              }
            }
          },
          {
            "id": 104,
            "type": {
              "path": [
                "bounded_collections",
                "weak_bounded_vec",
                "WeakBoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 105
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 107,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 105,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "BalanceLock"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 69,
                      "typeName": "LockIdentifier"
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "reasons",
                      "type": 106,
                      "typeName": "Reasons"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 106,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "Reasons"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Fee",
                      "index": 0
                    },
                    {
                      "name": "Misc",
                      "index": 1
                    },
                    {
                      "name": "All",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 107,
            "type": {
              "def": {
                "sequence": {
                  "type": 105
                }
              }
            }
          },
          {
            "id": 108,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 109
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 110,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 109,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "ReserveData"
              ],
              "params": [
                {
                  "name": "ReserveIdentifier",
                  "type": 39
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 39,
                      "typeName": "ReserveIdentifier"
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 110,
            "type": {
              "def": {
                "sequence": {
                  "type": 109
                }
              }
            }
          },
          {
            "id": 111,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 112
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 113,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 112,
            "type": {
              "path": [
                "frame_support",
                "traits",
                "tokens",
                "misc",
                "IdAmount"
              ],
              "params": [
                {
                  "name": "Id",
                  "type": 34
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 34,
                      "typeName": "Id"
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 113,
            "type": {
              "def": {
                "sequence": {
                  "type": 112
                }
              }
            }
          },
          {
            "id": 114,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 115
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 116,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 115,
            "type": {
              "path": [
                "frame_support",
                "traits",
                "tokens",
                "misc",
                "IdAmount"
              ],
              "params": [
                {
                  "name": "Id",
                  "type": 39
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 39,
                      "typeName": "Id"
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 116,
            "type": {
              "def": {
                "sequence": {
                  "type": 115
                }
              }
            }
          },
          {
            "id": 117,
            "type": {
              "path": [
                "pallet_balances",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "VestingBalance",
                      "index": 0,
                      "docs": [
                        "Vesting balance too high to send value."
                      ]
                    },
                    {
                      "name": "LiquidityRestrictions",
                      "index": 1,
                      "docs": [
                        "Account liquidity restrictions prevent withdrawal."
                      ]
                    },
                    {
                      "name": "InsufficientBalance",
                      "index": 2,
                      "docs": [
                        "Balance too low to send value."
                      ]
                    },
                    {
                      "name": "ExistentialDeposit",
                      "index": 3,
                      "docs": [
                        "Value too low to create account due to existential deposit."
                      ]
                    },
                    {
                      "name": "Expendability",
                      "index": 4,
                      "docs": [
                        "Transfer/payment would kill account."
                      ]
                    },
                    {
                      "name": "ExistingVestingSchedule",
                      "index": 5,
                      "docs": [
                        "A vesting schedule already exists for this account."
                      ]
                    },
                    {
                      "name": "DeadAccount",
                      "index": 6,
                      "docs": [
                        "Beneficiary account must pre-exist."
                      ]
                    },
                    {
                      "name": "TooManyReserves",
                      "index": 7,
                      "docs": [
                        "Number of named reserves exceed `MaxReserves`."
                      ]
                    },
                    {
                      "name": "TooManyHolds",
                      "index": 8,
                      "docs": [
                        "Number of holds exceed `VariantCountOf<T::RuntimeHoldReason>`."
                      ]
                    },
                    {
                      "name": "TooManyFreezes",
                      "index": 9,
                      "docs": [
                        "Number of freezes exceed `MaxFreezes`."
                      ]
                    },
                    {
                      "name": "IssuanceDeactivated",
                      "index": 10,
                      "docs": [
                        "The issuance cannot be modified since it is already deactivated."
                      ]
                    },
                    {
                      "name": "DeltaZero",
                      "index": 11,
                      "docs": [
                        "The delta cannot be zero."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 118,
            "type": {
              "path": [
                "pallet_sudo",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "RequireSudo",
                      "index": 0,
                      "docs": [
                        "Sender must be the Sudo account."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error for the Sudo pallet."
              ]
            }
          },
          {
            "id": 119,
            "type": {
              "path": [
                "sp_arithmetic",
                "fixed_point",
                "FixedU128"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 6,
                      "typeName": "u128"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 120,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "Releases"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V1Ancient",
                      "index": 0
                    },
                    {
                      "name": "V2",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 121,
            "type": {
              "path": [
                "pallet_revive",
                "vm",
                "CodeInfo"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "owner",
                      "type": 0,
                      "typeName": "AccountIdOf<T>"
                    },
                    {
                      "name": "deposit",
                      "type": 77,
                      "typeName": "BalanceOf<T>"
                    },
                    {
                      "name": "refcount",
                      "type": 11,
                      "typeName": "u64"
                    },
                    {
                      "name": "code_len",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "code_type",
                      "type": 122,
                      "typeName": "BytecodeType"
                    },
                    {
                      "name": "behaviour_version",
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 122,
            "type": {
              "path": [
                "pallet_revive",
                "vm",
                "BytecodeType"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Pvm",
                      "index": 0
                    },
                    {
                      "name": "Evm",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 123,
            "type": {
              "path": [
                "pallet_revive",
                "storage",
                "EvmNonce"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "difference",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "positive",
                      "type": 8,
                      "typeName": "bool"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 124,
            "type": {
              "path": [
                "pallet_revive",
                "storage",
                "AccountInfo"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "account_type",
                      "type": 125,
                      "typeName": "AccountType<T>"
                    },
                    {
                      "name": "dust",
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 125,
            "type": {
              "path": [
                "pallet_revive",
                "storage",
                "AccountType"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Contract",
                      "fields": [
                        {
                          "type": 126,
                          "typeName": "ContractInfo<T>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "EOA",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 126,
            "type": {
              "path": [
                "pallet_revive",
                "storage",
                "ContractInfo"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "trie_id",
                      "type": 127,
                      "typeName": "TrieId"
                    },
                    {
                      "name": "code_hash",
                      "type": 13,
                      "typeName": "sp_core::H256"
                    },
                    {
                      "name": "storage_bytes",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "storage_items",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "storage_byte_deposit",
                      "type": 6,
                      "typeName": "BalanceOf<T>"
                    },
                    {
                      "name": "storage_item_deposit",
                      "type": 6,
                      "typeName": "BalanceOf<T>"
                    },
                    {
                      "name": "storage_base_deposit",
                      "type": 6,
                      "typeName": "BalanceOf<T>"
                    },
                    {
                      "name": "immutable_data_len",
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 127,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 14,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 128,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 14,
                      "typeName": "Vec<T>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 129,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 12
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 12
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 130,
            "type": {
              "path": [
                "pallet_revive",
                "storage",
                "DeletionQueueManager"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "insert_counter",
                      "type": 4,
                      "typeName": "u32"
                    },
                    {
                      "name": "delete_counter",
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 131,
            "type": {
              "path": [
                "sp_arithmetic",
                "per_things",
                "Perbill"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 132,
            "type": {
              "path": [
                "pallet_revive",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidSchedule",
                      "index": 1,
                      "docs": [
                        "Invalid schedule supplied, e.g. with zero weight of a basic operation."
                      ]
                    },
                    {
                      "name": "InvalidCallFlags",
                      "index": 2,
                      "docs": [
                        "Invalid combination of flags supplied to `seal_call` or `seal_delegate_call`."
                      ]
                    },
                    {
                      "name": "OutOfGas",
                      "index": 3,
                      "docs": [
                        "The executed contract exhausted its gas limit."
                      ]
                    },
                    {
                      "name": "TransferFailed",
                      "index": 4,
                      "docs": [
                        "Performing the requested transfer failed. Probably because there isn't enough",
                        "free balance in the sender's account."
                      ]
                    },
                    {
                      "name": "MaxCallDepthReached",
                      "index": 5,
                      "docs": [
                        "Performing a call was denied because the calling depth reached the limit",
                        "of what is specified in the schedule."
                      ]
                    },
                    {
                      "name": "ContractNotFound",
                      "index": 6,
                      "docs": [
                        "No contract was found at the specified address."
                      ]
                    },
                    {
                      "name": "CodeNotFound",
                      "index": 7,
                      "docs": [
                        "No code could be found at the supplied code hash."
                      ]
                    },
                    {
                      "name": "CodeInfoNotFound",
                      "index": 8,
                      "docs": [
                        "No code info could be found at the supplied code hash."
                      ]
                    },
                    {
                      "name": "OutOfBounds",
                      "index": 9,
                      "docs": [
                        "A buffer outside of sandbox memory was passed to a contract API function."
                      ]
                    },
                    {
                      "name": "DecodingFailed",
                      "index": 10,
                      "docs": [
                        "Input passed to a contract API function failed to decode as expected type."
                      ]
                    },
                    {
                      "name": "ContractTrapped",
                      "index": 11,
                      "docs": [
                        "Contract trapped during execution."
                      ]
                    },
                    {
                      "name": "ValueTooLarge",
                      "index": 12,
                      "docs": [
                        "Event body or storage item exceeds [`limits::PAYLOAD_BYTES`]."
                      ]
                    },
                    {
                      "name": "TerminatedWhileReentrant",
                      "index": 13,
                      "docs": [
                        "Termination of a contract is not allowed while the contract is already",
                        "on the call stack. Can be triggered by `seal_terminate`."
                      ]
                    },
                    {
                      "name": "InputForwarded",
                      "index": 14,
                      "docs": [
                        "`seal_call` forwarded this contracts input. It therefore is no longer available."
                      ]
                    },
                    {
                      "name": "TooManyTopics",
                      "index": 15,
                      "docs": [
                        "The amount of topics passed to `seal_deposit_events` exceeds the limit."
                      ]
                    },
                    {
                      "name": "DuplicateContract",
                      "index": 18,
                      "docs": [
                        "A contract with the same AccountId already exists."
                      ]
                    },
                    {
                      "name": "TerminatedInConstructor",
                      "index": 19,
                      "docs": [
                        "A contract self destructed in its constructor.",
                        "",
                        "This can be triggered by a call to `seal_terminate`."
                      ]
                    },
                    {
                      "name": "ReentranceDenied",
                      "index": 20,
                      "docs": [
                        "A call tried to invoke a contract that is flagged as non-reentrant."
                      ]
                    },
                    {
                      "name": "ReenteredPallet",
                      "index": 21,
                      "docs": [
                        "A contract called into the runtime which then called back into this pallet."
                      ]
                    },
                    {
                      "name": "StateChangeDenied",
                      "index": 22,
                      "docs": [
                        "A contract attempted to invoke a state modifying API while being in read-only mode."
                      ]
                    },
                    {
                      "name": "StorageDepositNotEnoughFunds",
                      "index": 23,
                      "docs": [
                        "Origin doesn't have enough balance to pay the required storage deposits."
                      ]
                    },
                    {
                      "name": "StorageDepositLimitExhausted",
                      "index": 24,
                      "docs": [
                        "More storage was created than allowed by the storage deposit limit."
                      ]
                    },
                    {
                      "name": "CodeInUse",
                      "index": 25,
                      "docs": [
                        "Code removal was denied because the code is still in use by at least one contract."
                      ]
                    },
                    {
                      "name": "ContractReverted",
                      "index": 26,
                      "docs": [
                        "The contract ran to completion but decided to revert its storage changes.",
                        "Please note that this error is only returned from extrinsics. When called directly",
                        "or via RPC an `Ok` will be returned. In this case the caller needs to inspect the flags",
                        "to determine whether a reversion has taken place."
                      ]
                    },
                    {
                      "name": "CodeRejected",
                      "index": 27,
                      "docs": [
                        "The contract failed to compile or is missing the correct entry points.",
                        "",
                        "A more detailed error can be found on the node console if debug messages are enabled",
                        "by supplying `-lruntime::revive=debug`."
                      ]
                    },
                    {
                      "name": "BlobTooLarge",
                      "index": 28,
                      "docs": [
                        "The code blob supplied is larger than [`limits::code::BLOB_BYTES`]."
                      ]
                    },
                    {
                      "name": "StaticMemoryTooLarge",
                      "index": 29,
                      "docs": [
                        "The contract declares too much memory (ro + rw + stack)."
                      ]
                    },
                    {
                      "name": "BasicBlockTooLarge",
                      "index": 30,
                      "docs": [
                        "The program contains a basic block that is larger than allowed."
                      ]
                    },
                    {
                      "name": "InvalidInstruction",
                      "index": 31,
                      "docs": [
                        "The program contains an invalid instruction."
                      ]
                    },
                    {
                      "name": "MaxDelegateDependenciesReached",
                      "index": 32,
                      "docs": [
                        "The contract has reached its maximum number of delegate dependencies."
                      ]
                    },
                    {
                      "name": "DelegateDependencyNotFound",
                      "index": 33,
                      "docs": [
                        "The dependency was not found in the contract's delegate dependencies."
                      ]
                    },
                    {
                      "name": "DelegateDependencyAlreadyExists",
                      "index": 34,
                      "docs": [
                        "The contract already depends on the given delegate dependency."
                      ]
                    },
                    {
                      "name": "CannotAddSelfAsDelegateDependency",
                      "index": 35,
                      "docs": [
                        "Can not add a delegate dependency to the code hash of the contract itself."
                      ]
                    },
                    {
                      "name": "OutOfTransientStorage",
                      "index": 36,
                      "docs": [
                        "Can not add more data to transient storage."
                      ]
                    },
                    {
                      "name": "InvalidSyscall",
                      "index": 37,
                      "docs": [
                        "The contract tried to call a syscall which does not exist (at its current api level)."
                      ]
                    },
                    {
                      "name": "InvalidStorageFlags",
                      "index": 38,
                      "docs": [
                        "Invalid storage flags were passed to one of the storage syscalls."
                      ]
                    },
                    {
                      "name": "ExecutionFailed",
                      "index": 39,
                      "docs": [
                        "PolkaVM failed during code execution. Probably due to a malformed program."
                      ]
                    },
                    {
                      "name": "BalanceConversionFailed",
                      "index": 40,
                      "docs": [
                        "Failed to convert a U256 to a Balance."
                      ]
                    },
                    {
                      "name": "InvalidImmutableAccess",
                      "index": 42,
                      "docs": [
                        "Immutable data can only be set during deploys and only be read during calls.",
                        "Additionally, it is only valid to set the data once and it must not be empty."
                      ]
                    },
                    {
                      "name": "AccountUnmapped",
                      "index": 43,
                      "docs": [
                        "An `AccountID32` account tried to interact with the pallet without having a mapping.",
                        "",
                        "Call [`Pallet::map_account`] in order to create a mapping for the account."
                      ]
                    },
                    {
                      "name": "AccountAlreadyMapped",
                      "index": 44,
                      "docs": [
                        "Tried to map an account that is already mapped."
                      ]
                    },
                    {
                      "name": "InvalidGenericTransaction",
                      "index": 45,
                      "docs": [
                        "The transaction used to dry-run a contract is invalid."
                      ]
                    },
                    {
                      "name": "RefcountOverOrUnderflow",
                      "index": 46,
                      "docs": [
                        "The refcount of a code either over or underflowed."
                      ]
                    },
                    {
                      "name": "UnsupportedPrecompileAddress",
                      "index": 47,
                      "docs": [
                        "Unsupported precompile address."
                      ]
                    },
                    {
                      "name": "CallDataTooLarge",
                      "index": 48,
                      "docs": [
                        "The calldata exceeds [`limits::CALLDATA_BYTES`]."
                      ]
                    },
                    {
                      "name": "ReturnDataTooLarge",
                      "index": 49,
                      "docs": [
                        "The return data exceeds [`limits::CALLDATA_BYTES`]."
                      ]
                    },
                    {
                      "name": "NonceTooLow",
                      "index": 50,
                      "docs": [
                        "Cannot set a nonce lower than current"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 133,
            "type": {
              "path": [
                "sp_runtime",
                "ExtrinsicInclusionMode"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AllExtrinsics",
                      "index": 0
                    },
                    {
                      "name": "OnlyInherents",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 134,
            "type": {
              "path": [
                "sp_core",
                "OpaqueMetadata"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 14,
                      "typeName": "Vec<u8>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 135,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 134
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 134
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 136,
            "type": {
              "def": {
                "sequence": {
                  "type": 4
                }
              }
            }
          },
          {
            "id": 137,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 38
                },
                {
                  "name": "E",
                  "type": 138
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 38
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 138
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 138,
            "type": {
              "path": [
                "sp_runtime",
                "transaction_validity",
                "TransactionValidityError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Invalid",
                      "fields": [
                        {
                          "type": 139,
                          "typeName": "InvalidTransaction"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Unknown",
                      "fields": [
                        {
                          "type": 140,
                          "typeName": "UnknownTransaction"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 139,
            "type": {
              "path": [
                "sp_runtime",
                "transaction_validity",
                "InvalidTransaction"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Call",
                      "index": 0
                    },
                    {
                      "name": "Payment",
                      "index": 1
                    },
                    {
                      "name": "Future",
                      "index": 2
                    },
                    {
                      "name": "Stale",
                      "index": 3
                    },
                    {
                      "name": "BadProof",
                      "index": 4
                    },
                    {
                      "name": "AncientBirthBlock",
                      "index": 5
                    },
                    {
                      "name": "ExhaustsResources",
                      "index": 6
                    },
                    {
                      "name": "Custom",
                      "fields": [
                        {
                          "type": 2,
                          "typeName": "u8"
                        }
                      ],
                      "index": 7
                    },
                    {
                      "name": "BadMandatory",
                      "index": 8
                    },
                    {
                      "name": "MandatoryValidation",
                      "index": 9
                    },
                    {
                      "name": "BadSigner",
                      "index": 10
                    },
                    {
                      "name": "IndeterminateImplicit",
                      "index": 11
                    },
                    {
                      "name": "UnknownOrigin",
                      "index": 12
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 140,
            "type": {
              "path": [
                "sp_runtime",
                "transaction_validity",
                "UnknownTransaction"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "CannotLookup",
                      "index": 0
                    },
                    {
                      "name": "NoUnsignedValidator",
                      "index": 1
                    },
                    {
                      "name": "Custom",
                      "fields": [
                        {
                          "type": 2,
                          "typeName": "u8"
                        }
                      ],
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 141,
            "type": {
              "path": [
                "sp_inherents",
                "InherentData"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "data",
                      "type": 142,
                      "typeName": "BTreeMap<InherentIdentifier, Vec<u8>>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 142,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 69
                },
                {
                  "name": "V",
                  "type": 14
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 143
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 143,
            "type": {
              "def": {
                "sequence": {
                  "type": 144
                }
              }
            }
          },
          {
            "id": 144,
            "type": {
              "def": {
                "tuple": [
                  69,
                  14
                ]
              }
            }
          },
          {
            "id": 145,
            "type": {
              "path": [
                "sp_inherents",
                "CheckInherentsResult"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "okay",
                      "type": 8,
                      "typeName": "bool"
                    },
                    {
                      "name": "fatal_error",
                      "type": 8,
                      "typeName": "bool"
                    },
                    {
                      "name": "errors",
                      "type": 141,
                      "typeName": "InherentData"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 146,
            "type": {
              "path": [
                "sp_runtime",
                "transaction_validity",
                "TransactionSource"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InBlock",
                      "index": 0
                    },
                    {
                      "name": "Local",
                      "index": 1
                    },
                    {
                      "name": "External",
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 147,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 148
                },
                {
                  "name": "E",
                  "type": 138
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 148
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 138
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 148,
            "type": {
              "path": [
                "sp_runtime",
                "transaction_validity",
                "ValidTransaction"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "priority",
                      "type": 12,
                      "typeName": "TransactionPriority"
                    },
                    {
                      "name": "requires",
                      "type": 57,
                      "typeName": "Vec<TransactionTag>"
                    },
                    {
                      "name": "provides",
                      "type": 57,
                      "typeName": "Vec<TransactionTag>"
                    },
                    {
                      "name": "longevity",
                      "type": 12,
                      "typeName": "TransactionLongevity"
                    },
                    {
                      "name": "propagate",
                      "type": 8,
                      "typeName": "bool"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 149,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 14
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 14
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 150,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 151
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 151
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 151,
            "type": {
              "def": {
                "sequence": {
                  "type": 152
                }
              }
            }
          },
          {
            "id": 152,
            "type": {
              "def": {
                "tuple": [
                  14,
                  153
                ]
              }
            }
          },
          {
            "id": 153,
            "type": {
              "path": [
                "sp_core",
                "crypto",
                "KeyTypeId"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 18,
                      "typeName": "[u8; 4]"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 154,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "types",
                "RuntimeDispatchInfo"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "Weight",
                  "type": 10
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "weight",
                      "type": 10,
                      "typeName": "Weight"
                    },
                    {
                      "name": "class",
                      "type": 24,
                      "typeName": "DispatchClass"
                    },
                    {
                      "name": "partial_fee",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 155,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "types",
                "FeeDetails"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "inclusion_fee",
                      "type": 156,
                      "typeName": "Option<InclusionFee<Balance>>"
                    },
                    {
                      "name": "tip",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 156,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 157
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 157
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 157,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "types",
                "InclusionFee"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "base_fee",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "len_fee",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "adjusted_weight_fee",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 158,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 39
                },
                {
                  "name": "E",
                  "type": 52
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 39
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 52
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 159,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 52
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 52
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 160,
            "type": {
              "def": {
                "sequence": {
                  "type": 52
                }
              }
            }
          },
          {
            "id": 161,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 6
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 6
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 162,
            "type": {
              "path": [
                "pallet_revive",
                "primitives",
                "ContractResult"
              ],
              "params": [
                {
                  "name": "R",
                  "type": 163
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "gas_consumed",
                      "type": 10,
                      "typeName": "Weight"
                    },
                    {
                      "name": "gas_required",
                      "type": 10,
                      "typeName": "Weight"
                    },
                    {
                      "name": "storage_deposit",
                      "type": 165,
                      "typeName": "StorageDeposit<Balance>"
                    },
                    {
                      "name": "result",
                      "type": 166,
                      "typeName": "Result<R, DispatchError>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 163,
            "type": {
              "path": [
                "pallet_revive",
                "primitives",
                "ExecReturnValue"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "flags",
                      "type": 164,
                      "typeName": "ReturnFlags"
                    },
                    {
                      "name": "data",
                      "type": 14,
                      "typeName": "Vec<u8>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 164,
            "type": {
              "path": [
                "pallet_revive_uapi",
                "flags",
                "ReturnFlags"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "bits",
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 165,
            "type": {
              "path": [
                "pallet_revive",
                "primitives",
                "StorageDeposit"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Refund",
                      "fields": [
                        {
                          "type": 6,
                          "typeName": "Balance"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Charge",
                      "fields": [
                        {
                          "type": 6,
                          "typeName": "Balance"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 166,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 163
                },
                {
                  "name": "E",
                  "type": 26
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 163
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 26
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 167,
            "type": {
              "path": [
                "pallet_revive",
                "primitives",
                "Code"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Upload",
                      "fields": [
                        {
                          "type": 14,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Existing",
                      "fields": [
                        {
                          "type": 13,
                          "typeName": "sp_core::H256"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 168,
            "type": {
              "path": [
                "pallet_revive",
                "primitives",
                "ContractResult"
              ],
              "params": [
                {
                  "name": "R",
                  "type": 169
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "gas_consumed",
                      "type": 10,
                      "typeName": "Weight"
                    },
                    {
                      "name": "gas_required",
                      "type": 10,
                      "typeName": "Weight"
                    },
                    {
                      "name": "storage_deposit",
                      "type": 165,
                      "typeName": "StorageDeposit<Balance>"
                    },
                    {
                      "name": "result",
                      "type": 170,
                      "typeName": "Result<R, DispatchError>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 169,
            "type": {
              "path": [
                "pallet_revive",
                "primitives",
                "InstantiateReturnValue"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "result",
                      "type": 163,
                      "typeName": "ExecReturnValue"
                    },
                    {
                      "name": "addr",
                      "type": 43,
                      "typeName": "H160"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 170,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 169
                },
                {
                  "name": "E",
                  "type": 26
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 169
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 26
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 171,
            "type": {
              "path": [
                "pallet_revive",
                "evm",
                "api",
                "rpc_types_gen",
                "GenericTransaction"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "access_list",
                      "type": 172,
                      "typeName": "Option<AccessList>"
                    },
                    {
                      "name": "authorization_list",
                      "type": 175,
                      "typeName": "Vec<AuthorizationListEntry>"
                    },
                    {
                      "name": "blob_versioned_hashes",
                      "type": 45,
                      "typeName": "Vec<H256>"
                    },
                    {
                      "name": "blobs",
                      "type": 177,
                      "typeName": "Vec<Bytes>"
                    },
                    {
                      "name": "chain_id",
                      "type": 179,
                      "typeName": "Option<U256>"
                    },
                    {
                      "name": "from",
                      "type": 180,
                      "typeName": "Option<Address>"
                    },
                    {
                      "name": "gas",
                      "type": 179,
                      "typeName": "Option<U256>"
                    },
                    {
                      "name": "gas_price",
                      "type": 179,
                      "typeName": "Option<U256>"
                    },
                    {
                      "name": "input",
                      "type": 181,
                      "typeName": "InputOrData"
                    },
                    {
                      "name": "max_fee_per_blob_gas",
                      "type": 179,
                      "typeName": "Option<U256>"
                    },
                    {
                      "name": "max_fee_per_gas",
                      "type": 179,
                      "typeName": "Option<U256>"
                    },
                    {
                      "name": "max_priority_fee_per_gas",
                      "type": 179,
                      "typeName": "Option<U256>"
                    },
                    {
                      "name": "nonce",
                      "type": 179,
                      "typeName": "Option<U256>"
                    },
                    {
                      "name": "to",
                      "type": 180,
                      "typeName": "Option<Address>"
                    },
                    {
                      "name": "r#type",
                      "type": 183,
                      "typeName": "Option<Byte>"
                    },
                    {
                      "name": "value",
                      "type": 179,
                      "typeName": "Option<U256>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 172,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 173
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 173
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 173,
            "type": {
              "def": {
                "sequence": {
                  "type": 174
                }
              }
            }
          },
          {
            "id": 174,
            "type": {
              "path": [
                "pallet_revive",
                "evm",
                "api",
                "rpc_types_gen",
                "AccessListEntry"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "address",
                      "type": 43,
                      "typeName": "Address"
                    },
                    {
                      "name": "storage_keys",
                      "type": 45,
                      "typeName": "Vec<H256>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 175,
            "type": {
              "def": {
                "sequence": {
                  "type": 176
                }
              }
            }
          },
          {
            "id": 176,
            "type": {
              "path": [
                "pallet_revive",
                "evm",
                "api",
                "rpc_types_gen",
                "AuthorizationListEntry"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "chain_id",
                      "type": 83,
                      "typeName": "U256"
                    },
                    {
                      "name": "address",
                      "type": 43,
                      "typeName": "Address"
                    },
                    {
                      "name": "nonce",
                      "type": 83,
                      "typeName": "U256"
                    },
                    {
                      "name": "y_parity",
                      "type": 83,
                      "typeName": "U256"
                    },
                    {
                      "name": "r",
                      "type": 83,
                      "typeName": "U256"
                    },
                    {
                      "name": "s",
                      "type": 83,
                      "typeName": "U256"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 177,
            "type": {
              "def": {
                "sequence": {
                  "type": 178
                }
              }
            }
          },
          {
            "id": 178,
            "type": {
              "path": [
                "pallet_revive",
                "evm",
                "api",
                "byte",
                "Bytes"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 14,
                      "typeName": "Vec<u8>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 179,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 83
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 83
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 180,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 43
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 43
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 181,
            "type": {
              "path": [
                "pallet_revive",
                "evm",
                "api",
                "rpc_types_gen",
                "InputOrData"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "input",
                      "type": 182,
                      "typeName": "Option<Bytes>"
                    },
                    {
                      "name": "data",
                      "type": 182,
                      "typeName": "Option<Bytes>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 182,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 178
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 178
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 183,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 184
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 184
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 184,
            "type": {
              "path": [
                "pallet_revive",
                "evm",
                "api",
                "byte",
                "Byte"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 2,
                      "typeName": "u8"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 185,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 186
                },
                {
                  "name": "E",
                  "type": 187
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 186
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 187
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 186,
            "type": {
              "path": [
                "pallet_revive",
                "primitives",
                "EthTransactInfo"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "gas_required",
                      "type": 10,
                      "typeName": "Weight"
                    },
                    {
                      "name": "storage_deposit",
                      "type": 6,
                      "typeName": "Balance"
                    },
                    {
                      "name": "eth_gas",
                      "type": 83,
                      "typeName": "U256"
                    },
                    {
                      "name": "data",
                      "type": 14,
                      "typeName": "Vec<u8>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 187,
            "type": {
              "path": [
                "pallet_revive",
                "primitives",
                "EthTransactError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Data",
                      "fields": [
                        {
                          "type": 14,
                          "typeName": "Vec<u8>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Message",
                      "fields": [
                        {
                          "type": 52,
                          "typeName": "String"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 188,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 189
                },
                {
                  "name": "E",
                  "type": 26
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 189
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 26
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 189,
            "type": {
              "path": [
                "pallet_revive",
                "primitives",
                "CodeUploadReturnValue"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "code_hash",
                      "type": 13,
                      "typeName": "sp_core::H256"
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "Balance"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 190,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 149
                },
                {
                  "name": "E",
                  "type": 191
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 149
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 191
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 191,
            "type": {
              "path": [
                "pallet_revive",
                "primitives",
                "ContractAccessError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "DoesntExist",
                      "index": 0
                    },
                    {
                      "name": "KeyDecodingFailed",
                      "index": 1
                    },
                    {
                      "name": "StorageWriteFailed",
                      "fields": [
                        {
                          "type": 26,
                          "typeName": "DispatchError"
                        }
                      ],
                      "index": 2
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 192,
            "type": {
              "path": [
                "pallet_revive",
                "evm",
                "api",
                "debug_rpc_types",
                "TracerType"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "CallTracer",
                      "fields": [
                        {
                          "type": 193,
                          "typeName": "Option<CallTracerConfig>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "PrestateTracer",
                      "fields": [
                        {
                          "type": 195,
                          "typeName": "Option<PrestateTracerConfig>"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 193,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 194
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 194
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 194,
            "type": {
              "path": [
                "pallet_revive",
                "evm",
                "api",
                "debug_rpc_types",
                "CallTracerConfig"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "with_logs",
                      "type": 8,
                      "typeName": "bool"
                    },
                    {
                      "name": "only_top_call",
                      "type": 8,
                      "typeName": "bool"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 195,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 196
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 196
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 196,
            "type": {
              "path": [
                "pallet_revive",
                "evm",
                "api",
                "debug_rpc_types",
                "PrestateTracerConfig"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "diff_mode",
                      "type": 8,
                      "typeName": "bool"
                    },
                    {
                      "name": "disable_storage",
                      "type": 8,
                      "typeName": "bool"
                    },
                    {
                      "name": "disable_code",
                      "type": 8,
                      "typeName": "bool"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 197,
            "type": {
              "def": {
                "sequence": {
                  "type": 198
                }
              }
            }
          },
          {
            "id": 198,
            "type": {
              "def": {
                "tuple": [
                  4,
                  199
                ]
              }
            }
          },
          {
            "id": 199,
            "type": {
              "path": [
                "pallet_revive",
                "evm",
                "api",
                "debug_rpc_types",
                "Trace"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Call",
                      "fields": [
                        {
                          "type": 200,
                          "typeName": "CallTrace"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Prestate",
                      "fields": [
                        {
                          "type": 205,
                          "typeName": "PrestateTrace"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 200,
            "type": {
              "path": [
                "pallet_revive",
                "evm",
                "api",
                "debug_rpc_types",
                "CallTrace"
              ],
              "params": [
                {
                  "name": "Gas",
                  "type": 83
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "from",
                      "type": 43,
                      "typeName": "H160"
                    },
                    {
                      "name": "gas",
                      "type": 83,
                      "typeName": "Gas"
                    },
                    {
                      "name": "gas_used",
                      "type": 83,
                      "typeName": "Gas"
                    },
                    {
                      "name": "to",
                      "type": 43,
                      "typeName": "H160"
                    },
                    {
                      "name": "input",
                      "type": 178,
                      "typeName": "Bytes"
                    },
                    {
                      "name": "output",
                      "type": 178,
                      "typeName": "Bytes"
                    },
                    {
                      "name": "error",
                      "type": 159,
                      "typeName": "Option<String>"
                    },
                    {
                      "name": "revert_reason",
                      "type": 159,
                      "typeName": "Option<String>"
                    },
                    {
                      "name": "calls",
                      "type": 201,
                      "typeName": "Vec<CallTrace<Gas>>"
                    },
                    {
                      "name": "logs",
                      "type": 202,
                      "typeName": "Vec<CallLog>"
                    },
                    {
                      "name": "value",
                      "type": 179,
                      "typeName": "Option<U256>"
                    },
                    {
                      "name": "call_type",
                      "type": 204,
                      "typeName": "CallType"
                    },
                    {
                      "name": "child_call_count",
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 201,
            "type": {
              "def": {
                "sequence": {
                  "type": 200
                }
              }
            }
          },
          {
            "id": 202,
            "type": {
              "def": {
                "sequence": {
                  "type": 203
                }
              }
            }
          },
          {
            "id": 203,
            "type": {
              "path": [
                "pallet_revive",
                "evm",
                "api",
                "debug_rpc_types",
                "CallLog"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "address",
                      "type": 43,
                      "typeName": "H160"
                    },
                    {
                      "name": "topics",
                      "type": 45,
                      "typeName": "Vec<H256>"
                    },
                    {
                      "name": "data",
                      "type": 178,
                      "typeName": "Bytes"
                    },
                    {
                      "name": "position",
                      "type": 4,
                      "typeName": "u32"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 204,
            "type": {
              "path": [
                "pallet_revive",
                "evm",
                "api",
                "debug_rpc_types",
                "CallType"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Call",
                      "index": 0
                    },
                    {
                      "name": "StaticCall",
                      "index": 1
                    },
                    {
                      "name": "DelegateCall",
                      "index": 2
                    },
                    {
                      "name": "Create",
                      "index": 3
                    },
                    {
                      "name": "Create2",
                      "index": 4
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 205,
            "type": {
              "path": [
                "pallet_revive",
                "evm",
                "api",
                "debug_rpc_types",
                "PrestateTrace"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Prestate",
                      "fields": [
                        {
                          "type": 206,
                          "typeName": "BTreeMap<H160, PrestateTraceInfo>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "DiffMode",
                      "fields": [
                        {
                          "name": "pre",
                          "type": 206,
                          "typeName": "BTreeMap<H160, PrestateTraceInfo>"
                        },
                        {
                          "name": "post",
                          "type": 206,
                          "typeName": "BTreeMap<H160, PrestateTraceInfo>"
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 206,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 43
                },
                {
                  "name": "V",
                  "type": 207
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 212
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 207,
            "type": {
              "path": [
                "pallet_revive",
                "evm",
                "api",
                "debug_rpc_types",
                "PrestateTraceInfo"
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "balance",
                      "type": 179,
                      "typeName": "Option<U256>"
                    },
                    {
                      "name": "nonce",
                      "type": 208,
                      "typeName": "Option<u32>"
                    },
                    {
                      "name": "code",
                      "type": 182,
                      "typeName": "Option<Bytes>"
                    },
                    {
                      "name": "storage",
                      "type": 209,
                      "typeName": "BTreeMap<Bytes, Option<Bytes>>"
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 208,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 4
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 209,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 178
                },
                {
                  "name": "V",
                  "type": 182
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "type": 210
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 210,
            "type": {
              "def": {
                "sequence": {
                  "type": 211
                }
              }
            }
          },
          {
            "id": 211,
            "type": {
              "def": {
                "tuple": [
                  178,
                  182
                ]
              }
            }
          },
          {
            "id": 212,
            "type": {
              "def": {
                "sequence": {
                  "type": 213
                }
              }
            }
          },
          {
            "id": 213,
            "type": {
              "def": {
                "tuple": [
                  43,
                  207
                ]
              }
            }
          },
          {
            "id": 214,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 199
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "index": 0
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "type": 199
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 215,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 199
                },
                {
                  "name": "E",
                  "type": 187
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 199
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 187
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 216,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 217
                },
                {
                  "name": "E",
                  "type": 218
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "type": 217
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "type": 218
                        }
                      ],
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 217,
            "type": {
              "def": {
                "tuple": [
                  6,
                  4
                ]
              }
            }
          },
          {
            "id": 218,
            "type": {
              "path": [
                "pallet_revive",
                "primitives",
                "BalanceConversionError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Value",
                      "index": 0
                    },
                    {
                      "name": "Dust",
                      "index": 1
                    }
                  ]
                }
              }
            }
          },
          {
            "id": 219,
            "type": {
              "path": [
                "revive_dev_runtime",
                "RuntimeError"
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "System",
                      "fields": [
                        {
                          "type": 71,
                          "typeName": "frame_system::Error<Runtime>"
                        }
                      ],
                      "index": 0
                    },
                    {
                      "name": "Balances",
                      "fields": [
                        {
                          "type": 117,
                          "typeName": "pallet_balances::Error<Runtime>"
                        }
                      ],
                      "index": 2
                    },
                    {
                      "name": "Sudo",
                      "fields": [
                        {
                          "type": 118,
                          "typeName": "pallet_sudo::Error<Runtime>"
                        }
                      ],
                      "index": 3
                    },
                    {
                      "name": "Revive",
                      "fields": [
                        {
                          "type": 132,
                          "typeName": "pallet_revive::Error<Runtime>"
                        }
                      ],
                      "index": 5
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      "pallets": [
        {
          "name": "System",
          "storage": {
            "prefix": "System",
            "entries": [
              {
                "name": "Account",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 3
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  128
                ],
                "docs": [
                  " The full account information for a particular account ID."
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "ExtrinsicCount",
                "modifier": "Optional",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0
                ],
                "docs": [
                  " Total extrinsics count for the current block."
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "InherentsApplied",
                "modifier": "Default",
                "ty": {
                  "Plain": 8
                },
                "default": [
                  0
                ],
                "docs": [
                  " Whether all inherents have been applied."
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "BlockWeight",
                "modifier": "Default",
                "ty": {
                  "Plain": 9
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The current weight for the block."
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "AllExtrinsicsLen",
                "modifier": "Optional",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0
                ],
                "docs": [
                  " Total length (in bytes) for all extrinsics put together, for the current block."
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "BlockHash",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 13
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Map of block numbers to block hashes."
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "ExtrinsicData",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 14
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Extrinsics data for the current block (maps an extrinsic's index to its data)."
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "Number",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The current block number being processed. Set by `execute_block`."
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "ParentHash",
                "modifier": "Default",
                "ty": {
                  "Plain": 13
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " Hash of the previous block."
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "Digest",
                "modifier": "Default",
                "ty": {
                  "Plain": 15
                },
                "default": [
                  0
                ],
                "docs": [
                  " Digest of the current block, also part of the block header."
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "Events",
                "modifier": "Default",
                "ty": {
                  "Plain": 19
                },
                "default": [
                  0
                ],
                "docs": [
                  " Events deposited for the current block.",
                  "",
                  " NOTE: The item is unbound and should therefore never be read on chain.",
                  " It could otherwise inflate the PoV size of a block.",
                  "",
                  " Events have a large in-memory size. Box the events to not go out-of-memory",
                  " just in case someone still reads them from within the runtime."
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "EventCount",
                "modifier": "Default",
                "ty": {
                  "Plain": 4
                },
                "default": [
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The number of events in the `Events<T>` list."
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "EventTopics",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 13,
                    "value": 47
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Mapping between a topic (represented by T::Hash) and a vector of indexes",
                  " of events in the `<Events<T>>` list.",
                  "",
                  " All topic vectors have deterministic storage locations depending on the topic. This",
                  " allows light-clients to leverage the changes trie storage tracking mechanism and",
                  " in case of changes fetch the list of events of interest.",
                  "",
                  " The value has the type `(BlockNumberFor<T>, EventIndex)` because if we used only just",
                  " the `EventIndex` then in case if the topic has the same contents on the next block",
                  " no notification will be triggered thus the event might be lost."
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "LastRuntimeUpgrade",
                "modifier": "Optional",
                "ty": {
                  "Plain": 49
                },
                "default": [
                  0
                ],
                "docs": [
                  " Stores the `spec_version` and `spec_name` of when the last runtime upgrade happened."
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "UpgradedToU32RefCount",
                "modifier": "Default",
                "ty": {
                  "Plain": 8
                },
                "default": [
                  0
                ],
                "docs": [
                  " True if we have upgraded so that `type RefCount` is `u32`. False (default) if not."
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "UpgradedToTripleRefCount",
                "modifier": "Default",
                "ty": {
                  "Plain": 8
                },
                "default": [
                  0
                ],
                "docs": [
                  " True if we have upgraded so that AccountInfo contains three types of `RefCount`. False",
                  " (default) if not."
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "ExecutionPhase",
                "modifier": "Optional",
                "ty": {
                  "Plain": 46
                },
                "default": [
                  0
                ],
                "docs": [
                  " The execution phase of the block."
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "AuthorizedUpgrade",
                "modifier": "Optional",
                "ty": {
                  "Plain": 53
                },
                "default": [
                  0
                ],
                "docs": [
                  " `Some` if a code upgrade has been authorized."
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "ExtrinsicWeightReclaimed",
                "modifier": "Default",
                "ty": {
                  "Plain": 10
                },
                "default": [
                  0,
                  0
                ],
                "docs": [
                  " The weight reclaimed for the extrinsic.",
                  "",
                  " This information is available until the end of the extrinsic execution.",
                  " More precisely this information is removed in `note_applied_extrinsic`.",
                  "",
                  " Logic doing some post dispatch weight reduction must update this storage to avoid duplicate",
                  " reduction."
                ],
                "deprecation_info": "NotDeprecated"
              }
            ]
          },
          "calls": {
            "ty": 54,
            "deprecation_info": {}
          },
          "event": {
            "ty": 22,
            "deprecation_info": {}
          },
          "constants": [
            {
              "name": "BlockWeights",
              "ty": 58,
              "value": [
                194,
                160,
                231,
                102,
                0,
                7,
                0,
                16,
                165,
                212,
                232,
                19,
                255,
                255,
                255,
                255,
                255,
                255,
                255,
                255,
                34,
                97,
                201,
                25,
                0,
                1,
                7,
                184,
                139,
                146,
                80,
                151,
                19,
                102,
                102,
                102,
                102,
                102,
                102,
                102,
                166,
                1,
                7,
                0,
                204,
                123,
                159,
                174,
                19,
                255,
                255,
                255,
                255,
                255,
                255,
                255,
                191,
                1,
                0,
                0,
                34,
                97,
                201,
                25,
                0,
                1,
                7,
                184,
                207,
                187,
                133,
                209,
                19,
                102,
                102,
                102,
                102,
                102,
                102,
                102,
                230,
                1,
                7,
                0,
                16,
                165,
                212,
                232,
                19,
                255,
                255,
                255,
                255,
                255,
                255,
                255,
                255,
                1,
                7,
                0,
                68,
                41,
                53,
                58,
                19,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                64,
                34,
                97,
                201,
                25,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " Block & extrinsics weights: base values and limits."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "BlockLength",
              "ty": 62,
              "value": [
                0,
                0,
                60,
                0,
                0,
                0,
                80,
                0,
                0,
                0,
                80,
                0
              ],
              "docs": [
                " The maximum length of a block (in bytes)."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "BlockHashCount",
              "ty": 4,
              "value": [
                0,
                1,
                0,
                0
              ],
              "docs": [
                " Maximum number of block number to block hash mappings to keep (oldest pruned first)."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "DbWeight",
              "ty": 64,
              "value": [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The weight of runtime database operations the runtime can invoke."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "Version",
              "ty": 65,
              "value": [
                72,
                114,
                101,
                118,
                105,
                118,
                101,
                45,
                100,
                101,
                118,
                45,
                114,
                117,
                110,
                116,
                105,
                109,
                101,
                72,
                114,
                101,
                118,
                105,
                118,
                101,
                45,
                100,
                101,
                118,
                45,
                114,
                117,
                110,
                116,
                105,
                109,
                101,
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                40,
                223,
                106,
                203,
                104,
                153,
                7,
                96,
                155,
                5,
                0,
                0,
                0,
                55,
                227,
                151,
                252,
                124,
                145,
                245,
                228,
                2,
                0,
                0,
                0,
                64,
                254,
                58,
                212,
                1,
                248,
                149,
                154,
                6,
                0,
                0,
                0,
                210,
                188,
                152,
                151,
                238,
                208,
                143,
                21,
                3,
                0,
                0,
                0,
                247,
                139,
                39,
                139,
                229,
                63,
                69,
                76,
                2,
                0,
                0,
                0,
                171,
                60,
                5,
                114,
                41,
                31,
                235,
                139,
                1,
                0,
                0,
                0,
                188,
                157,
                137,
                144,
                79,
                91,
                146,
                63,
                1,
                0,
                0,
                0,
                55,
                200,
                187,
                19,
                80,
                169,
                162,
                168,
                4,
                0,
                0,
                0,
                251,
                197,
                119,
                185,
                215,
                71,
                239,
                214,
                1,
                0,
                0,
                0,
                140,
                64,
                62,
                92,
                74,
                159,
                212,
                66,
                1,
                0,
                0,
                0,
                1,
                0,
                0,
                0,
                1
              ],
              "docs": [
                " Get the chain's in-code version."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "SS58Prefix",
              "ty": 70,
              "value": [
                0,
                0
              ],
              "docs": [
                " The designated SS58 prefix of this chain.",
                "",
                " This replaces the \"ss58Format\" property declared in the chain spec. Reason is",
                " that the runtime should know about the prefix in order to make use of it as",
                " an identifier of the chain."
              ],
              "deprecation_info": "NotDeprecated"
            }
          ],
          "error": {
            "ty": 71,
            "deprecation_info": {}
          },
          "associated_types": [
            {
              "name": "RuntimeCall",
              "ty": 72,
              "docs": [
                " The aggregated `RuntimeCall` type."
              ]
            },
            {
              "name": "Nonce",
              "ty": 4,
              "docs": [
                " This stores the number of previous transactions associated with a sender account."
              ]
            },
            {
              "name": "Hash",
              "ty": 13,
              "docs": [
                " The output of the `Hashing` function."
              ]
            },
            {
              "name": "Hashing",
              "ty": 85,
              "docs": [
                " The hashing system (algorithm) being used in the runtime (e.g. Blake2)."
              ]
            },
            {
              "name": "AccountId",
              "ty": 0,
              "docs": [
                " The user account identifier type for the runtime."
              ]
            },
            {
              "name": "Block",
              "ty": 86,
              "docs": [
                " The Block type used by the runtime. This is used by `construct_runtime` to retrieve the",
                " extrinsics or other block specific data as needed."
              ]
            },
            {
              "name": "AccountData",
              "ty": 5,
              "docs": [
                " Data to be associated with an account (other than nonce/transaction counter, which this",
                " pallet does regardless)."
              ]
            }
          ],
          "view_functions": [],
          "index": 0,
          "docs": [],
          "deprecation_info": "NotDeprecated"
        },
        {
          "name": "Timestamp",
          "storage": {
            "prefix": "Timestamp",
            "entries": [
              {
                "name": "Now",
                "modifier": "Default",
                "ty": {
                  "Plain": 12
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The current time for the current block."
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "DidUpdate",
                "modifier": "Default",
                "ty": {
                  "Plain": 8
                },
                "default": [
                  0
                ],
                "docs": [
                  " Whether the timestamp has been updated in this block.",
                  "",
                  " This value is updated to `true` upon successful submission of a timestamp by a node.",
                  " It is then checked at the end of each block execution in the `on_finalize` hook."
                ],
                "deprecation_info": "NotDeprecated"
              }
            ]
          },
          "calls": {
            "ty": 73,
            "deprecation_info": {}
          },
          "event": null,
          "constants": [
            {
              "name": "MinimumPeriod",
              "ty": 12,
              "value": [
                1,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The minimum period between blocks.",
                "",
                " Be aware that this is different to the *expected* period that the block production",
                " apparatus provides. Your chosen consensus system will generally work with this to",
                " determine a sensible block time. For example, in the Aura pallet it will be double this",
                " period on default settings."
              ],
              "deprecation_info": "NotDeprecated"
            }
          ],
          "error": null,
          "associated_types": [
            {
              "name": "Moment",
              "ty": 12,
              "docs": [
                " Type used for expressing a timestamp."
              ]
            }
          ],
          "view_functions": [],
          "index": 1,
          "docs": [],
          "deprecation_info": "NotDeprecated"
        },
        {
          "name": "Balances",
          "storage": {
            "prefix": "Balances",
            "entries": [
              {
                "name": "TotalIssuance",
                "modifier": "Default",
                "ty": {
                  "Plain": 6
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The total units issued in the system."
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "InactiveIssuance",
                "modifier": "Default",
                "ty": {
                  "Plain": 6
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The total units of outstanding deactivated balance in the system."
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "Account",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 5
                  }
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  128
                ],
                "docs": [
                  " The Balances pallet example of storing the balance of an account.",
                  "",
                  " # Example",
                  "",
                  " ```nocompile",
                  "  impl pallet_balances::Config for Runtime {",
                  "    type AccountStore = StorageMapShim<Self::Account<Runtime>, frame_system::Provider<Runtime>, AccountId, Self::AccountData<Balance>>",
                  "  }",
                  " ```",
                  "",
                  " You can also store the balance of an account in the `System` pallet.",
                  "",
                  " # Example",
                  "",
                  " ```nocompile",
                  "  impl pallet_balances::Config for Runtime {",
                  "   type AccountStore = System",
                  "  }",
                  " ```",
                  "",
                  " But this comes with tradeoffs, storing account balances in the system pallet stores",
                  " `frame_system` data alongside the account data contrary to storing account balances in the",
                  " `Balances` pallet, which uses a `StorageMap` to store balances data only.",
                  " NOTE: This is only used in the case that this pallet is used to store balances."
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "Locks",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 104
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Any liquidity locks on some account balances.",
                  " NOTE: Should only be accessed when setting, changing and freeing a lock.",
                  "",
                  " Use of locks is deprecated in favour of freezes. See `https://github.com/paritytech/substrate/pull/12951/`"
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "Reserves",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 108
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Named reserves on some account balances.",
                  "",
                  " Use of reserves is deprecated in favour of holds. See `https://github.com/paritytech/substrate/pull/12951/`"
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "Holds",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 111
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Holds on account balances."
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "Freezes",
                "modifier": "Default",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 114
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Freeze locks on account balances."
                ],
                "deprecation_info": "NotDeprecated"
              }
            ]
          },
          "calls": {
            "ty": 74,
            "deprecation_info": {}
          },
          "event": {
            "ty": 32,
            "deprecation_info": {}
          },
          "constants": [
            {
              "name": "ExistentialDeposit",
              "ty": 6,
              "value": [
                0,
                64,
                122,
                16,
                243,
                90,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The minimum amount required to keep an account open. MUST BE GREATER THAN ZERO!",
                "",
                " If you *really* need it to be zero, you can enable the feature `insecure_zero_ed` for",
                " this pallet. However, you do so at your own risk: this will open up a major DoS vector.",
                " In case you have multiple sources of provider references, you may also get unexpected",
                " behaviour if you set this to zero.",
                "",
                " Bottom line: Do yourself a favour and make it at least one!"
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "MaxLocks",
              "ty": 4,
              "value": [
                100,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum number of locks that should exist on an account.",
                " Not strictly enforced, but used for weight estimation.",
                "",
                " Use of locks is deprecated in favour of freezes. See `https://github.com/paritytech/substrate/pull/12951/`"
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "MaxReserves",
              "ty": 4,
              "value": [
                100,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum number of named reserves that can exist on an account.",
                "",
                " Use of reserves is deprecated in favour of holds. See `https://github.com/paritytech/substrate/pull/12951/`"
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "MaxFreezes",
              "ty": 4,
              "value": [
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The maximum number of individual freeze locks that can exist on an account at any time."
              ],
              "deprecation_info": "NotDeprecated"
            }
          ],
          "error": {
            "ty": 117,
            "deprecation_info": {}
          },
          "associated_types": [
            {
              "name": "RuntimeHoldReason",
              "ty": 34,
              "docs": [
                " The overarching hold reason."
              ]
            },
            {
              "name": "Balance",
              "ty": 6,
              "docs": [
                " The balance of an account."
              ]
            },
            {
              "name": "ReserveIdentifier",
              "ty": 39,
              "docs": [
                " The ID type for reserves.",
                "",
                " Use of reserves is deprecated in favour of holds. See `https://github.com/paritytech/substrate/pull/12951/`"
              ]
            },
            {
              "name": "FreezeIdentifier",
              "ty": 39,
              "docs": [
                " The ID type for freezes."
              ]
            }
          ],
          "view_functions": [],
          "index": 2,
          "docs": [],
          "deprecation_info": "NotDeprecated"
        },
        {
          "name": "Sudo",
          "storage": {
            "prefix": "Sudo",
            "entries": [
              {
                "name": "Key",
                "modifier": "Optional",
                "ty": {
                  "Plain": 0
                },
                "default": [
                  0
                ],
                "docs": [
                  " The `AccountId` of the sudo key."
                ],
                "deprecation_info": "NotDeprecated"
              }
            ]
          },
          "calls": {
            "ty": 80,
            "deprecation_info": {}
          },
          "event": {
            "ty": 37,
            "deprecation_info": {}
          },
          "constants": [],
          "error": {
            "ty": 118,
            "deprecation_info": {}
          },
          "associated_types": [
            {
              "name": "RuntimeCall",
              "ty": 72,
              "docs": [
                " A sudo-able call."
              ]
            }
          ],
          "view_functions": [],
          "index": 3,
          "docs": [],
          "deprecation_info": "NotDeprecated"
        },
        {
          "name": "TransactionPayment",
          "storage": {
            "prefix": "TransactionPayment",
            "entries": [
              {
                "name": "NextFeeMultiplier",
                "modifier": "Default",
                "ty": {
                  "Plain": 119
                },
                "default": [
                  0,
                  0,
                  100,
                  167,
                  179,
                  182,
                  224,
                  13,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "StorageVersion",
                "modifier": "Default",
                "ty": {
                  "Plain": 120
                },
                "default": [
                  0
                ],
                "docs": [],
                "deprecation_info": "NotDeprecated"
              }
            ]
          },
          "calls": null,
          "event": {
            "ty": 41,
            "deprecation_info": {}
          },
          "constants": [
            {
              "name": "OperationalFeeMultiplier",
              "ty": 2,
              "value": [
                0
              ],
              "docs": [
                " A fee multiplier for `Operational` extrinsics to compute \"virtual tip\" to boost their",
                " `priority`",
                "",
                " This value is multiplied by the `final_fee` to obtain a \"virtual tip\" that is later",
                " added to a tip component in regular `priority` calculations.",
                " It means that a `Normal` transaction can front-run a similarly-sized `Operational`",
                " extrinsic (with no tip), by including a tip value greater than the virtual tip.",
                "",
                " ```rust,ignore",
                " // For `Normal`",
                " let priority = priority_calc(tip);",
                "",
                " // For `Operational`",
                " let virtual_tip = (inclusion_fee + tip) * OperationalFeeMultiplier;",
                " let priority = priority_calc(tip + virtual_tip);",
                " ```",
                "",
                " Note that since we use `final_fee` the multiplier applies also to the regular `tip`",
                " sent with the transaction. So, not only does the transaction get a priority bump based",
                " on the `inclusion_fee`, but we also amplify the impact of tips applied to `Operational`",
                " transactions."
              ],
              "deprecation_info": "NotDeprecated"
            }
          ],
          "error": null,
          "associated_types": [],
          "view_functions": [],
          "index": 4,
          "docs": [],
          "deprecation_info": "NotDeprecated"
        },
        {
          "name": "Revive",
          "storage": {
            "prefix": "Revive",
            "entries": [
              {
                "name": "PristineCode",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 13,
                    "value": 14
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " A mapping from a contract's code hash to its code.",
                  " The code's size is bounded by [`crate::limits::BLOB_BYTES`] for PVM and",
                  " [`revm::primitives::eip170::MAX_CODE_SIZE`] for EVM bytecode."
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "CodeInfoOf",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 13,
                    "value": 121
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " A mapping from a contract's code hash to its code info."
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "EvmNonceOf",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 43,
                    "value": 123
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " A mapping from an account to it's nonce."
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "ModifiedCoinbase",
                "modifier": "Default",
                "ty": {
                  "Plain": 43
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " A mapping from a block to it's modified miner."
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "ModifiedPrevrandao",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 83,
                    "value": 13
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " A mapping from a block to it's modified prevrandao."
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "AccountInfoOf",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 43,
                    "value": 124
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The data associated to a contract or externally owned account."
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "ImmutableDataOf",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 43,
                    "value": 128
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " The immutable data associated with a given account."
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "GasPrice",
                "modifier": "Default",
                "ty": {
                  "Plain": 12
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " The modifiable EVM gas price, used by the EVM RPC."
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "GasLimit",
                "modifier": "Default",
                "ty": {
                  "Plain": 129
                },
                "default": [
                  0
                ],
                "docs": [
                  " The modifiable EVM gas limit, used by the EVM RPC."
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "ImpersonatedAccounts",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 43,
                    "value": 39
                  }
                },
                "default": [
                  0
                ],
                "docs": [],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "DeletionQueue",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 127
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Evicted contracts that await child trie deletion.",
                  "",
                  " Child trie deletion is a heavy operation depending on the amount of storage items",
                  " stored in said trie. Therefore this operation is performed lazily in `on_idle`."
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "DeletionQueueCounter",
                "modifier": "Default",
                "ty": {
                  "Plain": 130
                },
                "default": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "docs": [
                  " A pair of monotonic counters used to track the latest contract marked for deletion",
                  " and the latest deleted contract in queue."
                ],
                "deprecation_info": "NotDeprecated"
              },
              {
                "name": "OriginalAccount",
                "modifier": "Optional",
                "ty": {
                  "Map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 43,
                    "value": 0
                  }
                },
                "default": [
                  0
                ],
                "docs": [
                  " Map a Ethereum address to its original `AccountId32`.",
                  "",
                  " When deriving a `H160` from an `AccountId32` we use a hash function. In order to",
                  " reconstruct the original account we need to store the reverse mapping here.",
                  " Register your `AccountId32` using [`Pallet::map_account`] in order to",
                  " use it with this pallet."
                ],
                "deprecation_info": "NotDeprecated"
              }
            ]
          },
          "calls": {
            "ty": 81,
            "deprecation_info": {}
          },
          "event": {
            "ty": 42,
            "deprecation_info": {}
          },
          "constants": [
            {
              "name": "DepositPerByte",
              "ty": 6,
              "value": [
                0,
                225,
                245,
                5,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The amount of balance a caller has to pay for each byte of storage.",
                "",
                " # Note",
                "",
                " It is safe to change this value on a live chain as all refunds are pro rata."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "DepositPerItem",
              "ty": 6,
              "value": [
                0,
                225,
                245,
                5,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The amount of balance a caller has to pay for each storage item.",
                "",
                " # Note",
                "",
                " It is safe to change this value on a live chain as all refunds are pro rata."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "CodeHashLockupDepositPercent",
              "ty": 131,
              "value": [
                0,
                163,
                225,
                17
              ],
              "docs": [
                " The percentage of the storage deposit that should be held for using a code hash.",
                " Instantiating a contract, protects the code from being removed. In order to prevent",
                " abuse these actions are protected with a percentage of the code deposit."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "UnsafeUnstableInterface",
              "ty": 8,
              "value": [
                1
              ],
              "docs": [
                " Make contract callable functions marked as `#[unstable]` available.",
                "",
                " Contracts that use `#[unstable]` functions won't be able to be uploaded unless",
                " this is set to `true`. This is only meant for testnets and dev nodes in order to",
                " experiment with new features.",
                "",
                " # Warning",
                "",
                " Do **not** set to `true` on productions chains."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "AllowEVMBytecode",
              "ty": 8,
              "value": [
                1
              ],
              "docs": [
                " Allow EVM bytecode to be uploaded and instantiated."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "ChainId",
              "ty": 12,
              "value": [
                68,
                27,
                15,
                25,
                0,
                0,
                0,
                0
              ],
              "docs": [
                " The [EIP-155](https://eips.ethereum.org/EIPS/eip-155) chain ID.",
                "",
                " This is a unique identifier assigned to each blockchain network,",
                " preventing replay attacks."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "NativeToEthRatio",
              "ty": 4,
              "value": [
                64,
                66,
                15,
                0
              ],
              "docs": [
                " The ratio between the decimal representation of the native token and the ETH token."
              ],
              "deprecation_info": "NotDeprecated"
            }
          ],
          "error": {
            "ty": 132,
            "deprecation_info": {}
          },
          "associated_types": [
            {
              "name": "RuntimeCall",
              "ty": 72,
              "docs": [
                " The overarching call type."
              ]
            }
          ],
          "view_functions": [],
          "index": 5,
          "docs": [],
          "deprecation_info": "NotDeprecated"
        }
      ],
      "extrinsic": {
        "versions": [
          4,
          5
        ],
        "address_ty": 75,
        "call_ty": 72,
        "signature_ty": 89,
        "transaction_extensions_by_version": {
          "0": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8
          ]
        },
        "transaction_extensions": [
          {
            "identifier": "CheckNonZeroSender",
            "ty": 93,
            "implicit": 39
          },
          {
            "identifier": "CheckSpecVersion",
            "ty": 94,
            "implicit": 4
          },
          {
            "identifier": "CheckTxVersion",
            "ty": 95,
            "implicit": 4
          },
          {
            "identifier": "CheckGenesis",
            "ty": 96,
            "implicit": 13
          },
          {
            "identifier": "CheckMortality",
            "ty": 97,
            "implicit": 13
          },
          {
            "identifier": "CheckNonce",
            "ty": 99,
            "implicit": 39
          },
          {
            "identifier": "CheckWeight",
            "ty": 100,
            "implicit": 39
          },
          {
            "identifier": "ChargeTransactionPayment",
            "ty": 101,
            "implicit": 39
          },
          {
            "identifier": "WeightReclaim",
            "ty": 102,
            "implicit": 39
          }
        ]
      },
      "apis": [
        {
          "name": "Core",
          "methods": [
            {
              "name": "version",
              "inputs": [],
              "output": 65,
              "docs": [
                " Returns the version of the runtime."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "execute_block",
              "inputs": [
                {
                  "name": "block",
                  "ty": 86
                }
              ],
              "output": 39,
              "docs": [
                " Execute the given block."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "initialize_block",
              "inputs": [
                {
                  "name": "header",
                  "ty": 87
                }
              ],
              "output": 133,
              "docs": [
                " Initialize a block with the given header and return the runtime executive mode."
              ],
              "deprecation_info": "NotDeprecated"
            }
          ],
          "docs": [
            " The `Core` runtime api that every Substrate runtime needs to implement."
          ],
          "version": 5,
          "deprecation_info": "NotDeprecated"
        },
        {
          "name": "Metadata",
          "methods": [
            {
              "name": "metadata",
              "inputs": [],
              "output": 134,
              "docs": [
                " Returns the metadata of a runtime."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "metadata_at_version",
              "inputs": [
                {
                  "name": "version",
                  "ty": 4
                }
              ],
              "output": 135,
              "docs": [
                " Returns the metadata at a given version.",
                "",
                " If the given `version` isn't supported, this will return `None`.",
                " Use [`Self::metadata_versions`] to find out about supported metadata version of the runtime."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "metadata_versions",
              "inputs": [],
              "output": 136,
              "docs": [
                " Returns the supported metadata versions.",
                "",
                " This can be used to call `metadata_at_version`."
              ],
              "deprecation_info": "NotDeprecated"
            }
          ],
          "docs": [
            " The `Metadata` api trait that returns metadata for the runtime."
          ],
          "version": 2,
          "deprecation_info": "NotDeprecated"
        },
        {
          "name": "BlockBuilder",
          "methods": [
            {
              "name": "apply_extrinsic",
              "inputs": [
                {
                  "name": "extrinsic",
                  "ty": 88
                }
              ],
              "output": 137,
              "docs": [
                " Apply the given extrinsic.",
                "",
                " Returns an inclusion outcome which specifies if this extrinsic is included in",
                " this block or not."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "finalize_block",
              "inputs": [],
              "output": 87,
              "docs": [
                " Finish the current block."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "inherent_extrinsics",
              "inputs": [
                {
                  "name": "inherent",
                  "ty": 141
                }
              ],
              "output": 103,
              "docs": [
                " Generate inherent extrinsics. The inherent data will vary from chain to chain."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "check_inherents",
              "inputs": [
                {
                  "name": "block",
                  "ty": 86
                },
                {
                  "name": "data",
                  "ty": 141
                }
              ],
              "output": 145,
              "docs": [
                " Check that the inherents are valid. The inherent data will vary from chain to chain."
              ],
              "deprecation_info": "NotDeprecated"
            }
          ],
          "docs": [
            " The `BlockBuilder` api trait that provides the required functionality for building a block."
          ],
          "version": 6,
          "deprecation_info": "NotDeprecated"
        },
        {
          "name": "TaggedTransactionQueue",
          "methods": [
            {
              "name": "validate_transaction",
              "inputs": [
                {
                  "name": "source",
                  "ty": 146
                },
                {
                  "name": "tx",
                  "ty": 88
                },
                {
                  "name": "block_hash",
                  "ty": 13
                }
              ],
              "output": 147,
              "docs": [
                " Validate the transaction.",
                "",
                " This method is invoked by the transaction pool to learn details about given transaction.",
                " The implementation should make sure to verify the correctness of the transaction",
                " against current state. The given `block_hash` corresponds to the hash of the block",
                " that is used as current state.",
                "",
                " Note that this call may be performed by the pool multiple times and transactions",
                " might be verified in any possible order."
              ],
              "deprecation_info": "NotDeprecated"
            }
          ],
          "docs": [
            " The `TaggedTransactionQueue` api trait for interfering with the transaction queue."
          ],
          "version": 3,
          "deprecation_info": "NotDeprecated"
        },
        {
          "name": "OffchainWorkerApi",
          "methods": [
            {
              "name": "offchain_worker",
              "inputs": [
                {
                  "name": "header",
                  "ty": 87
                }
              ],
              "output": 39,
              "docs": [
                " Starts the off-chain task for given block header."
              ],
              "deprecation_info": "NotDeprecated"
            }
          ],
          "docs": [
            " The offchain worker api."
          ],
          "version": 2,
          "deprecation_info": "NotDeprecated"
        },
        {
          "name": "SessionKeys",
          "methods": [
            {
              "name": "generate_session_keys",
              "inputs": [
                {
                  "name": "seed",
                  "ty": 149
                }
              ],
              "output": 14,
              "docs": [
                " Generate a set of session keys with optionally using the given seed.",
                " The keys should be stored within the keystore exposed via runtime",
                " externalities.",
                "",
                " The seed needs to be a valid `utf8` string.",
                "",
                " Returns the concatenated SCALE encoded public keys."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "decode_session_keys",
              "inputs": [
                {
                  "name": "encoded",
                  "ty": 14
                }
              ],
              "output": 150,
              "docs": [
                " Decode the given public session keys.",
                "",
                " Returns the list of public raw public keys + key type."
              ],
              "deprecation_info": "NotDeprecated"
            }
          ],
          "docs": [
            " Session keys runtime api."
          ],
          "version": 1,
          "deprecation_info": "NotDeprecated"
        },
        {
          "name": "AccountNonceApi",
          "methods": [
            {
              "name": "account_nonce",
              "inputs": [
                {
                  "name": "account",
                  "ty": 0
                }
              ],
              "output": 4,
              "docs": [
                " Get current account nonce of given `AccountId`."
              ],
              "deprecation_info": "NotDeprecated"
            }
          ],
          "docs": [
            " The API to query account nonce."
          ],
          "version": 1,
          "deprecation_info": "NotDeprecated"
        },
        {
          "name": "TransactionPaymentApi",
          "methods": [
            {
              "name": "query_info",
              "inputs": [
                {
                  "name": "uxt",
                  "ty": 88
                },
                {
                  "name": "len",
                  "ty": 4
                }
              ],
              "output": 154,
              "docs": [],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "query_fee_details",
              "inputs": [
                {
                  "name": "uxt",
                  "ty": 88
                },
                {
                  "name": "len",
                  "ty": 4
                }
              ],
              "output": 155,
              "docs": [],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "query_weight_to_fee",
              "inputs": [
                {
                  "name": "weight",
                  "ty": 10
                }
              ],
              "output": 6,
              "docs": [],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "query_length_to_fee",
              "inputs": [
                {
                  "name": "length",
                  "ty": 4
                }
              ],
              "output": 6,
              "docs": [],
              "deprecation_info": "NotDeprecated"
            }
          ],
          "docs": [],
          "version": 4,
          "deprecation_info": "NotDeprecated"
        },
        {
          "name": "GenesisBuilder",
          "methods": [
            {
              "name": "build_state",
              "inputs": [
                {
                  "name": "json",
                  "ty": 14
                }
              ],
              "output": 158,
              "docs": [
                " Build `RuntimeGenesisConfig` from a JSON blob not using any defaults and store it in the",
                " storage.",
                "",
                " In the case of a FRAME-based runtime, this function deserializes the full",
                " `RuntimeGenesisConfig` from the given JSON blob and puts it into the storage. If the",
                " provided JSON blob is incorrect or incomplete or the deserialization fails, an error",
                " is returned.",
                "",
                " Please note that provided JSON blob must contain all `RuntimeGenesisConfig` fields, no",
                " defaults will be used."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "get_preset",
              "inputs": [
                {
                  "name": "id",
                  "ty": 159
                }
              ],
              "output": 149,
              "docs": [
                " Returns a JSON blob representation of the built-in `RuntimeGenesisConfig` identified by",
                " `id`.",
                "",
                " If `id` is `None` the function should return JSON blob representation of the default",
                " `RuntimeGenesisConfig` struct of the runtime. Implementation must provide default",
                " `RuntimeGenesisConfig`.",
                "",
                " Otherwise function returns a JSON representation of the built-in, named",
                " `RuntimeGenesisConfig` preset identified by `id`, or `None` if such preset does not",
                " exist. Returned `Vec<u8>` contains bytes of JSON blob (patch) which comprises a list of",
                " (potentially nested) key-value pairs that are intended for customizing the default",
                " runtime genesis config. The patch shall be merged (rfc7386) with the JSON representation",
                " of the default `RuntimeGenesisConfig` to create a comprehensive genesis config that can",
                " be used in `build_state` method."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "preset_names",
              "inputs": [],
              "output": 160,
              "docs": [
                " Returns a list of identifiers for available builtin `RuntimeGenesisConfig` presets.",
                "",
                " The presets from the list can be queried with [`GenesisBuilder::get_preset`] method. If",
                " no named presets are provided by the runtime the list is empty."
              ],
              "deprecation_info": "NotDeprecated"
            }
          ],
          "docs": [
            " API to interact with `RuntimeGenesisConfig` for the runtime"
          ],
          "version": 1,
          "deprecation_info": "NotDeprecated"
        },
        {
          "name": "ReviveApi",
          "methods": [
            {
              "name": "block_gas_limit",
              "inputs": [],
              "output": 83,
              "docs": [
                " Returns the block gas limit."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "balance",
              "inputs": [
                {
                  "name": "address",
                  "ty": 43
                }
              ],
              "output": 83,
              "docs": [
                " Returns the free balance of the given `[H160]` address, using EVM decimals."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "gas_price",
              "inputs": [],
              "output": 83,
              "docs": [
                " Returns the gas price."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "nonce",
              "inputs": [
                {
                  "name": "address",
                  "ty": 43
                }
              ],
              "output": 4,
              "docs": [
                " Returns the nonce of the given `[H160]` address."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "account_or_fallback",
              "inputs": [
                {
                  "name": "address",
                  "ty": 43
                }
              ],
              "output": 0,
              "docs": [],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "call",
              "inputs": [
                {
                  "name": "origin",
                  "ty": 0
                },
                {
                  "name": "dest",
                  "ty": 43
                },
                {
                  "name": "value",
                  "ty": 6
                },
                {
                  "name": "gas_limit",
                  "ty": 61
                },
                {
                  "name": "storage_deposit_limit",
                  "ty": 161
                },
                {
                  "name": "input_data",
                  "ty": 14
                }
              ],
              "output": 162,
              "docs": [
                " Perform a call from a specified account to a given contract.",
                "",
                " See [`crate::Pallet::bare_call`]."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "instantiate",
              "inputs": [
                {
                  "name": "origin",
                  "ty": 0
                },
                {
                  "name": "value",
                  "ty": 6
                },
                {
                  "name": "gas_limit",
                  "ty": 61
                },
                {
                  "name": "storage_deposit_limit",
                  "ty": 161
                },
                {
                  "name": "code",
                  "ty": 167
                },
                {
                  "name": "data",
                  "ty": 14
                },
                {
                  "name": "salt",
                  "ty": 82
                }
              ],
              "output": 168,
              "docs": [
                " Instantiate a new contract.",
                "",
                " See `[crate::Pallet::bare_instantiate]`."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "eth_transact",
              "inputs": [
                {
                  "name": "tx",
                  "ty": 171
                }
              ],
              "output": 185,
              "docs": [
                " Perform an Ethereum call.",
                "",
                " See [`crate::Pallet::dry_run_eth_transact`]"
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "upload_code",
              "inputs": [
                {
                  "name": "origin",
                  "ty": 0
                },
                {
                  "name": "code",
                  "ty": 14
                },
                {
                  "name": "storage_deposit_limit",
                  "ty": 161
                }
              ],
              "output": 188,
              "docs": [
                " Upload new code without instantiating a contract from it.",
                "",
                " See [`crate::Pallet::bare_upload_code`]."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "get_storage",
              "inputs": [
                {
                  "name": "address",
                  "ty": 43
                },
                {
                  "name": "key",
                  "ty": 1
                }
              ],
              "output": 190,
              "docs": [
                " Query a given storage key in a given contract.",
                "",
                " Returns `Ok(Some(Vec<u8>))` if the storage value exists under the given key in the",
                " specified account and `Ok(None)` if it doesn't. If the account specified by the address",
                " doesn't exist, or doesn't have a contract then `Err` is returned."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "get_storage_var_key",
              "inputs": [
                {
                  "name": "address",
                  "ty": 43
                },
                {
                  "name": "key",
                  "ty": 14
                }
              ],
              "output": 190,
              "docs": [
                " Query a given variable-sized storage key in a given contract.",
                "",
                " Returns `Ok(Some(Vec<u8>))` if the storage value exists under the given key in the",
                " specified account and `Ok(None)` if it doesn't. If the account specified by the address",
                " doesn't exist, or doesn't have a contract then `Err` is returned."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "trace_block",
              "inputs": [
                {
                  "name": "block",
                  "ty": 86
                },
                {
                  "name": "config",
                  "ty": 192
                }
              ],
              "output": 197,
              "docs": [
                " Traces the execution of an entire block and returns call traces.",
                "",
                " This is intended to be called through `state_call` to replay the block from the",
                " parent block.",
                "",
                " See eth-rpc `debug_traceBlockByNumber` for usage."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "trace_tx",
              "inputs": [
                {
                  "name": "block",
                  "ty": 86
                },
                {
                  "name": "tx_index",
                  "ty": 4
                },
                {
                  "name": "config",
                  "ty": 192
                }
              ],
              "output": 214,
              "docs": [
                " Traces the execution of a specific transaction within a block.",
                "",
                " This is intended to be called through `state_call` to replay the block from the",
                " parent hash up to the transaction.",
                "",
                " See eth-rpc `debug_traceTransaction` for usage."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "trace_call",
              "inputs": [
                {
                  "name": "tx",
                  "ty": 171
                },
                {
                  "name": "config",
                  "ty": 192
                }
              ],
              "output": 215,
              "docs": [
                " Dry run and return the trace of the given call.",
                "",
                " See eth-rpc `debug_traceCall` for usage."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "block_author",
              "inputs": [],
              "output": 180,
              "docs": [
                " The address of the validator that produced the current block."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "address",
              "inputs": [
                {
                  "name": "account_id",
                  "ty": 0
                }
              ],
              "output": 43,
              "docs": [
                " Get the H160 address associated to this account id"
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "account_id",
              "inputs": [
                {
                  "name": "address",
                  "ty": 43
                }
              ],
              "output": 0,
              "docs": [
                " Get the account id associated to this H160 address."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "runtime_pallets_address",
              "inputs": [],
              "output": 43,
              "docs": [
                " The address used to call the runtime's pallets dispatchables"
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "code",
              "inputs": [
                {
                  "name": "address",
                  "ty": 43
                }
              ],
              "output": 14,
              "docs": [
                " The code at the specified address taking pre-compiles into account."
              ],
              "deprecation_info": "NotDeprecated"
            },
            {
              "name": "new_balance_with_dust",
              "inputs": [
                {
                  "name": "balance",
                  "ty": 83
                }
              ],
              "output": 216,
              "docs": [
                " Construct the new balance and dust components of this EVM balance."
              ],
              "deprecation_info": "NotDeprecated"
            }
          ],
          "docs": [
            " The API used to dry-run contract interactions."
          ],
          "version": 1,
          "deprecation_info": "NotDeprecated"
        }
      ],
      "outer_enums": {
        "call_enum_ty": 72,
        "event_enum_ty": 21,
        "error_enum_ty": 219
      },
      "custom": {
        "map": {}
      }
    }
  }
]