/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from 'ethers'
import type { Event, EventInterface } from '../Event'

const _abi = [
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: 'address',
				name: 'sender',
				type: 'address',
			},
			{
				indexed: false,
				internalType: 'uint256',
				name: 'value',
				type: 'uint256',
			},
			{
				indexed: false,
				internalType: 'string',
				name: 'message',
				type: 'string',
			},
		],
		name: 'ExampleEvent',
		type: 'event',
	},
	{
		inputs: [],
		name: 'triggerEvent',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function',
	},
] as const

export class Event__factory {
	static readonly abi = _abi
	static createInterface(): EventInterface {
		return new Interface(_abi) as EventInterface
	}
	static connect(address: string, runner?: ContractRunner | null): Event {
		return new Contract(address, _abi, runner) as unknown as Event
	}
}
