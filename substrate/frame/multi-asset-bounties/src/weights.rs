// This file is part of Substrate.

// Copyright (C) Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This file is part of Substrate.

// Copyright (C) Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// 	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for `pallet_multi_asset_bounties`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 32.0.0
//! DATE: 2025-09-12, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `f82a801241d1`, CPU: `Intel(R) Xeon(R) CPU @ 2.60GHz`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: `1024`

// Executed Command:
// frame-omni-bencher
// v1
// benchmark
// pallet
// --extrinsic=*
// --runtime=target/production/wbuild/kitchensink-runtime/kitchensink_runtime.wasm
// --pallet=pallet_multi_asset_bounties
// --header=/__w/polkadot-sdk/polkadot-sdk/substrate/HEADER-APACHE2
// --output=/__w/polkadot-sdk/polkadot-sdk/substrate/frame/multi-asset-bounties/src/weights.rs
// --wasm-execution=compiled
// --steps=50
// --repeat=20
// --heap-pages=4096
// --template=substrate/.maintain/frame-weight-template.hbs
// --no-storage-info
// --no-min-squares
// --no-median-slopes
// --exclude-pallets=pallet_xcm,pallet_xcm_benchmarks::fungible,pallet_xcm_benchmarks::generic,pallet_nomination_pools,pallet_remark,pallet_transaction_storage

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]
#![allow(dead_code)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for `pallet_multi_asset_bounties`.
pub trait WeightInfo {
	fn fund_bounty() -> Weight;
	fn fund_child_bounty() -> Weight;
	fn propose_curator_parent_bounty() -> Weight;
	fn propose_curator_child_bounty() -> Weight;
	fn accept_curator() -> Weight;
	fn unassign_curator() -> Weight;
	fn award_bounty() -> Weight;
	fn close_parent_bounty() -> Weight;
	fn close_child_bounty() -> Weight;
	fn check_status_funding() -> Weight;
	fn check_status_refund() -> Weight;
	fn check_status_payout() -> Weight;
	fn retry_payment_funding() -> Weight;
	fn retry_payment_refund() -> Weight;
	fn retry_payment_payout() -> Weight;
}

/// Weights for `pallet_multi_asset_bounties` using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `Preimage::StatusFor` (r:1 w:0)
	/// Proof: `Preimage::StatusFor` (`max_values`: None, `max_size`: Some(91), added: 2566, mode: `MaxEncodedLen`)
	/// Storage: `Preimage::RequestStatusFor` (r:1 w:0)
	/// Proof: `Preimage::RequestStatusFor` (`max_values`: None, `max_size`: Some(91), added: 2566, mode: `MaxEncodedLen`)
	/// Storage: `AssetRate::ConversionRateToNative` (r:1 w:0)
	/// Proof: `AssetRate::ConversionRateToNative` (`max_values`: None, `max_size`: Some(37), added: 2512, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::BountyCount` (r:1 w:1)
	/// Proof: `MultiAssetBounties::BountyCount` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:0)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(463), added: 2938, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::Bounties` (r:0 w:1)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(147), added: 2622, mode: `MaxEncodedLen`)
	fn fund_bounty() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1012`
		//  Estimated: `6208`
		// Minimum execution time: 111_550_000 picoseconds.
		Weight::from_parts(114_940_000, 6208)
			.saturating_add(T::DbWeight::get().reads(10_u64))
			.saturating_add(T::DbWeight::get().writes(7_u64))
	}
	/// Storage: `Preimage::StatusFor` (r:1 w:0)
	/// Proof: `Preimage::StatusFor` (`max_values`: None, `max_size`: Some(91), added: 2566, mode: `MaxEncodedLen`)
	/// Storage: `Preimage::RequestStatusFor` (r:1 w:0)
	/// Proof: `Preimage::RequestStatusFor` (`max_values`: None, `max_size`: Some(91), added: 2566, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(147), added: 2622, mode: `MaxEncodedLen`)
	/// Storage: `AssetRate::ConversionRateToNative` (r:1 w:0)
	/// Proof: `AssetRate::ConversionRateToNative` (`max_values`: None, `max_size`: Some(37), added: 2512, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBountiesPerParent` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBountiesPerParent` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBountiesValuePerParent` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBountiesValuePerParent` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::TotalChildBountiesPerParent` (r:1 w:1)
	/// Proof: `MultiAssetBounties::TotalChildBountiesPerParent` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:0)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(463), added: 2938, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:0 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(158), added: 2633, mode: `MaxEncodedLen`)
	fn fund_child_bounty() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1170`
		//  Estimated: `6208`
		// Minimum execution time: 122_945_000 picoseconds.
		Weight::from_parts(125_727_000, 6208)
			.saturating_add(T::DbWeight::get().reads(13_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(147), added: 2622, mode: `MaxEncodedLen`)
	/// Storage: `AssetRate::ConversionRateToNative` (r:1 w:0)
	/// Proof: `AssetRate::ConversionRateToNative` (`max_values`: None, `max_size`: Some(37), added: 2512, mode: `MaxEncodedLen`)
	fn propose_curator_parent_bounty() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `417`
		//  Estimated: `3612`
		// Minimum execution time: 24_548_000 picoseconds.
		Weight::from_parts(25_295_000, 3612)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(147), added: 2622, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(158), added: 2633, mode: `MaxEncodedLen`)
	fn propose_curator_child_bounty() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `531`
		//  Estimated: `3623`
		// Minimum execution time: 24_708_000 picoseconds.
		Weight::from_parts(25_776_000, 3623)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(147), added: 2622, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(158), added: 2633, mode: `MaxEncodedLen`)
	/// Storage: `AssetRate::ConversionRateToNative` (r:1 w:0)
	/// Proof: `AssetRate::ConversionRateToNative` (`max_values`: None, `max_size`: Some(37), added: 2512, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(463), added: 2938, mode: `MaxEncodedLen`)
	fn accept_curator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `929`
		//  Estimated: `3928`
		// Minimum execution time: 75_691_000 picoseconds.
		Weight::from_parts(77_993_000, 3928)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(147), added: 2622, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(158), added: 2633, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(463), added: 2938, mode: `MaxEncodedLen`)
	fn unassign_curator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `830`
		//  Estimated: `3928`
		// Minimum execution time: 53_287_000 picoseconds.
		Weight::from_parts(55_129_000, 3928)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(147), added: 2622, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(158), added: 2633, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn award_bounty() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1145`
		//  Estimated: `6208`
		// Minimum execution time: 81_057_000 picoseconds.
		Weight::from_parts(82_880_000, 6208)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(147), added: 2622, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBountiesPerParent` (r:1 w:0)
	/// Proof: `MultiAssetBounties::ChildBountiesPerParent` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn close_parent_bounty() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `872`
		//  Estimated: `6208`
		// Minimum execution time: 73_572_000 picoseconds.
		Weight::from_parts(75_225_000, 6208)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(147), added: 2622, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(158), added: 2633, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn close_child_bounty() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1131`
		//  Estimated: `6208`
		// Minimum execution time: 76_531_000 picoseconds.
		Weight::from_parts(78_807_000, 6208)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(147), added: 2622, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(158), added: 2633, mode: `MaxEncodedLen`)
	fn check_status_funding() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `564`
		//  Estimated: `3623`
		// Minimum execution time: 25_046_000 picoseconds.
		Weight::from_parts(25_759_000, 3623)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(147), added: 2622, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(158), added: 2633, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(463), added: 2938, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBountiesValuePerParent` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBountiesValuePerParent` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBountiesPerParent` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBountiesPerParent` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `MaxEncodedLen`)
	fn check_status_refund() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `850`
		//  Estimated: `3928`
		// Minimum execution time: 67_452_000 picoseconds.
		Weight::from_parts(69_124_000, 3928)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(147), added: 2622, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(158), added: 2633, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(463), added: 2938, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBountiesPerParent` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBountiesPerParent` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `MaxEncodedLen`)
	fn check_status_payout() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `866`
		//  Estimated: `3928`
		// Minimum execution time: 63_777_000 picoseconds.
		Weight::from_parts(65_163_000, 3928)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(147), added: 2622, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(158), added: 2633, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	fn retry_payment_funding() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1029`
		//  Estimated: `6208`
		// Minimum execution time: 67_992_000 picoseconds.
		Weight::from_parts(69_263_000, 6208)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(147), added: 2622, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(158), added: 2633, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn retry_payment_refund() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1133`
		//  Estimated: `6208`
		// Minimum execution time: 75_504_000 picoseconds.
		Weight::from_parts(77_183_000, 6208)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(147), added: 2622, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(158), added: 2633, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn retry_payment_payout() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1178`
		//  Estimated: `6208`
		// Minimum execution time: 79_452_000 picoseconds.
		Weight::from_parts(81_623_000, 6208)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
}

// For backwards compatibility and tests.
impl WeightInfo for () {
	/// Storage: `Preimage::StatusFor` (r:1 w:0)
	/// Proof: `Preimage::StatusFor` (`max_values`: None, `max_size`: Some(91), added: 2566, mode: `MaxEncodedLen`)
	/// Storage: `Preimage::RequestStatusFor` (r:1 w:0)
	/// Proof: `Preimage::RequestStatusFor` (`max_values`: None, `max_size`: Some(91), added: 2566, mode: `MaxEncodedLen`)
	/// Storage: `AssetRate::ConversionRateToNative` (r:1 w:0)
	/// Proof: `AssetRate::ConversionRateToNative` (`max_values`: None, `max_size`: Some(37), added: 2512, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::BountyCount` (r:1 w:1)
	/// Proof: `MultiAssetBounties::BountyCount` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:0)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(463), added: 2938, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::Bounties` (r:0 w:1)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(147), added: 2622, mode: `MaxEncodedLen`)
	fn fund_bounty() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1012`
		//  Estimated: `6208`
		// Minimum execution time: 111_550_000 picoseconds.
		Weight::from_parts(114_940_000, 6208)
			.saturating_add(RocksDbWeight::get().reads(10_u64))
			.saturating_add(RocksDbWeight::get().writes(7_u64))
	}
	/// Storage: `Preimage::StatusFor` (r:1 w:0)
	/// Proof: `Preimage::StatusFor` (`max_values`: None, `max_size`: Some(91), added: 2566, mode: `MaxEncodedLen`)
	/// Storage: `Preimage::RequestStatusFor` (r:1 w:0)
	/// Proof: `Preimage::RequestStatusFor` (`max_values`: None, `max_size`: Some(91), added: 2566, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(147), added: 2622, mode: `MaxEncodedLen`)
	/// Storage: `AssetRate::ConversionRateToNative` (r:1 w:0)
	/// Proof: `AssetRate::ConversionRateToNative` (`max_values`: None, `max_size`: Some(37), added: 2512, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBountiesPerParent` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBountiesPerParent` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBountiesValuePerParent` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBountiesValuePerParent` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::TotalChildBountiesPerParent` (r:1 w:1)
	/// Proof: `MultiAssetBounties::TotalChildBountiesPerParent` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:0)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(463), added: 2938, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:0 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(158), added: 2633, mode: `MaxEncodedLen`)
	fn fund_child_bounty() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1170`
		//  Estimated: `6208`
		// Minimum execution time: 122_945_000 picoseconds.
		Weight::from_parts(125_727_000, 6208)
			.saturating_add(RocksDbWeight::get().reads(13_u64))
			.saturating_add(RocksDbWeight::get().writes(9_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(147), added: 2622, mode: `MaxEncodedLen`)
	/// Storage: `AssetRate::ConversionRateToNative` (r:1 w:0)
	/// Proof: `AssetRate::ConversionRateToNative` (`max_values`: None, `max_size`: Some(37), added: 2512, mode: `MaxEncodedLen`)
	fn propose_curator_parent_bounty() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `417`
		//  Estimated: `3612`
		// Minimum execution time: 24_548_000 picoseconds.
		Weight::from_parts(25_295_000, 3612)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(147), added: 2622, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(158), added: 2633, mode: `MaxEncodedLen`)
	fn propose_curator_child_bounty() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `531`
		//  Estimated: `3623`
		// Minimum execution time: 24_708_000 picoseconds.
		Weight::from_parts(25_776_000, 3623)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(147), added: 2622, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(158), added: 2633, mode: `MaxEncodedLen`)
	/// Storage: `AssetRate::ConversionRateToNative` (r:1 w:0)
	/// Proof: `AssetRate::ConversionRateToNative` (`max_values`: None, `max_size`: Some(37), added: 2512, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(463), added: 2938, mode: `MaxEncodedLen`)
	fn accept_curator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `929`
		//  Estimated: `3928`
		// Minimum execution time: 75_691_000 picoseconds.
		Weight::from_parts(77_993_000, 3928)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(147), added: 2622, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(158), added: 2633, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(463), added: 2938, mode: `MaxEncodedLen`)
	fn unassign_curator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `830`
		//  Estimated: `3928`
		// Minimum execution time: 53_287_000 picoseconds.
		Weight::from_parts(55_129_000, 3928)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(147), added: 2622, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(158), added: 2633, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn award_bounty() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1145`
		//  Estimated: `6208`
		// Minimum execution time: 81_057_000 picoseconds.
		Weight::from_parts(82_880_000, 6208)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(6_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(147), added: 2622, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBountiesPerParent` (r:1 w:0)
	/// Proof: `MultiAssetBounties::ChildBountiesPerParent` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn close_parent_bounty() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `872`
		//  Estimated: `6208`
		// Minimum execution time: 73_572_000 picoseconds.
		Weight::from_parts(75_225_000, 6208)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(147), added: 2622, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(158), added: 2633, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn close_child_bounty() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1131`
		//  Estimated: `6208`
		// Minimum execution time: 76_531_000 picoseconds.
		Weight::from_parts(78_807_000, 6208)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(147), added: 2622, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(158), added: 2633, mode: `MaxEncodedLen`)
	fn check_status_funding() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `564`
		//  Estimated: `3623`
		// Minimum execution time: 25_046_000 picoseconds.
		Weight::from_parts(25_759_000, 3623)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(147), added: 2622, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(158), added: 2633, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(463), added: 2938, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBountiesValuePerParent` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBountiesValuePerParent` (`max_values`: None, `max_size`: Some(28), added: 2503, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBountiesPerParent` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBountiesPerParent` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `MaxEncodedLen`)
	fn check_status_refund() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `850`
		//  Estimated: `3928`
		// Minimum execution time: 67_452_000 picoseconds.
		Weight::from_parts(69_124_000, 3928)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(147), added: 2622, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(158), added: 2633, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Holds` (r:1 w:1)
	/// Proof: `Balances::Holds` (`max_values`: None, `max_size`: Some(463), added: 2938, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBountiesPerParent` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBountiesPerParent` (`max_values`: None, `max_size`: Some(16), added: 2491, mode: `MaxEncodedLen`)
	fn check_status_payout() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `866`
		//  Estimated: `3928`
		// Minimum execution time: 63_777_000 picoseconds.
		Weight::from_parts(65_163_000, 3928)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(147), added: 2622, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(158), added: 2633, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	fn retry_payment_funding() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1029`
		//  Estimated: `6208`
		// Minimum execution time: 67_992_000 picoseconds.
		Weight::from_parts(69_263_000, 6208)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(147), added: 2622, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(158), added: 2633, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn retry_payment_refund() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1133`
		//  Estimated: `6208`
		// Minimum execution time: 75_504_000 picoseconds.
		Weight::from_parts(77_183_000, 6208)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: `MultiAssetBounties::Bounties` (r:1 w:0)
	/// Proof: `MultiAssetBounties::Bounties` (`max_values`: None, `max_size`: Some(147), added: 2622, mode: `MaxEncodedLen`)
	/// Storage: `MultiAssetBounties::ChildBounties` (r:1 w:1)
	/// Proof: `MultiAssetBounties::ChildBounties` (`max_values`: None, `max_size`: Some(158), added: 2633, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(210), added: 2685, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(134), added: 2609, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn retry_payment_payout() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1178`
		//  Estimated: `6208`
		// Minimum execution time: 79_452_000 picoseconds.
		Weight::from_parts(81_623_000, 6208)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(6_u64))
	}
}
