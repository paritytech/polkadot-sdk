// This file is part of Substrate.

// Copyright (C) Parity Technologies (UK) Ltd.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for pallet_ranked_collective
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-05-19, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: None, WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// /Users/gav/Core/substrate/target/release/substrate
// benchmark
// pallet
// --pallet
// pallet-ranked-collective
// --extrinsic=*
// --chain=dev
// --steps=50
// --repeat=20
// --output=../../../frame/ranked-collective/src/weights.rs
// --template=../../../.maintain/frame-weight-template.hbs
// --header=../../../HEADER-APACHE2
// --record-proof

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for pallet_ranked_collective.
pub trait WeightInfo {
	fn under_alias() -> Weight;
	fn set_alias_account() -> Weight;
	fn unset_alias_account() -> Weight;
	fn reset_root() -> Weight;
	fn force_recognize_personhood() -> Weight;
	fn set_personal_id_account() -> Weight;
	fn unset_personal_id_account() -> Weight;
	fn set_onboarding_size() -> Weight;
	fn merge_rings() -> Weight;
	fn migrate_included_key() -> Weight;
	fn migrate_onboarding_key() -> Weight;
	fn should_build_ring(n: u32) -> Weight;
	fn build_ring(n: u32) -> Weight;
	fn onboard_people() -> Weight;
	fn remove_suspended_people(n: u32) -> Weight;
	fn pending_suspensions_iteration() -> Weight;
	fn migrate_keys_single_included_key() -> Weight;
	fn merge_queue_pages() -> Weight;
	fn as_person_alias_with_account() -> Weight;
	fn as_person_identity_with_account() -> Weight;
	fn as_person_alias_with_proof() -> Weight;
	fn as_person_identity_with_proof() -> Weight;
	fn on_poll_base() -> Weight;
	fn on_idle_base() -> Weight;
}

pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	fn under_alias() -> Weight {
		Weight::zero()
	}

	fn set_alias_account() -> Weight {
		Weight::zero()
	}

	fn unset_alias_account() -> Weight {
		Weight::zero()
	}

	fn reset_root() -> Weight {
		Weight::zero()
	}

	fn force_recognize_personhood() -> Weight {
		Weight::zero()
	}

	fn set_personal_id_account() -> Weight {
		Weight::zero()
	}

	fn unset_personal_id_account() -> Weight {
		Weight::zero()
	}

	fn set_onboarding_size() -> Weight {
		Weight::zero()
	}

	fn merge_rings() -> Weight {
		Weight::zero()
	}

	fn migrate_included_key() -> Weight {
		Weight::zero()
	}

	fn migrate_onboarding_key() -> Weight {
		Weight::zero()
	}

	fn should_build_ring(_n: u32) -> Weight {
		Weight::zero()
	}

	fn build_ring(_n: u32) -> Weight {
		Weight::zero()
	}

	fn onboard_people() -> Weight {
		Weight::zero()
	}

	fn remove_suspended_people(_n: u32) -> Weight {
		Weight::zero()
	}

	fn pending_suspensions_iteration() -> Weight {
		Weight::zero()
	}

	fn migrate_keys_single_included_key() -> Weight {
		Weight::zero()
	}

	fn merge_queue_pages() -> Weight {
		Weight::zero()
	}

	fn as_person_alias_with_account() -> Weight {
		Weight::zero()
	}

	fn as_person_identity_with_account() -> Weight {
		Weight::zero()
	}

	fn as_person_alias_with_proof() -> Weight {
		Weight::zero()
	}

	fn as_person_identity_with_proof() -> Weight {
		Weight::zero()
	}

	fn on_poll_base() -> Weight {
		Weight::zero()
	}

	fn on_idle_base() -> Weight {
		Weight::zero()
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	fn under_alias() -> Weight {
		Weight::zero()
	}

	fn set_alias_account() -> Weight {
		Weight::zero()
	}

	fn unset_alias_account() -> Weight {
		Weight::zero()
	}

	fn reset_root() -> Weight {
		Weight::zero()
	}

	fn force_recognize_personhood() -> Weight {
		Weight::zero()
	}

	fn set_personal_id_account() -> Weight {
		Weight::zero()
	}

	fn unset_personal_id_account() -> Weight {
		Weight::zero()
	}

	fn set_onboarding_size() -> Weight {
		Weight::zero()
	}

	fn merge_rings() -> Weight {
		Weight::zero()
	}

	fn migrate_included_key() -> Weight {
		Weight::zero()
	}

	fn migrate_onboarding_key() -> Weight {
		Weight::zero()
	}

	fn should_build_ring(_n: u32) -> Weight {
		Weight::zero()
	}

	fn build_ring(_n: u32) -> Weight {
		Weight::zero()
	}

	fn onboard_people() -> Weight {
		Weight::zero()
	}

	fn remove_suspended_people(_n: u32) -> Weight {
		Weight::zero()
	}

	fn pending_suspensions_iteration() -> Weight {
		Weight::zero()
	}

	fn migrate_keys_single_included_key() -> Weight {
		Weight::zero()
	}

	fn merge_queue_pages() -> Weight {
		Weight::zero()
	}

	fn as_person_alias_with_account() -> Weight {
		Weight::zero()
	}
	
	fn as_person_identity_with_account() -> Weight {
		Weight::zero()
	}

	fn as_person_alias_with_proof() -> Weight {
		Weight::zero()
	}

	fn as_person_identity_with_proof() -> Weight {
		Weight::zero()
	}

	fn on_poll_base() -> Weight {
		Weight::zero()
	}

	fn on_idle_base() -> Weight {
		Weight::zero()
	}
}