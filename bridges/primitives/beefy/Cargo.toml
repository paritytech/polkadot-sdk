[package]
name = "bp-beefy"
description = "Primitives of pallet-bridge-beefy module."
version = "0.1.0"
authors = ["Parity Technologies <admin@parity.io>"]
edition = "2021"
license = "GPL-3.0-or-later WITH Classpath-exception-2.0"

[dependencies]
codec = { package = "parity-scale-codec", version = "3.0.0", default-features = false, features = ["derive", "bit-vec"] }
scale-info = { version = "2.0.1", default-features = false, features = ["bit-vec", "derive"] }
serde = { version = "1.0", optional = true }
static_assertions = "1.1"

# Bridge Dependencies

bp-runtime = { path = "../runtime", default-features = false }

# Substrate Dependencies

beefy-merkle-tree = { git = "https://github.com/paritytech/substrate", branch = "master", default-features = false }
beefy-primitives = { git = "https://github.com/paritytech/substrate", branch = "master", default-features = false }
frame-support = { git = "https://github.com/paritytech/substrate", branch = "master", default-features = false }
pallet-beefy-mmr = { git = "https://github.com/paritytech/substrate", branch = "master", default-features = false }
pallet-mmr = { git = "https://github.com/paritytech/substrate", branch = "master", default-features = false }
sp-application-crypto = { git = "https://github.com/paritytech/substrate", branch = "master", default-features = false }
sp-core = { git = "https://github.com/paritytech/substrate", branch = "master", default-features = false }
sp-io = { git = "https://github.com/paritytech/substrate", branch = "master", default-features = false }
sp-runtime = { git = "https://github.com/paritytech/substrate", branch = "master", default-features = false }
sp-std = { git = "https://github.com/paritytech/substrate", branch = "master", default-features = false }

[features]
default = ["std"]
std = [
	"beefy-primitives/std",
	"bp-runtime/std",
	"codec/std",
	"frame-support/std",
	"pallet-beefy-mmr/std",
	"pallet-mmr/std",
	"scale-info/std",
	"serde",
	"sp-application-crypto/std",
	"sp-core/std",
	"sp-io/std",
	"sp-runtime/std",
	"sp-std/std"
]
