[package]
name = "snowbridge-pallet-ethereum-client"
description = "Snowbridge Ethereum Client Pallet"
version = "0.0.0"
authors = ["Snowfork <contact@snowfork.com>"]
edition.workspace = true
repository.workspace = true
license = "Apache-2.0"
categories = ["cryptography::cryptocurrencies"]

[lints]
workspace = true

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
serde = { optional = true, workspace = true, default-features = true }
serde_json = { optional = true, workspace = true, default-features = true }
codec = { version = "3.6.1", package = "parity-scale-codec", default-features = false, features = ["derive"] }
scale-info = { version = "2.9.0", default-features = false, features = ["derive"] }
ssz_rs = { version = "0.9.0", default-features = false }
ssz_rs_derive = { version = "0.9.0", default-features = false }
byte-slice-cast = { version = "1.2.1", default-features = false }
rlp = { version = "0.5.2", default-features = false }
hex-literal = { version = "0.4.1", optional = true }
log = { workspace = true }

frame-benchmarking = { path = "../../../../substrate/frame/benchmarking", default-features = false, optional = true }
frame-support = { path = "../../../../substrate/frame/support", default-features = false }
frame-system = { path = "../../../../substrate/frame/system", default-features = false }
sp-core = { path = "../../../../substrate/primitives/core", default-features = false }
sp-std = { path = "../../../../substrate/primitives/std", default-features = false }
sp-runtime = { path = "../../../../substrate/primitives/runtime", default-features = false }
sp-io = { path = "../../../../substrate/primitives/io", default-features = false, optional = true }

snowbridge-core = { path = "../../primitives/core", default-features = false }
snowbridge-ethereum = { path = "../../primitives/ethereum", default-features = false }
snowbridge-pallet-ethereum-client-fixtures = { path = "./fixtures", default-features = false, optional = true }
primitives = { package = "snowbridge-beacon-primitives", path = "../../primitives/beacon", default-features = false }
static_assertions = { version = "1.1.0", default-features = false }
bp-runtime = { path = "../../../primitives/runtime", default-features = false }
pallet-timestamp = { path = "../../../../substrate/frame/timestamp", default-features = false, optional = true }

[dev-dependencies]
rand = "0.8.5"
sp-keyring = { path = "../../../../substrate/primitives/keyring" }
serde_json = { workspace = true, default-features = true }
hex-literal = "0.4.1"
pallet-timestamp = { path = "../../../../substrate/frame/timestamp" }
snowbridge-pallet-ethereum-client-fixtures = { path = "./fixtures" }
sp-io = { path = "../../../../substrate/primitives/io" }
serde = { workspace = true, default-features = true }

[features]
default = ["std"]
fuzzing = [
	"hex-literal",
	"pallet-timestamp",
	"serde",
	"serde_json",
	"sp-io",
]
std = [
	"bp-runtime/std",
	"byte-slice-cast/std",
	"codec/std",
	"frame-support/std",
	"frame-system/std",
	"log/std",
	"pallet-timestamp/std",
	"primitives/std",
	"rlp/std",
	"scale-info/std",
	"serde",
	"snowbridge-core/std",
	"snowbridge-ethereum/std",
	"snowbridge-pallet-ethereum-client-fixtures/std",
	"sp-core/std",
	"sp-io/std",
	"sp-runtime/std",
	"sp-std/std",
	"ssz_rs/std",
	'frame-benchmarking/std',
]
runtime-benchmarks = [
	"frame-benchmarking/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"hex-literal",
	"pallet-timestamp?/runtime-benchmarks",
	"snowbridge-core/runtime-benchmarks",
	"snowbridge-pallet-ethereum-client-fixtures/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
]
try-runtime = [
	"frame-support/try-runtime",
	"frame-system/try-runtime",
	"pallet-timestamp?/try-runtime",
	"sp-runtime/try-runtime",
]
