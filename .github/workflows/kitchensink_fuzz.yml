name: Kitchensink Fuzz

on:
    push:
    pull_request:

jobs:
  fuzz:
    runs-on: ubuntu-latest

    steps:
    # Setup
    - uses: actions/checkout@v4
    - uses: actions/cache@v4
      with:
        path: ~/.cargo/
        key: dot-cargo
    - run: cargo install ziggy cargo-afl
    - run: cargo afl config --build --force

    # Build
    - uses: actions/cache@v4
      with:
        path: substrate/bin/node/runtime/fuzzer/target
        key: target-${{ hashFiles('**/Cargo.lock') }}
    - name: Build fuzzer
      env:
        SKIP_WASM_BUILD: true
      working-directory: substrate/bin/node/runtime/fuzzer
      run: cargo ziggy build --no-honggfuzz

    # Fuzz
    - uses: actions/cache@v4
      with:
        path: substrate/bin/node/runtime/fuzzer/output/kitchensink-fuzzer/corpus
        key: kitchensink-corpus
    - name: Fuzz for 5 minutes
      env:
        SKIP_WASM_BUILD: true
        AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES: true
        AFL_SKIP_CPUFREQ: true
      working-directory: substrate/bin/node/runtime/fuzzer
      run: timeout 1m cargo ziggy fuzz || [[ $? -eq 124 ]]

    # Finally
    - name: Upload Fuzzer Output
      uses: actions/upload-artifact@v4
      with:
          name: fuzzer-output
          path: substrate/bin/node/runtime/fuzzer/output/kitchensink-fuzzer/afl/mainaflfuzzer/fuzzer_stats

    - name: Read Fuzzer metrics for status
      id: file_content
      run: |
            keys=("fuzz_time" "saved_crashes" "edges_found" "total_edges")
            for key in ${keys[@]}; do
              value=$(cat substrate/bin/node/runtime/fuzzer/output/kitchensink-fuzzer/afl/mainaflfuzzer/fuzzer_stats | grep $key | awk -F: '{print $2}')
              echo "${key}=${value}" | tee -a $GITHUB_OUTPUT
            done

    - name: Get Coverage 
      run: |
        # TODO: 
        # This is a placeholder to get gcov report

    - name: Post comment on the PR
      # FIXME: Remove gurard condition once the action is finlaised to only for PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v3
      with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const comment = `
            Fuzz Time: ${process.env.FUZZ_TIME}
            Saved Crashes: ${process.env.SAVED_CRASHES}
            Edges Found: ${process.env.EDGES_FOUND}
            Total Edges: ${process.env.TOTAL_EDGES}
            `;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
      env:
        FUZZ_TIME: ${{ steps.file_content.outputs.fuzz_time }}
        SAVED_CRASHES: ${{ steps.file_content.outputs.saved_crashes }}
        EDGES_FOUND: ${{ steps.file_content.outputs.edges_found }}
        TOTAL_EDGES: ${{ steps.file_content.outputs.total_edges }}
  
