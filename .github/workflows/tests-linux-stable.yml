# GHA for test-linux-stable-int, test-linux-stable, test-linux-stable-oldkernel
name: tests linux stable

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  merge_group:
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  preflight:
    uses: ./.github/workflows/reusable-preflight.yml

  test-linux-stable-int:
    needs: [preflight]
    if: ${{ needs.preflight.outputs.changes_rust }}
    runs-on: ${{ needs.preflight.outputs.RUNNER }}
    timeout-minutes: 60
    container:
      image: ${{ needs.preflight.outputs.IMAGE }}
    env:
      RUSTFLAGS: "-C debug-assertions -D warnings"
      RUST_BACKTRACE: 1
      WASM_BUILD_NO_COLOR: 1
      WASM_BUILD_RUSTFLAGS: "-C debug-assertions -D warnings"
      # Ensure we run the UI tests.
      RUN_UI_TESTS: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: script
        id: required
        run: WASM_BUILD_NO_COLOR=1 forklift cargo test -p staging-node-cli --release --locked -- --ignored
      - name: Stop all workflows if failed
        if: ${{ failure() && steps.required.conclusion == 'failure' }}
        uses: ./.github/actions/workflow-stopper
        with:
          app-id: ${{ secrets.WORKFLOW_STOPPER_RUNNER_APP_ID }}
          app-key: ${{ secrets.WORKFLOW_STOPPER_RUNNER_APP_KEY }}

  # https://github.com/paritytech/ci_cd/issues/864
  test-linux-stable-runtime-benchmarks:
    needs: [preflight]
    if: ${{ needs.preflight.outputs.changes_rust }}
    runs-on: ${{ needs.preflight.outputs.RUNNER }}
    timeout-minutes: 60
    container:
      image: ${{ needs.preflight.outputs.IMAGE }}
    env:
      RUST_TOOLCHAIN: stable
      # Enable debug assertions since we are running optimized builds for testing
      # but still want to have debug assertions.
      RUSTFLAGS: "-Cdebug-assertions=y -Dwarnings"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: script
        id: required
        run: forklift cargo nextest run --workspace --features runtime-benchmarks benchmark --locked --cargo-profile testnet --cargo-quiet
      - name: Stop all workflows if failed
        if: ${{ failure() && steps.required.conclusion == 'failure' }}
        uses: ./.github/actions/workflow-stopper
        with:
          app-id: ${{ secrets.WORKFLOW_STOPPER_RUNNER_APP_ID }}
          app-key: ${{ secrets.WORKFLOW_STOPPER_RUNNER_APP_KEY }}

  test-linux-stable:
    needs: [preflight]
    if: ${{ needs.preflight.outputs.changes_rust }}
    runs-on: ${{ matrix.runners }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        partition: [1/3, 2/3, 3/3]
        runners:
          [
            "${{ needs.preflight.outputs.RUNNER }}",
            "${{ needs.preflight.outputs.RUNNER_OLDLINUX }}",
          ]
    container:
      image: ${{ needs.preflight.outputs.IMAGE }}
      # needed for tests that use unshare syscall
      options: --security-opt seccomp=unconfined
    env:
      RUST_TOOLCHAIN: stable
      # Enable debug assertions since we are running optimized builds for testing
      # but still want to have debug assertions.
      RUSTFLAGS: "-Cdebug-assertions=y -Dwarnings"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: script
        id: required
        run: |
          # Fixes "detected dubious ownership" error in the ci
          git config --global --add safe.directory '*'
          forklift cargo nextest run \
            --workspace \
            --locked \
            --release \
            --no-fail-fast \
            --cargo-quiet \
            --features try-runtime,experimental,ci-only-tests \
            --partition count:${{ matrix.partition }}
      # run runtime-api tests with `enable-staging-api` feature on the 1st node
      - name: runtime-api tests
        if: ${{ matrix.partition == '1/3' }}
        run: forklift cargo nextest run -p sp-api-test --features enable-staging-api --cargo-quiet
      - name: Stop all workflows if failed
        if: ${{ failure() && steps.required.conclusion == 'failure' }}
        uses: ./.github/actions/workflow-stopper
        with:
          app-id: ${{ secrets.WORKFLOW_STOPPER_RUNNER_APP_ID }}
          app-key: ${{ secrets.WORKFLOW_STOPPER_RUNNER_APP_KEY }}

  # some tests do not run with `try-runtime` feature enabled
  # https://github.com/paritytech/polkadot-sdk/pull/4251#discussion_r1624282143
  #
  # all_security_features_work and nonexistent_cache_dir are currently skipped
  # becuase runners don't have the necessary permissions to run them
  test-linux-stable-no-try-runtime:
    needs: [preflight]
    if: ${{ needs.preflight.outputs.changes_rust }}
    runs-on: ${{ needs.preflight.outputs.RUNNER }}
    timeout-minutes: 60
    container:
      image: ${{ needs.preflight.outputs.IMAGE }}
    strategy:
      fail-fast: false
      matrix:
        partition: [1/2, 2/2]
    env:
      RUST_TOOLCHAIN: stable
      # Enable debug assertions since we are running optimized builds for testing
      # but still want to have debug assertions.
      RUSTFLAGS: "-Cdebug-assertions=y -Dwarnings"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: script
        id: required
        run: |
          forklift cargo nextest run --workspace \
                   --locked \
                   --release \
                   --no-fail-fast \
                   --cargo-quiet \
                   --features experimental,ci-only-tests \
                   --filter-expr " !test(/all_security_features_work/) - test(/nonexistent_cache_dir/)" \
                   --partition count:${{ matrix.partition }} \
      - name: Stop all workflows if failed
        if: ${{ failure() && steps.required.conclusion == 'failure' }}
        uses: ./.github/actions/workflow-stopper
        with:
          app-id: ${{ secrets.WORKFLOW_STOPPER_RUNNER_APP_ID }}
          app-key: ${{ secrets.WORKFLOW_STOPPER_RUNNER_APP_KEY }}

  confirm-required-jobs-passed:
    runs-on: ubuntu-latest
    name: All tests passed
    # If any new job gets added, be sure to add it to this array
    needs:
      [
        test-linux-stable-int,
        test-linux-stable-runtime-benchmarks,
        test-linux-stable,
        test-linux-stable-no-try-runtime,
      ]
    if: always() && !cancelled()
    steps:
      - run: |
          tee resultfile <<< '${{ toJSON(needs) }}'
          FAILURES=$(cat resultfile | grep '"result": "failure"' | wc -l)
          if [ $FAILURES -gt 0 ]; then
            echo "### At least one required job failed ❌" >> $GITHUB_STEP_SUMMARY
            exit 1
          else
            echo '### Good job! All the required jobs passed 🚀' >> $GITHUB_STEP_SUMMARY
          fi
