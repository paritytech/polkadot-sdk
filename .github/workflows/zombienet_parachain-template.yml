name: Zombienet Polkadot

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  merge_group:
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  RUN_IN_CONTAINER: 1
  FF_DISABLE_UMASK_FOR_DOCKER_EXECUTOR: 1
  GHA_CLUSTER_SERVER_ADDR: "https://kubernetes.default:443"
  # use spot by default
  X_INFRA_INSTANCE: "spot"
  # don't retry sdk tests
  NEXTEST_RETRIES: 0
  ZOMBIE_PROVIDER: "native"
  RUST_LOG: "info,zombienet_orchestrator=debug"

# only run if we have changes in [subtrate, polkadot] directories or this workflow.
jobs:
  isdraft:
    uses: ./.github/workflows/reusable-isdraft.yml
  preflight:
    needs: isdraft
    uses: ./.github/workflows/zombienet-reusable-preflight.yml


  zombienet-parachain-template-smoke:
    needs: [preflight]
    if: ${{ (needs.preflight.outputs.changes_substrate || needs.preflight.outputs.changes_polkadot) &&  ! contains(needs.preflight.outputs.FLAKY_TESTS, 'zombienet-parachain-template-smoke') }}
    runs-on: parity-default
    timeout-minutes: 30
    container:
      image: ${{ needs.preflight.outputs.CI_IMAGE }}
    env:
      ZOMBIENET_INTEGRATION_TEST_IMAGE: "${{ needs.preflight.outputs.TEMP_IMAGES_BASE }}/polkadot-debug:${{ needs.preflight.outputs.DOCKER_IMAGES_VERSION }}"
      COL_IMAGE: "${{ needs.preflight.outputs.TEMP_IMAGES_BASE }}/colander:${{ needs.preflight.outputs.DOCKER_IMAGES_VERSION }}"
      DEBUG: ${{ needs.preflight.outputs.DEBUG }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4.1.8
        with:
          path: build-artifacts
          pattern: build-{linux-stable,templates-node}-${{ needs.preflight.outputs.SOURCE_REF_SLUG }}
          merge-multiple: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ needs.preflight.outputs.BUILD_RUN_ID }}

      - run: ls -R build-artifacts

    #   - name: tar
    #     shell: bash
    #     run: |
    #       tar -xvf artifacts.tar
    #       rm artifacts.tar
