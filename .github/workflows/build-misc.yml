on:
  push:
    branches:
      - master
    tags:
      - v1.*
  pull_request:
    types: [ opened, synchronize, reopened, closed, labeled ]
  merge_group:


concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  set-image:
    # TODO: remove once migration is complete or this workflow is fully stable
    #    if: contains(github.event.label.name, 'GHA-migration')
    # GitHub Actions allows using 'env' in a container context.
    # However, env variables don't work for forks: https://github.com/orgs/community/discussions/44322
    # This workaround sets the container image for each job using 'set-image' job output.
    runs-on: ubuntu-latest
    outputs:
      IMAGE: ${{ steps.set_image.outputs.IMAGE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - id: set_image
        run: cat .github/env >> $GITHUB_OUTPUT

  build-runtimes-polkavm:
    needs: [ set-image ]
    runs-on: arc-runners-polkadot-sdk-beefy
    container:
      image: ${{ needs.set-image.outputs.IMAGE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check Rust
        run: |
          rustup show
          rustup +nightly show

      - name: Build
        env:
          SUBSTRATE_RUNTIME_TARGET: riscv
        run: |
          time cargo check -p minimal-template-runtime
          time cargo check -p westend-runtime
          time cargo check -p rococo-runtime
          time cargo check -p polkadot-test-runtime

  build-subkey:
    needs: [ set-image ]
    runs-on: arc-runners-polkadot-sdk-beefy
    container:
      image: ${{ needs.set-image.outputs.IMAGE }}
    strategy:
      matrix:
        os: [ linux ] # TODO: add macos when available
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check Rust
        run: |
          rustup show
          rustup +nightly show

      - name: Build
        env:
          SKIP_WASM_BUILD: 1
        run: |
          cd ./substrate/bin/utils/subkey
          time cargo build --locked --release
