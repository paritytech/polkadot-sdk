name: Release - Promote RC to final candidate on S3

on:
  workflow_dispatch:
    inputs:
      binary:
        description: Binary to be build for the release
        default: all
        type: choice
        options:
          - polkadot
          - polkadot-parachain
          - polkadot-omni-node
          - frame-omni-bencher
          - chain-spec-builder
          - all
      release_tag:
        description: Tag matching the actual release candidate with the format polkadot-stableYYMM(-X)-rcX
        type: string


jobs:

  check-synchronization:
    uses: paritytech-release/sync-workflows/.github/workflows/check-syncronization.yml@main

  validate-inputs:
    needs: [ check-synchronization ]
    if: ${{ needs.check-synchronization.outputs.checks_passed }} == 'true'
    runs-on: ubuntu-latest
    outputs:
      release_tag: ${{ steps.validate_inputs.outputs.release_tag }}
      final_tag: ${{ steps.validate_inputs.outputs.final_tag }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Validate inputs
        id: validate_inputs
        run: |
          . ./.github/scripts/common/lib.sh

          RELEASE_TAG=$(validate_stable_tag ${{ inputs.release_tag }})
          echo "release_tag=${RELEASE_TAG}" >> $GITHUB_OUTPUT

  promote-polkadot-rc-to-final:
    if: ${{ inputs.binary == 'polkadot' || inputs.binary == 'all' }}
    needs: [ validate-inputs ]
    uses: ./.github/workflows/release-reusable-promote-to-final.yml
    strategy:
      matrix:
        target: [ x86_64-unknown-linux-gnu, aarch64-apple-darwin ]
    with:
      package: polkadot
      release_tag: ${{ needs.validate-inputs.outputs.release_tag }}
      target: ${{ matrix.target }}
    secrets:
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      AWS_RELEASE_ACCESS_KEY_ID: ${{ secrets.AWS_RELEASE_ACCESS_KEY_ID }}
      AWS_RELEASE_SECRET_ACCESS_KEY: ${{ secrets.AWS_RELEASE_SECRET_ACCESS_KEY }}

  promote-polkadot-parachain-rc-to-final:
    if: ${{ inputs.binary == 'polkadot-parachain' || inputs.binary == 'all' }}
    needs: [ validate-inputs ]
    uses: ./.github/workflows/release-reusable-promote-to-final.yml
    strategy:
      matrix:
        target: [ x86_64-unknown-linux-gnu, aarch64-apple-darwin ]
    with:
      package: polkadot-parachain
      release_tag: ${{ needs.validate-inputs.outputs.release_tag }}
      target: ${{ matrix.target }}
    secrets:
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      AWS_RELEASE_ACCESS_KEY_ID: ${{ secrets.AWS_RELEASE_ACCESS_KEY_ID }}
      AWS_RELEASE_SECRET_ACCESS_KEY: ${{ secrets.AWS_RELEASE_SECRET_ACCESS_KEY }}

  promote-polkadot-omni-node-rc-to-final:
    if: ${{ inputs.binary == 'polkadot-omni-node' || inputs.binary == 'all' }}
    needs: [ validate-inputs ]
    uses: ./.github/workflows/release-reusable-promote-to-final.yml
    strategy:
      matrix:
        target: [ x86_64-unknown-linux-gnu, aarch64-apple-darwin ]
    with:
      package: polkadot-omni-node
      release_tag: ${{ needs.validate-inputs.outputs.release_tag }}
      target: ${{ matrix.target }}
    secrets:
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      AWS_RELEASE_ACCESS_KEY_ID: ${{ secrets.AWS_RELEASE_ACCESS_KEY_ID }}
      AWS_RELEASE_SECRET_ACCESS_KEY: ${{ secrets.AWS_RELEASE_SECRET_ACCESS_KEY }}

  promote-frame-omni-bencher-rc-to-final:
    if: ${{ inputs.binary == 'frame-omni-bencher' || inputs.binary == 'all' }}
    needs: [ validate-inputs ]
    uses: ./.github/workflows/release-reusable-promote-to-final.yml
    strategy:
      matrix:
        target: [ x86_64-unknown-linux-gnu, aarch64-apple-darwin ]
    with:
      package: frame-omni-bencher
      release_tag: ${{ needs.validate-inputs.outputs.release_tag }}
      target: ${{ matrix.target }}
    secrets:
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      AWS_RELEASE_ACCESS_KEY_ID: ${{ secrets.AWS_RELEASE_ACCESS_KEY_ID }}
      AWS_RELEASE_SECRET_ACCESS_KEY: ${{ secrets.AWS_RELEASE_SECRET_ACCESS_KEY }}

  promote-chain-spec-builder-rc-to-final:
    if: ${{ inputs.binary == 'chain-spec-builder' || inputs.binary == 'all' }}
    needs: [ validate-inputs ]
    uses: ./.github/workflows/release-reusable-promote-to-final.yml
    strategy:
      matrix:
        target: [ x86_64-unknown-linux-gnu, aarch64-apple-darwin ]
    with:
      package: chain-spec-builder
      release_tag: ${{ needs.validate-inputs.outputs.release_tag }}
      target: ${{ matrix.target }}
    secrets:
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      AWS_RELEASE_ACCESS_KEY_ID: ${{ secrets.AWS_RELEASE_ACCESS_KEY_ID }}
      AWS_RELEASE_SECRET_ACCESS_KEY: ${{ secrets.AWS_RELEASE_SECRET_ACCESS_KEY }}
