name: Zombienet Polkadot

on:
  workflow_dispatch:
  push:
   branches:
     - master
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review, labeled]
  merge_group:
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  FF_DISABLE_UMASK_FOR_DOCKER_EXECUTOR: 1
  LOCAL_DIR: "./polkadot/zombienet_tests"
  GHA_CLUSTER_SERVER_ADDR: "https://kubernetes.default:443"
  # use spot by default
  X_INFRA_INSTANCE: "spot"
  # don't retry sdk tests
  NEXTEST_RETRIES: 0
  KUBECONFIG: "/data/config"
  ZOMBIE_CLEANER_DISABLED: 1

# only run if we have changes in [subtrate, polkadot] directories or this workflow.
jobs:
  isdraft:
    uses: ./.github/workflows/reusable-isdraft.yml
  preflight:
    needs: isdraft
    uses: ./.github/workflows/zombienet-reusable-preflight.yml

  zombienet-polkadot-tests:
    name: ${{ matrix.test-name }}
    runs-on: ${{ matrix.runner-type == 'large' && (matrix.use-zombienet-sdk && needs.preflight.outputs.ZOMBIENET_SDK_LARGE_RUNNER || needs.preflight.outputs.ZOMBIENET_LARGE_RUNNER) || (matrix.use-zombienet-sdk && needs.preflight.outputs.ZOMBIENET_SDK_DEFAULT_RUNNER || needs.preflight.outputs.ZOMBIENET_DEFAULT_RUNNER) }}
    timeout-minutes: 60
    needs: [preflight]
    if: ${{ (needs.preflight.outputs.changes_substrate || needs.preflight.outputs.changes_polkadot) }}
    container:
      image: ${{ matrix.use-zombienet-sdk && needs.preflight.outputs.ZOMBIENET_SDK_IMAGE || needs.preflight.outputs.ZOMBIENET_IMAGE }}
    env:
      ZOMBIENET_INTEGRATION_TEST_IMAGE: "${{ needs.preflight.outputs.TEMP_IMAGES_BASE }}/polkadot-debug:${{ needs.preflight.outputs.DOCKER_IMAGES_VERSION }}"
      POLKADOT_IMAGE: "${{ needs.preflight.outputs.TEMP_IMAGES_BASE }}/polkadot-debug:${{ needs.preflight.outputs.DOCKER_IMAGES_VERSION }}"
      COL_IMAGE: "${{ needs.preflight.outputs.TEMP_IMAGES_BASE }}/colander:${{ needs.preflight.outputs.DOCKER_IMAGES_VERSION }}"
      CUMULUS_IMAGE: "${{ needs.preflight.outputs.TEMP_IMAGES_BASE }}/${{ matrix.cumulus-image || 'polkadot-parachain-debug' }}:${{ needs.preflight.outputs.DOCKER_IMAGES_VERSION }}"
      MALUS_IMAGE: "${{ needs.preflight.outputs.TEMP_IMAGES_BASE }}/malus:${{ needs.preflight.outputs.DOCKER_IMAGES_VERSION }}"
      DEBUG: ${{ needs.preflight.outputs.DEBUG }}
      ZOMBIENET_PROVIDER: ${{ needs.preflight.outputs.ZOMBIENET_PROVIDER }}
      RUST_LOG: ${{ needs.preflight.outputs.RUST_LOG }}
      ZOMBIE_PROVIDER: ${{ needs.preflight.outputs.ZOMBIE_PROVIDER }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Functional tests using traditional zombienet
          - test-name: "zombienet-polkadot-functional-0001-parachains-pvf"
            test-file: "0001-parachains-pvf.zndsl"
            local-dir: "./polkadot/zombienet_tests/functional"
            runner-type: "large"
            concurrency: 1
            use-zombienet-sdk: false

          - test-name: "zombienet-polkadot-functional-0002-parachains-disputes"
            test-file: "0002-parachains-disputes.zndsl"
            local-dir: "./polkadot/zombienet_tests/functional"
            runner-type: "large"
            concurrency: 1
            use-zombienet-sdk: false

          - test-name: "zombienet-polkadot-functional-0003-beefy-and-mmr"
            test-file: "0003-beefy-and-mmr.zndsl"
            local-dir: "./polkadot/zombienet_tests/functional"
            runner-type: "default"
            use-zombienet-sdk: false

          - test-name: "zombienet-polkadot-functional-0004-parachains-disputes-garbage-candidate"
            test-file: "0004-parachains-garbage-candidate.zndsl"
            local-dir: "./polkadot/zombienet_tests/functional"
            runner-type: "large"
            use-zombienet-sdk: false

          - test-name: "zombienet-polkadot-functional-0006-parachains-max-tranche0"
            test-file: "0006-parachains-max-tranche0.zndsl"
            local-dir: "./polkadot/zombienet_tests/functional"
            runner-type: "large"
            use-zombienet-sdk: false

          - test-name: "zombienet-polkadot-functional-0007-dispute-freshly-finalized"
            test-file: "0007-dispute-freshly-finalized.zndsl"
            local-dir: "./polkadot/zombienet_tests/functional"
            runner-type: "large"
            use-zombienet-sdk: false

          - test-name: "zombienet-polkadot-functional-0008-dispute-old-finalized"
            test-file: "0008-dispute-old-finalized.zndsl"
            local-dir: "./polkadot/zombienet_tests/functional"
            runner-type: "large"
            use-zombienet-sdk: false

          - test-name: "zombienet-polkadot-functional-0010-validator-disabling"
            test-file: "0010-validator-disabling.zndsl"
            local-dir: "./polkadot/zombienet_tests/functional"
            runner-type: "large"
            use-zombienet-sdk: false

          - test-name: "zombienet-polkadot-functional-0013-systematic-chunk-recovery"
            test-file: "0013-systematic-chunk-recovery.zndsl"
            local-dir: "./polkadot/zombienet_tests/functional"
            runner-type: "large"
            use-zombienet-sdk: false

          - test-name: "zombienet-polkadot-functional-0014-chunk-fetching-network-compatibility"
            test-file: "0014-chunk-fetching-network-compatibility.zndsl"
            local-dir: "./polkadot/zombienet_tests/functional"
            runner-type: "large"
            use-zombienet-sdk: false
            additional-setup: |
              BIN_DIR="$(pwd)/bin_old"
              mkdir -p $BIN_DIR
              for bin in polkadot polkadot-parachain; do
                OLD_NAME="$bin-old"
                echo "downloading $bin as $OLD_NAME in $BIN_DIR";
                curl -L -o $BIN_DIR/$OLD_NAME https://github.com/paritytech/polkadot-sdk/releases/download/polkadot-v1.7.0/$bin
                chmod 755 $BIN_DIR/$OLD_NAME;
              done
              for bin in polkadot-execute-worker polkadot-prepare-worker; do
                OLD_NAME="$bin"
                echo "downloading $bin as $OLD_NAME in $BIN_DIR";
                curl -L -o $BIN_DIR/$OLD_NAME https://github.com/paritytech/polkadot-sdk/releases/download/polkadot-v1.7.0/$bin
                chmod 755 $BIN_DIR/$OLD_NAME;
              done
              ls -ltr $BIN_DIR
              export PATH=$BIN_DIR:$PATH
              echo "PATH=$PATH" >> $GITHUB_ENV
              echo "OLD_SUFFIX=-old" >> $GITHUB_ENV
            additional-env:
              OLD_SUFFIX: "-old"

          - test-name: "zombienet-polkadot-functional-0015-coretime-shared-core"
            test-file: "0015-coretime-shared-core.zndsl"
            local-dir: "./polkadot/zombienet_tests/functional"
            runner-type: "large"
            use-zombienet-sdk: false
            additional-setup: |
              cp --remove-destination ./polkadot/zombienet_tests/assign-core.js ./polkadot/zombienet_tests/functional

          - test-name: "zombienet-polkadot-functional-0019-coretime-collation-fetching-fairness"
            test-file: "0019-coretime-collation-fetching-fairness.zndsl"
            local-dir: "./polkadot/zombienet_tests/functional"
            runner-type: "large"
            use-zombienet-sdk: false
            additional-setup: |
              cp --remove-destination ./polkadot/zombienet_tests/assign-core.js ./polkadot/zombienet_tests/functional

          # Smoke tests using traditional zombienet
          - test-name: "zombienet-polkadot-smoke-0001-parachains-smoke-test"
            test-file: "0001-parachains-smoke-test.zndsl"
            local-dir: "./polkadot/zombienet_tests/smoke"
            runner-type: "default"
            use-zombienet-sdk: false

          - test-name: "zombienet-polkadot-smoke-0002-parachains-parachains-upgrade-smoke"
            test-file: "0002-parachains-upgrade-smoke-test.zndsl"
            local-dir: "./polkadot/zombienet_tests/smoke"
            runner-type: "default"
            use-zombienet-sdk: false

          # TODO: Disabled
          - test-name: "zombienet-polkadot-smoke-0003-deregister-register-validator"
            test-file: "0003-deregister-register-validator-smoke.zndsl"
            local-dir: "./polkadot/zombienet_tests/smoke"
            runner-type: "default"
            use-zombienet-sdk: false

          - test-name: "zombienet-polkadot-smoke-0004-coretime-smoke-test"
            test-file: "0004-coretime-smoke-test.zndsl"
            local-dir: "./polkadot/zombienet_tests/smoke"
            runner-type: "large"
            use-zombienet-sdk: false

          - test-name: "zombienet-polkadot-smoke-0005-precompile-pvf-smoke"
            test-file: "0005-precompile-pvf-smoke.zndsl"
            local-dir: "./polkadot/zombienet_tests/smoke"
            runner-type: "large"
            use-zombienet-sdk: false

          # Misc tests using traditional zombienet
          # TODO: Disabled, occasionally (1 on ~50-70 runs) fails
          - test-name: "zombienet-polkadot-misc-0001-parachains-paritydb"
            test-file: "0001-paritydb.zndsl"
            local-dir: "./polkadot/zombienet_tests/misc"
            runner-type: "large"
            use-zombienet-sdk: false

          # TODO: needs to resolve how to pass the GH_TOKEN to pods
          # - test-name: "zombienet-polkadot-misc-0002-upgrade-node"
          #   test-file: "0002-upgrade-node.zndsl"
          #   local-dir: "./polkadot/zombienet_tests/misc"
          #   runner-type: "large"
          #   additional-env:
          #     ZOMBIENET_INTEGRATION_TEST_IMAGE: "docker.io/parity/polkadot:latest"
          #     POLKADOT_PR_ARTIFACTS_URL: ${{ needs.preflight.outputs.POLKADOT_PR_ARTIFACTS_URL }}
          #   use-zombienet-sdk: false

          # Malus tests using traditional zombienet
          - test-name: "zombienet-polkadot-malus-0001-dispute-valid"
            test-file: "0001-dispute-valid-block.zndsl"
            local-dir: "./polkadot/node/malus/integrationtests"
            runner-type: "large"
            use-zombienet-sdk: false

          # SDK tests using zombienet-sdk
          # TODO: Disabled
          - test-name: "zombienet-polkadot-coretime-revenue"
            test-path: "smoke::coretime_revenue::coretime_revenue_test"
            runner-type: "default"
            use-zombienet-sdk: true
            cumulus-image: "colander"

          - test-name: "zombienet-polkadot-elastic-scaling-slot-based-3cores"
            test-path: "elastic_scaling::slot_based_3cores::slot_based_3cores_test"
            runner-type: "large"
            use-zombienet-sdk: true
            cumulus-image: "test-parachain"

          # TODO: Disabled, fails very often with zombienet native provider
          - test-name: "zombienet-polkadot-elastic-scaling-slot-based-12cores"
            test-path: "elastic_scaling::slot_based_12cores::slot_based_12cores_test"
            runner-type: "large"
            use-zombienet-sdk: true
            cumulus-image: "test-parachain"

          - test-name: "zombienet-polkadot-elastic-scaling-doesnt-break-parachains"
            test-path: "elastic_scaling::doesnt_break_parachains::doesnt_break_parachains_test"
            runner-type: "large"
            use-zombienet-sdk: true

          - test-name: "zombienet-polkadot-elastic-scaling-basic-3cores"
            test-path: "elastic_scaling::basic_3cores::basic_3cores_test"
            runner-type: "large"
            use-zombienet-sdk: true
            cumulus-image: "colander"

          - test-name: "zombienet-polkadot-functional-sync-backing"
            test-path: "functional::sync_backing::sync_backing_test"
            runner-type: "large"
            use-zombienet-sdk: true
            cumulus-image: "test-parachain"

          - test-name: "zombienet-polkadot-functional-async-backing-6-seconds-rate"
            test-path: "functional::async_backing_6_seconds_rate::async_backing_6_seconds_rate_test"
            runner-type: "large"
            use-zombienet-sdk: true

          # TODO: Disabled, occasionally (1 on ~50-100 runs) fails
          - test-name: "zombienet-polkadot-functional-duplicate-collations"
            test-path: "functional::duplicate_collations::duplicate_collations_test"
            runner-type: "large"
            use-zombienet-sdk: true

          # TODO: Disabled, occasionally (2 on ~50-70 runs) fails
          - test-name: "zombienet-polkadot-disputes-slashing"
            test-path: "disabling::slashing"
            runner-type: "default"
            use-zombienet-sdk: true

          # TODO: Disabled, occasionally (1 on ~50-100 runs) fails
          - test-name: "zombienet-polkadot-functional-spam-statement-distribution-requests"
            test-path: "functional::spam_statement_distribution_requests::spam_statement_distribution_requests_test"
            runner-type: "large"
            use-zombienet-sdk: true
            cumulus-image: "colander"

          - test-name: "zombienet-polkadot-approval-voting-coalescing"
            test-path: "functional::approval_voting_coalescing::approval_voting_coalescing_test"
            runner-type: "large"
            use-zombienet-sdk: true
            cumulus-image: "colander"

          - test-name: "zombienet-polkadot-approved-peer-mixed-validators"
            test-path: "functional::approved_peer_mixed_validators::approved_peer_mixed_validators_test"
            runner-type: "large"
            use-zombienet-sdk: true
            cumulus-image: "colander"
            additional-setup: |
              BIN_DIR="$(pwd)/bin_old"
              mkdir -p $BIN_DIR
              for bin in polkadot polkadot-parachain; do
                OLD_NAME="$bin-old"
                echo "downloading $bin as $OLD_NAME in $BIN_DIR";
                curl -L -o $BIN_DIR/$OLD_NAME https://github.com/paritytech/polkadot-sdk/releases/download/polkadot-stable2503/$bin
                chmod 755 $BIN_DIR/$OLD_NAME;
              done
              for bin in polkadot-execute-worker polkadot-prepare-worker; do
                OLD_NAME="$bin"
                echo "downloading $bin as $OLD_NAME in $BIN_DIR";
                curl -L -o $BIN_DIR/$OLD_NAME https://github.com/paritytech/polkadot-sdk/releases/download/polkadot-stable2503/$bin
                chmod 755 $BIN_DIR/$OLD_NAME;
              done
              ls -ltr $BIN_DIR
              export PATH=$BIN_DIR:$PATH
              echo "PATH=$PATH" >> $GITHUB_ENV
            additional-env:
              OLD_POLKADOT_IMAGE: "docker.io/paritypr/polkadot-debug:master-187cddde"
              OLD_POLKADOT_COMMAND: "polkadot-old"

          - test-name: "zombienet-polkadot-shared-core-idle-parachain"
            test-path: "functional::shared_core_idle_parachain::shared_core_idle_parachain_test"
            runner-type: "large"
            use-zombienet-sdk: true

    steps:
      - name: Check if test is flaky
        id: check_flaky
        shell: bash
        run: |
          if [[ "${{ contains(needs.preflight.outputs.FLAKY_TESTS, matrix.test-name) }}" == "true" ]]; then
            echo "Test ${{ matrix.test-name }} is marked as flaky, skipping"
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi

      - name: Checkout
        if: steps.check_flaky.outputs.skip != 'true'
        uses: actions/checkout@v4

      - name: Set additional environment variables
        if: ${{ matrix.additional-env && steps.check_flaky.outputs.skip != 'true' }}
        shell: bash
        run: |
          echo '${{ toJson(matrix.additional-env) }}' | jq -r 'to_entries[] | "\(.key)=\(.value)"' >> $GITHUB_ENV

      - name: Additional setup
        if: ${{ matrix.additional-setup && steps.check_flaky.outputs.skip != 'true' }}
        shell: bash
        run: ${{ matrix.additional-setup }}

      - name: zombienet_test (traditional)
        if: ${{ !matrix.use-zombienet-sdk && steps.check_flaky.outputs.skip != 'true' }}
        uses: ./.github/actions/zombienet
        with:
          test: ${{ matrix.test-file }}
          job-name: ${{ matrix.test-name }}
          local-dir: ${{ matrix.local-dir }}
          concurrency: ${{ matrix.concurrency || 1 }}
          gh-token: ${{ secrets.GITHUB_TOKEN }}
          build-id: ${{ needs.preflight.outputs.BUILD_RUN_ID }}
          ref-slug: ${{ needs.preflight.outputs.SOURCE_REF_SLUG }}

      - name: zombienet_test (sdk)
        if: ${{ matrix.use-zombienet-sdk && steps.check_flaky.outputs.skip != 'true' }}
        uses: ./.github/actions/zombienet-sdk
        with:
          gh-token: ${{ secrets.GITHUB_TOKEN }}
          build-id: ${{ needs.preflight.outputs.BUILD_RUN_ID }}
          ref-slug: ${{ needs.preflight.outputs.SOURCE_REF_SLUG }}
          test: ${{ matrix.test-path }}
          job-name: ${{ matrix.test-name }}
          prefix: "polkadot"

