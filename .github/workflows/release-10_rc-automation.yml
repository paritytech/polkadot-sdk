name: Release - RC automation
on:
  # TODO: Activate it and delete old branches patterns, when the release process from stable is setteled
  #push:
    # branches:
    #   # Catches release-polkadot-v1.2.3, release-v1.2.3-rc1, etc
    #   - release-v[0-9]+.[0-9]+.[0-9]+*
    #   - release-cumulus-v[0-9]+*
    #   - release-polkadot-v[0-9]+*
    #   - stable

  workflow_dispatch:
    inputs:
      version:
        description: Current release/rc version in format polkadot-stableYYMM

jobs:
  tag_rc:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        channel:
          - name: "RelEng: Polkadot Release Coordination"
            room: '!cqAmzdIcbOFwrdrubV:parity.io'
    environment: release
    env:
      PGP_KMS_KEY: ${{ secrets.PGP_KMS_SIGN_COMMITS_KEY }}
      PGP_KMS_HASH: ${{ secrets.PGP_KMS_HASH }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    steps:
      - name: Install pgpkkms
        run: |
          # Install pgpkms that is used to sign commits
          pip install git+https://github.com/paritytech-release/pgpkms.git@5a8f82fbb607ea102d8c178e761659de54c7af69

      - name: Generate content write token for the release automation
        id: generate_write_token
        uses: actions/create-github-app-token@v1
        with:
            app-id: ${{ vars.RELEASE_AUTOMATION_APP_ID }}
            private-key: ${{ secrets.RELEASE_AUTOMATION_APP_PRIVATE_KEY }}
            owner: paritytech

      - name: Checkout sources
        uses: actions/checkout@6d193bf28034eafb982f37bd894289fe649468fc # v4.1.7
        with:
          fetch-depth: 0
          token: ${{ steps.generate_write_token.outputs.token }}

      - name: Import gpg keys
        run: |
          . ./.github/scripts/common/lib.sh

          import_gpg_keys

      - name: Config git
        run: |
          git config --global commit.gpgsign true
          git config --global gpg.program /home/runner/.local/bin/pgpkms-git
          git config --global user.name "ParityReleases"
          git config --global user.email "release-team@parity.io"
          git config --global user.signingKey "D8018FBB3F534D866A45998293C5FB5F6A367B51"

      - name: Compute next rc tag
        # if: ${{ steps.get_rel_product.outputs.product == 'polkadot' }}
        id: compute_tag
        shell: bash
        run: |
          . ./.github/scripts/common/lib.sh

          # Get last rc tag if exists, else set it to {version}-rc1
          if [[ -z "${{ inputs.version }}" ]]; then
            version=v$(get_polkadot_node_version_from_code)
          else
            version=$(validate_stable_tag ${{ inputs.version }})
          fi
          echo "$version"
          echo "version=$version" >> $GITHUB_OUTPUT

          last_rc=$(get_latest_rc_tag $version polkadot)

          if [ -n "$last_rc" ]; then
            suffix=$(increment_rc_tag $last_rc)
            echo "new_tag=$version-rc$suffix" >> $GITHUB_OUTPUT
            echo "first_rc=false" >> $GITHUB_OUTPUT
          else
            echo "new_tag=$version-rc1" >> $GITHUB_OUTPUT
            echo "first_rc=true" >> $GITHUB_OUTPUT
          fi

      - name: Apply new tag
        env:
          GH_TOKEN: ${{ steps.generate_write_token.outputs.token }}
          RC_TAG: ${{ steps.compute_tag.outputs.new_tag }}
        run: |
         git tag -s $RC_TAG -m "new rc tag $RC_TAG"
         git push origin $RC_TAG

      - name: Send Matrix message to ${{ matrix.channel.name }}
        uses: s3krit/matrix-message-action@70ad3fb812ee0e45ff8999d6af11cafad11a6ecf # v0.0.3
        # if: steps.create-issue.outputs.url != ''
        with:
          room_id: ${{ matrix.channel.room }}
          access_token: ${{ secrets.RELEASENOTES_MATRIX_V2_ACCESS_TOKEN }}
          server: m.parity.io
          message: |
            Release process for polkadot ${{ steps.compute_tag.outputs.new_tag }} has been started.<br/>
