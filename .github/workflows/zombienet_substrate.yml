name: Zombienet Substrate

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  merge_group:
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  RUN_IN_CONTAINER: 1
  FF_DISABLE_UMASK_FOR_DOCKER_EXECUTOR: 1
  LOCAL_DIR: "./substrate/zombienet"
  GHA_CLUSTER_SERVER_ADDR: "https://kubernetes.default:443"

  # DB generated from commit: https://github.com/paritytech/polkadot-sdk/commit/868788a5bff3ef94869bd36432726703fe3b4e96
  # TODO: As a workaround for https://github.com/paritytech/polkadot-sdk/issues/2568 the DB was generated in archive mode.
  # After the issue is fixed, we should replace it with a pruned version of the DB.
  DB_SNAPSHOT: "https://storage.googleapis.com/zombienet-db-snaps/substrate/0001-basic-warp-sync/chains-9677807d738b951e9f6c82e5fd15518eb0ae0419.tgz"
  DB_BLOCK_HEIGHT: 56687

jobs:
  preflight:
    uses: ./.github/workflows/zombienet-reusable-preflight.yml

  zombienet-substrate-0000-block-building:
    needs: [preflight]
    # only run if we have changes in ./substrate directory and the build workflow already finish with success status.
    if: ${{ needs.preflight.outputs.changes_substrate || github.event_name == 'workflow_dispatch' }}
    runs-on: ${{ needs.preflight.outputs.ZOMBIENET_RUNNER }} # NOTE: should be zombienet-arc-runner (without quotes)
    timeout-minutes: 60
    container:
      image: ${{ needs.preflight.outputs.ZOMBIENET_IMAGE }}
    env:
      ZOMBIENET_INTEGRATION_TEST_IMAGE: "${{ needs.preflight.outputs.TEMP_IMAGES_BASE }}/substrate:${{ needs.preflight.outputs.DOCKER_IMAGES_VERSION }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: script
        run: |
          echo "Img: $ZOMBIENET_INTEGRATION_TEST_IMAGE"
          export DEBUG=${{ needs.preflight.outputs.DEBUG }}
          /home/nonroot/zombie-net/scripts/ci/run-test-local-env-manager.sh --local-dir="$(pwd)/$LOCAL_DIR/0000-block-building" --test="block-building.zndsl"

      - name: upload logs
        uses: actions/upload-artifact@v4
        with:
          name: zombienet-logs-${{ github.job }}-${{ github.sha }}
          path: |
            /tmp/zombie*/logs/*

  zombienet-substrate-0001-basic-warp-sync:
    needs: [preflight]
    # only run if we have changes in ./substrate directory and the build workflow already finish with success status.
    if: ${{ needs.preflight.outputs.changes_substrate || github.event_name == 'workflow_dispatch' }}
    runs-on: ${{ needs.preflight.outputs.ZOMBIENET_RUNNER }} # NOTE: should be zombienet-arc-runner (without quotes)
    timeout-minutes: 60
    container:
      image: ${{ needs.preflight.outputs.ZOMBIENET_IMAGE }}
    env:
      ZOMBIENET_INTEGRATION_TEST_IMAGE: "${{ needs.preflight.outputs.TEMP_IMAGES_BASE }}/substrate:${{ needs.preflight.outputs.DOCKER_IMAGES_VERSION }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: script
        run: |
          echo "Img: $ZOMBIENET_INTEGRATION_TEST_IMAGE"
          export DEBUG=${{ needs.preflight.outputs.DEBUG }}
          /home/nonroot/zombie-net/scripts/ci/run-test-local-env-manager.sh --local-dir="$(pwd)/$LOCAL_DIR/0001-basic-warp-sync" --test="test-warp-sync.zndsl"

      - name: upload logs
        uses: actions/upload-artifact@v4
        with:
          name: zombienet-logs-${{ github.job }}-${{ github.sha }}
          path: |
            /tmp/zombie*/logs/*

  zombienet-substrate-0002-validators-warp-sync:
    needs: [preflight]
    # only run if we have changes in ./substrate directory and the build workflow already finish with success status.
    if: ${{ needs.preflight.outputs.changes_substrate || github.event_name == 'workflow_dispatch' }}
    runs-on: ${{ needs.preflight.outputs.ZOMBIENET_RUNNER }} # NOTE: should be zombienet-arc-runner (without quotes)
    timeout-minutes: 60
    container:
      image: ${{ needs.preflight.outputs.ZOMBIENET_IMAGE }}
    env:
      ZOMBIENET_INTEGRATION_TEST_IMAGE: "${{ needs.preflight.outputs.TEMP_IMAGES_BASE }}/substrate:${{ needs.preflight.outputs.DOCKER_IMAGES_VERSION }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: script
        run: |
          echo "Img: $ZOMBIENET_INTEGRATION_TEST_IMAGE"
          cp --remove-destination ${LOCAL_DIR}/0001-basic-warp-sync/chain-spec.json ${LOCAL_DIR}/0002-validators-warp-sync
          export DEBUG=${{ needs.preflight.outputs.DEBUG }}
          /home/nonroot/zombie-net/scripts/ci/run-test-local-env-manager.sh --local-dir="$(pwd)/$LOCAL_DIR/0002-validators-warp-sync" --test="test-validators-warp-sync.zndsl"

      - name: upload logs
        uses: actions/upload-artifact@v4
        with:
          name: zombienet-logs-${{ github.job }}-${{ github.sha }}
          path: |
            /tmp/zombie*/logs/*

  zombienet-substrate-0003-block-building-warp-sync:
    needs: [preflight]
    # only run if we have changes in ./substrate directory and the build workflow already finish with success status.
    if: ${{ needs.preflight.outputs.changes_substrate || github.event_name == 'workflow_dispatch' }}
    runs-on: ${{ needs.preflight.outputs.ZOMBIENET_RUNNER }} # NOTE: should be zombienet-arc-runner (without quotes)
    timeout-minutes: 60
    container:
      image: ${{ needs.preflight.outputs.ZOMBIENET_IMAGE }}
    env:
      ZOMBIENET_INTEGRATION_TEST_IMAGE: "${{ needs.preflight.outputs.TEMP_IMAGES_BASE }}/substrate:${{ needs.preflight.outputs.DOCKER_IMAGES_VERSION }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: script
        run: |
          echo "Img: $ZOMBIENET_INTEGRATION_TEST_IMAGE"
          cp --remove-destination ${LOCAL_DIR}/0001-basic-warp-sync/chain-spec.json ${LOCAL_DIR}/0003-block-building-warp-sync
          export DEBUG=${{ needs.preflight.outputs.DEBUG }}
          /home/nonroot/zombie-net/scripts/ci/run-test-local-env-manager.sh --local-dir="$(pwd)/$LOCAL_DIR/0003-block-building-warp-sync" --test="test-block-building-warp-sync.zndsl"

      - name: upload logs
        uses: actions/upload-artifact@v4
        with:
          name: zombienet-logs-${{ github.job }}-${{ github.sha }}
          path: |
            /tmp/zombie*/logs/*
