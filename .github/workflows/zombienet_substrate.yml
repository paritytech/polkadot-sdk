name: Zombienet Substrate

on:
  workflow_dispatch:
  push:
   branches:
     - master
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review, labeled]
  merge_group:
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  FF_DISABLE_UMASK_FOR_DOCKER_EXECUTOR: 1
  GHA_CLUSTER_SERVER_ADDR: "https://kubernetes.default:443"
  # use spot by default
  X_INFRA_INSTANCE: "spot"
  # don't retry sdk tests
  NEXTEST_RETRIES: 0
  KUBECONFIG: "/data/config"
  ZOMBIE_CLEANER_DISABLED: 1

  # DB generated from commit: https://github.com/paritytech/polkadot-sdk/commit/868788a5bff3ef94869bd36432726703fe3b4e96
  # TODO: As a workaround for https://github.com/paritytech/polkadot-sdk/issues/2568 the DB was generated in archive mode.
  # After the issue is fixed, we should replace it with a pruned version of the DB.
  DB_SNAPSHOT: "https://storage.googleapis.com/zombienet-db-snaps/substrate/0001-basic-warp-sync/chains-9677807d738b951e9f6c82e5fd15518eb0ae0419.tgz"
  DB_BLOCK_HEIGHT: 56687

jobs:
  isdraft:
    uses: ./.github/workflows/reusable-isdraft.yml
  preflight:
    needs: isdraft
    uses: ./.github/workflows/zombienet-reusable-preflight.yml

  zombienet-substrate-tests:
    name: ${{ matrix.job-name }}
    runs-on: ${{ matrix.runner-type == 'large' && (matrix.use-zombienet-sdk && needs.preflight.outputs.ZOMBIENET_SDK_LARGE_RUNNER || needs.preflight.outputs.ZOMBIENET_LARGE_RUNNER) || (matrix.use-zombienet-sdk && needs.preflight.outputs.ZOMBIENET_SDK_DEFAULT_RUNNER || needs.preflight.outputs.ZOMBIENET_DEFAULT_RUNNER) }}
    timeout-minutes: 60
    needs: [preflight]
    if: ${{ (needs.preflight.outputs.changes_substrate || needs.preflight.outputs.changes_polkadot) }}
    container:
      image: ${{ matrix.use-zombienet-sdk && needs.preflight.outputs.ZOMBIENET_SDK_IMAGE || needs.preflight.outputs.ZOMBIENET_IMAGE }}
    env:
      ZOMBIENET_INTEGRATION_TEST_IMAGE: "${{ needs.preflight.outputs.TEMP_IMAGES_BASE }}/polkadot-debug:${{ needs.preflight.outputs.DOCKER_IMAGES_VERSION }}"
      DEBUG: ${{ needs.preflight.outputs.DEBUG }}
      ZOMBIENET_PROVIDER: ${{ needs.preflight.outputs.ZOMBIENET_PROVIDER }}
      RUST_LOG: ${{ needs.preflight.outputs.RUST_LOG }}
      ZOMBIE_PROVIDER: ${{ needs.preflight.outputs.ZOMBIE_PROVIDER }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - job-name: "zombienet-substrate-0000-block-building"
            test-definition: "block-building.zndsl"
            local-dir: "./substrate/zombienet/0000-block-building"
            runner-type: "default"
            concurrency: 4

          - job-name: "zombienet-substrate-0001-basic-warp-sync"
            test-definition: "test-warp-sync.zndsl"
            local-dir: "./substrate/zombienet/0001-basic-warp-sync"
            runner-type: "default"
            concurrency: 4

          # TODO: Disabled, fails 1 in 50 runs
          - job-name: "zombienet-substrate-0002-validators-warp-sync"
            test-definition: "test-validators-warp-sync.zndsl"
            local-dir: "./substrate/zombienet/0002-validators-warp-sync"
            runner-type: "default"
            concurrency: 4
            additional-setup: |
              cp --remove-destination ./substrate/zombienet/0001-basic-warp-sync/chain-spec.json ./substrate/zombienet/0002-validators-warp-sync

          - job-name: "zombienet-substrate-0003-block-building-warp-sync"
            test-definition: "test-block-building-warp-sync.zndsl"
            local-dir: "./substrate/zombienet/0003-block-building-warp-sync"
            runner-type: "default"
            concurrency: 4
            additional-setup: |
              cp --remove-destination ./substrate/zombienet/0001-basic-warp-sync/chain-spec.json ./substrate/zombienet/0003-block-building-warp-sync

    steps:
      - name: Check if test is flaky
        id: check_flaky
        shell: bash
        run: |
          if [[ "${{ contains(needs.preflight.outputs.FLAKY_TESTS, matrix.job-name) }}" == "true" ]]; then
            echo "Test ${{ matrix.job-name }} is marked as flaky, skipping"
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi

      - name: Checkout
        if: steps.check_flaky.outputs.skip != 'true'
        uses: actions/checkout@v4

      - name: Additional setup
        if: ${{ matrix.additional-setup && steps.check_flaky.outputs.skip != 'true' }}
        shell: bash
        run: ${{ matrix.additional-setup }}

      - name: zombienet_test (traditional)
        if: ${{ !matrix.use-zombienet-sdk && steps.check_flaky.outputs.skip != 'true' }}
        uses: ./.github/actions/zombienet
        with:
          test-definition: ${{ matrix.test-definition }}
          job-name: ${{ matrix.job-name }}
          local-dir: ${{ matrix.local-dir }}
          concurrency: ${{ matrix.concurrency || 1 }}
          gh-token: ${{ secrets.GITHUB_TOKEN }}
          build-id: ${{ needs.preflight.outputs.BUILD_RUN_ID }}
          ref-slug: ${{ needs.preflight.outputs.SOURCE_REF_SLUG }}
