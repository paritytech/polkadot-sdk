[package]
name = "chain-spec-guide-runtime"
description = "A minimal runtime for chain spec guide"
version = "0.0.0"
license = "MIT-0"
authors.workspace = true
homepage.workspace = true
repository.workspace = true
edition.workspace = true
publish = false

[dependencies]
docify = { workspace = true }
codec = { workspace = true }
scale-info = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }

# this is a frame-based runtime, thus importing `frame` with runtime feature enabled.
frame = { features = [
	"experimental",
	"runtime",
], workspace = true }

# pallets that we want to use
pallet-balances = { workspace = true }
pallet-sudo = { workspace = true }
pallet-timestamp = { workspace = true }
pallet-transaction-payment = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }

# genesis builder that allows us to interact with runtime genesis config
sp-genesis-builder = { workspace = true }
sp-runtime = { features = ["serde"], workspace = true }
sp-core = { workspace = true }
sp-std = { workspace = true }
sp-keyring = { workspace = true }
sp-application-crypto = { features = ["serde"], workspace = true }

[build-dependencies]
substrate-wasm-builder = { optional = true, workspace = true, default-features = true }

[dev-dependencies]
chain-spec-builder = { workspace = true, default-features = true }
sc-chain-spec = { workspace = true, default-features = true }

[features]
default = ["std"]
std = [
	"codec/std",
	"scale-info/std",

	"frame/std",

	"pallet-balances/std",
	"pallet-sudo/std",
	"pallet-timestamp/std",
	"pallet-transaction-payment-rpc-runtime-api/std",
	"pallet-transaction-payment/std",

	"sp-application-crypto/std",
	"sp-core/std",
	"sp-genesis-builder/std",
	"sp-keyring/std",
	"sp-runtime/std",
	"sp-std/std",

	"serde/std",
	"serde_json/std",
	"substrate-wasm-builder",
]
