[package]
name = "polkadot-sdk-docs"
description = "The one stop shop for developers of the polkadot-sdk"
license = "GPL-3.0-or-later WITH Classpath-exception-2.0"
homepage = "paritytech.github.io"
repository.workspace = true
authors.workspace = true
edition.workspace = true
# This crate is not publish-able to crates.io for now because of docify.
publish = false
version = "0.0.1"

[lints]
workspace = true

[dependencies]
# Needed for all FRAME-based code
codec = { workspace = true }
scale-info = { workspace = true }
frame = { features = [
	"experimental",
	"runtime",
], workspace = true, default-features = true }
pallet-examples = { workspace = true }
pallet-default-config-example = { workspace = true, default-features = true }
pallet-example-offchain-worker = { workspace = true, default-features = true }

# How we build docs in rust-docs
simple-mermaid = "0.1.1"
docify = { workspace = true }

# Polkadot SDK deps, typically all should only be in scope such that we can link to their doc item.
polkadot-sdk = { features = ["runtime"], workspace = true, default-features = true }
node-cli = { workspace = true }
kitchensink-runtime = { workspace = true }
chain-spec-builder = { workspace = true, default-features = true }
subkey = { workspace = true, default-features = true }
frame-system = { workspace = true }
frame-support = { workspace = true }
frame-executive = { workspace = true }
pallet-example-single-block-migrations = { workspace = true, default-features = true }
frame-metadata-hash-extension = { workspace = true, default-features = true }

# Substrate Client
sc-network = { workspace = true, default-features = true }
sc-rpc-api = { workspace = true, default-features = true }
sc-rpc = { workspace = true, default-features = true }
sc-client-db = { workspace = true, default-features = true }
sc-cli = { workspace = true, default-features = true }
sc-consensus-aura = { workspace = true, default-features = true }
sc-consensus-babe = { workspace = true, default-features = true }
sc-consensus-grandpa = { workspace = true, default-features = true }
sc-consensus-beefy = { workspace = true, default-features = true }
sc-consensus-manual-seal = { workspace = true, default-features = true }
sc-consensus-pow = { workspace = true, default-features = true }
sc-executor = { workspace = true, default-features = true }
sc-service = { workspace = true, default-features = true }
sc-chain-spec = { workspace = true, default-features = true }

substrate-wasm-builder = { workspace = true, default-features = true }

# Cumulus
cumulus-pallet-aura-ext = { workspace = true, default-features = true }
cumulus-pallet-parachain-system = { workspace = true, default-features = true }
parachain-info = { workspace = true, default-features = true }
cumulus-primitives-proof-size-hostfunction = { workspace = true, default-features = true }
cumulus-client-service = { workspace = true, default-features = true }
cumulus-primitives-storage-weight-reclaim = { workspace = true, default-features = true }

# Pallets and FRAME internals
pallet-aura = { path = "../../substrate/frame/aura" }
pallet-timestamp = { path = "../../substrate/frame/timestamp" }
pallet-balances = { path = "../../substrate/frame/balances" }
pallet-assets = { path = "../../substrate/frame/assets" }
pallet-preimage = { path = "../../substrate/frame/preimage" }
pallet-transaction-payment = { path = "../../substrate/frame/transaction-payment" }
pallet-utility = { path = "../../substrate/frame/utility" }
pallet-multisig = { path = "../../substrate/frame/multisig" }
pallet-proxy = { path = "../../substrate/frame/proxy" }
pallet-authorship = { path = "../../substrate/frame/authorship" }
pallet-collective = { path = "../../substrate/frame/collective" }
pallet-democracy = { path = "../../substrate/frame/democracy" }
pallet-uniques = { path = "../../substrate/frame/uniques" }
pallet-nfts = { path = "../../substrate/frame/nfts" }
pallet-scheduler = { path = "../../substrate/frame/scheduler" }
pallet-referenda = { path = "../../substrate/frame/referenda" }
pallet-broker = { path = "../../substrate/frame/broker" }
pallet-babe = { path = "../../substrate/frame/babe" }

# Primitives
sp-io = { path = "../../substrate/primitives/io" }
sp-std = { path = "../../substrate/primitives/std" }
sp-tracing = { path = "../../substrate/primitives/tracing" }
sp-runtime-interface = { path = "../../substrate/primitives/runtime-interface" }
sp-api = { path = "../../substrate/primitives/api" }
sp-core = { path = "../../substrate/primitives/core" }
sp-keyring = { path = "../../substrate/primitives/keyring" }
sp-runtime = { path = "../../substrate/primitives/runtime" }
sp-arithmetic = { path = "../../substrate/primitives/arithmetic" }
sp-genesis-builder = { path = "../../substrate/primitives/genesis-builder" }
sp-offchain = { path = "../../substrate/primitives/offchain" }
sp-version = { path = "../../substrate/primitives/version" }


# XCM
xcm = { workspace = true, default-features = true }
xcm-docs = { workspace = true }

# runtime guides
chain-spec-guide-runtime = { path = "./src/reference_docs/chain_spec_runtime" }

# Templates
minimal-template-runtime = { path = "../../templates/minimal/runtime" }
solochain-template-runtime = { path = "../../templates/solochain/runtime" }
parachain-template-runtime = { path = "../../templates/parachain/runtime" }
